
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.33 (git sha1 2584903a060)


-- Running command `
read_verilog *.v
hierarchy -top mkeclass_axi4
opt
synth_ice40 -top mkeclass_axi4 -json mkeclass_axi4.json
stat
' --

1. Executing Verilog-2005 frontend: BRAM1Load.v
Parsing Verilog input from `BRAM1Load.v' to AST representation.
Warning: Encountered `translate_off' comment! Such legacy hot comments are supported by Yosys, but are not part of any formal language specification. Using a portable and standards-compliant construct such as `ifdef is recommended!
Generating RTLIL representation for module `\BRAM1Load'.
Warning: Literal has a width of 1 bit, but value requires 10 bit. (BRAM1Load.v:1)
Successfully finished Verilog frontend.

2. Executing Verilog-2005 frontend: BRAM2.v
Parsing Verilog input from `BRAM2.v' to AST representation.
Generating RTLIL representation for module `\BRAM2'.
Successfully finished Verilog frontend.

3. Executing Verilog-2005 frontend: BRAM2BE.v
Parsing Verilog input from `BRAM2BE.v' to AST representation.
Generating RTLIL representation for module `\BRAM2BE'.
Successfully finished Verilog frontend.

4. Executing Verilog-2005 frontend: BRAM2BELoad.v
Parsing Verilog input from `BRAM2BELoad.v' to AST representation.
Generating RTLIL representation for module `\BRAM2BELoad'.
Warning: Literal has a width of 1 bit, but value requires 10 bit. (BRAM2BELoad.v:1)
Successfully finished Verilog frontend.

5. Executing Verilog-2005 frontend: BRAM2Load.v
Parsing Verilog input from `BRAM2Load.v' to AST representation.
Generating RTLIL representation for module `\BRAM2Load'.
Warning: Literal has a width of 1 bit, but value requires 10 bit. (BRAM2Load.v:1)
Successfully finished Verilog frontend.

6. Executing Verilog-2005 frontend: ClockInverter.v
Parsing Verilog input from `ClockInverter.v' to AST representation.
Generating RTLIL representation for module `\ClockInverter'.
Successfully finished Verilog frontend.

7. Executing Verilog-2005 frontend: Counter.v
Parsing Verilog input from `Counter.v' to AST representation.
Generating RTLIL representation for module `\Counter'.
Successfully finished Verilog frontend.

8. Executing Verilog-2005 frontend: FIFO1.v
Parsing Verilog input from `FIFO1.v' to AST representation.
Generating RTLIL representation for module `\FIFO1'.
Successfully finished Verilog frontend.

9. Executing Verilog-2005 frontend: FIFO10.v
Parsing Verilog input from `FIFO10.v' to AST representation.
Generating RTLIL representation for module `\FIFO10'.
Successfully finished Verilog frontend.

10. Executing Verilog-2005 frontend: FIFO2.v
Parsing Verilog input from `FIFO2.v' to AST representation.
Generating RTLIL representation for module `\FIFO2'.
Successfully finished Verilog frontend.

11. Executing Verilog-2005 frontend: FIFO20.v
Parsing Verilog input from `FIFO20.v' to AST representation.
Generating RTLIL representation for module `\FIFO20'.
Successfully finished Verilog frontend.

12. Executing Verilog-2005 frontend: FIFOL1.v
Parsing Verilog input from `FIFOL1.v' to AST representation.
Generating RTLIL representation for module `\FIFOL1'.
Successfully finished Verilog frontend.

13. Executing Verilog-2005 frontend: MakeClock.v
Parsing Verilog input from `MakeClock.v' to AST representation.
Generating RTLIL representation for module `\MakeClock'.
Note: Assuming pure combinatorial block at MakeClock.v:99.4-103.9 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Successfully finished Verilog frontend.

14. Executing Verilog-2005 frontend: MakeReset0.v
Parsing Verilog input from `MakeReset0.v' to AST representation.
Generating RTLIL representation for module `\MakeReset0'.
Successfully finished Verilog frontend.

15. Executing Verilog-2005 frontend: MakeResetA.v
Parsing Verilog input from `MakeResetA.v' to AST representation.
Generating RTLIL representation for module `\MakeResetA'.
Successfully finished Verilog frontend.

16. Executing Verilog-2005 frontend: RegFile.v
Parsing Verilog input from `RegFile.v' to AST representation.
Generating RTLIL representation for module `\RegFile'.
Successfully finished Verilog frontend.

17. Executing Verilog-2005 frontend: RegFileLoad.v
Parsing Verilog input from `RegFileLoad.v' to AST representation.
Generating RTLIL representation for module `\RegFileLoad'.
Warning: Literal has a width of 1 bit, but value requires 10 bit. (RegFileLoad.v:1)
Warning: Literal has a width of 1 bit, but value requires 26 bit. (RegFileLoad.v:1)
Successfully finished Verilog frontend.

18. Executing Verilog-2005 frontend: ResetEither.v
Parsing Verilog input from `ResetEither.v' to AST representation.
Generating RTLIL representation for module `\ResetEither'.
Successfully finished Verilog frontend.

19. Executing Verilog-2005 frontend: RevertReg.v
Parsing Verilog input from `RevertReg.v' to AST representation.
Generating RTLIL representation for module `\RevertReg'.
Successfully finished Verilog frontend.

20. Executing Verilog-2005 frontend: SizedFIFO.v
Parsing Verilog input from `SizedFIFO.v' to AST representation.
Generating RTLIL representation for module `\SizedFIFO'.
Successfully finished Verilog frontend.

21. Executing Verilog-2005 frontend: SyncFIFO.v
Parsing Verilog input from `SyncFIFO.v' to AST representation.
Generating RTLIL representation for module `\SyncFIFO'.
Successfully finished Verilog frontend.

22. Executing Verilog-2005 frontend: SyncFIFO1.v
Parsing Verilog input from `SyncFIFO1.v' to AST representation.
Generating RTLIL representation for module `\SyncFIFO1'.
Successfully finished Verilog frontend.

23. Executing Verilog-2005 frontend: SyncHandshake.v
Parsing Verilog input from `SyncHandshake.v' to AST representation.
Generating RTLIL representation for module `\SyncHandshake'.
Successfully finished Verilog frontend.

24. Executing Verilog-2005 frontend: SyncRegister.v
Parsing Verilog input from `SyncRegister.v' to AST representation.
Generating RTLIL representation for module `\SyncRegister'.
Successfully finished Verilog frontend.

25. Executing Verilog-2005 frontend: SyncReset0.v
Parsing Verilog input from `SyncReset0.v' to AST representation.
Generating RTLIL representation for module `\SyncReset0'.
Successfully finished Verilog frontend.

26. Executing Verilog-2005 frontend: SyncResetA.v
Parsing Verilog input from `SyncResetA.v' to AST representation.
Generating RTLIL representation for module `\SyncResetA'.
Successfully finished Verilog frontend.

27. Executing Verilog-2005 frontend: UngatedClockMux.v
Parsing Verilog input from `UngatedClockMux.v' to AST representation.
Generating RTLIL representation for module `\UngatedClockMux'.
Successfully finished Verilog frontend.

28. Executing Verilog-2005 frontend: bram_1r1w.v
Parsing Verilog input from `bram_1r1w.v' to AST representation.
Generating RTLIL representation for module `\bram_1r1w'.
Successfully finished Verilog frontend.

29. Executing Verilog-2005 frontend: bram_1rw.v
Parsing Verilog input from `bram_1rw.v' to AST representation.
Generating RTLIL representation for module `\bram_1rw'.
Successfully finished Verilog frontend.

30. Executing Verilog-2005 frontend: mkSoc.v
Parsing Verilog input from `mkSoc.v' to AST representation.
Warning: Encountered `parallel_case' comment! Such legacy hot comments are supported by Yosys, but are not part of any formal language specification. Using the Verilog `parallel_case' attribute or the SystemVerilog `unique' or `priority' keywords is recommended!
Generating RTLIL representation for module `\mkSoc'.
Note: Assuming pure combinatorial block at mkSoc.v:6646.3-6653.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkSoc.v:6892.3-6923.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkSoc.v:6949.3-6965.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkSoc.v:6983.3-7026.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkSoc.v:7344.3-7357.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkSoc.v:7368.3-7381.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkSoc.v:7392.3-7405.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkSoc.v:7416.3-7429.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkSoc.v:7440.3-7453.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkSoc.v:7464.3-7477.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkSoc.v:7488.3-7510.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkSoc.v:7534.3-7556.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkSoc.v:7580.3-7602.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkSoc.v:7641.3-7654.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkSoc.v:7666.3-7679.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkSoc.v:7691.3-7704.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkSoc.v:7716.3-7729.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkSoc.v:7741.3-7754.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkSoc.v:7766.3-7779.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkSoc.v:7791.3-7813.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkSoc.v:7831.3-7853.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkSoc.v:7871.3-7893.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkSoc.v:7926.3-7936.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkSoc.v:7954.3-7964.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkSoc.v:7982.3-7992.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkSoc.v:8010.3-8020.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkSoc.v:8038.3-8048.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkSoc.v:8066.3-8076.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkSoc.v:8094.3-8110.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkSoc.v:8130.3-8146.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkSoc.v:8166.3-8182.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkSoc.v:8222.3-8257.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkSoc.v:8315.3-8350.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkSoc.v:8384.3-8419.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkSoc.v:8477.3-8512.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkSoc.v:8546.3-8581.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkSoc.v:8639.3-8674.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkSoc.v:8688.3-8708.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkSoc.v:8734.3-8754.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkSoc.v:8765.3-8785.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkSoc.v:8811.3-8831.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkSoc.v:8857.3-8877.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkSoc.v:8888.3-8908.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkSoc.v:8934.3-8954.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkSoc.v:8977.3-8997.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkSoc.v:9008.3-9028.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkSoc.v:9054.3-9074.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkSoc.v:9097.3-9117.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkSoc.v:9128.3-9148.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkSoc.v:9174.3-9194.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkSoc.v:9220.3-9240.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkSoc.v:9251.3-9271.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkSoc.v:9297.3-9317.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkSoc.v:9340.3-9360.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkSoc.v:9371.3-9391.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkSoc.v:10298.3-10305.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkSoc.v:10306.3-10314.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkSoc.v:10315.3-10323.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkSoc.v:10324.3-10331.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkSoc.v:10332.3-10344.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkSoc.v:10345.3-10354.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkSoc.v:10355.3-10364.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkSoc.v:10365.3-10372.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkSoc.v:10373.3-10380.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Successfully finished Verilog frontend.

31. Executing Verilog-2005 frontend: mkTb.v
Parsing Verilog input from `mkTb.v' to AST representation.
Generating RTLIL representation for module `\mkTb'.
Successfully finished Verilog frontend.

32. Executing Verilog-2005 frontend: mkTbSoc.v
Parsing Verilog input from `mkTbSoc.v' to AST representation.
Generating RTLIL representation for module `\mkTbSoc'.
Note: Assuming pure combinatorial block at mkTbSoc.v:1469.3-1475.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
mkTbSoc.v:1602: Warning: Identifier `\TASK_fopen___d497' is implicitly declared.
mkTbSoc.v:1606: Warning: Identifier `\TASK_fopen___d506' is implicitly declared.
Note: Assuming pure combinatorial block at mkTbSoc.v:1715.3-1741.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkTbSoc.v:1767.3-1781.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkTbSoc.v:1798.3-1833.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkTbSoc.v:2294.3-2302.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkTbSoc.v:2303.3-2311.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkTbSoc.v:2312.3-2320.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkTbSoc.v:2321.3-2329.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkTbSoc.v:2330.3-2338.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkTbSoc.v:2339.3-2347.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Successfully finished Verilog frontend.

33. Executing Verilog-2005 frontend: mkalu.v
Parsing Verilog input from `mkalu.v' to AST representation.
Generating RTLIL representation for module `\mkalu'.
Successfully finished Verilog frontend.

34. Executing Verilog-2005 frontend: mkcsr.v
Parsing Verilog input from `mkcsr.v' to AST representation.
Generating RTLIL representation for module `\mkcsr'.
Note: Assuming pure combinatorial block at mkcsr.v:530.3-538.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkcsr.v:558.3-564.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Successfully finished Verilog frontend.

35. Executing Verilog-2005 frontend: mkcsrfile.v
Parsing Verilog input from `mkcsrfile.v' to AST representation.
Generating RTLIL representation for module `\mkcsrfile'.
Note: Assuming pure combinatorial block at mkcsrfile.v:821.3-908.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkcsrfile.v:1287.3-1298.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkcsrfile.v:1322.3-1332.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkcsrfile.v:1340.3-1351.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkcsrfile.v:1428.3-1439.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkcsrfile.v:1464.3-1474.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkcsrfile.v:1884.3-1893.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkcsrfile.v:1894.3-1903.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkcsrfile.v:1904.3-1913.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkcsrfile.v:1914.3-1923.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkcsrfile.v:1924.3-1930.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkcsrfile.v:1931.3-1941.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkcsrfile.v:1942.3-1948.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkcsrfile.v:1949.3-1959.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkcsrfile.v:1960.3-1970.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkcsrfile.v:1971.3-1981.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkcsrfile.v:1982.3-1992.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkcsrfile.v:1993.3-2003.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkcsrfile.v:2004.3-2014.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkcsrfile.v:2015.3-2025.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkcsrfile.v:2026.3-2036.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkcsrfile.v:2037.3-2047.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkcsrfile.v:2048.3-2058.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkcsrfile.v:2059.3-2069.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkcsrfile.v:2070.3-2080.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkcsrfile.v:2081.3-2091.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkcsrfile.v:2092.3-2102.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkcsrfile.v:2103.3-2113.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkcsrfile.v:2114.3-2124.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkcsrfile.v:2125.3-2132.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Successfully finished Verilog frontend.

36. Executing Verilog-2005 frontend: mkeclass.v
Parsing Verilog input from `mkeclass.v' to AST representation.
Generating RTLIL representation for module `\mkeclass'.
Note: Assuming pure combinatorial block at mkeclass.v:1504.3-1511.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkeclass.v:1512.3-1519.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkeclass.v:1520.3-1543.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Successfully finished Verilog frontend.

37. Executing Verilog-2005 frontend: mkeclass_axi4.v
Parsing Verilog input from `mkeclass_axi4.v' to AST representation.
Generating RTLIL representation for module `\mkeclass_axi4'.
Successfully finished Verilog frontend.

38. Executing Verilog-2005 frontend: mkeclass_axi4lite.v
Parsing Verilog input from `mkeclass_axi4lite.v' to AST representation.
Generating RTLIL representation for module `\mkeclass_axi4lite'.
Note: Assuming pure combinatorial block at mkeclass_axi4lite.v:1319.3-1326.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkeclass_axi4lite.v:1327.3-1334.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkeclass_axi4lite.v:1335.3-1358.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Successfully finished Verilog frontend.

39. Executing Verilog-2005 frontend: mkriscv.v
Parsing Verilog input from `mkriscv.v' to AST representation.
Generating RTLIL representation for module `\mkriscv'.
Successfully finished Verilog frontend.

40. Executing Verilog-2005 frontend: mksign_dump_axi4.v
Parsing Verilog input from `mksign_dump_axi4.v' to AST representation.
Generating RTLIL representation for module `\mksign_dump_axi4'.
mksign_dump_axi4.v:921: Warning: Identifier `\TASK_fopen___d3' is implicitly declared.
Note: Assuming pure combinatorial block at mksign_dump_axi4.v:1061.3-1068.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Successfully finished Verilog frontend.

41. Executing Verilog-2005 frontend: mkstage1.v
Parsing Verilog input from `mkstage1.v' to AST representation.
Generating RTLIL representation for module `\mkstage1'.
Note: Assuming pure combinatorial block at mkstage1.v:790.3-799.10 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkstage1.v:966.3-981.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkstage1.v:982.3-998.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkstage1.v:999.3-1016.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkstage1.v:1017.3-1045.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Successfully finished Verilog frontend.

42. Executing Verilog-2005 frontend: mkstage2.v
Parsing Verilog input from `mkstage2.v' to AST representation.
Generating RTLIL representation for module `\mkstage2'.
Note: Assuming pure combinatorial block at mkstage2.v:1080.3-1086.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkstage2.v:1158.3-1166.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkstage2.v:1167.3-1196.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkstage2.v:1197.3-1206.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Successfully finished Verilog frontend.

43. Executing Verilog-2005 frontend: mkstage3.v
Parsing Verilog input from `mkstage3.v' to AST representation.
Generating RTLIL representation for module `\mkstage3'.
Successfully finished Verilog frontend.

44. Executing Verilog-2005 frontend: module_address_valid.v
Parsing Verilog input from `module_address_valid.v' to AST representation.
Generating RTLIL representation for module `\module_address_valid'.
Note: Assuming pure combinatorial block at module_address_valid.v:71.3-83.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at module_address_valid.v:84.3-99.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at module_address_valid.v:100.3-120.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at module_address_valid.v:121.3-136.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at module_address_valid.v:137.3-162.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Successfully finished Verilog frontend.

45. Executing Verilog-2005 frontend: module_chk_interrupt.v
Parsing Verilog input from `module_chk_interrupt.v' to AST representation.
Generating RTLIL representation for module `\module_chk_interrupt'.
Successfully finished Verilog frontend.

46. Executing Verilog-2005 frontend: module_decode_word32.v
Parsing Verilog input from `module_decode_word32.v' to AST representation.
Generating RTLIL representation for module `\module_decode_word32'.
Successfully finished Verilog frontend.

47. Executing Verilog-2005 frontend: module_decoder_func_32.v
Parsing Verilog input from `module_decoder_func_32.v' to AST representation.
Generating RTLIL representation for module `\module_decoder_func_32'.
Note: Assuming pure combinatorial block at module_decoder_func_32.v:201.3-207.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at module_decoder_func_32.v:208.3-215.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at module_decoder_func_32.v:216.3-223.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at module_decoder_func_32.v:224.3-246.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at module_decoder_func_32.v:247.3-254.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at module_decoder_func_32.v:255.3-280.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at module_decoder_func_32.v:281.3-291.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at module_decoder_func_32.v:292.3-307.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at module_decoder_func_32.v:308.3-329.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at module_decoder_func_32.v:330.3-347.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at module_decoder_func_32.v:348.3-356.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at module_decoder_func_32.v:357.3-368.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at module_decoder_func_32.v:369.3-378.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at module_decoder_func_32.v:379.3-388.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at module_decoder_func_32.v:389.3-400.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at module_decoder_func_32.v:401.3-413.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at module_decoder_func_32.v:414.3-430.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at module_decoder_func_32.v:431.3-440.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at module_decoder_func_32.v:441.3-450.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Successfully finished Verilog frontend.

48. Executing Verilog-2005 frontend: module_fn_alu.v
Parsing Verilog input from `module_fn_alu.v' to AST representation.
Generating RTLIL representation for module `\module_fn_alu'.
Note: Assuming pure combinatorial block at module_fn_alu.v:305.3-343.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at module_fn_alu.v:344.3-359.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at module_fn_alu.v:360.3-376.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at module_fn_alu.v:377.3-394.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at module_fn_alu.v:395.3-412.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at module_fn_alu.v:413.3-440.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at module_fn_alu.v:441.3-464.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at module_fn_alu.v:465.3-472.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Successfully finished Verilog frontend.

49. Executing Verilog-2005 frontend: module_fn_pmp_lookup.v
Parsing Verilog input from `module_fn_pmp_lookup.v' to AST representation.
Generating RTLIL representation for module `\module_fn_pmp_lookup'.
Note: Assuming pure combinatorial block at module_fn_pmp_lookup.v:475.3-482.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at module_fn_pmp_lookup.v:483.3-503.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at module_fn_pmp_lookup.v:504.3-526.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at module_fn_pmp_lookup.v:527.3-549.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at module_fn_pmp_lookup.v:550.3-570.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at module_fn_pmp_lookup.v:571.3-593.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at module_fn_pmp_lookup.v:594.3-616.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at module_fn_pmp_lookup.v:617.3-635.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Successfully finished Verilog frontend.

50. Executing HIERARCHY pass (managing design hierarchy).

50.1. Analyzing design hierarchy..
Top module:  \mkeclass_axi4
Used module:     \mkSoc
Used module:         \SizedFIFO
Used module:         \Counter
Used module:         \FIFO2
Used module:         \mksign_dump_axi4
Used module:         \FIFO1
Used module:         \FIFO10
Used module:         \mkeclass
Used module:             \module_fn_pmp_lookup
Used module:             \mkriscv
Used module:                 \mkstage3
Used module:                     \FIFOL1
Used module:                     \mkcsr
Used module:                         \mkcsrfile
Used module:                 \mkstage2
Used module:                     \mkalu
Used module:                         \module_fn_alu
Used module:                 \mkstage1
Used module:                     \module_decoder_func_32
Used module:                         \module_address_valid
Used module:                     \module_chk_interrupt
Used module:                     \RegFile
Parameter \p1width = 8
Parameter \p2depth = 16
Parameter \p3cntr_width = 4
Parameter \guarded = 1'1

50.2. Executing AST frontend in derive mode using pre-parsed AST for module `\SizedFIFO'.
Parameter \p1width = 8
Parameter \p2depth = 16
Parameter \p3cntr_width = 4
Parameter \guarded = 1'1
Generating RTLIL representation for module `$paramod$daadbc6d5d8d25265c1808e519c5f6fbd2f433d0\SizedFIFO'.
Parameter \p1width = 8
Parameter \p2depth = 16
Parameter \p3cntr_width = 4
Parameter \guarded = 1'1
Found cached RTLIL representation for module `$paramod$daadbc6d5d8d25265c1808e519c5f6fbd2f433d0\SizedFIFO'.
Parameter \width = 3
Parameter \init = 3'000

50.3. Executing AST frontend in derive mode using pre-parsed AST for module `\Counter'.
Parameter \width = 3
Parameter \init = 3'000
Generating RTLIL representation for module `$paramod\Counter\width=32'00000000000000000000000000000011\init=3'000'.
Parameter \width = 16
Parameter \init = 16'0000000000000000

50.4. Executing AST frontend in derive mode using pre-parsed AST for module `\Counter'.
Parameter \width = 16
Parameter \init = 16'0000000000000000
Generating RTLIL representation for module `$paramod$44bf3f364de125c08c77a464bb47dd656ea26444\Counter'.
Parameter \width = 6
Parameter \guarded = 1'1

50.5. Executing AST frontend in derive mode using pre-parsed AST for module `\FIFO2'.
Parameter \width = 6
Parameter \guarded = 1'1
Generating RTLIL representation for module `$paramod\FIFO2\width=32'00000000000000000000000000000110\guarded=1'1'.
Parameter \width = 41
Parameter \guarded = 1'1

50.6. Executing AST frontend in derive mode using pre-parsed AST for module `\FIFO2'.
Parameter \width = 41
Parameter \guarded = 1'1
Generating RTLIL representation for module `$paramod\FIFO2\width=32'00000000000000000000000000101001\guarded=1'1'.
Parameter \width = 52
Parameter \guarded = 1'1

50.7. Executing AST frontend in derive mode using pre-parsed AST for module `\FIFO2'.
Parameter \width = 52
Parameter \guarded = 1'1
Generating RTLIL representation for module `$paramod\FIFO2\width=32'00000000000000000000000000110100\guarded=1'1'.
Parameter \width = 39
Parameter \guarded = 1'1

50.8. Executing AST frontend in derive mode using pre-parsed AST for module `\FIFO2'.
Parameter \width = 39
Parameter \guarded = 1'1
Generating RTLIL representation for module `$paramod\FIFO2\width=32'00000000000000000000000000100111\guarded=1'1'.
Parameter \width = 52
Parameter \guarded = 1'1
Found cached RTLIL representation for module `$paramod\FIFO2\width=32'00000000000000000000000000110100\guarded=1'1'.
Parameter \width = 6
Parameter \guarded = 1'1
Found cached RTLIL representation for module `$paramod\FIFO2\width=32'00000000000000000000000000000110\guarded=1'1'.
Parameter \width = 41
Parameter \guarded = 1'1
Found cached RTLIL representation for module `$paramod\FIFO2\width=32'00000000000000000000000000101001\guarded=1'1'.
Parameter \width = 52
Parameter \guarded = 1'1
Found cached RTLIL representation for module `$paramod\FIFO2\width=32'00000000000000000000000000110100\guarded=1'1'.
Parameter \width = 39
Parameter \guarded = 1'1
Found cached RTLIL representation for module `$paramod\FIFO2\width=32'00000000000000000000000000100111\guarded=1'1'.
Parameter \width = 52
Parameter \guarded = 1'1
Found cached RTLIL representation for module `$paramod\FIFO2\width=32'00000000000000000000000000110100\guarded=1'1'.
Parameter \width = 6
Parameter \guarded = 1'1
Found cached RTLIL representation for module `$paramod\FIFO2\width=32'00000000000000000000000000000110\guarded=1'1'.
Parameter \width = 41
Parameter \guarded = 1'1
Found cached RTLIL representation for module `$paramod\FIFO2\width=32'00000000000000000000000000101001\guarded=1'1'.
Parameter \width = 52
Parameter \guarded = 1'1
Found cached RTLIL representation for module `$paramod\FIFO2\width=32'00000000000000000000000000110100\guarded=1'1'.
Parameter \width = 39
Parameter \guarded = 1'1
Found cached RTLIL representation for module `$paramod\FIFO2\width=32'00000000000000000000000000100111\guarded=1'1'.
Parameter \width = 52
Parameter \guarded = 1'1
Found cached RTLIL representation for module `$paramod\FIFO2\width=32'00000000000000000000000000110100\guarded=1'1'.
Parameter \width = 6
Parameter \guarded = 1'1
Found cached RTLIL representation for module `$paramod\FIFO2\width=32'00000000000000000000000000000110\guarded=1'1'.
Parameter \width = 41
Parameter \guarded = 1'1
Found cached RTLIL representation for module `$paramod\FIFO2\width=32'00000000000000000000000000101001\guarded=1'1'.
Parameter \width = 52
Parameter \guarded = 1'1
Found cached RTLIL representation for module `$paramod\FIFO2\width=32'00000000000000000000000000110100\guarded=1'1'.
Parameter \width = 39
Parameter \guarded = 1'1
Found cached RTLIL representation for module `$paramod\FIFO2\width=32'00000000000000000000000000100111\guarded=1'1'.
Parameter \width = 52
Parameter \guarded = 1'1
Found cached RTLIL representation for module `$paramod\FIFO2\width=32'00000000000000000000000000110100\guarded=1'1'.
Parameter \width = 6
Parameter \guarded = 1'1
Found cached RTLIL representation for module `$paramod\FIFO2\width=32'00000000000000000000000000000110\guarded=1'1'.
Parameter \width = 41
Parameter \guarded = 1'1
Found cached RTLIL representation for module `$paramod\FIFO2\width=32'00000000000000000000000000101001\guarded=1'1'.
Parameter \width = 52
Parameter \guarded = 1'1
Found cached RTLIL representation for module `$paramod\FIFO2\width=32'00000000000000000000000000110100\guarded=1'1'.
Parameter \width = 39
Parameter \guarded = 1'1
Found cached RTLIL representation for module `$paramod\FIFO2\width=32'00000000000000000000000000100111\guarded=1'1'.
Parameter \width = 52
Parameter \guarded = 1'1
Found cached RTLIL representation for module `$paramod\FIFO2\width=32'00000000000000000000000000110100\guarded=1'1'.
Parameter \width = 6
Parameter \guarded = 1'1
Found cached RTLIL representation for module `$paramod\FIFO2\width=32'00000000000000000000000000000110\guarded=1'1'.
Parameter \width = 41
Parameter \guarded = 1'1
Found cached RTLIL representation for module `$paramod\FIFO2\width=32'00000000000000000000000000101001\guarded=1'1'.
Parameter \width = 52
Parameter \guarded = 1'1
Found cached RTLIL representation for module `$paramod\FIFO2\width=32'00000000000000000000000000110100\guarded=1'1'.
Parameter \width = 39
Parameter \guarded = 1'1
Found cached RTLIL representation for module `$paramod\FIFO2\width=32'00000000000000000000000000100111\guarded=1'1'.
Parameter \width = 52
Parameter \guarded = 1'1
Found cached RTLIL representation for module `$paramod\FIFO2\width=32'00000000000000000000000000110100\guarded=1'1'.
Parameter \width = 6
Parameter \guarded = 1'1
Found cached RTLIL representation for module `$paramod\FIFO2\width=32'00000000000000000000000000000110\guarded=1'1'.
Parameter \width = 41
Parameter \guarded = 1'1
Found cached RTLIL representation for module `$paramod\FIFO2\width=32'00000000000000000000000000101001\guarded=1'1'.
Parameter \width = 52
Parameter \guarded = 1'1
Found cached RTLIL representation for module `$paramod\FIFO2\width=32'00000000000000000000000000110100\guarded=1'1'.
Parameter \width = 39
Parameter \guarded = 1'1
Found cached RTLIL representation for module `$paramod\FIFO2\width=32'00000000000000000000000000100111\guarded=1'1'.
Parameter \width = 52
Parameter \guarded = 1'1
Found cached RTLIL representation for module `$paramod\FIFO2\width=32'00000000000000000000000000110100\guarded=1'1'.
Parameter \width = 6
Parameter \guarded = 1'1
Found cached RTLIL representation for module `$paramod\FIFO2\width=32'00000000000000000000000000000110\guarded=1'1'.
Parameter \width = 41
Parameter \guarded = 1'1
Found cached RTLIL representation for module `$paramod\FIFO2\width=32'00000000000000000000000000101001\guarded=1'1'.
Parameter \width = 52
Parameter \guarded = 1'1
Found cached RTLIL representation for module `$paramod\FIFO2\width=32'00000000000000000000000000110100\guarded=1'1'.
Parameter \width = 39
Parameter \guarded = 1'1
Found cached RTLIL representation for module `$paramod\FIFO2\width=32'00000000000000000000000000100111\guarded=1'1'.
Parameter \width = 52
Parameter \guarded = 1'1
Found cached RTLIL representation for module `$paramod\FIFO2\width=32'00000000000000000000000000110100\guarded=1'1'.
Parameter \width = 6
Parameter \guarded = 1'1
Found cached RTLIL representation for module `$paramod\FIFO2\width=32'00000000000000000000000000000110\guarded=1'1'.
Parameter \width = 41
Parameter \guarded = 1'1
Found cached RTLIL representation for module `$paramod\FIFO2\width=32'00000000000000000000000000101001\guarded=1'1'.
Parameter \width = 52
Parameter \guarded = 1'1
Found cached RTLIL representation for module `$paramod\FIFO2\width=32'00000000000000000000000000110100\guarded=1'1'.
Parameter \width = 39
Parameter \guarded = 1'1
Found cached RTLIL representation for module `$paramod\FIFO2\width=32'00000000000000000000000000100111\guarded=1'1'.
Parameter \width = 52
Parameter \guarded = 1'1
Found cached RTLIL representation for module `$paramod\FIFO2\width=32'00000000000000000000000000110100\guarded=1'1'.
Parameter \width = 6
Parameter \guarded = 1'1
Found cached RTLIL representation for module `$paramod\FIFO2\width=32'00000000000000000000000000000110\guarded=1'1'.
Parameter \width = 41
Parameter \guarded = 1'1
Found cached RTLIL representation for module `$paramod\FIFO2\width=32'00000000000000000000000000101001\guarded=1'1'.
Parameter \width = 52
Parameter \guarded = 1'1
Found cached RTLIL representation for module `$paramod\FIFO2\width=32'00000000000000000000000000110100\guarded=1'1'.
Parameter \width = 39
Parameter \guarded = 1'1
Found cached RTLIL representation for module `$paramod\FIFO2\width=32'00000000000000000000000000100111\guarded=1'1'.
Parameter \width = 52
Parameter \guarded = 1'1
Found cached RTLIL representation for module `$paramod\FIFO2\width=32'00000000000000000000000000110100\guarded=1'1'.
Parameter \width = 3
Parameter \guarded = 1'1

50.9. Executing AST frontend in derive mode using pre-parsed AST for module `\FIFO1'.
Parameter \width = 3
Parameter \guarded = 1'1
Generating RTLIL representation for module `$paramod\FIFO1\width=32'00000000000000000000000000000011\guarded=1'1'.
Parameter \width = 3
Parameter \guarded = 1'1
Found cached RTLIL representation for module `$paramod\FIFO1\width=32'00000000000000000000000000000011\guarded=1'1'.
Parameter \width = 3
Parameter \guarded = 1'1
Found cached RTLIL representation for module `$paramod\FIFO1\width=32'00000000000000000000000000000011\guarded=1'1'.
Parameter \width = 2
Parameter \guarded = 1'1

50.10. Executing AST frontend in derive mode using pre-parsed AST for module `\FIFO1'.
Parameter \width = 2
Parameter \guarded = 1'1
Generating RTLIL representation for module `$paramod\FIFO1\width=32'00000000000000000000000000000010\guarded=1'1'.
Parameter \width = 2
Parameter \guarded = 1'1
Found cached RTLIL representation for module `$paramod\FIFO1\width=32'00000000000000000000000000000010\guarded=1'1'.
Parameter \width = 2
Parameter \guarded = 1'1
Found cached RTLIL representation for module `$paramod\FIFO1\width=32'00000000000000000000000000000010\guarded=1'1'.
Parameter \width = 2
Parameter \guarded = 1'1
Found cached RTLIL representation for module `$paramod\FIFO1\width=32'00000000000000000000000000000010\guarded=1'1'.
Parameter \width = 2
Parameter \guarded = 1'1
Found cached RTLIL representation for module `$paramod\FIFO1\width=32'00000000000000000000000000000010\guarded=1'1'.
Parameter \width = 2
Parameter \guarded = 1'1
Found cached RTLIL representation for module `$paramod\FIFO1\width=32'00000000000000000000000000000010\guarded=1'1'.
Parameter \guarded = 1'1

50.11. Executing AST frontend in derive mode using pre-parsed AST for module `\FIFO10'.
Parameter \guarded = 1'1
Generating RTLIL representation for module `$paramod\FIFO10\guarded=1'1'.
Parameter \guarded = 1'1
Found cached RTLIL representation for module `$paramod\FIFO10\guarded=1'1'.
Parameter \guarded = 1'1
Found cached RTLIL representation for module `$paramod\FIFO10\guarded=1'1'.
Parameter \width = 3
Parameter \guarded = 1'1
Found cached RTLIL representation for module `$paramod\FIFO1\width=32'00000000000000000000000000000011\guarded=1'1'.
Parameter \width = 3
Parameter \guarded = 1'1
Found cached RTLIL representation for module `$paramod\FIFO1\width=32'00000000000000000000000000000011\guarded=1'1'.
Parameter \width = 3
Parameter \guarded = 1'1
Found cached RTLIL representation for module `$paramod\FIFO1\width=32'00000000000000000000000000000011\guarded=1'1'.
Parameter \width = 2
Parameter \guarded = 1'1
Found cached RTLIL representation for module `$paramod\FIFO1\width=32'00000000000000000000000000000010\guarded=1'1'.
Parameter \width = 2
Parameter \guarded = 1'1
Found cached RTLIL representation for module `$paramod\FIFO1\width=32'00000000000000000000000000000010\guarded=1'1'.
Parameter \width = 2
Parameter \guarded = 1'1
Found cached RTLIL representation for module `$paramod\FIFO1\width=32'00000000000000000000000000000010\guarded=1'1'.
Parameter \width = 2
Parameter \guarded = 1'1
Found cached RTLIL representation for module `$paramod\FIFO1\width=32'00000000000000000000000000000010\guarded=1'1'.
Parameter \width = 2
Parameter \guarded = 1'1
Found cached RTLIL representation for module `$paramod\FIFO1\width=32'00000000000000000000000000000010\guarded=1'1'.
Parameter \width = 2
Parameter \guarded = 1'1
Found cached RTLIL representation for module `$paramod\FIFO1\width=32'00000000000000000000000000000010\guarded=1'1'.
Parameter \guarded = 1'1
Found cached RTLIL representation for module `$paramod\FIFO10\guarded=1'1'.
Parameter \guarded = 1'1
Found cached RTLIL representation for module `$paramod\FIFO10\guarded=1'1'.
Parameter \guarded = 1'1
Found cached RTLIL representation for module `$paramod\FIFO10\guarded=1'1'.
Parameter \width = 3
Parameter \guarded = 1'1
Found cached RTLIL representation for module `$paramod\FIFO1\width=32'00000000000000000000000000000011\guarded=1'1'.
Parameter \width = 3
Parameter \guarded = 1'1
Found cached RTLIL representation for module `$paramod\FIFO1\width=32'00000000000000000000000000000011\guarded=1'1'.
Parameter \width = 3
Parameter \guarded = 1'1
Found cached RTLIL representation for module `$paramod\FIFO1\width=32'00000000000000000000000000000011\guarded=1'1'.
Parameter \width = 2
Parameter \guarded = 1'1
Found cached RTLIL representation for module `$paramod\FIFO1\width=32'00000000000000000000000000000010\guarded=1'1'.
Parameter \width = 2
Parameter \guarded = 1'1
Found cached RTLIL representation for module `$paramod\FIFO1\width=32'00000000000000000000000000000010\guarded=1'1'.
Parameter \width = 2
Parameter \guarded = 1'1
Found cached RTLIL representation for module `$paramod\FIFO1\width=32'00000000000000000000000000000010\guarded=1'1'.
Parameter \width = 2
Parameter \guarded = 1'1
Found cached RTLIL representation for module `$paramod\FIFO1\width=32'00000000000000000000000000000010\guarded=1'1'.
Parameter \width = 2
Parameter \guarded = 1'1
Found cached RTLIL representation for module `$paramod\FIFO1\width=32'00000000000000000000000000000010\guarded=1'1'.
Parameter \width = 2
Parameter \guarded = 1'1
Found cached RTLIL representation for module `$paramod\FIFO1\width=32'00000000000000000000000000000010\guarded=1'1'.
Parameter \guarded = 1'1
Found cached RTLIL representation for module `$paramod\FIFO10\guarded=1'1'.
Parameter \guarded = 1'1
Found cached RTLIL representation for module `$paramod\FIFO10\guarded=1'1'.
Parameter \guarded = 1'1
Found cached RTLIL representation for module `$paramod\FIFO10\guarded=1'1'.
Parameter \width = 6
Parameter \guarded = 1'1
Found cached RTLIL representation for module `$paramod\FIFO2\width=32'00000000000000000000000000000110\guarded=1'1'.
Parameter \width = 41
Parameter \guarded = 1'1
Found cached RTLIL representation for module `$paramod\FIFO2\width=32'00000000000000000000000000101001\guarded=1'1'.
Parameter \width = 52
Parameter \guarded = 1'1
Found cached RTLIL representation for module `$paramod\FIFO2\width=32'00000000000000000000000000110100\guarded=1'1'.
Parameter \width = 39
Parameter \guarded = 1'1
Found cached RTLIL representation for module `$paramod\FIFO2\width=32'00000000000000000000000000100111\guarded=1'1'.
Parameter \width = 52
Parameter \guarded = 1'1
Found cached RTLIL representation for module `$paramod\FIFO2\width=32'00000000000000000000000000110100\guarded=1'1'.
Parameter \width = 6
Parameter \guarded = 1'1
Found cached RTLIL representation for module `$paramod\FIFO2\width=32'00000000000000000000000000000110\guarded=1'1'.
Parameter \width = 41
Parameter \guarded = 1'1
Found cached RTLIL representation for module `$paramod\FIFO2\width=32'00000000000000000000000000101001\guarded=1'1'.
Parameter \width = 52
Parameter \guarded = 1'1
Found cached RTLIL representation for module `$paramod\FIFO2\width=32'00000000000000000000000000110100\guarded=1'1'.
Parameter \width = 39
Parameter \guarded = 1'1
Found cached RTLIL representation for module `$paramod\FIFO2\width=32'00000000000000000000000000100111\guarded=1'1'.
Parameter \width = 52
Parameter \guarded = 1'1
Found cached RTLIL representation for module `$paramod\FIFO2\width=32'00000000000000000000000000110100\guarded=1'1'.
Parameter \width = 6
Parameter \guarded = 1'1
Found cached RTLIL representation for module `$paramod\FIFO2\width=32'00000000000000000000000000000110\guarded=1'1'.
Parameter \width = 41
Parameter \guarded = 1'1
Found cached RTLIL representation for module `$paramod\FIFO2\width=32'00000000000000000000000000101001\guarded=1'1'.
Parameter \width = 52
Parameter \guarded = 1'1
Found cached RTLIL representation for module `$paramod\FIFO2\width=32'00000000000000000000000000110100\guarded=1'1'.
Parameter \width = 39
Parameter \guarded = 1'1
Found cached RTLIL representation for module `$paramod\FIFO2\width=32'00000000000000000000000000100111\guarded=1'1'.
Parameter \width = 52
Parameter \guarded = 1'1
Found cached RTLIL representation for module `$paramod\FIFO2\width=32'00000000000000000000000000110100\guarded=1'1'.
Parameter \width = 70
Parameter \guarded = 1'1

50.12. Executing AST frontend in derive mode using pre-parsed AST for module `\FIFO2'.
Parameter \width = 70
Parameter \guarded = 1'1
Generating RTLIL representation for module `$paramod\FIFO2\width=32'00000000000000000000000001000110\guarded=1'1'.
Parameter \width = 1
Parameter \guarded = 1'1

50.13. Executing AST frontend in derive mode using pre-parsed AST for module `\FIFO2'.
Parameter \width = 1
Parameter \guarded = 1'1
Generating RTLIL representation for module `$paramod\FIFO2\width=32'00000000000000000000000000000001\guarded=1'1'.
Parameter \width = 34
Parameter \guarded = 1'1

50.14. Executing AST frontend in derive mode using pre-parsed AST for module `\FIFO2'.
Parameter \width = 34
Parameter \guarded = 1'1
Generating RTLIL representation for module `$paramod\FIFO2\width=32'00000000000000000000000000100010\guarded=1'1'.
Parameter \width = 1
Parameter \guarded = 1'1
Found cached RTLIL representation for module `$paramod\FIFO2\width=32'00000000000000000000000000000001\guarded=1'1'.
Parameter \width = 6
Parameter \guarded = 1'1
Found cached RTLIL representation for module `$paramod\FIFO2\width=32'00000000000000000000000000000110\guarded=1'1'.
Parameter \width = 41
Parameter \guarded = 1'1
Found cached RTLIL representation for module `$paramod\FIFO2\width=32'00000000000000000000000000101001\guarded=1'1'.
Parameter \width = 52
Parameter \guarded = 1'1
Found cached RTLIL representation for module `$paramod\FIFO2\width=32'00000000000000000000000000110100\guarded=1'1'.
Parameter \width = 39
Parameter \guarded = 1'1
Found cached RTLIL representation for module `$paramod\FIFO2\width=32'00000000000000000000000000100111\guarded=1'1'.
Parameter \width = 52
Parameter \guarded = 1'1
Found cached RTLIL representation for module `$paramod\FIFO2\width=32'00000000000000000000000000110100\guarded=1'1'.
Parameter \width = 6
Parameter \guarded = 1'1
Found cached RTLIL representation for module `$paramod\FIFO2\width=32'00000000000000000000000000000110\guarded=1'1'.
Parameter \width = 41
Parameter \guarded = 1'1
Found cached RTLIL representation for module `$paramod\FIFO2\width=32'00000000000000000000000000101001\guarded=1'1'.
Parameter \width = 52
Parameter \guarded = 1'1
Found cached RTLIL representation for module `$paramod\FIFO2\width=32'00000000000000000000000000110100\guarded=1'1'.
Parameter \width = 39
Parameter \guarded = 1'1
Found cached RTLIL representation for module `$paramod\FIFO2\width=32'00000000000000000000000000100111\guarded=1'1'.
Parameter \width = 52
Parameter \guarded = 1'1
Found cached RTLIL representation for module `$paramod\FIFO2\width=32'00000000000000000000000000110100\guarded=1'1'.
Parameter \width = 6
Parameter \guarded = 1'1
Found cached RTLIL representation for module `$paramod\FIFO2\width=32'00000000000000000000000000000110\guarded=1'1'.
Parameter \width = 41
Parameter \guarded = 1'1
Found cached RTLIL representation for module `$paramod\FIFO2\width=32'00000000000000000000000000101001\guarded=1'1'.
Parameter \width = 52
Parameter \guarded = 1'1
Found cached RTLIL representation for module `$paramod\FIFO2\width=32'00000000000000000000000000110100\guarded=1'1'.
Parameter \width = 39
Parameter \guarded = 1'1
Found cached RTLIL representation for module `$paramod\FIFO2\width=32'00000000000000000000000000100111\guarded=1'1'.
Parameter \width = 52
Parameter \guarded = 1'1
Found cached RTLIL representation for module `$paramod\FIFO2\width=32'00000000000000000000000000110100\guarded=1'1'.
Parameter \p1width = 2
Parameter \p2depth = 8
Parameter \p3cntr_width = 3
Parameter \guarded = 1'1

50.15. Executing AST frontend in derive mode using pre-parsed AST for module `\SizedFIFO'.
Parameter \p1width = 2
Parameter \p2depth = 8
Parameter \p3cntr_width = 3
Parameter \guarded = 1'1
Generating RTLIL representation for module `$paramod$e03903fe67170b9c8463f29c6528d18b0078fcbe\SizedFIFO'.
Parameter \width = 64

50.16. Executing AST frontend in derive mode using pre-parsed AST for module `\FIFOL1'.
Parameter \width = 64
Generating RTLIL representation for module `$paramod\FIFOL1\width=32'00000000000000000000000001000000'.
Parameter \width = 64
Found cached RTLIL representation for module `$paramod\FIFOL1\width=32'00000000000000000000000001000000'.
Parameter \width = 51

50.17. Executing AST frontend in derive mode using pre-parsed AST for module `\FIFOL1'.
Parameter \width = 51
Generating RTLIL representation for module `$paramod\FIFOL1\width=32'00000000000000000000000000110011'.
Parameter \width = 38

50.18. Executing AST frontend in derive mode using pre-parsed AST for module `\FIFOL1'.
Parameter \width = 38
Generating RTLIL representation for module `$paramod\FIFOL1\width=32'00000000000000000000000000100110'.
Parameter \width = 62

50.19. Executing AST frontend in derive mode using pre-parsed AST for module `\FIFOL1'.
Parameter \width = 62
Generating RTLIL representation for module `$paramod\FIFOL1\width=32'00000000000000000000000000111110'.
Parameter \width = 34

50.20. Executing AST frontend in derive mode using pre-parsed AST for module `\FIFOL1'.
Parameter \width = 34
Generating RTLIL representation for module `$paramod\FIFOL1\width=32'00000000000000000000000000100010'.
Parameter \width = 64
Found cached RTLIL representation for module `$paramod\FIFOL1\width=32'00000000000000000000000001000000'.
Parameter \addr_width = 5
Parameter \data_width = 32
Parameter \lo = 5'00000
Parameter \hi = 5'11111

50.21. Executing AST frontend in derive mode using pre-parsed AST for module `\RegFile'.
Parameter \addr_width = 5
Parameter \data_width = 32
Parameter \lo = 5'00000
Parameter \hi = 5'11111
Generating RTLIL representation for module `$paramod$56698b439944c97e9107048cd4226f712af1b2b1\RegFile'.
Parameter \width = 35
Parameter \guarded = 1'1

50.22. Executing AST frontend in derive mode using pre-parsed AST for module `\FIFO2'.
Parameter \width = 35
Parameter \guarded = 1'1
Generating RTLIL representation for module `$paramod\FIFO2\width=32'00000000000000000000000000100011\guarded=1'1'.
Parameter \width = 70

50.23. Executing AST frontend in derive mode using pre-parsed AST for module `\FIFOL1'.
Parameter \width = 70
Generating RTLIL representation for module `$paramod\FIFOL1\width=32'00000000000000000000000001000110'.
Parameter \width = 103

50.24. Executing AST frontend in derive mode using pre-parsed AST for module `\FIFOL1'.
Parameter \width = 103
Generating RTLIL representation for module `$paramod\FIFOL1\width=32'00000000000000000000000001100111'.

50.25. Analyzing design hierarchy..
Top module:  \mkeclass_axi4
Used module:     \mkSoc
Used module:         $paramod$daadbc6d5d8d25265c1808e519c5f6fbd2f433d0\SizedFIFO
Used module:         $paramod\Counter\width=32'00000000000000000000000000000011\init=3'000
Used module:         $paramod$44bf3f364de125c08c77a464bb47dd656ea26444\Counter
Used module:         $paramod\FIFO2\width=32'00000000000000000000000000000110\guarded=1'1
Used module:         $paramod\FIFO2\width=32'00000000000000000000000000101001\guarded=1'1
Used module:         $paramod\FIFO2\width=32'00000000000000000000000000110100\guarded=1'1
Used module:         $paramod\FIFO2\width=32'00000000000000000000000000100111\guarded=1'1
Used module:         \mksign_dump_axi4
Used module:             $paramod$e03903fe67170b9c8463f29c6528d18b0078fcbe\SizedFIFO
Used module:         $paramod\FIFO1\width=32'00000000000000000000000000000011\guarded=1'1
Used module:         $paramod\FIFO1\width=32'00000000000000000000000000000010\guarded=1'1
Used module:         $paramod\FIFO10\guarded=1'1
Used module:         \mkeclass
Used module:             \module_fn_pmp_lookup
Used module:             \mkriscv
Used module:                 \mkstage3
Used module:                     $paramod\FIFOL1\width=32'00000000000000000000000001100111
Used module:                     \mkcsr
Used module:                         \mkcsrfile
Used module:                 \mkstage2
Used module:                     $paramod\FIFOL1\width=32'00000000000000000000000001000110
Used module:                     \mkalu
Used module:                         \module_fn_alu
Used module:                 \mkstage1
Used module:                     \module_decoder_func_32
Used module:                         \module_address_valid
Used module:                     \module_chk_interrupt
Used module:                     $paramod$56698b439944c97e9107048cd4226f712af1b2b1\RegFile
Used module:                     $paramod\FIFO2\width=32'00000000000000000000000000100011\guarded=1'1
Used module:                 $paramod\FIFOL1\width=32'00000000000000000000000001000000
Used module:                 $paramod\FIFOL1\width=32'00000000000000000000000000110011
Used module:                 $paramod\FIFOL1\width=32'00000000000000000000000000100110
Used module:                 $paramod\FIFOL1\width=32'00000000000000000000000000111110
Used module:                 $paramod\FIFOL1\width=32'00000000000000000000000000100010
Used module:             $paramod\FIFO2\width=32'00000000000000000000000001000110\guarded=1'1
Used module:             $paramod\FIFO2\width=32'00000000000000000000000000000001\guarded=1'1
Used module:             $paramod\FIFO2\width=32'00000000000000000000000000100010\guarded=1'1

50.26. Analyzing design hierarchy..
Top module:  \mkeclass_axi4
Used module:     \mkSoc
Used module:         $paramod$daadbc6d5d8d25265c1808e519c5f6fbd2f433d0\SizedFIFO
Used module:         $paramod\Counter\width=32'00000000000000000000000000000011\init=3'000
Used module:         $paramod$44bf3f364de125c08c77a464bb47dd656ea26444\Counter
Used module:         $paramod\FIFO2\width=32'00000000000000000000000000000110\guarded=1'1
Used module:         $paramod\FIFO2\width=32'00000000000000000000000000101001\guarded=1'1
Used module:         $paramod\FIFO2\width=32'00000000000000000000000000110100\guarded=1'1
Used module:         $paramod\FIFO2\width=32'00000000000000000000000000100111\guarded=1'1
Used module:         \mksign_dump_axi4
Used module:             $paramod$e03903fe67170b9c8463f29c6528d18b0078fcbe\SizedFIFO
Used module:         $paramod\FIFO1\width=32'00000000000000000000000000000011\guarded=1'1
Used module:         $paramod\FIFO1\width=32'00000000000000000000000000000010\guarded=1'1
Used module:         $paramod\FIFO10\guarded=1'1
Used module:         \mkeclass
Used module:             \module_fn_pmp_lookup
Used module:             \mkriscv
Used module:                 \mkstage3
Used module:                     $paramod\FIFOL1\width=32'00000000000000000000000001100111
Used module:                     \mkcsr
Used module:                         \mkcsrfile
Used module:                 \mkstage2
Used module:                     $paramod\FIFOL1\width=32'00000000000000000000000001000110
Used module:                     \mkalu
Used module:                         \module_fn_alu
Used module:                 \mkstage1
Used module:                     \module_decoder_func_32
Used module:                         \module_address_valid
Used module:                     \module_chk_interrupt
Used module:                     $paramod$56698b439944c97e9107048cd4226f712af1b2b1\RegFile
Used module:                     $paramod\FIFO2\width=32'00000000000000000000000000100011\guarded=1'1
Used module:                 $paramod\FIFOL1\width=32'00000000000000000000000001000000
Used module:                 $paramod\FIFOL1\width=32'00000000000000000000000000110011
Used module:                 $paramod\FIFOL1\width=32'00000000000000000000000000100110
Used module:                 $paramod\FIFOL1\width=32'00000000000000000000000000111110
Used module:                 $paramod\FIFOL1\width=32'00000000000000000000000000100010
Used module:             $paramod\FIFO2\width=32'00000000000000000000000001000110\guarded=1'1
Used module:             $paramod\FIFO2\width=32'00000000000000000000000000000001\guarded=1'1
Used module:             $paramod\FIFO2\width=32'00000000000000000000000000100010\guarded=1'1
Removing unused module `\module_decode_word32'.
Removing unused module `\mkeclass_axi4lite'.
Removing unused module `\mkTbSoc'.
Removing unused module `\bram_1rw'.
Removing unused module `\bram_1r1w'.
Removing unused module `\UngatedClockMux'.
Removing unused module `\SyncResetA'.
Removing unused module `\SyncReset0'.
Removing unused module `\SyncRegister'.
Removing unused module `\SyncHandshake'.
Removing unused module `\SyncFIFO1'.
Removing unused module `\SyncFIFO'.
Removing unused module `\SizedFIFO'.
Removing unused module `\RevertReg'.
Removing unused module `\ResetEither'.
Removing unused module `\RegFileLoad'.
Removing unused module `\RegFile'.
Removing unused module `\MakeResetA'.
Removing unused module `\MakeReset0'.
Removing unused module `\MakeClock'.
Removing unused module `\FIFOL1'.
Removing unused module `\FIFO20'.
Removing unused module `\FIFO2'.
Removing unused module `\FIFO10'.
Removing unused module `\FIFO1'.
Removing unused module `\Counter'.
Removing unused module `\ClockInverter'.
Removing unused module `\BRAM2Load'.
Removing unused module `\BRAM2BELoad'.
Removing unused module `\BRAM2BE'.
Removing unused module `\BRAM2'.
Removing unused module `\BRAM1Load'.
Removed 32 unused modules.

51. Executing OPT pass (performing simple optimizations).

51.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module mksign_dump_axi4.
<suppressed ~3 debug messages>
Optimizing module mkriscv.
Optimizing module $paramod\FIFOL1\width=32'00000000000000000000000001000110.
<suppressed ~1 debug messages>
Optimizing module mkeclass_axi4.
Optimizing module mkeclass.
<suppressed ~9 debug messages>
Optimizing module mkcsrfile.
<suppressed ~34 debug messages>
Optimizing module mkcsr.
<suppressed ~6 debug messages>
Optimizing module mkalu.
Optimizing module $paramod\FIFO2\width=32'00000000000000000000000000100011\guarded=1'1.
<suppressed ~1 debug messages>
Optimizing module mkSoc.
<suppressed ~65 debug messages>
Optimizing module $paramod$56698b439944c97e9107048cd4226f712af1b2b1\RegFile.
Optimizing module $paramod\FIFOL1\width=32'00000000000000000000000000100010.
<suppressed ~1 debug messages>
Optimizing module $paramod\FIFOL1\width=32'00000000000000000000000000111110.
<suppressed ~1 debug messages>
Optimizing module $paramod\FIFOL1\width=32'00000000000000000000000000100110.
<suppressed ~1 debug messages>
Optimizing module $paramod\FIFOL1\width=32'00000000000000000000000000110011.
<suppressed ~1 debug messages>
Optimizing module $paramod\FIFOL1\width=32'00000000000000000000000001000000.
<suppressed ~1 debug messages>
Optimizing module $paramod$e03903fe67170b9c8463f29c6528d18b0078fcbe\SizedFIFO.
<suppressed ~1 debug messages>
Optimizing module $paramod\FIFO2\width=32'00000000000000000000000000100010\guarded=1'1.
<suppressed ~1 debug messages>
Optimizing module $paramod\FIFO2\width=32'00000000000000000000000000000001\guarded=1'1.
<suppressed ~1 debug messages>
Optimizing module $paramod\FIFO2\width=32'00000000000000000000000001000110\guarded=1'1.
<suppressed ~1 debug messages>
Optimizing module $paramod\FIFO10\guarded=1'1.
<suppressed ~1 debug messages>
Optimizing module $paramod\FIFO1\width=32'00000000000000000000000000000010\guarded=1'1.
<suppressed ~1 debug messages>
Optimizing module $paramod\FIFO1\width=32'00000000000000000000000000000011\guarded=1'1.
<suppressed ~1 debug messages>
Optimizing module $paramod\FIFO2\width=32'00000000000000000000000000100111\guarded=1'1.
<suppressed ~1 debug messages>
Optimizing module $paramod\FIFO2\width=32'00000000000000000000000000110100\guarded=1'1.
<suppressed ~1 debug messages>
Optimizing module $paramod\FIFO2\width=32'00000000000000000000000000101001\guarded=1'1.
<suppressed ~1 debug messages>
Optimizing module $paramod\FIFO2\width=32'00000000000000000000000000000110\guarded=1'1.
<suppressed ~1 debug messages>
Optimizing module $paramod$44bf3f364de125c08c77a464bb47dd656ea26444\Counter.
<suppressed ~1 debug messages>
Optimizing module $paramod\Counter\width=32'00000000000000000000000000000011\init=3'000.
<suppressed ~1 debug messages>
Optimizing module $paramod$daadbc6d5d8d25265c1808e519c5f6fbd2f433d0\SizedFIFO.
<suppressed ~1 debug messages>
Optimizing module module_fn_pmp_lookup.
<suppressed ~4 debug messages>
Optimizing module module_fn_alu.
<suppressed ~26 debug messages>
Optimizing module module_decoder_func_32.
<suppressed ~17 debug messages>
Optimizing module $paramod\FIFOL1\width=32'00000000000000000000000001100111.
<suppressed ~1 debug messages>
Optimizing module module_chk_interrupt.
<suppressed ~4 debug messages>
Optimizing module module_address_valid.
<suppressed ~7 debug messages>
Optimizing module mkstage3.
<suppressed ~11 debug messages>
Optimizing module mkstage2.
<suppressed ~3 debug messages>
Optimizing module mkstage1.
<suppressed ~12 debug messages>

51.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mksign_dump_axi4'.
<suppressed ~36 debug messages>
Finding identical cells in module `\mkriscv'.
Finding identical cells in module `$paramod\FIFOL1\width=32'00000000000000000000000001000110'.
Finding identical cells in module `\mkeclass_axi4'.
Finding identical cells in module `\mkeclass'.
<suppressed ~45 debug messages>
Finding identical cells in module `\mkcsrfile'.
<suppressed ~429 debug messages>
Finding identical cells in module `\mkcsr'.
<suppressed ~15 debug messages>
Finding identical cells in module `\mkalu'.
Finding identical cells in module `$paramod\FIFO2\width=32'00000000000000000000000000100011\guarded=1'1'.
<suppressed ~18 debug messages>
Finding identical cells in module `\mkSoc'.
<suppressed ~1677 debug messages>
Finding identical cells in module `$paramod$56698b439944c97e9107048cd4226f712af1b2b1\RegFile'.
Finding identical cells in module `$paramod\FIFOL1\width=32'00000000000000000000000000100010'.
Finding identical cells in module `$paramod\FIFOL1\width=32'00000000000000000000000000111110'.
Finding identical cells in module `$paramod\FIFOL1\width=32'00000000000000000000000000100110'.
Finding identical cells in module `$paramod\FIFOL1\width=32'00000000000000000000000000110011'.
Finding identical cells in module `$paramod\FIFOL1\width=32'00000000000000000000000001000000'.
Finding identical cells in module `$paramod$e03903fe67170b9c8463f29c6528d18b0078fcbe\SizedFIFO'.
<suppressed ~3 debug messages>
Finding identical cells in module `$paramod\FIFO2\width=32'00000000000000000000000000100010\guarded=1'1'.
<suppressed ~18 debug messages>
Finding identical cells in module `$paramod\FIFO2\width=32'00000000000000000000000000000001\guarded=1'1'.
<suppressed ~18 debug messages>
Finding identical cells in module `$paramod\FIFO2\width=32'00000000000000000000000001000110\guarded=1'1'.
<suppressed ~18 debug messages>
Finding identical cells in module `$paramod\FIFO10\guarded=1'1'.
Finding identical cells in module `$paramod\FIFO1\width=32'00000000000000000000000000000010\guarded=1'1'.
Finding identical cells in module `$paramod\FIFO1\width=32'00000000000000000000000000000011\guarded=1'1'.
Finding identical cells in module `$paramod\FIFO2\width=32'00000000000000000000000000100111\guarded=1'1'.
<suppressed ~18 debug messages>
Finding identical cells in module `$paramod\FIFO2\width=32'00000000000000000000000000110100\guarded=1'1'.
<suppressed ~18 debug messages>
Finding identical cells in module `$paramod\FIFO2\width=32'00000000000000000000000000101001\guarded=1'1'.
<suppressed ~18 debug messages>
Finding identical cells in module `$paramod\FIFO2\width=32'00000000000000000000000000000110\guarded=1'1'.
<suppressed ~18 debug messages>
Finding identical cells in module `$paramod$44bf3f364de125c08c77a464bb47dd656ea26444\Counter'.
Finding identical cells in module `$paramod\Counter\width=32'00000000000000000000000000000011\init=3'000'.
Finding identical cells in module `$paramod$daadbc6d5d8d25265c1808e519c5f6fbd2f433d0\SizedFIFO'.
<suppressed ~3 debug messages>
Finding identical cells in module `\module_fn_pmp_lookup'.
<suppressed ~48 debug messages>
Finding identical cells in module `\module_fn_alu'.
<suppressed ~123 debug messages>
Finding identical cells in module `\module_decoder_func_32'.
<suppressed ~78 debug messages>
Finding identical cells in module `$paramod\FIFOL1\width=32'00000000000000000000000001100111'.
Finding identical cells in module `\module_chk_interrupt'.
<suppressed ~12 debug messages>
Finding identical cells in module `\module_address_valid'.
<suppressed ~42 debug messages>
Finding identical cells in module `\mkstage3'.
<suppressed ~150 debug messages>
Finding identical cells in module `\mkstage2'.
<suppressed ~24 debug messages>
Finding identical cells in module `\mkstage1'.
<suppressed ~135 debug messages>
Removed a total of 988 cells.

51.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Warning: Ignoring module mksign_dump_axi4 because it contains processes (run 'proc' command first).
Running muxtree optimizer on module \mkriscv..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Warning: Ignoring module $paramod\FIFOL1\width=32'00000000000000000000000001000110 because it contains processes (run 'proc' command first).
Running muxtree optimizer on module \mkeclass_axi4..
  Creating internal representation of mux trees.
  No muxes found in this module.
Warning: Ignoring module mkeclass because it contains processes (run 'proc' command first).
Warning: Ignoring module mkcsrfile because it contains processes (run 'proc' command first).
Warning: Ignoring module mkcsr because it contains processes (run 'proc' command first).
Running muxtree optimizer on module \mkalu..
  Creating internal representation of mux trees.
  No muxes found in this module.
Warning: Ignoring module $paramod\FIFO2\width=32'00000000000000000000000000100011\guarded=1'1 because it contains processes (run 'proc' command first).
Warning: Ignoring module mkSoc because it contains processes (run 'proc' command first).
Warning: Ignoring module $paramod$56698b439944c97e9107048cd4226f712af1b2b1\RegFile because it contains processes (run 'proc' command first).
Warning: Ignoring module $paramod\FIFOL1\width=32'00000000000000000000000000100010 because it contains processes (run 'proc' command first).
Warning: Ignoring module $paramod\FIFOL1\width=32'00000000000000000000000000111110 because it contains processes (run 'proc' command first).
Warning: Ignoring module $paramod\FIFOL1\width=32'00000000000000000000000000100110 because it contains processes (run 'proc' command first).
Warning: Ignoring module $paramod\FIFOL1\width=32'00000000000000000000000000110011 because it contains processes (run 'proc' command first).
Warning: Ignoring module $paramod\FIFOL1\width=32'00000000000000000000000001000000 because it contains processes (run 'proc' command first).
Warning: Ignoring module $paramod$e03903fe67170b9c8463f29c6528d18b0078fcbe\SizedFIFO because it contains processes (run 'proc' command first).
Warning: Ignoring module $paramod\FIFO2\width=32'00000000000000000000000000100010\guarded=1'1 because it contains processes (run 'proc' command first).
Warning: Ignoring module $paramod\FIFO2\width=32'00000000000000000000000000000001\guarded=1'1 because it contains processes (run 'proc' command first).
Warning: Ignoring module $paramod\FIFO2\width=32'00000000000000000000000001000110\guarded=1'1 because it contains processes (run 'proc' command first).
Warning: Ignoring module $paramod\FIFO10\guarded=1'1 because it contains processes (run 'proc' command first).
Warning: Ignoring module $paramod\FIFO1\width=32'00000000000000000000000000000010\guarded=1'1 because it contains processes (run 'proc' command first).
Warning: Ignoring module $paramod\FIFO1\width=32'00000000000000000000000000000011\guarded=1'1 because it contains processes (run 'proc' command first).
Warning: Ignoring module $paramod\FIFO2\width=32'00000000000000000000000000100111\guarded=1'1 because it contains processes (run 'proc' command first).
Warning: Ignoring module $paramod\FIFO2\width=32'00000000000000000000000000110100\guarded=1'1 because it contains processes (run 'proc' command first).
Warning: Ignoring module $paramod\FIFO2\width=32'00000000000000000000000000101001\guarded=1'1 because it contains processes (run 'proc' command first).
Warning: Ignoring module $paramod\FIFO2\width=32'00000000000000000000000000000110\guarded=1'1 because it contains processes (run 'proc' command first).
Warning: Ignoring module $paramod$44bf3f364de125c08c77a464bb47dd656ea26444\Counter because it contains processes (run 'proc' command first).
Warning: Ignoring module $paramod\Counter\width=32'00000000000000000000000000000011\init=3'000 because it contains processes (run 'proc' command first).
Warning: Ignoring module $paramod$daadbc6d5d8d25265c1808e519c5f6fbd2f433d0\SizedFIFO because it contains processes (run 'proc' command first).
Warning: Ignoring module module_fn_pmp_lookup because it contains processes (run 'proc' command first).
Warning: Ignoring module module_fn_alu because it contains processes (run 'proc' command first).
Warning: Ignoring module module_decoder_func_32 because it contains processes (run 'proc' command first).
Warning: Ignoring module $paramod\FIFOL1\width=32'00000000000000000000000001100111 because it contains processes (run 'proc' command first).
Running muxtree optimizer on module \module_chk_interrupt..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Warning: Ignoring module module_address_valid because it contains processes (run 'proc' command first).
Warning: Ignoring module mkstage3 because it contains processes (run 'proc' command first).
Warning: Ignoring module mkstage2 because it contains processes (run 'proc' command first).
Warning: Ignoring module mkstage1 because it contains processes (run 'proc' command first).
Removed 0 multiplexer ports.
<suppressed ~4 debug messages>

51.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mksign_dump_axi4.
  Optimizing cells in module \mkriscv.
  Optimizing cells in module $paramod\FIFOL1\width=32'00000000000000000000000001000110.
  Optimizing cells in module \mkeclass_axi4.
  Optimizing cells in module \mkeclass.
  Optimizing cells in module \mkcsrfile.
  Optimizing cells in module \mkcsr.
  Optimizing cells in module \mkalu.
  Optimizing cells in module $paramod\FIFO2\width=32'00000000000000000000000000100011\guarded=1'1.
  Optimizing cells in module \mkSoc.
  Optimizing cells in module $paramod$56698b439944c97e9107048cd4226f712af1b2b1\RegFile.
  Optimizing cells in module $paramod\FIFOL1\width=32'00000000000000000000000000100010.
  Optimizing cells in module $paramod\FIFOL1\width=32'00000000000000000000000000111110.
  Optimizing cells in module $paramod\FIFOL1\width=32'00000000000000000000000000100110.
  Optimizing cells in module $paramod\FIFOL1\width=32'00000000000000000000000000110011.
  Optimizing cells in module $paramod\FIFOL1\width=32'00000000000000000000000001000000.
  Optimizing cells in module $paramod$e03903fe67170b9c8463f29c6528d18b0078fcbe\SizedFIFO.
  Optimizing cells in module $paramod\FIFO2\width=32'00000000000000000000000000100010\guarded=1'1.
  Optimizing cells in module $paramod\FIFO2\width=32'00000000000000000000000000000001\guarded=1'1.
  Optimizing cells in module $paramod\FIFO2\width=32'00000000000000000000000001000110\guarded=1'1.
  Optimizing cells in module $paramod\FIFO10\guarded=1'1.
  Optimizing cells in module $paramod\FIFO1\width=32'00000000000000000000000000000010\guarded=1'1.
  Optimizing cells in module $paramod\FIFO1\width=32'00000000000000000000000000000011\guarded=1'1.
  Optimizing cells in module $paramod\FIFO2\width=32'00000000000000000000000000100111\guarded=1'1.
  Optimizing cells in module $paramod\FIFO2\width=32'00000000000000000000000000110100\guarded=1'1.
  Optimizing cells in module $paramod\FIFO2\width=32'00000000000000000000000000101001\guarded=1'1.
  Optimizing cells in module $paramod\FIFO2\width=32'00000000000000000000000000000110\guarded=1'1.
  Optimizing cells in module $paramod$44bf3f364de125c08c77a464bb47dd656ea26444\Counter.
  Optimizing cells in module $paramod\Counter\width=32'00000000000000000000000000000011\init=3'000.
  Optimizing cells in module $paramod$daadbc6d5d8d25265c1808e519c5f6fbd2f433d0\SizedFIFO.
  Optimizing cells in module \module_fn_pmp_lookup.
  Optimizing cells in module \module_fn_alu.
  Optimizing cells in module \module_decoder_func_32.
  Optimizing cells in module $paramod\FIFOL1\width=32'00000000000000000000000001100111.
  Optimizing cells in module \module_chk_interrupt.
  Optimizing cells in module \module_address_valid.
  Optimizing cells in module \mkstage3.
  Optimizing cells in module \mkstage2.
  Optimizing cells in module \mkstage1.
Performed a total of 0 changes.

51.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mksign_dump_axi4'.
Finding identical cells in module `\mkriscv'.
Finding identical cells in module `$paramod\FIFOL1\width=32'00000000000000000000000001000110'.
Finding identical cells in module `\mkeclass_axi4'.
Finding identical cells in module `\mkeclass'.
Finding identical cells in module `\mkcsrfile'.
<suppressed ~3 debug messages>
Finding identical cells in module `\mkcsr'.
Finding identical cells in module `\mkalu'.
Finding identical cells in module `$paramod\FIFO2\width=32'00000000000000000000000000100011\guarded=1'1'.
Finding identical cells in module `\mkSoc'.
Finding identical cells in module `$paramod$56698b439944c97e9107048cd4226f712af1b2b1\RegFile'.
Finding identical cells in module `$paramod\FIFOL1\width=32'00000000000000000000000000100010'.
Finding identical cells in module `$paramod\FIFOL1\width=32'00000000000000000000000000111110'.
Finding identical cells in module `$paramod\FIFOL1\width=32'00000000000000000000000000100110'.
Finding identical cells in module `$paramod\FIFOL1\width=32'00000000000000000000000000110011'.
Finding identical cells in module `$paramod\FIFOL1\width=32'00000000000000000000000001000000'.
Finding identical cells in module `$paramod$e03903fe67170b9c8463f29c6528d18b0078fcbe\SizedFIFO'.
Finding identical cells in module `$paramod\FIFO2\width=32'00000000000000000000000000100010\guarded=1'1'.
Finding identical cells in module `$paramod\FIFO2\width=32'00000000000000000000000000000001\guarded=1'1'.
Finding identical cells in module `$paramod\FIFO2\width=32'00000000000000000000000001000110\guarded=1'1'.
Finding identical cells in module `$paramod\FIFO10\guarded=1'1'.
Finding identical cells in module `$paramod\FIFO1\width=32'00000000000000000000000000000010\guarded=1'1'.
Finding identical cells in module `$paramod\FIFO1\width=32'00000000000000000000000000000011\guarded=1'1'.
Finding identical cells in module `$paramod\FIFO2\width=32'00000000000000000000000000100111\guarded=1'1'.
Finding identical cells in module `$paramod\FIFO2\width=32'00000000000000000000000000110100\guarded=1'1'.
Finding identical cells in module `$paramod\FIFO2\width=32'00000000000000000000000000101001\guarded=1'1'.
Finding identical cells in module `$paramod\FIFO2\width=32'00000000000000000000000000000110\guarded=1'1'.
Finding identical cells in module `$paramod$44bf3f364de125c08c77a464bb47dd656ea26444\Counter'.
Finding identical cells in module `$paramod\Counter\width=32'00000000000000000000000000000011\init=3'000'.
Finding identical cells in module `$paramod$daadbc6d5d8d25265c1808e519c5f6fbd2f433d0\SizedFIFO'.
Finding identical cells in module `\module_fn_pmp_lookup'.
Finding identical cells in module `\module_fn_alu'.
Finding identical cells in module `\module_decoder_func_32'.
Finding identical cells in module `$paramod\FIFOL1\width=32'00000000000000000000000001100111'.
Finding identical cells in module `\module_chk_interrupt'.
Finding identical cells in module `\module_address_valid'.
Finding identical cells in module `\mkstage3'.
Finding identical cells in module `\mkstage2'.
Finding identical cells in module `\mkstage1'.
<suppressed ~6 debug messages>
Removed a total of 3 cells.

51.6. Executing OPT_DFF pass (perform DFF optimizations).

51.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Warning: Ignoring module mksign_dump_axi4 because it contains processes (run 'proc' command first).
Finding unused cells or wires in module \mkriscv..
Warning: Ignoring module $paramod\FIFOL1\width=32'00000000000000000000000001000110 because it contains processes (run 'proc' command first).
Finding unused cells or wires in module \mkeclass_axi4..
Warning: Ignoring module mkeclass because it contains processes (run 'proc' command first).
Warning: Ignoring module mkcsrfile because it contains processes (run 'proc' command first).
Warning: Ignoring module mkcsr because it contains processes (run 'proc' command first).
Finding unused cells or wires in module \mkalu..
Warning: Ignoring module $paramod\FIFO2\width=32'00000000000000000000000000100011\guarded=1'1 because it contains processes (run 'proc' command first).
Warning: Ignoring module mkSoc because it contains processes (run 'proc' command first).
Warning: Ignoring module $paramod$56698b439944c97e9107048cd4226f712af1b2b1\RegFile because it contains processes (run 'proc' command first).
Warning: Ignoring module $paramod\FIFOL1\width=32'00000000000000000000000000100010 because it contains processes (run 'proc' command first).
Warning: Ignoring module $paramod\FIFOL1\width=32'00000000000000000000000000111110 because it contains processes (run 'proc' command first).
Warning: Ignoring module $paramod\FIFOL1\width=32'00000000000000000000000000100110 because it contains processes (run 'proc' command first).
Warning: Ignoring module $paramod\FIFOL1\width=32'00000000000000000000000000110011 because it contains processes (run 'proc' command first).
Warning: Ignoring module $paramod\FIFOL1\width=32'00000000000000000000000001000000 because it contains processes (run 'proc' command first).
Warning: Ignoring module $paramod$e03903fe67170b9c8463f29c6528d18b0078fcbe\SizedFIFO because it contains processes (run 'proc' command first).
Warning: Ignoring module $paramod\FIFO2\width=32'00000000000000000000000000100010\guarded=1'1 because it contains processes (run 'proc' command first).
Warning: Ignoring module $paramod\FIFO2\width=32'00000000000000000000000000000001\guarded=1'1 because it contains processes (run 'proc' command first).
Warning: Ignoring module $paramod\FIFO2\width=32'00000000000000000000000001000110\guarded=1'1 because it contains processes (run 'proc' command first).
Warning: Ignoring module $paramod\FIFO10\guarded=1'1 because it contains processes (run 'proc' command first).
Warning: Ignoring module $paramod\FIFO1\width=32'00000000000000000000000000000010\guarded=1'1 because it contains processes (run 'proc' command first).
Warning: Ignoring module $paramod\FIFO1\width=32'00000000000000000000000000000011\guarded=1'1 because it contains processes (run 'proc' command first).
Warning: Ignoring module $paramod\FIFO2\width=32'00000000000000000000000000100111\guarded=1'1 because it contains processes (run 'proc' command first).
Warning: Ignoring module $paramod\FIFO2\width=32'00000000000000000000000000110100\guarded=1'1 because it contains processes (run 'proc' command first).
Warning: Ignoring module $paramod\FIFO2\width=32'00000000000000000000000000101001\guarded=1'1 because it contains processes (run 'proc' command first).
Warning: Ignoring module $paramod\FIFO2\width=32'00000000000000000000000000000110\guarded=1'1 because it contains processes (run 'proc' command first).
Warning: Ignoring module $paramod$44bf3f364de125c08c77a464bb47dd656ea26444\Counter because it contains processes (run 'proc' command first).
Warning: Ignoring module $paramod\Counter\width=32'00000000000000000000000000000011\init=3'000 because it contains processes (run 'proc' command first).
Warning: Ignoring module $paramod$daadbc6d5d8d25265c1808e519c5f6fbd2f433d0\SizedFIFO because it contains processes (run 'proc' command first).
Warning: Ignoring module module_fn_pmp_lookup because it contains processes (run 'proc' command first).
Warning: Ignoring module module_fn_alu because it contains processes (run 'proc' command first).
Warning: Ignoring module module_decoder_func_32 because it contains processes (run 'proc' command first).
Warning: Ignoring module $paramod\FIFOL1\width=32'00000000000000000000000001100111 because it contains processes (run 'proc' command first).
Finding unused cells or wires in module \module_chk_interrupt..
Warning: Ignoring module module_address_valid because it contains processes (run 'proc' command first).
Warning: Ignoring module mkstage3 because it contains processes (run 'proc' command first).
Warning: Ignoring module mkstage2 because it contains processes (run 'proc' command first).
Warning: Ignoring module mkstage1 because it contains processes (run 'proc' command first).
Removed 0 unused cells and 37 unused wires.
<suppressed ~3 debug messages>

51.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$44bf3f364de125c08c77a464bb47dd656ea26444\Counter.
Optimizing module $paramod$56698b439944c97e9107048cd4226f712af1b2b1\RegFile.
Optimizing module $paramod$daadbc6d5d8d25265c1808e519c5f6fbd2f433d0\SizedFIFO.
Optimizing module $paramod$e03903fe67170b9c8463f29c6528d18b0078fcbe\SizedFIFO.
Optimizing module $paramod\Counter\width=32'00000000000000000000000000000011\init=3'000.
Optimizing module $paramod\FIFO10\guarded=1'1.
Optimizing module $paramod\FIFO1\width=32'00000000000000000000000000000010\guarded=1'1.
Optimizing module $paramod\FIFO1\width=32'00000000000000000000000000000011\guarded=1'1.
Optimizing module $paramod\FIFO2\width=32'00000000000000000000000000000001\guarded=1'1.
Optimizing module $paramod\FIFO2\width=32'00000000000000000000000000000110\guarded=1'1.
Optimizing module $paramod\FIFO2\width=32'00000000000000000000000000100010\guarded=1'1.
Optimizing module $paramod\FIFO2\width=32'00000000000000000000000000100011\guarded=1'1.
Optimizing module $paramod\FIFO2\width=32'00000000000000000000000000100111\guarded=1'1.
Optimizing module $paramod\FIFO2\width=32'00000000000000000000000000101001\guarded=1'1.
Optimizing module $paramod\FIFO2\width=32'00000000000000000000000000110100\guarded=1'1.
Optimizing module $paramod\FIFO2\width=32'00000000000000000000000001000110\guarded=1'1.
Optimizing module $paramod\FIFOL1\width=32'00000000000000000000000000100010.
Optimizing module $paramod\FIFOL1\width=32'00000000000000000000000000100110.
Optimizing module $paramod\FIFOL1\width=32'00000000000000000000000000110011.
Optimizing module $paramod\FIFOL1\width=32'00000000000000000000000000111110.
Optimizing module $paramod\FIFOL1\width=32'00000000000000000000000001000000.
Optimizing module $paramod\FIFOL1\width=32'00000000000000000000000001000110.
Optimizing module $paramod\FIFOL1\width=32'00000000000000000000000001100111.
Optimizing module mkSoc.
Optimizing module mkalu.
Optimizing module mkcsr.
Optimizing module mkcsrfile.
Optimizing module mkeclass.
Optimizing module mkeclass_axi4.
Optimizing module mkriscv.
Optimizing module mksign_dump_axi4.
Optimizing module mkstage1.
Optimizing module mkstage2.
Optimizing module mkstage3.
Optimizing module module_address_valid.
Optimizing module module_chk_interrupt.
Optimizing module module_decoder_func_32.
Optimizing module module_fn_alu.
Optimizing module module_fn_pmp_lookup.

51.9. Rerunning OPT passes. (Maybe there is more to do..)

51.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Warning: Ignoring module $paramod$44bf3f364de125c08c77a464bb47dd656ea26444\Counter because it contains processes (run 'proc' command first).
Warning: Ignoring module $paramod$56698b439944c97e9107048cd4226f712af1b2b1\RegFile because it contains processes (run 'proc' command first).
Warning: Ignoring module $paramod$daadbc6d5d8d25265c1808e519c5f6fbd2f433d0\SizedFIFO because it contains processes (run 'proc' command first).
Warning: Ignoring module $paramod$e03903fe67170b9c8463f29c6528d18b0078fcbe\SizedFIFO because it contains processes (run 'proc' command first).
Warning: Ignoring module $paramod\Counter\width=32'00000000000000000000000000000011\init=3'000 because it contains processes (run 'proc' command first).
Warning: Ignoring module $paramod\FIFO10\guarded=1'1 because it contains processes (run 'proc' command first).
Warning: Ignoring module $paramod\FIFO1\width=32'00000000000000000000000000000010\guarded=1'1 because it contains processes (run 'proc' command first).
Warning: Ignoring module $paramod\FIFO1\width=32'00000000000000000000000000000011\guarded=1'1 because it contains processes (run 'proc' command first).
Warning: Ignoring module $paramod\FIFO2\width=32'00000000000000000000000000000001\guarded=1'1 because it contains processes (run 'proc' command first).
Warning: Ignoring module $paramod\FIFO2\width=32'00000000000000000000000000000110\guarded=1'1 because it contains processes (run 'proc' command first).
Warning: Ignoring module $paramod\FIFO2\width=32'00000000000000000000000000100010\guarded=1'1 because it contains processes (run 'proc' command first).
Warning: Ignoring module $paramod\FIFO2\width=32'00000000000000000000000000100011\guarded=1'1 because it contains processes (run 'proc' command first).
Warning: Ignoring module $paramod\FIFO2\width=32'00000000000000000000000000100111\guarded=1'1 because it contains processes (run 'proc' command first).
Warning: Ignoring module $paramod\FIFO2\width=32'00000000000000000000000000101001\guarded=1'1 because it contains processes (run 'proc' command first).
Warning: Ignoring module $paramod\FIFO2\width=32'00000000000000000000000000110100\guarded=1'1 because it contains processes (run 'proc' command first).
Warning: Ignoring module $paramod\FIFO2\width=32'00000000000000000000000001000110\guarded=1'1 because it contains processes (run 'proc' command first).
Warning: Ignoring module $paramod\FIFOL1\width=32'00000000000000000000000000100010 because it contains processes (run 'proc' command first).
Warning: Ignoring module $paramod\FIFOL1\width=32'00000000000000000000000000100110 because it contains processes (run 'proc' command first).
Warning: Ignoring module $paramod\FIFOL1\width=32'00000000000000000000000000110011 because it contains processes (run 'proc' command first).
Warning: Ignoring module $paramod\FIFOL1\width=32'00000000000000000000000000111110 because it contains processes (run 'proc' command first).
Warning: Ignoring module $paramod\FIFOL1\width=32'00000000000000000000000001000000 because it contains processes (run 'proc' command first).
Warning: Ignoring module $paramod\FIFOL1\width=32'00000000000000000000000001000110 because it contains processes (run 'proc' command first).
Warning: Ignoring module $paramod\FIFOL1\width=32'00000000000000000000000001100111 because it contains processes (run 'proc' command first).
Warning: Ignoring module mkSoc because it contains processes (run 'proc' command first).
Running muxtree optimizer on module \mkalu..
  Creating internal representation of mux trees.
  No muxes found in this module.
Warning: Ignoring module mkcsr because it contains processes (run 'proc' command first).
Warning: Ignoring module mkcsrfile because it contains processes (run 'proc' command first).
Warning: Ignoring module mkeclass because it contains processes (run 'proc' command first).
Running muxtree optimizer on module \mkeclass_axi4..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \mkriscv..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Warning: Ignoring module mksign_dump_axi4 because it contains processes (run 'proc' command first).
Warning: Ignoring module mkstage1 because it contains processes (run 'proc' command first).
Warning: Ignoring module mkstage2 because it contains processes (run 'proc' command first).
Warning: Ignoring module mkstage3 because it contains processes (run 'proc' command first).
Warning: Ignoring module module_address_valid because it contains processes (run 'proc' command first).
Running muxtree optimizer on module \module_chk_interrupt..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Warning: Ignoring module module_decoder_func_32 because it contains processes (run 'proc' command first).
Warning: Ignoring module module_fn_alu because it contains processes (run 'proc' command first).
Warning: Ignoring module module_fn_pmp_lookup because it contains processes (run 'proc' command first).
Removed 0 multiplexer ports.
<suppressed ~4 debug messages>

51.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod$44bf3f364de125c08c77a464bb47dd656ea26444\Counter.
  Optimizing cells in module $paramod$56698b439944c97e9107048cd4226f712af1b2b1\RegFile.
  Optimizing cells in module $paramod$daadbc6d5d8d25265c1808e519c5f6fbd2f433d0\SizedFIFO.
  Optimizing cells in module $paramod$e03903fe67170b9c8463f29c6528d18b0078fcbe\SizedFIFO.
  Optimizing cells in module $paramod\Counter\width=32'00000000000000000000000000000011\init=3'000.
  Optimizing cells in module $paramod\FIFO10\guarded=1'1.
  Optimizing cells in module $paramod\FIFO1\width=32'00000000000000000000000000000010\guarded=1'1.
  Optimizing cells in module $paramod\FIFO1\width=32'00000000000000000000000000000011\guarded=1'1.
  Optimizing cells in module $paramod\FIFO2\width=32'00000000000000000000000000000001\guarded=1'1.
  Optimizing cells in module $paramod\FIFO2\width=32'00000000000000000000000000000110\guarded=1'1.
  Optimizing cells in module $paramod\FIFO2\width=32'00000000000000000000000000100010\guarded=1'1.
  Optimizing cells in module $paramod\FIFO2\width=32'00000000000000000000000000100011\guarded=1'1.
  Optimizing cells in module $paramod\FIFO2\width=32'00000000000000000000000000100111\guarded=1'1.
  Optimizing cells in module $paramod\FIFO2\width=32'00000000000000000000000000101001\guarded=1'1.
  Optimizing cells in module $paramod\FIFO2\width=32'00000000000000000000000000110100\guarded=1'1.
  Optimizing cells in module $paramod\FIFO2\width=32'00000000000000000000000001000110\guarded=1'1.
  Optimizing cells in module $paramod\FIFOL1\width=32'00000000000000000000000000100010.
  Optimizing cells in module $paramod\FIFOL1\width=32'00000000000000000000000000100110.
  Optimizing cells in module $paramod\FIFOL1\width=32'00000000000000000000000000110011.
  Optimizing cells in module $paramod\FIFOL1\width=32'00000000000000000000000000111110.
  Optimizing cells in module $paramod\FIFOL1\width=32'00000000000000000000000001000000.
  Optimizing cells in module $paramod\FIFOL1\width=32'00000000000000000000000001000110.
  Optimizing cells in module $paramod\FIFOL1\width=32'00000000000000000000000001100111.
  Optimizing cells in module \mkSoc.
  Optimizing cells in module \mkalu.
  Optimizing cells in module \mkcsr.
  Optimizing cells in module \mkcsrfile.
  Optimizing cells in module \mkeclass.
  Optimizing cells in module \mkeclass_axi4.
  Optimizing cells in module \mkriscv.
  Optimizing cells in module \mksign_dump_axi4.
  Optimizing cells in module \mkstage1.
  Optimizing cells in module \mkstage2.
  Optimizing cells in module \mkstage3.
  Optimizing cells in module \module_address_valid.
  Optimizing cells in module \module_chk_interrupt.
  Optimizing cells in module \module_decoder_func_32.
  Optimizing cells in module \module_fn_alu.
  Optimizing cells in module \module_fn_pmp_lookup.
Performed a total of 0 changes.

51.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$44bf3f364de125c08c77a464bb47dd656ea26444\Counter'.
Finding identical cells in module `$paramod$56698b439944c97e9107048cd4226f712af1b2b1\RegFile'.
Finding identical cells in module `$paramod$daadbc6d5d8d25265c1808e519c5f6fbd2f433d0\SizedFIFO'.
Finding identical cells in module `$paramod$e03903fe67170b9c8463f29c6528d18b0078fcbe\SizedFIFO'.
Finding identical cells in module `$paramod\Counter\width=32'00000000000000000000000000000011\init=3'000'.
Finding identical cells in module `$paramod\FIFO10\guarded=1'1'.
Finding identical cells in module `$paramod\FIFO1\width=32'00000000000000000000000000000010\guarded=1'1'.
Finding identical cells in module `$paramod\FIFO1\width=32'00000000000000000000000000000011\guarded=1'1'.
Finding identical cells in module `$paramod\FIFO2\width=32'00000000000000000000000000000001\guarded=1'1'.
Finding identical cells in module `$paramod\FIFO2\width=32'00000000000000000000000000000110\guarded=1'1'.
Finding identical cells in module `$paramod\FIFO2\width=32'00000000000000000000000000100010\guarded=1'1'.
Finding identical cells in module `$paramod\FIFO2\width=32'00000000000000000000000000100011\guarded=1'1'.
Finding identical cells in module `$paramod\FIFO2\width=32'00000000000000000000000000100111\guarded=1'1'.
Finding identical cells in module `$paramod\FIFO2\width=32'00000000000000000000000000101001\guarded=1'1'.
Finding identical cells in module `$paramod\FIFO2\width=32'00000000000000000000000000110100\guarded=1'1'.
Finding identical cells in module `$paramod\FIFO2\width=32'00000000000000000000000001000110\guarded=1'1'.
Finding identical cells in module `$paramod\FIFOL1\width=32'00000000000000000000000000100010'.
Finding identical cells in module `$paramod\FIFOL1\width=32'00000000000000000000000000100110'.
Finding identical cells in module `$paramod\FIFOL1\width=32'00000000000000000000000000110011'.
Finding identical cells in module `$paramod\FIFOL1\width=32'00000000000000000000000000111110'.
Finding identical cells in module `$paramod\FIFOL1\width=32'00000000000000000000000001000000'.
Finding identical cells in module `$paramod\FIFOL1\width=32'00000000000000000000000001000110'.
Finding identical cells in module `$paramod\FIFOL1\width=32'00000000000000000000000001100111'.
Finding identical cells in module `\mkSoc'.
Finding identical cells in module `\mkalu'.
Finding identical cells in module `\mkcsr'.
Finding identical cells in module `\mkcsrfile'.
Finding identical cells in module `\mkeclass'.
Finding identical cells in module `\mkeclass_axi4'.
Finding identical cells in module `\mkriscv'.
Finding identical cells in module `\mksign_dump_axi4'.
Finding identical cells in module `\mkstage1'.
Finding identical cells in module `\mkstage2'.
Finding identical cells in module `\mkstage3'.
Finding identical cells in module `\module_address_valid'.
Finding identical cells in module `\module_chk_interrupt'.
Finding identical cells in module `\module_decoder_func_32'.
Finding identical cells in module `\module_fn_alu'.
Finding identical cells in module `\module_fn_pmp_lookup'.
Removed a total of 0 cells.

51.13. Executing OPT_DFF pass (perform DFF optimizations).

51.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Warning: Ignoring module $paramod$44bf3f364de125c08c77a464bb47dd656ea26444\Counter because it contains processes (run 'proc' command first).
Warning: Ignoring module $paramod$56698b439944c97e9107048cd4226f712af1b2b1\RegFile because it contains processes (run 'proc' command first).
Warning: Ignoring module $paramod$daadbc6d5d8d25265c1808e519c5f6fbd2f433d0\SizedFIFO because it contains processes (run 'proc' command first).
Warning: Ignoring module $paramod$e03903fe67170b9c8463f29c6528d18b0078fcbe\SizedFIFO because it contains processes (run 'proc' command first).
Warning: Ignoring module $paramod\Counter\width=32'00000000000000000000000000000011\init=3'000 because it contains processes (run 'proc' command first).
Warning: Ignoring module $paramod\FIFO10\guarded=1'1 because it contains processes (run 'proc' command first).
Warning: Ignoring module $paramod\FIFO1\width=32'00000000000000000000000000000010\guarded=1'1 because it contains processes (run 'proc' command first).
Warning: Ignoring module $paramod\FIFO1\width=32'00000000000000000000000000000011\guarded=1'1 because it contains processes (run 'proc' command first).
Warning: Ignoring module $paramod\FIFO2\width=32'00000000000000000000000000000001\guarded=1'1 because it contains processes (run 'proc' command first).
Warning: Ignoring module $paramod\FIFO2\width=32'00000000000000000000000000000110\guarded=1'1 because it contains processes (run 'proc' command first).
Warning: Ignoring module $paramod\FIFO2\width=32'00000000000000000000000000100010\guarded=1'1 because it contains processes (run 'proc' command first).
Warning: Ignoring module $paramod\FIFO2\width=32'00000000000000000000000000100011\guarded=1'1 because it contains processes (run 'proc' command first).
Warning: Ignoring module $paramod\FIFO2\width=32'00000000000000000000000000100111\guarded=1'1 because it contains processes (run 'proc' command first).
Warning: Ignoring module $paramod\FIFO2\width=32'00000000000000000000000000101001\guarded=1'1 because it contains processes (run 'proc' command first).
Warning: Ignoring module $paramod\FIFO2\width=32'00000000000000000000000000110100\guarded=1'1 because it contains processes (run 'proc' command first).
Warning: Ignoring module $paramod\FIFO2\width=32'00000000000000000000000001000110\guarded=1'1 because it contains processes (run 'proc' command first).
Warning: Ignoring module $paramod\FIFOL1\width=32'00000000000000000000000000100010 because it contains processes (run 'proc' command first).
Warning: Ignoring module $paramod\FIFOL1\width=32'00000000000000000000000000100110 because it contains processes (run 'proc' command first).
Warning: Ignoring module $paramod\FIFOL1\width=32'00000000000000000000000000110011 because it contains processes (run 'proc' command first).
Warning: Ignoring module $paramod\FIFOL1\width=32'00000000000000000000000000111110 because it contains processes (run 'proc' command first).
Warning: Ignoring module $paramod\FIFOL1\width=32'00000000000000000000000001000000 because it contains processes (run 'proc' command first).
Warning: Ignoring module $paramod\FIFOL1\width=32'00000000000000000000000001000110 because it contains processes (run 'proc' command first).
Warning: Ignoring module $paramod\FIFOL1\width=32'00000000000000000000000001100111 because it contains processes (run 'proc' command first).
Warning: Ignoring module mkSoc because it contains processes (run 'proc' command first).
Finding unused cells or wires in module \mkalu..
Warning: Ignoring module mkcsr because it contains processes (run 'proc' command first).
Warning: Ignoring module mkcsrfile because it contains processes (run 'proc' command first).
Warning: Ignoring module mkeclass because it contains processes (run 'proc' command first).
Finding unused cells or wires in module \mkeclass_axi4..
Finding unused cells or wires in module \mkriscv..
Warning: Ignoring module mksign_dump_axi4 because it contains processes (run 'proc' command first).
Warning: Ignoring module mkstage1 because it contains processes (run 'proc' command first).
Warning: Ignoring module mkstage2 because it contains processes (run 'proc' command first).
Warning: Ignoring module mkstage3 because it contains processes (run 'proc' command first).
Warning: Ignoring module module_address_valid because it contains processes (run 'proc' command first).
Finding unused cells or wires in module \module_chk_interrupt..
Warning: Ignoring module module_decoder_func_32 because it contains processes (run 'proc' command first).
Warning: Ignoring module module_fn_alu because it contains processes (run 'proc' command first).
Warning: Ignoring module module_fn_pmp_lookup because it contains processes (run 'proc' command first).

51.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$44bf3f364de125c08c77a464bb47dd656ea26444\Counter.
Optimizing module $paramod$56698b439944c97e9107048cd4226f712af1b2b1\RegFile.
Optimizing module $paramod$daadbc6d5d8d25265c1808e519c5f6fbd2f433d0\SizedFIFO.
Optimizing module $paramod$e03903fe67170b9c8463f29c6528d18b0078fcbe\SizedFIFO.
Optimizing module $paramod\Counter\width=32'00000000000000000000000000000011\init=3'000.
Optimizing module $paramod\FIFO10\guarded=1'1.
Optimizing module $paramod\FIFO1\width=32'00000000000000000000000000000010\guarded=1'1.
Optimizing module $paramod\FIFO1\width=32'00000000000000000000000000000011\guarded=1'1.
Optimizing module $paramod\FIFO2\width=32'00000000000000000000000000000001\guarded=1'1.
Optimizing module $paramod\FIFO2\width=32'00000000000000000000000000000110\guarded=1'1.
Optimizing module $paramod\FIFO2\width=32'00000000000000000000000000100010\guarded=1'1.
Optimizing module $paramod\FIFO2\width=32'00000000000000000000000000100011\guarded=1'1.
Optimizing module $paramod\FIFO2\width=32'00000000000000000000000000100111\guarded=1'1.
Optimizing module $paramod\FIFO2\width=32'00000000000000000000000000101001\guarded=1'1.
Optimizing module $paramod\FIFO2\width=32'00000000000000000000000000110100\guarded=1'1.
Optimizing module $paramod\FIFO2\width=32'00000000000000000000000001000110\guarded=1'1.
Optimizing module $paramod\FIFOL1\width=32'00000000000000000000000000100010.
Optimizing module $paramod\FIFOL1\width=32'00000000000000000000000000100110.
Optimizing module $paramod\FIFOL1\width=32'00000000000000000000000000110011.
Optimizing module $paramod\FIFOL1\width=32'00000000000000000000000000111110.
Optimizing module $paramod\FIFOL1\width=32'00000000000000000000000001000000.
Optimizing module $paramod\FIFOL1\width=32'00000000000000000000000001000110.
Optimizing module $paramod\FIFOL1\width=32'00000000000000000000000001100111.
Optimizing module mkSoc.
Optimizing module mkalu.
Optimizing module mkcsr.
Optimizing module mkcsrfile.
Optimizing module mkeclass.
Optimizing module mkeclass_axi4.
Optimizing module mkriscv.
Optimizing module mksign_dump_axi4.
Optimizing module mkstage1.
Optimizing module mkstage2.
Optimizing module mkstage3.
Optimizing module module_address_valid.
Optimizing module module_chk_interrupt.
Optimizing module module_decoder_func_32.
Optimizing module module_fn_alu.
Optimizing module module_fn_pmp_lookup.

51.16. Finished OPT passes. (There is nothing left to do.)

52. Executing SYNTH_ICE40 pass.

52.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/ice40/cells_sim.v
Parsing Verilog input from `/usr/bin/../share/yosys/ice40/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\SB_IO'.
Generating RTLIL representation for module `\SB_GB_IO'.
Generating RTLIL representation for module `\SB_GB'.
Generating RTLIL representation for module `\SB_LUT4'.
Generating RTLIL representation for module `\SB_CARRY'.
Generating RTLIL representation for module `\SB_DFF'.
Generating RTLIL representation for module `\SB_DFFE'.
Generating RTLIL representation for module `\SB_DFFSR'.
Generating RTLIL representation for module `\SB_DFFR'.
Generating RTLIL representation for module `\SB_DFFSS'.
Generating RTLIL representation for module `\SB_DFFS'.
Generating RTLIL representation for module `\SB_DFFESR'.
Generating RTLIL representation for module `\SB_DFFER'.
Generating RTLIL representation for module `\SB_DFFESS'.
Generating RTLIL representation for module `\SB_DFFES'.
Generating RTLIL representation for module `\SB_DFFN'.
Generating RTLIL representation for module `\SB_DFFNE'.
Generating RTLIL representation for module `\SB_DFFNSR'.
Generating RTLIL representation for module `\SB_DFFNR'.
Generating RTLIL representation for module `\SB_DFFNSS'.
Generating RTLIL representation for module `\SB_DFFNS'.
Generating RTLIL representation for module `\SB_DFFNESR'.
Generating RTLIL representation for module `\SB_DFFNER'.
Generating RTLIL representation for module `\SB_DFFNESS'.
Generating RTLIL representation for module `\SB_DFFNES'.
Generating RTLIL representation for module `\SB_RAM40_4K'.
Generating RTLIL representation for module `\SB_RAM40_4KNR'.
Generating RTLIL representation for module `\SB_RAM40_4KNW'.
Generating RTLIL representation for module `\SB_RAM40_4KNRNW'.
Generating RTLIL representation for module `\ICESTORM_LC'.
Generating RTLIL representation for module `\SB_PLL40_CORE'.
Generating RTLIL representation for module `\SB_PLL40_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2F_CORE'.
Generating RTLIL representation for module `\SB_PLL40_2F_PAD'.
Generating RTLIL representation for module `\SB_WARMBOOT'.
Generating RTLIL representation for module `\SB_SPRAM256KA'.
Generating RTLIL representation for module `\SB_HFOSC'.
Generating RTLIL representation for module `\SB_LFOSC'.
Generating RTLIL representation for module `\SB_RGBA_DRV'.
Generating RTLIL representation for module `\SB_LED_DRV_CUR'.
Generating RTLIL representation for module `\SB_RGB_DRV'.
Generating RTLIL representation for module `\SB_I2C'.
Generating RTLIL representation for module `\SB_SPI'.
Generating RTLIL representation for module `\SB_LEDDA_IP'.
Generating RTLIL representation for module `\SB_FILTER_50NS'.
Generating RTLIL representation for module `\SB_IO_I3C'.
Generating RTLIL representation for module `\SB_IO_OD'.
Generating RTLIL representation for module `\SB_MAC16'.
Generating RTLIL representation for module `\ICESTORM_RAM'.
Successfully finished Verilog frontend.

52.2. Executing HIERARCHY pass (managing design hierarchy).

52.2.1. Analyzing design hierarchy..
Top module:  \mkeclass_axi4
Used module:     \mkSoc
Used module:         $paramod\FIFO2\width=32'00000000000000000000000000110100\guarded=1'1
Used module:         $paramod\FIFO2\width=32'00000000000000000000000000100111\guarded=1'1
Used module:         $paramod\FIFO2\width=32'00000000000000000000000000101001\guarded=1'1
Used module:         $paramod\FIFO2\width=32'00000000000000000000000000000110\guarded=1'1
Used module:         \mkeclass
Used module:             $paramod\FIFO2\width=32'00000000000000000000000000000001\guarded=1'1
Used module:             $paramod\FIFO2\width=32'00000000000000000000000000100010\guarded=1'1
Used module:             $paramod\FIFO2\width=32'00000000000000000000000001000110\guarded=1'1
Used module:             \module_fn_pmp_lookup
Used module:             \mkriscv
Used module:                 $paramod\FIFOL1\width=32'00000000000000000000000001000000
Used module:                 $paramod\FIFOL1\width=32'00000000000000000000000000100010
Used module:                 $paramod\FIFOL1\width=32'00000000000000000000000000111110
Used module:                 $paramod\FIFOL1\width=32'00000000000000000000000000100110
Used module:                 $paramod\FIFOL1\width=32'00000000000000000000000000110011
Used module:                 \mkstage1
Used module:                     $paramod\FIFO2\width=32'00000000000000000000000000100011\guarded=1'1
Used module:                     \module_chk_interrupt
Used module:                     \module_decoder_func_32
Used module:                         \module_address_valid
Used module:                     $paramod$56698b439944c97e9107048cd4226f712af1b2b1\RegFile
Used module:                 \mkstage2
Used module:                     \mkalu
Used module:                         \module_fn_alu
Used module:                     $paramod\FIFOL1\width=32'00000000000000000000000001000110
Used module:                 \mkstage3
Used module:                     \mkcsr
Used module:                         \mkcsrfile
Used module:                     $paramod\FIFOL1\width=32'00000000000000000000000001100111
Used module:         $paramod\FIFO10\guarded=1'1
Used module:         $paramod\FIFO1\width=32'00000000000000000000000000000010\guarded=1'1
Used module:         $paramod\FIFO1\width=32'00000000000000000000000000000011\guarded=1'1
Used module:         \mksign_dump_axi4
Used module:             $paramod$e03903fe67170b9c8463f29c6528d18b0078fcbe\SizedFIFO
Used module:         $paramod$44bf3f364de125c08c77a464bb47dd656ea26444\Counter
Used module:         $paramod\Counter\width=32'00000000000000000000000000000011\init=3'000
Used module:         $paramod$daadbc6d5d8d25265c1808e519c5f6fbd2f433d0\SizedFIFO

52.2.2. Analyzing design hierarchy..
Top module:  \mkeclass_axi4
Used module:     \mkSoc
Used module:         $paramod\FIFO2\width=32'00000000000000000000000000110100\guarded=1'1
Used module:         $paramod\FIFO2\width=32'00000000000000000000000000100111\guarded=1'1
Used module:         $paramod\FIFO2\width=32'00000000000000000000000000101001\guarded=1'1
Used module:         $paramod\FIFO2\width=32'00000000000000000000000000000110\guarded=1'1
Used module:         \mkeclass
Used module:             $paramod\FIFO2\width=32'00000000000000000000000000000001\guarded=1'1
Used module:             $paramod\FIFO2\width=32'00000000000000000000000000100010\guarded=1'1
Used module:             $paramod\FIFO2\width=32'00000000000000000000000001000110\guarded=1'1
Used module:             \module_fn_pmp_lookup
Used module:             \mkriscv
Used module:                 $paramod\FIFOL1\width=32'00000000000000000000000001000000
Used module:                 $paramod\FIFOL1\width=32'00000000000000000000000000100010
Used module:                 $paramod\FIFOL1\width=32'00000000000000000000000000111110
Used module:                 $paramod\FIFOL1\width=32'00000000000000000000000000100110
Used module:                 $paramod\FIFOL1\width=32'00000000000000000000000000110011
Used module:                 \mkstage1
Used module:                     $paramod\FIFO2\width=32'00000000000000000000000000100011\guarded=1'1
Used module:                     \module_chk_interrupt
Used module:                     \module_decoder_func_32
Used module:                         \module_address_valid
Used module:                     $paramod$56698b439944c97e9107048cd4226f712af1b2b1\RegFile
Used module:                 \mkstage2
Used module:                     \mkalu
Used module:                         \module_fn_alu
Used module:                     $paramod\FIFOL1\width=32'00000000000000000000000001000110
Used module:                 \mkstage3
Used module:                     \mkcsr
Used module:                         \mkcsrfile
Used module:                     $paramod\FIFOL1\width=32'00000000000000000000000001100111
Used module:         $paramod\FIFO10\guarded=1'1
Used module:         $paramod\FIFO1\width=32'00000000000000000000000000000010\guarded=1'1
Used module:         $paramod\FIFO1\width=32'00000000000000000000000000000011\guarded=1'1
Used module:         \mksign_dump_axi4
Used module:             $paramod$e03903fe67170b9c8463f29c6528d18b0078fcbe\SizedFIFO
Used module:         $paramod$44bf3f364de125c08c77a464bb47dd656ea26444\Counter
Used module:         $paramod\Counter\width=32'00000000000000000000000000000011\init=3'000
Used module:         $paramod$daadbc6d5d8d25265c1808e519c5f6fbd2f433d0\SizedFIFO
Removed 0 unused modules.

52.3. Executing PROC pass (convert processes to netlists).

52.3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

52.3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1414$5659 in module SB_DFFNES.
Marked 1 switch rules as full_case in process $proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1353$5652 in module SB_DFFNESS.
Marked 1 switch rules as full_case in process $proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1273$5648 in module SB_DFFNER.
Marked 1 switch rules as full_case in process $proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1212$5641 in module SB_DFFNESR.
Marked 1 switch rules as full_case in process $proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1138$5638 in module SB_DFFNS.
Marked 1 switch rules as full_case in process $proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1088$5635 in module SB_DFFNSS.
Marked 1 switch rules as full_case in process $proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1017$5632 in module SB_DFFNR.
Marked 1 switch rules as full_case in process $proc$/usr/bin/../share/yosys/ice40/cells_sim.v:967$5629 in module SB_DFFNSR.
Marked 1 switch rules as full_case in process $proc$/usr/bin/../share/yosys/ice40/cells_sim.v:803$5621 in module SB_DFFES.
Marked 1 switch rules as full_case in process $proc$/usr/bin/../share/yosys/ice40/cells_sim.v:742$5614 in module SB_DFFESS.
Marked 1 switch rules as full_case in process $proc$/usr/bin/../share/yosys/ice40/cells_sim.v:662$5610 in module SB_DFFER.
Marked 1 switch rules as full_case in process $proc$/usr/bin/../share/yosys/ice40/cells_sim.v:601$5603 in module SB_DFFESR.
Marked 1 switch rules as full_case in process $proc$/usr/bin/../share/yosys/ice40/cells_sim.v:527$5600 in module SB_DFFS.
Marked 1 switch rules as full_case in process $proc$/usr/bin/../share/yosys/ice40/cells_sim.v:477$5597 in module SB_DFFSS.
Marked 1 switch rules as full_case in process $proc$/usr/bin/../share/yosys/ice40/cells_sim.v:406$5594 in module SB_DFFR.
Marked 1 switch rules as full_case in process $proc$/usr/bin/../share/yosys/ice40/cells_sim.v:356$5591 in module SB_DFFSR.
Marked 2 switch rules as full_case in process $proc$Counter.v:54$5062 in module $paramod$44bf3f364de125c08c77a464bb47dd656ea26444\Counter.
Marked 1 switch rules as full_case in process $proc$RegFile.v:65$5361 in module $paramod$56698b439944c97e9107048cd4226f712af1b2b1\RegFile.
Marked 1 switch rules as full_case in process $proc$SizedFIFO.v:107$5031 in module $paramod$daadbc6d5d8d25265c1808e519c5f6fbd2f433d0\SizedFIFO.
Marked 1 switch rules as full_case in process $proc$SizedFIFO.v:190$5039 in module $paramod$daadbc6d5d8d25265c1808e519c5f6fbd2f433d0\SizedFIFO.
Marked 1 switch rules as full_case in process $proc$SizedFIFO.v:107$5311 in module $paramod$e03903fe67170b9c8463f29c6528d18b0078fcbe\SizedFIFO.
Marked 1 switch rules as full_case in process $proc$SizedFIFO.v:190$5319 in module $paramod$e03903fe67170b9c8463f29c6528d18b0078fcbe\SizedFIFO.
Marked 2 switch rules as full_case in process $proc$Counter.v:54$5055 in module $paramod\Counter\width=32'00000000000000000000000000000011\init=3'000.
Marked 3 switch rules as full_case in process $proc$FIFO10.v:61$5206 in module $paramod\FIFO10\guarded=1'1.
Marked 3 switch rules as full_case in process $proc$FIFO1.v:73$5202 in module $paramod\FIFO1\width=32'00000000000000000000000000000010\guarded=1'1.
Marked 3 switch rules as full_case in process $proc$FIFO1.v:73$5198 in module $paramod\FIFO1\width=32'00000000000000000000000000000011\guarded=1'1.
Marked 3 switch rules as full_case in process $proc$FIFO2.v:81$5257 in module $paramod\FIFO2\width=32'00000000000000000000000000000001\guarded=1'1.
Marked 3 switch rules as full_case in process $proc$FIFO2.v:81$5086 in module $paramod\FIFO2\width=32'00000000000000000000000000000110\guarded=1'1.
Marked 3 switch rules as full_case in process $proc$FIFO2.v:81$5289 in module $paramod\FIFO2\width=32'00000000000000000000000000100010\guarded=1'1.
Marked 3 switch rules as full_case in process $proc$FIFO2.v:81$5390 in module $paramod\FIFO2\width=32'00000000000000000000000000100011\guarded=1'1.
Marked 3 switch rules as full_case in process $proc$FIFO2.v:81$5182 in module $paramod\FIFO2\width=32'00000000000000000000000000100111\guarded=1'1.
Marked 3 switch rules as full_case in process $proc$FIFO2.v:81$5118 in module $paramod\FIFO2\width=32'00000000000000000000000000101001\guarded=1'1.
Marked 3 switch rules as full_case in process $proc$FIFO2.v:81$5150 in module $paramod\FIFO2\width=32'00000000000000000000000000110100\guarded=1'1.
Marked 3 switch rules as full_case in process $proc$FIFO2.v:81$5225 in module $paramod\FIFO2\width=32'00000000000000000000000001000110\guarded=1'1.
Marked 3 switch rules as full_case in process $proc$FIFOL1.v:74$5357 in module $paramod\FIFOL1\width=32'00000000000000000000000000100010.
Marked 3 switch rules as full_case in process $proc$FIFOL1.v:74$5347 in module $paramod\FIFOL1\width=32'00000000000000000000000000100110.
Marked 3 switch rules as full_case in process $proc$FIFOL1.v:74$5342 in module $paramod\FIFOL1\width=32'00000000000000000000000000110011.
Marked 3 switch rules as full_case in process $proc$FIFOL1.v:74$5352 in module $paramod\FIFOL1\width=32'00000000000000000000000000111110.
Marked 3 switch rules as full_case in process $proc$FIFOL1.v:74$5337 in module $paramod\FIFOL1\width=32'00000000000000000000000001000000.
Marked 3 switch rules as full_case in process $proc$FIFOL1.v:74$5407 in module $paramod\FIFOL1\width=32'00000000000000000000000001000110.
Marked 3 switch rules as full_case in process $proc$FIFOL1.v:74$5412 in module $paramod\FIFOL1\width=32'00000000000000000000000001100111.
Marked 1 switch rules as full_case in process $proc$mkSoc.v:10298$2776 in module mkSoc.
Removed 1 dead cases from process $proc$mkSoc.v:10306$2777 in module mkSoc.
Marked 1 switch rules as full_case in process $proc$mkSoc.v:10306$2777 in module mkSoc.
Marked 1 switch rules as full_case in process $proc$mkSoc.v:10315$2778 in module mkSoc.
Marked 1 switch rules as full_case in process $proc$mkSoc.v:10324$2779 in module mkSoc.
Marked 1 switch rules as full_case in process $proc$mkSoc.v:10332$2780 in module mkSoc.
Removed 1 dead cases from process $proc$mkSoc.v:10345$2781 in module mkSoc.
Marked 1 switch rules as full_case in process $proc$mkSoc.v:10345$2781 in module mkSoc.
Removed 1 dead cases from process $proc$mkSoc.v:10355$2782 in module mkSoc.
Marked 1 switch rules as full_case in process $proc$mkSoc.v:10355$2782 in module mkSoc.
Marked 1 switch rules as full_case in process $proc$mkSoc.v:10365$2783 in module mkSoc.
Marked 1 switch rules as full_case in process $proc$mkSoc.v:10373$2784 in module mkSoc.
Marked 1 switch rules as full_case in process $proc$mkSoc.v:10384$2785 in module mkSoc.
Marked 1 switch rules as full_case in process $proc$mkSoc.v:10532$2787 in module mkSoc.
Marked 1 switch rules as full_case in process $proc$mkSoc.v:6646$1559 in module mkSoc.
Marked 1 switch rules as full_case in process $proc$mkSoc.v:6892$1666 in module mkSoc.
Marked 1 switch rules as full_case in process $proc$mkSoc.v:6949$1676 in module mkSoc.
Marked 1 switch rules as full_case in process $proc$mkSoc.v:6983$1685 in module mkSoc.
Marked 1 switch rules as full_case in process $proc$mkSoc.v:7344$1732 in module mkSoc.
Marked 1 switch rules as full_case in process $proc$mkSoc.v:7368$1736 in module mkSoc.
Marked 1 switch rules as full_case in process $proc$mkSoc.v:7392$1740 in module mkSoc.
Marked 1 switch rules as full_case in process $proc$mkSoc.v:7416$1744 in module mkSoc.
Marked 1 switch rules as full_case in process $proc$mkSoc.v:7440$1748 in module mkSoc.
Marked 1 switch rules as full_case in process $proc$mkSoc.v:7464$1752 in module mkSoc.
Marked 1 switch rules as full_case in process $proc$mkSoc.v:7488$1756 in module mkSoc.
Marked 1 switch rules as full_case in process $proc$mkSoc.v:7534$1773 in module mkSoc.
Marked 1 switch rules as full_case in process $proc$mkSoc.v:7580$1790 in module mkSoc.
Marked 1 switch rules as full_case in process $proc$mkSoc.v:7641$1807 in module mkSoc.
Marked 1 switch rules as full_case in process $proc$mkSoc.v:7666$1812 in module mkSoc.
Marked 1 switch rules as full_case in process $proc$mkSoc.v:7691$1817 in module mkSoc.
Marked 1 switch rules as full_case in process $proc$mkSoc.v:7716$1822 in module mkSoc.
Marked 1 switch rules as full_case in process $proc$mkSoc.v:7741$1827 in module mkSoc.
Marked 1 switch rules as full_case in process $proc$mkSoc.v:7766$1832 in module mkSoc.
Marked 1 switch rules as full_case in process $proc$mkSoc.v:7791$1837 in module mkSoc.
Marked 1 switch rules as full_case in process $proc$mkSoc.v:7831$1848 in module mkSoc.
Marked 1 switch rules as full_case in process $proc$mkSoc.v:7871$1859 in module mkSoc.
Marked 1 switch rules as full_case in process $proc$mkSoc.v:7926$1870 in module mkSoc.
Marked 1 switch rules as full_case in process $proc$mkSoc.v:7954$1884 in module mkSoc.
Marked 1 switch rules as full_case in process $proc$mkSoc.v:7982$1898 in module mkSoc.
Marked 1 switch rules as full_case in process $proc$mkSoc.v:8010$1912 in module mkSoc.
Marked 1 switch rules as full_case in process $proc$mkSoc.v:8038$1926 in module mkSoc.
Marked 1 switch rules as full_case in process $proc$mkSoc.v:8066$1940 in module mkSoc.
Marked 1 switch rules as full_case in process $proc$mkSoc.v:8094$1954 in module mkSoc.
Marked 1 switch rules as full_case in process $proc$mkSoc.v:8130$1973 in module mkSoc.
Marked 1 switch rules as full_case in process $proc$mkSoc.v:8166$1992 in module mkSoc.
Marked 1 switch rules as full_case in process $proc$mkSoc.v:8222$2017 in module mkSoc.
Marked 1 switch rules as full_case in process $proc$mkSoc.v:8315$2042 in module mkSoc.
Marked 1 switch rules as full_case in process $proc$mkSoc.v:8384$2055 in module mkSoc.
Marked 1 switch rules as full_case in process $proc$mkSoc.v:8477$2080 in module mkSoc.
Marked 1 switch rules as full_case in process $proc$mkSoc.v:8546$2093 in module mkSoc.
Marked 1 switch rules as full_case in process $proc$mkSoc.v:8639$2118 in module mkSoc.
Marked 1 switch rules as full_case in process $proc$mkSoc.v:8688$2125 in module mkSoc.
Marked 1 switch rules as full_case in process $proc$mkSoc.v:8734$2132 in module mkSoc.
Marked 1 switch rules as full_case in process $proc$mkSoc.v:8765$2136 in module mkSoc.
Marked 1 switch rules as full_case in process $proc$mkSoc.v:8811$2146 in module mkSoc.
Marked 1 switch rules as full_case in process $proc$mkSoc.v:8857$2153 in module mkSoc.
Marked 1 switch rules as full_case in process $proc$mkSoc.v:8888$2157 in module mkSoc.
Marked 1 switch rules as full_case in process $proc$mkSoc.v:8934$2167 in module mkSoc.
Marked 1 switch rules as full_case in process $proc$mkSoc.v:8977$2174 in module mkSoc.
Marked 1 switch rules as full_case in process $proc$mkSoc.v:9008$2178 in module mkSoc.
Marked 1 switch rules as full_case in process $proc$mkSoc.v:9054$2188 in module mkSoc.
Marked 1 switch rules as full_case in process $proc$mkSoc.v:9097$2195 in module mkSoc.
Marked 1 switch rules as full_case in process $proc$mkSoc.v:9128$2199 in module mkSoc.
Marked 1 switch rules as full_case in process $proc$mkSoc.v:9174$2209 in module mkSoc.
Marked 1 switch rules as full_case in process $proc$mkSoc.v:9220$2216 in module mkSoc.
Marked 1 switch rules as full_case in process $proc$mkSoc.v:9251$2220 in module mkSoc.
Marked 1 switch rules as full_case in process $proc$mkSoc.v:9297$2230 in module mkSoc.
Marked 1 switch rules as full_case in process $proc$mkSoc.v:9340$2237 in module mkSoc.
Marked 1 switch rules as full_case in process $proc$mkSoc.v:9371$2241 in module mkSoc.
Marked 1 switch rules as full_case in process $proc$mkcsr.v:530$3128 in module mkcsr.
Marked 1 switch rules as full_case in process $proc$mkcsr.v:558$3140 in module mkcsr.
Marked 1 switch rules as full_case in process $proc$mkcsrfile.v:1287$3355 in module mkcsrfile.
Marked 1 switch rules as full_case in process $proc$mkcsrfile.v:1322$3371 in module mkcsrfile.
Marked 1 switch rules as full_case in process $proc$mkcsrfile.v:1340$3379 in module mkcsrfile.
Marked 1 switch rules as full_case in process $proc$mkcsrfile.v:1428$3414 in module mkcsrfile.
Marked 1 switch rules as full_case in process $proc$mkcsrfile.v:1464$3432 in module mkcsrfile.
Marked 1 switch rules as full_case in process $proc$mkcsrfile.v:1884$3609 in module mkcsrfile.
Marked 1 switch rules as full_case in process $proc$mkcsrfile.v:1894$3612 in module mkcsrfile.
Marked 1 switch rules as full_case in process $proc$mkcsrfile.v:1904$3615 in module mkcsrfile.
Marked 1 switch rules as full_case in process $proc$mkcsrfile.v:1914$3618 in module mkcsrfile.
Removed 1 dead cases from process $proc$mkcsrfile.v:1924$3621 in module mkcsrfile.
Marked 1 switch rules as full_case in process $proc$mkcsrfile.v:1924$3621 in module mkcsrfile.
Removed 1 dead cases from process $proc$mkcsrfile.v:1931$3622 in module mkcsrfile.
Marked 1 switch rules as full_case in process $proc$mkcsrfile.v:1931$3622 in module mkcsrfile.
Removed 1 dead cases from process $proc$mkcsrfile.v:1942$3623 in module mkcsrfile.
Marked 1 switch rules as full_case in process $proc$mkcsrfile.v:1942$3623 in module mkcsrfile.
Removed 1 dead cases from process $proc$mkcsrfile.v:1949$3624 in module mkcsrfile.
Marked 1 switch rules as full_case in process $proc$mkcsrfile.v:1949$3624 in module mkcsrfile.
Removed 1 dead cases from process $proc$mkcsrfile.v:1960$3625 in module mkcsrfile.
Marked 1 switch rules as full_case in process $proc$mkcsrfile.v:1960$3625 in module mkcsrfile.
Removed 1 dead cases from process $proc$mkcsrfile.v:1971$3626 in module mkcsrfile.
Marked 1 switch rules as full_case in process $proc$mkcsrfile.v:1971$3626 in module mkcsrfile.
Removed 1 dead cases from process $proc$mkcsrfile.v:1982$3627 in module mkcsrfile.
Marked 1 switch rules as full_case in process $proc$mkcsrfile.v:1982$3627 in module mkcsrfile.
Removed 1 dead cases from process $proc$mkcsrfile.v:1993$3628 in module mkcsrfile.
Marked 1 switch rules as full_case in process $proc$mkcsrfile.v:1993$3628 in module mkcsrfile.
Removed 1 dead cases from process $proc$mkcsrfile.v:2004$3629 in module mkcsrfile.
Marked 1 switch rules as full_case in process $proc$mkcsrfile.v:2004$3629 in module mkcsrfile.
Removed 1 dead cases from process $proc$mkcsrfile.v:2015$3630 in module mkcsrfile.
Marked 1 switch rules as full_case in process $proc$mkcsrfile.v:2015$3630 in module mkcsrfile.
Removed 1 dead cases from process $proc$mkcsrfile.v:2026$3631 in module mkcsrfile.
Marked 1 switch rules as full_case in process $proc$mkcsrfile.v:2026$3631 in module mkcsrfile.
Removed 1 dead cases from process $proc$mkcsrfile.v:2037$3632 in module mkcsrfile.
Marked 1 switch rules as full_case in process $proc$mkcsrfile.v:2037$3632 in module mkcsrfile.
Removed 1 dead cases from process $proc$mkcsrfile.v:2048$3633 in module mkcsrfile.
Marked 1 switch rules as full_case in process $proc$mkcsrfile.v:2048$3633 in module mkcsrfile.
Removed 1 dead cases from process $proc$mkcsrfile.v:2059$3634 in module mkcsrfile.
Marked 1 switch rules as full_case in process $proc$mkcsrfile.v:2059$3634 in module mkcsrfile.
Removed 1 dead cases from process $proc$mkcsrfile.v:2070$3635 in module mkcsrfile.
Marked 1 switch rules as full_case in process $proc$mkcsrfile.v:2070$3635 in module mkcsrfile.
Removed 1 dead cases from process $proc$mkcsrfile.v:2081$3636 in module mkcsrfile.
Marked 1 switch rules as full_case in process $proc$mkcsrfile.v:2081$3636 in module mkcsrfile.
Removed 1 dead cases from process $proc$mkcsrfile.v:2092$3639 in module mkcsrfile.
Marked 1 switch rules as full_case in process $proc$mkcsrfile.v:2092$3639 in module mkcsrfile.
Removed 1 dead cases from process $proc$mkcsrfile.v:2103$3640 in module mkcsrfile.
Marked 1 switch rules as full_case in process $proc$mkcsrfile.v:2103$3640 in module mkcsrfile.
Removed 1 dead cases from process $proc$mkcsrfile.v:2114$3643 in module mkcsrfile.
Marked 1 switch rules as full_case in process $proc$mkcsrfile.v:2114$3643 in module mkcsrfile.
Marked 1 switch rules as full_case in process $proc$mkcsrfile.v:2125$3646 in module mkcsrfile.
Marked 1 switch rules as full_case in process $proc$mkcsrfile.v:2136$3647 in module mkcsrfile.
Marked 1 switch rules as full_case in process $proc$mkcsrfile.v:821$3141 in module mkcsrfile.
Marked 1 switch rules as full_case in process $proc$mkeclass.v:1504$3725 in module mkeclass.
Marked 1 switch rules as full_case in process $proc$mkeclass.v:1512$3726 in module mkeclass.
Marked 1 switch rules as full_case in process $proc$mkeclass.v:1520$3727 in module mkeclass.
Marked 1 switch rules as full_case in process $proc$mkeclass.v:1547$3730 in module mkeclass.
Marked 1 switch rules as full_case in process $proc$mksign_dump_axi4.v:1061$3890 in module mksign_dump_axi4.
Marked 1 switch rules as full_case in process $proc$mksign_dump_axi4.v:1072$3891 in module mksign_dump_axi4.
Marked 1 switch rules as full_case in process $proc$mkstage1.v:1017$4039 in module mkstage1.
Marked 1 switch rules as full_case in process $proc$mkstage1.v:1049$4051 in module mkstage1.
Marked 1 switch rules as full_case in process $proc$mkstage1.v:790$3929 in module mkstage1.
Marked 1 switch rules as full_case in process $proc$mkstage1.v:966$4027 in module mkstage1.
Marked 1 switch rules as full_case in process $proc$mkstage1.v:982$4032 in module mkstage1.
Marked 1 switch rules as full_case in process $proc$mkstage1.v:999$4036 in module mkstage1.
Marked 1 switch rules as full_case in process $proc$mkstage2.v:1080$4075 in module mkstage2.
Removed 1 dead cases from process $proc$mkstage2.v:1158$4111 in module mkstage2.
Marked 1 switch rules as full_case in process $proc$mkstage2.v:1158$4111 in module mkstage2.
Removed 1 dead cases from process $proc$mkstage2.v:1167$4112 in module mkstage2.
Marked 1 switch rules as full_case in process $proc$mkstage2.v:1167$4112 in module mkstage2.
Removed 1 dead cases from process $proc$mkstage2.v:1197$4113 in module mkstage2.
Marked 1 switch rules as full_case in process $proc$mkstage2.v:1197$4113 in module mkstage2.
Marked 1 switch rules as full_case in process $proc$mkstage2.v:1210$4114 in module mkstage2.
Marked 1 switch rules as full_case in process $proc$mkstage3.v:1130$4267 in module mkstage3.
Marked 1 switch rules as full_case in process $proc$module_address_valid.v:100$4302 in module module_address_valid.
Marked 1 switch rules as full_case in process $proc$module_address_valid.v:121$4322 in module module_address_valid.
Removed 1 dead cases from process $proc$module_address_valid.v:137$4326 in module module_address_valid.
Marked 1 switch rules as full_case in process $proc$module_address_valid.v:137$4326 in module module_address_valid.
Marked 1 switch rules as full_case in process $proc$module_address_valid.v:71$4289 in module module_address_valid.
Marked 1 switch rules as full_case in process $proc$module_address_valid.v:84$4295 in module module_address_valid.
Marked 1 switch rules as full_case in process $proc$module_decoder_func_32.v:201$4455 in module module_decoder_func_32.
Marked 1 switch rules as full_case in process $proc$module_decoder_func_32.v:208$4456 in module module_decoder_func_32.
Marked 1 switch rules as full_case in process $proc$module_decoder_func_32.v:216$4457 in module module_decoder_func_32.
Marked 1 switch rules as full_case in process $proc$module_decoder_func_32.v:224$4458 in module module_decoder_func_32.
Marked 1 switch rules as full_case in process $proc$module_decoder_func_32.v:247$4482 in module module_decoder_func_32.
Marked 1 switch rules as full_case in process $proc$module_decoder_func_32.v:255$4483 in module module_decoder_func_32.
Marked 1 switch rules as full_case in process $proc$module_decoder_func_32.v:281$4497 in module module_decoder_func_32.
Marked 1 switch rules as full_case in process $proc$module_decoder_func_32.v:292$4502 in module module_decoder_func_32.
Marked 1 switch rules as full_case in process $proc$module_decoder_func_32.v:308$4506 in module module_decoder_func_32.
Removed 1 dead cases from process $proc$module_decoder_func_32.v:330$4513 in module module_decoder_func_32.
Marked 1 switch rules as full_case in process $proc$module_decoder_func_32.v:330$4513 in module module_decoder_func_32.
Marked 1 switch rules as full_case in process $proc$module_decoder_func_32.v:348$4514 in module module_decoder_func_32.
Marked 1 switch rules as full_case in process $proc$module_decoder_func_32.v:357$4515 in module module_decoder_func_32.
Marked 1 switch rules as full_case in process $proc$module_decoder_func_32.v:369$4516 in module module_decoder_func_32.
Marked 1 switch rules as full_case in process $proc$module_decoder_func_32.v:379$4517 in module module_decoder_func_32.
Marked 1 switch rules as full_case in process $proc$module_decoder_func_32.v:389$4518 in module module_decoder_func_32.
Marked 1 switch rules as full_case in process $proc$module_decoder_func_32.v:401$4519 in module module_decoder_func_32.
Marked 1 switch rules as full_case in process $proc$module_decoder_func_32.v:414$4521 in module module_decoder_func_32.
Marked 1 switch rules as full_case in process $proc$module_decoder_func_32.v:431$4523 in module module_decoder_func_32.
Marked 1 switch rules as full_case in process $proc$module_decoder_func_32.v:441$4524 in module module_decoder_func_32.
Marked 1 switch rules as full_case in process $proc$module_fn_alu.v:305$4698 in module module_fn_alu.
Marked 1 switch rules as full_case in process $proc$module_fn_alu.v:344$4699 in module module_fn_alu.
Marked 1 switch rules as full_case in process $proc$module_fn_alu.v:360$4704 in module module_fn_alu.
Marked 1 switch rules as full_case in process $proc$module_fn_alu.v:377$4708 in module module_fn_alu.
Marked 1 switch rules as full_case in process $proc$module_fn_alu.v:395$4711 in module module_fn_alu.
Marked 1 switch rules as full_case in process $proc$module_fn_alu.v:413$4714 in module module_fn_alu.
Marked 1 switch rules as full_case in process $proc$module_fn_alu.v:441$4725 in module module_fn_alu.
Marked 1 switch rules as full_case in process $proc$module_fn_alu.v:465$4728 in module module_fn_alu.
Marked 1 switch rules as full_case in process $proc$module_fn_pmp_lookup.v:475$4960 in module module_fn_pmp_lookup.
Marked 1 switch rules as full_case in process $proc$module_fn_pmp_lookup.v:483$4961 in module module_fn_pmp_lookup.
Marked 1 switch rules as full_case in process $proc$module_fn_pmp_lookup.v:504$4966 in module module_fn_pmp_lookup.
Marked 1 switch rules as full_case in process $proc$module_fn_pmp_lookup.v:527$4972 in module module_fn_pmp_lookup.
Marked 1 switch rules as full_case in process $proc$module_fn_pmp_lookup.v:550$4978 in module module_fn_pmp_lookup.
Marked 1 switch rules as full_case in process $proc$module_fn_pmp_lookup.v:571$4988 in module module_fn_pmp_lookup.
Marked 1 switch rules as full_case in process $proc$module_fn_pmp_lookup.v:594$5000 in module module_fn_pmp_lookup.
Marked 1 switch rules as full_case in process $proc$module_fn_pmp_lookup.v:617$5012 in module module_fn_pmp_lookup.
Removed a total of 27 dead cases.

52.3.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 10 redundant assignments.
Promoted 196 assignments to connections.

52.3.4. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\SB_DFFNES.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$5662'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNESS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$5658'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNER.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$5651'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNESR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$5647'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$5640'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNSS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$5637'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$5634'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNSR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$5631'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNE.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$5628'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFN.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$5626'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFES.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$5624'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFESS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$5620'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFER.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$5613'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFESR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$5609'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$5602'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFSS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$5599'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$5596'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFSR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$5593'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFE.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$5590'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFF.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$5588'.
  Set init value: \Q = 1'0

52.3.5. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \S in `\SB_DFFNES.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1414$5659'.
Found async reset \R in `\SB_DFFNER.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1273$5648'.
Found async reset \S in `\SB_DFFNS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1138$5638'.
Found async reset \R in `\SB_DFFNR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1017$5632'.
Found async reset \S in `\SB_DFFES.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:803$5621'.
Found async reset \R in `\SB_DFFER.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:662$5610'.
Found async reset \S in `\SB_DFFS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:527$5600'.
Found async reset \R in `\SB_DFFR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:406$5594'.
Found async reset \RST_N in `\mkSoc.$proc$mkSoc.v:10532$2787'.
Found async reset \RST_N in `\mkcsrfile.$proc$mkcsrfile.v:2136$3647'.
Found async reset \RST_N in `\mkeclass.$proc$mkeclass.v:1547$3730'.
Found async reset \RST_N in `\mksign_dump_axi4.$proc$mksign_dump_axi4.v:1072$3891'.
Found async reset \RST_N in `\mkstage1.$proc$mkstage1.v:1049$4051'.
Found async reset \RST_N in `\mkstage2.$proc$mkstage2.v:1210$4114'.
Found async reset \RST_N in `\mkstage3.$proc$mkstage3.v:1130$4267'.

52.3.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.
<suppressed ~407 debug messages>

52.3.7. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\SB_DFFNES.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$5662'.
Creating decoders for process `\SB_DFFNES.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1414$5659'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNESS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$5658'.
Creating decoders for process `\SB_DFFNESS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1353$5652'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNER.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$5651'.
Creating decoders for process `\SB_DFFNER.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1273$5648'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNESR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$5647'.
Creating decoders for process `\SB_DFFNESR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1212$5641'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$5640'.
Creating decoders for process `\SB_DFFNS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1138$5638'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNSS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$5637'.
Creating decoders for process `\SB_DFFNSS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1088$5635'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$5634'.
Creating decoders for process `\SB_DFFNR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1017$5632'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNSR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$5631'.
Creating decoders for process `\SB_DFFNSR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:967$5629'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNE.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$5628'.
Creating decoders for process `\SB_DFFNE.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:922$5627'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFN.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$5626'.
Creating decoders for process `\SB_DFFN.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:882$5625'.
Creating decoders for process `\SB_DFFES.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$5624'.
Creating decoders for process `\SB_DFFES.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:803$5621'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFESS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$5620'.
Creating decoders for process `\SB_DFFESS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:742$5614'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFER.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$5613'.
Creating decoders for process `\SB_DFFER.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:662$5610'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFESR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$5609'.
Creating decoders for process `\SB_DFFESR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:601$5603'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$5602'.
Creating decoders for process `\SB_DFFS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:527$5600'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFSS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$5599'.
Creating decoders for process `\SB_DFFSS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:477$5597'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$5596'.
Creating decoders for process `\SB_DFFR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:406$5594'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFSR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$5593'.
Creating decoders for process `\SB_DFFSR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:356$5591'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFE.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$5590'.
Creating decoders for process `\SB_DFFE.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:311$5589'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFF.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$5588'.
Creating decoders for process `\SB_DFF.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:271$5587'.
Creating decoders for process `$paramod$44bf3f364de125c08c77a464bb47dd656ea26444\Counter.$proc$Counter.v:54$5062'.
     1/1: $0\q_state[15:0]
Creating decoders for process `$paramod$56698b439944c97e9107048cd4226f712af1b2b1\RegFile.$proc$RegFile.v:65$5361'.
     1/3: $1$memwr$\arr$RegFile.v:68$5360_EN[31:0]$5367
     2/3: $1$memwr$\arr$RegFile.v:68$5360_DATA[31:0]$5366
     3/3: $1$memwr$\arr$RegFile.v:68$5360_ADDR[4:0]$5365
Creating decoders for process `$paramod$daadbc6d5d8d25265c1808e519c5f6fbd2f433d0\SizedFIFO.$proc$SizedFIFO.v:107$5031'.
     1/5: $0\hasodata[0:0]
     2/5: $0\tail[3:0]
     3/5: $0\head[3:0]
     4/5: $0\ring_empty[0:0]
     5/5: $0\not_ring_full[0:0]
Creating decoders for process `$paramod$daadbc6d5d8d25265c1808e519c5f6fbd2f433d0\SizedFIFO.$proc$SizedFIFO.v:167$5036'.
     1/1: $0\D_OUT[7:0]
Creating decoders for process `$paramod$daadbc6d5d8d25265c1808e519c5f6fbd2f433d0\SizedFIFO.$proc$SizedFIFO.v:190$5039'.
     1/3: $1$memwr$\arr$SizedFIFO.v:206$5024_EN[7:0]$5054
     2/3: $1$memwr$\arr$SizedFIFO.v:206$5024_DATA[7:0]$5053
     3/3: $1$memwr$\arr$SizedFIFO.v:206$5024_ADDR[3:0]$5052
Creating decoders for process `$paramod$e03903fe67170b9c8463f29c6528d18b0078fcbe\SizedFIFO.$proc$SizedFIFO.v:107$5311'.
     1/5: $0\hasodata[0:0]
     2/5: $0\tail[2:0]
     3/5: $0\head[2:0]
     4/5: $0\ring_empty[0:0]
     5/5: $0\not_ring_full[0:0]
Creating decoders for process `$paramod$e03903fe67170b9c8463f29c6528d18b0078fcbe\SizedFIFO.$proc$SizedFIFO.v:167$5316'.
     1/1: $0\D_OUT[1:0]
Creating decoders for process `$paramod$e03903fe67170b9c8463f29c6528d18b0078fcbe\SizedFIFO.$proc$SizedFIFO.v:190$5319'.
     1/3: $1$memwr$\arr$SizedFIFO.v:206$5304_EN[1:0]$5334
     2/3: $1$memwr$\arr$SizedFIFO.v:206$5304_DATA[1:0]$5333
     3/3: $1$memwr$\arr$SizedFIFO.v:206$5304_ADDR[2:0]$5332
Creating decoders for process `$paramod\Counter\width=32'00000000000000000000000000000011\init=3'000.$proc$Counter.v:54$5055'.
     1/1: $0\q_state[2:0]
Creating decoders for process `$paramod\FIFO10\guarded=1'1.$proc$FIFO10.v:61$5206'.
     1/1: $0\empty_reg[0:0]
Creating decoders for process `$paramod\FIFO1\width=32'00000000000000000000000000000010\guarded=1'1.$proc$FIFO1.v:73$5202'.
     1/1: $0\empty_reg[0:0]
Creating decoders for process `$paramod\FIFO1\width=32'00000000000000000000000000000010\guarded=1'1.$proc$FIFO1.v:96$5204'.
     1/1: $0\D_OUT[1:0]
Creating decoders for process `$paramod\FIFO1\width=32'00000000000000000000000000000011\guarded=1'1.$proc$FIFO1.v:73$5198'.
     1/1: $0\empty_reg[0:0]
Creating decoders for process `$paramod\FIFO1\width=32'00000000000000000000000000000011\guarded=1'1.$proc$FIFO1.v:96$5200'.
     1/1: $0\D_OUT[2:0]
Creating decoders for process `$paramod\FIFO2\width=32'00000000000000000000000000000001\guarded=1'1.$proc$FIFO2.v:110$5265'.
Creating decoders for process `$paramod\FIFO2\width=32'00000000000000000000000000000001\guarded=1'1.$proc$FIFO2.v:81$5257'.
     1/2: $0\full_reg[0:0]
     2/2: $0\empty_reg[0:0]
Creating decoders for process `$paramod\FIFO2\width=32'00000000000000000000000000000110\guarded=1'1.$proc$FIFO2.v:110$5094'.
Creating decoders for process `$paramod\FIFO2\width=32'00000000000000000000000000000110\guarded=1'1.$proc$FIFO2.v:81$5086'.
     1/2: $0\full_reg[0:0]
     2/2: $0\empty_reg[0:0]
Creating decoders for process `$paramod\FIFO2\width=32'00000000000000000000000000100010\guarded=1'1.$proc$FIFO2.v:110$5297'.
Creating decoders for process `$paramod\FIFO2\width=32'00000000000000000000000000100010\guarded=1'1.$proc$FIFO2.v:81$5289'.
     1/2: $0\full_reg[0:0]
     2/2: $0\empty_reg[0:0]
Creating decoders for process `$paramod\FIFO2\width=32'00000000000000000000000000100011\guarded=1'1.$proc$FIFO2.v:110$5398'.
Creating decoders for process `$paramod\FIFO2\width=32'00000000000000000000000000100011\guarded=1'1.$proc$FIFO2.v:81$5390'.
     1/2: $0\full_reg[0:0]
     2/2: $0\empty_reg[0:0]
Creating decoders for process `$paramod\FIFO2\width=32'00000000000000000000000000100111\guarded=1'1.$proc$FIFO2.v:110$5190'.
Creating decoders for process `$paramod\FIFO2\width=32'00000000000000000000000000100111\guarded=1'1.$proc$FIFO2.v:81$5182'.
     1/2: $0\full_reg[0:0]
     2/2: $0\empty_reg[0:0]
Creating decoders for process `$paramod\FIFO2\width=32'00000000000000000000000000101001\guarded=1'1.$proc$FIFO2.v:110$5126'.
Creating decoders for process `$paramod\FIFO2\width=32'00000000000000000000000000101001\guarded=1'1.$proc$FIFO2.v:81$5118'.
     1/2: $0\full_reg[0:0]
     2/2: $0\empty_reg[0:0]
Creating decoders for process `$paramod\FIFO2\width=32'00000000000000000000000000110100\guarded=1'1.$proc$FIFO2.v:110$5158'.
Creating decoders for process `$paramod\FIFO2\width=32'00000000000000000000000000110100\guarded=1'1.$proc$FIFO2.v:81$5150'.
     1/2: $0\full_reg[0:0]
     2/2: $0\empty_reg[0:0]
Creating decoders for process `$paramod\FIFO2\width=32'00000000000000000000000001000110\guarded=1'1.$proc$FIFO2.v:110$5233'.
Creating decoders for process `$paramod\FIFO2\width=32'00000000000000000000000001000110\guarded=1'1.$proc$FIFO2.v:81$5225'.
     1/2: $0\full_reg[0:0]
     2/2: $0\empty_reg[0:0]
Creating decoders for process `$paramod\FIFOL1\width=32'00000000000000000000000000100010.$proc$FIFOL1.v:74$5357'.
     1/1: $0\empty_reg[0:0]
Creating decoders for process `$paramod\FIFOL1\width=32'00000000000000000000000000100010.$proc$FIFOL1.v:97$5359'.
     1/1: $0\D_OUT[33:0]
Creating decoders for process `$paramod\FIFOL1\width=32'00000000000000000000000000100110.$proc$FIFOL1.v:74$5347'.
     1/1: $0\empty_reg[0:0]
Creating decoders for process `$paramod\FIFOL1\width=32'00000000000000000000000000100110.$proc$FIFOL1.v:97$5349'.
     1/1: $0\D_OUT[37:0]
Creating decoders for process `$paramod\FIFOL1\width=32'00000000000000000000000000110011.$proc$FIFOL1.v:74$5342'.
     1/1: $0\empty_reg[0:0]
Creating decoders for process `$paramod\FIFOL1\width=32'00000000000000000000000000110011.$proc$FIFOL1.v:97$5344'.
     1/1: $0\D_OUT[50:0]
Creating decoders for process `$paramod\FIFOL1\width=32'00000000000000000000000000111110.$proc$FIFOL1.v:74$5352'.
     1/1: $0\empty_reg[0:0]
Creating decoders for process `$paramod\FIFOL1\width=32'00000000000000000000000000111110.$proc$FIFOL1.v:97$5354'.
     1/1: $0\D_OUT[61:0]
Creating decoders for process `$paramod\FIFOL1\width=32'00000000000000000000000001000000.$proc$FIFOL1.v:74$5337'.
     1/1: $0\empty_reg[0:0]
Creating decoders for process `$paramod\FIFOL1\width=32'00000000000000000000000001000000.$proc$FIFOL1.v:97$5339'.
     1/1: $0\D_OUT[63:0]
Creating decoders for process `$paramod\FIFOL1\width=32'00000000000000000000000001000110.$proc$FIFOL1.v:74$5407'.
     1/1: $0\empty_reg[0:0]
Creating decoders for process `$paramod\FIFOL1\width=32'00000000000000000000000001000110.$proc$FIFOL1.v:97$5409'.
     1/1: $0\D_OUT[69:0]
Creating decoders for process `$paramod\FIFOL1\width=32'00000000000000000000000001100111.$proc$FIFOL1.v:74$5412'.
     1/1: $0\empty_reg[0:0]
Creating decoders for process `$paramod\FIFOL1\width=32'00000000000000000000000001100111.$proc$FIFOL1.v:97$5414'.
     1/1: $0\D_OUT[102:0]
Creating decoders for process `\mkSoc.$proc$mkSoc.v:10298$2776'.
     1/1: $1\data__h97341[31:0]
Creating decoders for process `\mkSoc.$proc$mkSoc.v:10306$2777'.
     1/1: $1\mask__h97340[63:0]
Creating decoders for process `\mkSoc.$proc$mkSoc.v:10315$2778'.
     1/1: $1\rdata__h71720[31:0]
Creating decoders for process `\mkSoc.$proc$mkSoc.v:10324$2779'.
     1/1: $1\rdata__h73449[31:0]
Creating decoders for process `\mkSoc.$proc$mkSoc.v:10332$2780'.
     1/1: $1\CASE_clint_s_xactor_f_wr_addrD_OUT_BITS_7_TO__ETC__q1[63:0]
Creating decoders for process `\mkSoc.$proc$mkSoc.v:10345$2781'.
     1/1: $1\x__h77543[63:0]
Creating decoders for process `\mkSoc.$proc$mkSoc.v:10355$2782'.
     1/1: $1\x__h87353[63:0]
Creating decoders for process `\mkSoc.$proc$mkSoc.v:10365$2783'.
     1/1: $1\CASE_uart_s_xactor_f_rd_addrD_OUT_BITS_23_TO__ETC__q2[1:0]
Creating decoders for process `\mkSoc.$proc$mkSoc.v:10373$2784'.
     1/1: $1\CASE_uart_s_xactor_f_wr_addrD_OUT_BITS_23_TO__ETC__q3[1:0]
Creating decoders for process `\mkSoc.$proc$mkSoc.v:10384$2785'.
     1/39: $0\uart_user_ifc_uart_vrXmitBuffer_7[0:0]
     2/39: $0\uart_user_ifc_uart_vrXmitBuffer_6[0:0]
     3/39: $0\uart_user_ifc_uart_vrXmitBuffer_5[0:0]
     4/39: $0\uart_user_ifc_uart_vrXmitBuffer_4[0:0]
     5/39: $0\uart_user_ifc_uart_vrXmitBuffer_3[0:0]
     6/39: $0\uart_user_ifc_uart_vrXmitBuffer_2[0:0]
     7/39: $0\uart_user_ifc_uart_vrXmitBuffer_1[0:0]
     8/39: $0\uart_user_ifc_uart_vrXmitBuffer_0[0:0]
     9/39: $0\uart_user_ifc_uart_vrRecvBuffer_7[0:0]
    10/39: $0\uart_user_ifc_uart_vrRecvBuffer_6[0:0]
    11/39: $0\uart_user_ifc_uart_vrRecvBuffer_5[0:0]
    12/39: $0\uart_user_ifc_uart_vrRecvBuffer_4[0:0]
    13/39: $0\uart_user_ifc_uart_vrRecvBuffer_3[0:0]
    14/39: $0\uart_user_ifc_uart_vrRecvBuffer_2[0:0]
    15/39: $0\uart_user_ifc_uart_vrRecvBuffer_1[0:0]
    16/39: $0\uart_user_ifc_uart_vrRecvBuffer_0[0:0]
    17/39: $0\uart_user_ifc_uart_rRecvData[0:0]
    18/39: $0\uart_user_ifc_uart_fifoXmit_countReg[4:0]
    19/39: $0\uart_user_ifc_uart_fifoRecv_countReg[4:0]
    20/39: $0\uart_user_ifc_baud_value[15:0]
    21/39: $0\uart_rg_wrpacket[51:0]
    22/39: $0\uart_rg_wrburst_count[7:0]
    23/39: $0\uart_rg_rdpacket[51:0]
    24/39: $0\uart_rg_rdburst_count[7:0]
    25/39: $0\err_slave_write_state[0:0]
    26/39: $0\err_slave_rg_write_response[5:0]
    27/39: $0\err_slave_rg_readburst_counter[7:0]
    28/39: $0\err_slave_rg_read_length[7:0]
    29/39: $0\err_slave_rg_rd_id[3:0]
    30/39: $0\err_slave_read_state[0:0]
    31/39: $0\clint_rg_wrpacket[51:0]
    32/39: $0\clint_rg_wrburst_count[7:0]
    33/39: $0\clint_rg_rdpacket[51:0]
    34/39: $0\clint_rg_rdburst_count[7:0]
    35/39: $0\clint_clint_rgmtimecmp[63:0]
    36/39: $0\clint_clint_rgmtime[63:0]
    37/39: $0\clint_clint_rg_tick[3:0]
    38/39: $0\clint_clint_mtip[0:0]
    39/39: $0\clint_clint_msip[0:0]
Creating decoders for process `\mkSoc.$proc$mkSoc.v:10532$2787'.
     1/9: $0\uart_user_ifc_uart_rXmitState[2:0]
     2/9: $0\uart_user_ifc_uart_rXmitParity[0:0]
     3/9: $0\uart_user_ifc_uart_rXmitDataOut[0:0]
     4/9: $0\uart_user_ifc_uart_rXmitCellCount[3:0]
     5/9: $0\uart_user_ifc_uart_rXmitBitCount[3:0]
     6/9: $0\uart_user_ifc_uart_rRecvState[2:0]
     7/9: $0\uart_user_ifc_uart_rRecvParity[0:0]
     8/9: $0\uart_user_ifc_uart_rRecvCellCount[3:0]
     9/9: $0\uart_user_ifc_uart_rRecvBitCount[3:0]
Creating decoders for process `\mkSoc.$proc$mkSoc.v:6646$1559'.
     1/1: $1\MUX_uart_user_ifc_uart_rRecvState_write_1__VAL_3[2:0]
Creating decoders for process `\mkSoc.$proc$mkSoc.v:6892$1666'.
     1/1: $1\uart_user_ifc_uart_rRecvState_D_IN[2:0]
Creating decoders for process `\mkSoc.$proc$mkSoc.v:6949$1676'.
     1/1: $1\uart_user_ifc_uart_rXmitDataOut_D_IN[0:0]
Creating decoders for process `\mkSoc.$proc$mkSoc.v:6983$1685'.
     1/1: $1\uart_user_ifc_uart_rXmitState_D_IN[2:0]
Creating decoders for process `\mkSoc.$proc$mkSoc.v:7344$1732'.
     1/1: $1\fabric_v_f_rd_mis_0_D_IN[1:0]
Creating decoders for process `\mkSoc.$proc$mkSoc.v:7368$1736'.
     1/1: $1\fabric_v_f_rd_mis_1_D_IN[1:0]
Creating decoders for process `\mkSoc.$proc$mkSoc.v:7392$1740'.
     1/1: $1\fabric_v_f_rd_mis_2_D_IN[1:0]
Creating decoders for process `\mkSoc.$proc$mkSoc.v:7416$1744'.
     1/1: $1\fabric_v_f_rd_mis_3_D_IN[1:0]
Creating decoders for process `\mkSoc.$proc$mkSoc.v:7440$1748'.
     1/1: $1\fabric_v_f_rd_mis_4_D_IN[1:0]
Creating decoders for process `\mkSoc.$proc$mkSoc.v:7464$1752'.
     1/1: $1\fabric_v_f_rd_mis_5_D_IN[1:0]
Creating decoders for process `\mkSoc.$proc$mkSoc.v:7488$1756'.
     1/1: $1\fabric_v_f_rd_sjs_0_D_IN[2:0]
Creating decoders for process `\mkSoc.$proc$mkSoc.v:7534$1773'.
     1/1: $1\fabric_v_f_rd_sjs_1_D_IN[2:0]
Creating decoders for process `\mkSoc.$proc$mkSoc.v:7580$1790'.
     1/1: $1\fabric_v_f_rd_sjs_2_D_IN[2:0]
Creating decoders for process `\mkSoc.$proc$mkSoc.v:7641$1807'.
     1/1: $1\fabric_v_f_wr_mis_0_D_IN[1:0]
Creating decoders for process `\mkSoc.$proc$mkSoc.v:7666$1812'.
     1/1: $1\fabric_v_f_wr_mis_1_D_IN[1:0]
Creating decoders for process `\mkSoc.$proc$mkSoc.v:7691$1817'.
     1/1: $1\fabric_v_f_wr_mis_2_D_IN[1:0]
Creating decoders for process `\mkSoc.$proc$mkSoc.v:7716$1822'.
     1/1: $1\fabric_v_f_wr_mis_3_D_IN[1:0]
Creating decoders for process `\mkSoc.$proc$mkSoc.v:7741$1827'.
     1/1: $1\fabric_v_f_wr_mis_4_D_IN[1:0]
Creating decoders for process `\mkSoc.$proc$mkSoc.v:7766$1832'.
     1/1: $1\fabric_v_f_wr_mis_5_D_IN[1:0]
Creating decoders for process `\mkSoc.$proc$mkSoc.v:7791$1837'.
     1/1: $1\fabric_v_f_wr_sjs_0_D_IN[2:0]
Creating decoders for process `\mkSoc.$proc$mkSoc.v:7831$1848'.
     1/1: $1\fabric_v_f_wr_sjs_1_D_IN[2:0]
Creating decoders for process `\mkSoc.$proc$mkSoc.v:7871$1859'.
     1/1: $1\fabric_v_f_wr_sjs_2_D_IN[2:0]
Creating decoders for process `\mkSoc.$proc$mkSoc.v:7926$1870'.
     1/1: $1\fabric_v_f_wrd_mis_0_D_IN[1:0]
Creating decoders for process `\mkSoc.$proc$mkSoc.v:7954$1884'.
     1/1: $1\fabric_v_f_wrd_mis_1_D_IN[1:0]
Creating decoders for process `\mkSoc.$proc$mkSoc.v:7982$1898'.
     1/1: $1\fabric_v_f_wrd_mis_2_D_IN[1:0]
Creating decoders for process `\mkSoc.$proc$mkSoc.v:8010$1912'.
     1/1: $1\fabric_v_f_wrd_mis_3_D_IN[1:0]
Creating decoders for process `\mkSoc.$proc$mkSoc.v:8038$1926'.
     1/1: $1\fabric_v_f_wrd_mis_4_D_IN[1:0]
Creating decoders for process `\mkSoc.$proc$mkSoc.v:8066$1940'.
     1/1: $1\fabric_v_f_wrd_mis_5_D_IN[1:0]
Creating decoders for process `\mkSoc.$proc$mkSoc.v:8094$1954'.
     1/1: $1\fabric_v_f_wrd_sjs_0_D_IN[2:0]
Creating decoders for process `\mkSoc.$proc$mkSoc.v:8130$1973'.
     1/1: $1\fabric_v_f_wrd_sjs_1_D_IN[2:0]
Creating decoders for process `\mkSoc.$proc$mkSoc.v:8166$1992'.
     1/1: $1\fabric_v_f_wrd_sjs_2_D_IN[2:0]
Creating decoders for process `\mkSoc.$proc$mkSoc.v:8222$2017'.
     1/1: $1\fabric_xactors_from_masters_0_f_rd_data_D_IN[38:0]
Creating decoders for process `\mkSoc.$proc$mkSoc.v:8315$2042'.
     1/1: $1\fabric_xactors_from_masters_0_f_wr_resp_D_IN[5:0]
Creating decoders for process `\mkSoc.$proc$mkSoc.v:8384$2055'.
     1/1: $1\fabric_xactors_from_masters_1_f_rd_data_D_IN[38:0]
Creating decoders for process `\mkSoc.$proc$mkSoc.v:8477$2080'.
     1/1: $1\fabric_xactors_from_masters_1_f_wr_resp_D_IN[5:0]
Creating decoders for process `\mkSoc.$proc$mkSoc.v:8546$2093'.
     1/1: $1\fabric_xactors_from_masters_2_f_rd_data_D_IN[38:0]
Creating decoders for process `\mkSoc.$proc$mkSoc.v:8639$2118'.
     1/1: $1\fabric_xactors_from_masters_2_f_wr_resp_D_IN[5:0]
Creating decoders for process `\mkSoc.$proc$mkSoc.v:8688$2125'.
     1/1: $1\fabric_xactors_to_slaves_0_f_rd_addr_D_IN[51:0]
Creating decoders for process `\mkSoc.$proc$mkSoc.v:8734$2132'.
     1/1: $1\fabric_xactors_to_slaves_0_f_wr_addr_D_IN[51:0]
Creating decoders for process `\mkSoc.$proc$mkSoc.v:8765$2136'.
     1/1: $1\fabric_xactors_to_slaves_0_f_wr_data_D_IN[40:0]
Creating decoders for process `\mkSoc.$proc$mkSoc.v:8811$2146'.
     1/1: $1\fabric_xactors_to_slaves_1_f_rd_addr_D_IN[51:0]
Creating decoders for process `\mkSoc.$proc$mkSoc.v:8857$2153'.
     1/1: $1\fabric_xactors_to_slaves_1_f_wr_addr_D_IN[51:0]
Creating decoders for process `\mkSoc.$proc$mkSoc.v:8888$2157'.
     1/1: $1\fabric_xactors_to_slaves_1_f_wr_data_D_IN[40:0]
Creating decoders for process `\mkSoc.$proc$mkSoc.v:8934$2167'.
     1/1: $1\fabric_xactors_to_slaves_2_f_rd_addr_D_IN[51:0]
Creating decoders for process `\mkSoc.$proc$mkSoc.v:8977$2174'.
     1/1: $1\fabric_xactors_to_slaves_2_f_wr_addr_D_IN[51:0]
Creating decoders for process `\mkSoc.$proc$mkSoc.v:9008$2178'.
     1/1: $1\fabric_xactors_to_slaves_2_f_wr_data_D_IN[40:0]
Creating decoders for process `\mkSoc.$proc$mkSoc.v:9054$2188'.
     1/1: $1\fabric_xactors_to_slaves_3_f_rd_addr_D_IN[51:0]
Creating decoders for process `\mkSoc.$proc$mkSoc.v:9097$2195'.
     1/1: $1\fabric_xactors_to_slaves_3_f_wr_addr_D_IN[51:0]
Creating decoders for process `\mkSoc.$proc$mkSoc.v:9128$2199'.
     1/1: $1\fabric_xactors_to_slaves_3_f_wr_data_D_IN[40:0]
Creating decoders for process `\mkSoc.$proc$mkSoc.v:9174$2209'.
     1/1: $1\fabric_xactors_to_slaves_4_f_rd_addr_D_IN[51:0]
Creating decoders for process `\mkSoc.$proc$mkSoc.v:9220$2216'.
     1/1: $1\fabric_xactors_to_slaves_4_f_wr_addr_D_IN[51:0]
Creating decoders for process `\mkSoc.$proc$mkSoc.v:9251$2220'.
     1/1: $1\fabric_xactors_to_slaves_4_f_wr_data_D_IN[40:0]
Creating decoders for process `\mkSoc.$proc$mkSoc.v:9297$2230'.
     1/1: $1\fabric_xactors_to_slaves_5_f_rd_addr_D_IN[51:0]
Creating decoders for process `\mkSoc.$proc$mkSoc.v:9340$2237'.
     1/1: $1\fabric_xactors_to_slaves_5_f_wr_addr_D_IN[51:0]
Creating decoders for process `\mkSoc.$proc$mkSoc.v:9371$2241'.
     1/1: $1\fabric_xactors_to_slaves_5_f_wr_data_D_IN[40:0]
Creating decoders for process `\mkcsr.$proc$mkcsr.v:530$3128'.
     1/1: $1\csrfile_write_csr_word[31:0]
Creating decoders for process `\mkcsr.$proc$mkcsr.v:558$3140'.
     1/1: $1\y_avValue_snd_fst__h958[31:0]
Creating decoders for process `\mkcsrfile.$proc$mkcsrfile.v:1287$3355'.
     1/1: $1\rg_mie_D_IN[0:0]
Creating decoders for process `\mkcsrfile.$proc$mkcsrfile.v:1322$3371'.
     1/1: $1\rg_mpie_D_IN[0:0]
Creating decoders for process `\mkcsrfile.$proc$mkcsrfile.v:1340$3379'.
     1/1: $1\rg_mpp_D_IN[1:0]
Creating decoders for process `\mkcsrfile.$proc$mkcsrfile.v:1428$3414'.
     1/1: $1\rg_uie_D_IN[0:0]
Creating decoders for process `\mkcsrfile.$proc$mkcsrfile.v:1464$3432'.
     1/1: $1\rg_upie_D_IN[0:0]
Creating decoders for process `\mkcsrfile.$proc$mkcsrfile.v:1884$3609'.
     1/1: $1\CASE_v_trig_tdata1_1_BITS_19_TO_18_1_v_trig_td_ETC__q1[0:0]
Creating decoders for process `\mkcsrfile.$proc$mkcsrfile.v:1894$3612'.
     1/1: $1\CASE_v_trig_tdata1_1_BITS_19_TO_18_1_v_trig_td_ETC__q2[0:0]
Creating decoders for process `\mkcsrfile.$proc$mkcsrfile.v:1904$3615'.
     1/1: $1\CASE_v_trig_tdata1_0_BITS_19_TO_18_1_v_trig_td_ETC__q3[0:0]
Creating decoders for process `\mkcsrfile.$proc$mkcsrfile.v:1914$3618'.
     1/1: $1\CASE_v_trig_tdata1_0_BITS_19_TO_18_1_v_trig_td_ETC__q4[0:0]
Creating decoders for process `\mkcsrfile.$proc$mkcsrfile.v:1924$3621'.
     1/1: $1\data___1__h4123[31:0]
Creating decoders for process `\mkcsrfile.$proc$mkcsrfile.v:1931$3622'.
     1/1: $1\CASE_trigger_index_0_v_trig_tdata3_0_1_v_trig__ETC__q5[0:0]
Creating decoders for process `\mkcsrfile.$proc$mkcsrfile.v:1942$3623'.
     1/1: $1\data___1__h4321[31:0]
Creating decoders for process `\mkcsrfile.$proc$mkcsrfile.v:1949$3624'.
     1/1: $1\CASE_trigger_index_0_v_trig_tdata1_0_BIT_15_1__ETC__q8[0:0]
Creating decoders for process `\mkcsrfile.$proc$mkcsrfile.v:1960$3625'.
     1/1: $1\CASE_trigger_index_0_v_trig_tdata1_0_BIT_16_1__ETC__q9[0:0]
Creating decoders for process `\mkcsrfile.$proc$mkcsrfile.v:1971$3626'.
     1/1: $1\CASE_trigger_index_0_v_trig_tdata1_0_BIT_17_1__ETC__q10[0:0]
Creating decoders for process `\mkcsrfile.$proc$mkcsrfile.v:1982$3627'.
     1/1: $1\CASE_trigger_index_0_v_trig_tdata1_0_BITS_12_T_ETC__q11[3:0]
Creating decoders for process `\mkcsrfile.$proc$mkcsrfile.v:1993$3628'.
     1/1: $1\CASE_trigger_index_0_v_trig_tdata1_0_BIT_13_1__ETC__q12[0:0]
Creating decoders for process `\mkcsrfile.$proc$mkcsrfile.v:2004$3629'.
     1/1: $1\CASE_trigger_index_0_v_trig_tdata1_0_BIT_14_1__ETC__q13[0:0]
Creating decoders for process `\mkcsrfile.$proc$mkcsrfile.v:2015$3630'.
     1/1: $1\CASE_trigger_index_0_v_trig_tdata1_0_BITS_7_TO_ETC__q14[3:0]
Creating decoders for process `\mkcsrfile.$proc$mkcsrfile.v:2026$3631'.
     1/1: $1\CASE_trigger_index_0_v_trig_tdata1_0_BIT_8_1_v_ETC__q15[0:0]
Creating decoders for process `\mkcsrfile.$proc$mkcsrfile.v:2037$3632'.
     1/1: $1\CASE_trigger_index_0_v_trig_tdata1_0_BIT_1_1_v_ETC__q16[0:0]
Creating decoders for process `\mkcsrfile.$proc$mkcsrfile.v:2048$3633'.
     1/1: $1\CASE_trigger_index_0_v_trig_tdata1_0_BITS_3_TO_ETC__q17[1:0]
Creating decoders for process `\mkcsrfile.$proc$mkcsrfile.v:2059$3634'.
     1/1: $1\CASE_trigger_index_0_v_trig_tdata1_0_BIT_2_1_v_ETC__q18[0:0]
Creating decoders for process `\mkcsrfile.$proc$mkcsrfile.v:2070$3635'.
     1/1: $1\CASE_trigger_index_0_v_trig_tdata1_0_BITS_8_TO_ETC__q19[5:0]
Creating decoders for process `\mkcsrfile.$proc$mkcsrfile.v:2081$3636'.
     1/1: $1\CASE_trigger_index_0_v_trig_tdata1_0_BITS_19_T_ETC__q20[0:0]
Creating decoders for process `\mkcsrfile.$proc$mkcsrfile.v:2092$3639'.
     1/1: $1\CASE_trigger_index_0_v_trig_tdata1_0_BIT_0_1_v_ETC__q21[0:0]
Creating decoders for process `\mkcsrfile.$proc$mkcsrfile.v:2103$3640'.
     1/1: $1\CASE_trigger_index_0_v_trig_tdata1_0_BITS_19_T_ETC__q22[0:0]
Creating decoders for process `\mkcsrfile.$proc$mkcsrfile.v:2114$3643'.
     1/1: $1\CASE_trigger_index_0_v_trig_tdata1_0_BITS_19_T_ETC__q23[0:0]
Creating decoders for process `\mkcsrfile.$proc$mkcsrfile.v:2125$3646'.
     1/1: $1\CASE_write_csr_word_BITS_31_TO_28_4_1_5_2_3__q24[1:0]
Creating decoders for process `\mkcsrfile.$proc$mkcsrfile.v:2136$3647'.
     1/69: $0\v_trig_tdata3_1[0:0]
     2/69: $0\v_trig_tdata3_0[0:0]
     3/69: $0\v_trig_tdata2_1[31:0]
     4/69: $0\v_trig_tdata2_0[31:0]
     5/69: $0\v_trig_tdata1_1[19:0]
     6/69: $0\v_trig_tdata1_0[19:0]
     7/69: $0\v_tinfo_1[31:0]
     8/69: $0\v_tinfo_0[31:0]
     9/69: $0\v_pmp_cfg_3[7:0]
    10/69: $0\v_pmp_cfg_2[7:0]
    11/69: $0\v_pmp_cfg_1[7:0]
    12/69: $0\v_pmp_cfg_0[7:0]
    13/69: $0\v_pmp_addr_3[29:0]
    14/69: $0\v_pmp_addr_2[29:0]
    15/69: $0\v_pmp_addr_1[29:0]
    16/69: $0\v_pmp_addr_0[29:0]
    17/69: $0\trigger_index[0:0]
    18/69: $0\soft_ueip[0:0]
    19/69: $0\rg_utvec[29:0]
    20/69: $0\rg_utval[31:0]
    21/69: $0\rg_utip[0:0]
    22/69: $0\rg_utie[0:0]
    23/69: $0\rg_usip[0:0]
    24/69: $0\rg_usie[0:0]
    25/69: $0\rg_uscratch[31:0]
    26/69: $0\rg_upie[0:0]
    27/69: $0\rg_umode[1:0]
    28/69: $0\rg_uinterrupt[0:0]
    29/69: $0\rg_uie[0:0]
    30/69: $0\rg_uepc[30:0]
    31/69: $0\rg_ueie[0:0]
    32/69: $0\rg_ucause[4:0]
    33/69: $0\rg_prv[1:0]
    34/69: $0\rg_mtvec[29:0]
    35/69: $0\rg_mtval[31:0]
    36/69: $0\rg_mtip[0:0]
    37/69: $0\rg_mtie[0:0]
    38/69: $0\rg_msip[0:0]
    39/69: $0\rg_msie[0:0]
    40/69: $0\rg_mscratch[31:0]
    41/69: $0\rg_mprv[0:0]
    42/69: $0\rg_mpp[1:0]
    43/69: $0\rg_mpie[0:0]
    44/69: $0\rg_mode[1:0]
    45/69: $0\rg_minterrupt[0:0]
    46/69: $0\rg_mie[0:0]
    47/69: $0\rg_mideleg[11:0]
    48/69: $0\rg_mepc[30:0]
    49/69: $0\rg_meip[0:0]
    50/69: $0\rg_meie[0:0]
    51/69: $0\rg_medeleg_u1[0:0]
    52/69: $0\rg_medeleg_m2[1:0]
    53/69: $0\rg_medeleg_l10[9:0]
    54/69: $0\rg_mcounteren[2:0]
    55/69: $0\rg_mcause[4:0]
    56/69: $0\rg_clint_mtime[63:0]
    57/69: $0\misa_u[0:0]
    58/69: $0\misa_n[0:0]
    59/69: $0\misa_i[0:0]
    60/69: $0\minstreth[31:0]
    61/69: $0\minstret[31:0]
    62/69: $0\mhpmevent_0[31:0]
    63/69: $0\mhpmcounter_0[63:0]
    64/69: $0\mcycleh[31:0]
    65/69: $0\mcycle[31:0]
    66/69: $0\fs[1:0]
    67/69: $0\frm[2:0]
    68/69: $0\fflags[4:0]
    69/69: $0\ext_ueip[0:0]
Creating decoders for process `\mkcsrfile.$proc$mkcsrfile.v:821$3141'.
     1/1: $1\read_csr[31:0]
Creating decoders for process `\mkeclass.$proc$mkeclass.v:1504$3725'.
     1/1: $1\w_wdata__h5190[31:0]
Creating decoders for process `\mkeclass.$proc$mkeclass.v:1512$3726'.
     1/1: $1\write_strobe__h3924[3:0]
Creating decoders for process `\mkeclass.$proc$mkeclass.v:1520$3727'.
     1/1: $1\CASE_ff_mem_requestD_OUT_BITS_2_TO_1_0_IF_ff__ETC__q3[31:0]
Creating decoders for process `\mkeclass.$proc$mkeclass.v:1547$3730'.
     1/1: $0\rg_wEpoch[0:0]
Creating decoders for process `\mksign_dump_axi4.$proc$mksign_dump_axi4.v:1061$3890'.
     1/1: $1\CASE_s_xactor_f_wr_addrD_OUT_BITS_23_TO_20_0x_ETC__q2[1:0]
Creating decoders for process `\mksign_dump_axi4.$proc$mksign_dump_axi4.v:1072$3891'.
     1/12: $0\rg_word_count[1:0]
     2/12: $0\rg_total_count[31:0]
     3/12: $0\rg_start_address[31:0]
     4/12: $0\rg_start[0:0]
     5/12: $0\rg_end_sim[0:0]
     6/12: $0\rg_end_address[31:0]
     7/12: $0\dataarray_3[31:0]
     8/12: $0\dataarray_2[31:0]
     9/12: $0\dataarray_1[31:0]
    10/12: $0\dataarray_0[31:0]
    11/12: $0\rg_cnt[4:0]
    12/12: $0\dump[31:0]
Creating decoders for process `\mkstage1.$proc$mkstage1.v:1017$4039'.
     1/1: $1\IF_IF_v_trigger_data1_1_wget__64_BITS_19_TO_18_ETC___d302[0:0]
Creating decoders for process `\mkstage1.$proc$mkstage1.v:1049$4051'.
     1/8: $0\rg_wfi[0:0]
     2/8: $0\rg_pc[31:0]
     3/8: $0\rg_initialize[0:0]
     4/8: $0\rg_index[4:0]
     5/8: $0\rg_fabric_request[31:0]
     6/8: $0\rg_eEpoch[0:0]
     7/8: $0\rg_action[0:0]
     8/8: $0\rg_wEpoch[0:0]
Creating decoders for process `\mkstage1.$proc$mkstage1.v:790$3929'.
     1/1: $1\rg_pc_D_IN[31:0]
Creating decoders for process `\mkstage1.$proc$mkstage1.v:966$4027'.
     1/1: $1\CASE_ma_trigger_data1_t_BITS_19_TO_0_BITS_12_T_ETC__q3[0:0]
Creating decoders for process `\mkstage1.$proc$mkstage1.v:982$4032'.
     1/1: $1\IF_IF_v_trigger_data1_0_wget__3_BITS_19_TO_18__ETC___d275[0:0]
Creating decoders for process `\mkstage1.$proc$mkstage1.v:999$4036'.
     1/1: $1\IF_IF_v_trigger_data1_1_wget__64_BITS_19_TO_18_ETC___d299[0:0]
Creating decoders for process `\mkstage2.$proc$mkstage2.v:1080$4075'.
     1/1: $1\alu_inputs_op3[31:0]
Creating decoders for process `\mkstage2.$proc$mkstage2.v:1158$4111'.
     1/1: $1\_op2__h3509[31:0]
Creating decoders for process `\mkstage2.$proc$mkstage2.v:1167$4112'.
     1/1: $1\IF_alu_inputs_37_BITS_72_TO_71_42_EQ_0_43_THEN_ETC___d302[48:0]
Creating decoders for process `\mkstage2.$proc$mkstage2.v:1197$4113'.
     1/1: $1\CASE_aluinputs_BITS_72_TO_71_0_aluinputs_BIT_ETC__q4[1:0]
Creating decoders for process `\mkstage2.$proc$mkstage2.v:1210$4114'.
     1/2: $0\rg_eEpoch[0:0]
     2/2: $0\rg_wEpoch[0:0]
Creating decoders for process `\mkstage3.$proc$mkstage3.v:1130$4267'.
     1/3: $0\wr_memory_response[34:0]
     2/3: $0\rg_rerun[0:0]
     3/3: $0\rg_epoch[0:0]
Creating decoders for process `\module_address_valid.$proc$module_address_valid.v:100$4302'.
     1/1: $1\CASE_address_valid_addr_BITS_7_TO_4_0x4_addres_ETC__q3[0:0]
Creating decoders for process `\module_address_valid.$proc$module_address_valid.v:121$4322'.
     1/1: $1\CASE_address_valid_addr_BITS_7_TO_4_0_address__ETC__q4[0:0]
Creating decoders for process `\module_address_valid.$proc$module_address_valid.v:137$4326'.
     1/1: $1\CASE_address_valid_addr_BITS_11_TO_10_0b0_CASE_ETC__q5[0:0]
Creating decoders for process `\module_address_valid.$proc$module_address_valid.v:71$4289'.
     1/1: $1\CASE_address_valid_addr_BITS_7_TO_0_0_address__ETC__q1[0:0]
Creating decoders for process `\module_address_valid.$proc$module_address_valid.v:84$4295'.
     1/1: $1\CASE_address_valid_addr_BITS_11_TO_10_0b0_CASE_ETC__q2[0:0]
Creating decoders for process `\module_decoder_func_32.$proc$module_decoder_func_32.v:201$4455'.
     1/1: $1\x__h260[4:0]
Creating decoders for process `\module_decoder_func_32.$proc$module_decoder_func_32.v:208$4456'.
     1/1: $1\_theResult_____5_snd__h948[5:0]
Creating decoders for process `\module_decoder_func_32.$proc$module_decoder_func_32.v:216$4457'.
     1/1: $1\_theResult_____5_snd__h893[5:0]
Creating decoders for process `\module_decoder_func_32.$proc$module_decoder_func_32.v:224$4458'.
     1/1: $1\CASE_decoder_func_32_inst_BITS_31_TO_7_0_6_0x2_ETC__q1[2:0]
Creating decoders for process `\module_decoder_func_32.$proc$module_decoder_func_32.v:247$4482'.
     1/1: $1\CASE_decoder_func_32_inst_BITS_14_TO_12_0_1_1_1_6__q2[2:0]
Creating decoders for process `\module_decoder_func_32.$proc$module_decoder_func_32.v:255$4483'.
     1/1: $1\CASE_decoder_func_32_inst_BITS_4_TO_2_0b0_IF_N_ETC__q3[2:0]
Creating decoders for process `\module_decoder_func_32.$proc$module_decoder_func_32.v:281$4497'.
     1/1: $1\CASE_decoder_func_32_inst_BITS_14_TO_12_0_deco_ETC__q4[0:0]
Creating decoders for process `\module_decoder_func_32.$proc$module_decoder_func_32.v:292$4502'.
     1/1: $1\CASE_decoder_func_32_inst_BITS_4_TO_2_0b0_IF_d_ETC__q5[2:0]
Creating decoders for process `\module_decoder_func_32.$proc$module_decoder_func_32.v:308$4506'.
     1/1: $1\CASE_decoder_func_32_inst_BITS_4_TO_2_0b0_IF_N_ETC__q6[2:0]
Creating decoders for process `\module_decoder_func_32.$proc$module_decoder_func_32.v:330$4513'.
     1/1: $1\IF_decoder_func_32_inst_BITS_6_TO_5_5_EQ_0b0_6_ETC___d143[2:0]
Creating decoders for process `\module_decoder_func_32.$proc$module_decoder_func_32.v:348$4514'.
     1/1: $1\CASE_decoder_func_32_inst_BITS_6_TO_2_0b101_0__ETC__q7[5:0]
Creating decoders for process `\module_decoder_func_32.$proc$module_decoder_func_32.v:357$4515'.
     1/1: $1\CASE_decoder_func_32_inst_BITS_6_TO_2_0b101_0__ETC__q8[3:0]
Creating decoders for process `\module_decoder_func_32.$proc$module_decoder_func_32.v:369$4516'.
     1/1: $1\CASE_decoder_func_32_inst_BITS_6_TO_2_0b101_de_ETC__q9[10:0]
Creating decoders for process `\module_decoder_func_32.$proc$module_decoder_func_32.v:379$4517'.
     1/1: $1\CASE_decoder_func_32_inst_BITS_6_TO_2_0b101_de_ETC__q10[7:0]
Creating decoders for process `\module_decoder_func_32.$proc$module_decoder_func_32.v:389$4518'.
     1/1: $1\fn___1__h4254[3:0]
Creating decoders for process `\module_decoder_func_32.$proc$module_decoder_func_32.v:401$4519'.
     1/1: $1\fn___1__h4302[3:0]
Creating decoders for process `\module_decoder_func_32.$proc$module_decoder_func_32.v:414$4521'.
     1/1: $1\IF_decoder_func_32_inst_BITS_6_TO_2_EQ_0b11000_ETC___d221[3:0]
Creating decoders for process `\module_decoder_func_32.$proc$module_decoder_func_32.v:431$4523'.
     1/1: $1\CASE_decoder_func_32_inst_BITS_6_TO_2_0b0_1_0b_ETC__q11[1:0]
Creating decoders for process `\module_decoder_func_32.$proc$module_decoder_func_32.v:441$4524'.
     1/1: $1\CASE_decoder_func_32_inst_BITS_6_TO_2_0b11_3_0_ETC__q12[1:0]
Creating decoders for process `\module_fn_alu.$proc$module_fn_alu.v:305$4698'.
     1/1: $1\shin__h50[31:0]
Creating decoders for process `\module_fn_alu.$proc$module_fn_alu.v:344$4699'.
     1/1: $1\CASE_fn_alu_tdata1_BITS_12_TO_9_2_IF_IF_fn_alu_ETC__q1[0:0]
Creating decoders for process `\module_fn_alu.$proc$module_fn_alu.v:360$4704'.
     1/1: $1\IF_IF_fn_alu_tdata1_BITS_19_TO_18_EQ_0_THEN_fn_ETC___d92[0:0]
Creating decoders for process `\module_fn_alu.$proc$module_fn_alu.v:377$4708'.
     1/1: $1\IF_IF_fn_alu_tdata1_BITS_39_TO_38_5_EQ_0_6_THE_ETC___d139[0:0]
Creating decoders for process `\module_fn_alu.$proc$module_fn_alu.v:395$4711'.
     1/1: $1\CASE_fn_alu_fn_2_adder_z_flag2_3_NOT_op1_xor_o_ETC__q2[0:0]
Creating decoders for process `\module_fn_alu.$proc$module_fn_alu.v:413$4714'.
     1/1: $1\IF_IF_fn_alu_tdata1_BITS_39_TO_38_5_EQ_0_6_THE_ETC___d142[0:0]
Creating decoders for process `\module_fn_alu.$proc$module_fn_alu.v:441$4725'.
     1/1: $1\x__h3384[31:0]
Creating decoders for process `\module_fn_alu.$proc$module_fn_alu.v:465$4728'.
     1/1: $1\CASE_fn_alu_inst_type_1_0_5_1_2__q4[1:0]
Creating decoders for process `\module_fn_pmp_lookup.$proc$module_fn_pmp_lookup.v:475$4960'.
     1/1: $1\x__h13190[5:0]
Creating decoders for process `\module_fn_pmp_lookup.$proc$module_fn_pmp_lookup.v:483$4961'.
     1/1: $1\IF_fn_pmp_lookup_pmpcfg_BITS_4_TO_3_EQ_1_THEN__ETC___d85[0:0]
Creating decoders for process `\module_fn_pmp_lookup.$proc$module_fn_pmp_lookup.v:504$4966'.
     1/1: $1\IF_fn_pmp_lookup_pmpcfg_BITS_12_TO_11_6_EQ_1_7_ETC___d168[0:0]
Creating decoders for process `\module_fn_pmp_lookup.$proc$module_fn_pmp_lookup.v:527$4972'.
     1/1: $1\IF_fn_pmp_lookup_pmpcfg_BITS_20_TO_19_70_EQ_1__ETC___d252[0:0]
Creating decoders for process `\module_fn_pmp_lookup.$proc$module_fn_pmp_lookup.v:550$4978'.
     1/1: $1\IF_fn_pmp_lookup_pmpcfg_BITS_4_TO_3_EQ_1_THEN__ETC___d348[0:0]
Creating decoders for process `\module_fn_pmp_lookup.$proc$module_fn_pmp_lookup.v:571$4988'.
     1/1: $1\IF_fn_pmp_lookup_pmpcfg_BITS_12_TO_11_6_EQ_1_7_ETC___d361[0:0]
Creating decoders for process `\module_fn_pmp_lookup.$proc$module_fn_pmp_lookup.v:594$5000'.
     1/1: $1\IF_fn_pmp_lookup_pmpcfg_BITS_20_TO_19_70_EQ_1__ETC___d375[0:0]
Creating decoders for process `\module_fn_pmp_lookup.$proc$module_fn_pmp_lookup.v:617$5012'.
     1/1: $1\IF_fn_pmp_lookup_pmpcfg_BITS_28_TO_27_54_EQ_1__ETC___d336[0:0]

52.3.8. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\mkSoc.\data__h97341' from process `\mkSoc.$proc$mkSoc.v:10298$2776'.
No latch inferred for signal `\mkSoc.\mask__h97340' from process `\mkSoc.$proc$mkSoc.v:10306$2777'.
No latch inferred for signal `\mkSoc.\rdata__h71720' from process `\mkSoc.$proc$mkSoc.v:10315$2778'.
No latch inferred for signal `\mkSoc.\rdata__h73449' from process `\mkSoc.$proc$mkSoc.v:10324$2779'.
No latch inferred for signal `\mkSoc.\CASE_clint_s_xactor_f_wr_addrD_OUT_BITS_7_TO__ETC__q1' from process `\mkSoc.$proc$mkSoc.v:10332$2780'.
No latch inferred for signal `\mkSoc.\x__h77543' from process `\mkSoc.$proc$mkSoc.v:10345$2781'.
No latch inferred for signal `\mkSoc.\x__h87353' from process `\mkSoc.$proc$mkSoc.v:10355$2782'.
No latch inferred for signal `\mkSoc.\CASE_uart_s_xactor_f_rd_addrD_OUT_BITS_23_TO__ETC__q2' from process `\mkSoc.$proc$mkSoc.v:10365$2783'.
No latch inferred for signal `\mkSoc.\CASE_uart_s_xactor_f_wr_addrD_OUT_BITS_23_TO__ETC__q3' from process `\mkSoc.$proc$mkSoc.v:10373$2784'.
No latch inferred for signal `\mkSoc.\MUX_uart_user_ifc_uart_rRecvState_write_1__VAL_3' from process `\mkSoc.$proc$mkSoc.v:6646$1559'.
No latch inferred for signal `\mkSoc.\uart_user_ifc_uart_rRecvState_D_IN' from process `\mkSoc.$proc$mkSoc.v:6892$1666'.
No latch inferred for signal `\mkSoc.\uart_user_ifc_uart_rXmitDataOut_D_IN' from process `\mkSoc.$proc$mkSoc.v:6949$1676'.
No latch inferred for signal `\mkSoc.\uart_user_ifc_uart_rXmitState_D_IN' from process `\mkSoc.$proc$mkSoc.v:6983$1685'.
No latch inferred for signal `\mkSoc.\fabric_v_f_rd_mis_0_D_IN' from process `\mkSoc.$proc$mkSoc.v:7344$1732'.
No latch inferred for signal `\mkSoc.\fabric_v_f_rd_mis_1_D_IN' from process `\mkSoc.$proc$mkSoc.v:7368$1736'.
No latch inferred for signal `\mkSoc.\fabric_v_f_rd_mis_2_D_IN' from process `\mkSoc.$proc$mkSoc.v:7392$1740'.
No latch inferred for signal `\mkSoc.\fabric_v_f_rd_mis_3_D_IN' from process `\mkSoc.$proc$mkSoc.v:7416$1744'.
No latch inferred for signal `\mkSoc.\fabric_v_f_rd_mis_4_D_IN' from process `\mkSoc.$proc$mkSoc.v:7440$1748'.
No latch inferred for signal `\mkSoc.\fabric_v_f_rd_mis_5_D_IN' from process `\mkSoc.$proc$mkSoc.v:7464$1752'.
No latch inferred for signal `\mkSoc.\fabric_v_f_rd_sjs_0_D_IN' from process `\mkSoc.$proc$mkSoc.v:7488$1756'.
No latch inferred for signal `\mkSoc.\fabric_v_f_rd_sjs_1_D_IN' from process `\mkSoc.$proc$mkSoc.v:7534$1773'.
No latch inferred for signal `\mkSoc.\fabric_v_f_rd_sjs_2_D_IN' from process `\mkSoc.$proc$mkSoc.v:7580$1790'.
No latch inferred for signal `\mkSoc.\fabric_v_f_wr_mis_0_D_IN' from process `\mkSoc.$proc$mkSoc.v:7641$1807'.
No latch inferred for signal `\mkSoc.\fabric_v_f_wr_mis_1_D_IN' from process `\mkSoc.$proc$mkSoc.v:7666$1812'.
No latch inferred for signal `\mkSoc.\fabric_v_f_wr_mis_2_D_IN' from process `\mkSoc.$proc$mkSoc.v:7691$1817'.
No latch inferred for signal `\mkSoc.\fabric_v_f_wr_mis_3_D_IN' from process `\mkSoc.$proc$mkSoc.v:7716$1822'.
No latch inferred for signal `\mkSoc.\fabric_v_f_wr_mis_4_D_IN' from process `\mkSoc.$proc$mkSoc.v:7741$1827'.
No latch inferred for signal `\mkSoc.\fabric_v_f_wr_mis_5_D_IN' from process `\mkSoc.$proc$mkSoc.v:7766$1832'.
No latch inferred for signal `\mkSoc.\fabric_v_f_wr_sjs_0_D_IN' from process `\mkSoc.$proc$mkSoc.v:7791$1837'.
No latch inferred for signal `\mkSoc.\fabric_v_f_wr_sjs_1_D_IN' from process `\mkSoc.$proc$mkSoc.v:7831$1848'.
No latch inferred for signal `\mkSoc.\fabric_v_f_wr_sjs_2_D_IN' from process `\mkSoc.$proc$mkSoc.v:7871$1859'.
No latch inferred for signal `\mkSoc.\fabric_v_f_wrd_mis_0_D_IN' from process `\mkSoc.$proc$mkSoc.v:7926$1870'.
No latch inferred for signal `\mkSoc.\fabric_v_f_wrd_mis_1_D_IN' from process `\mkSoc.$proc$mkSoc.v:7954$1884'.
No latch inferred for signal `\mkSoc.\fabric_v_f_wrd_mis_2_D_IN' from process `\mkSoc.$proc$mkSoc.v:7982$1898'.
No latch inferred for signal `\mkSoc.\fabric_v_f_wrd_mis_3_D_IN' from process `\mkSoc.$proc$mkSoc.v:8010$1912'.
No latch inferred for signal `\mkSoc.\fabric_v_f_wrd_mis_4_D_IN' from process `\mkSoc.$proc$mkSoc.v:8038$1926'.
No latch inferred for signal `\mkSoc.\fabric_v_f_wrd_mis_5_D_IN' from process `\mkSoc.$proc$mkSoc.v:8066$1940'.
No latch inferred for signal `\mkSoc.\fabric_v_f_wrd_sjs_0_D_IN' from process `\mkSoc.$proc$mkSoc.v:8094$1954'.
No latch inferred for signal `\mkSoc.\fabric_v_f_wrd_sjs_1_D_IN' from process `\mkSoc.$proc$mkSoc.v:8130$1973'.
No latch inferred for signal `\mkSoc.\fabric_v_f_wrd_sjs_2_D_IN' from process `\mkSoc.$proc$mkSoc.v:8166$1992'.
No latch inferred for signal `\mkSoc.\fabric_xactors_from_masters_0_f_rd_data_D_IN' from process `\mkSoc.$proc$mkSoc.v:8222$2017'.
No latch inferred for signal `\mkSoc.\fabric_xactors_from_masters_0_f_wr_resp_D_IN' from process `\mkSoc.$proc$mkSoc.v:8315$2042'.
No latch inferred for signal `\mkSoc.\fabric_xactors_from_masters_1_f_rd_data_D_IN' from process `\mkSoc.$proc$mkSoc.v:8384$2055'.
No latch inferred for signal `\mkSoc.\fabric_xactors_from_masters_1_f_wr_resp_D_IN' from process `\mkSoc.$proc$mkSoc.v:8477$2080'.
No latch inferred for signal `\mkSoc.\fabric_xactors_from_masters_2_f_rd_data_D_IN' from process `\mkSoc.$proc$mkSoc.v:8546$2093'.
No latch inferred for signal `\mkSoc.\fabric_xactors_from_masters_2_f_wr_resp_D_IN' from process `\mkSoc.$proc$mkSoc.v:8639$2118'.
No latch inferred for signal `\mkSoc.\fabric_xactors_to_slaves_0_f_rd_addr_D_IN' from process `\mkSoc.$proc$mkSoc.v:8688$2125'.
No latch inferred for signal `\mkSoc.\fabric_xactors_to_slaves_0_f_wr_addr_D_IN' from process `\mkSoc.$proc$mkSoc.v:8734$2132'.
No latch inferred for signal `\mkSoc.\fabric_xactors_to_slaves_0_f_wr_data_D_IN' from process `\mkSoc.$proc$mkSoc.v:8765$2136'.
No latch inferred for signal `\mkSoc.\fabric_xactors_to_slaves_1_f_rd_addr_D_IN' from process `\mkSoc.$proc$mkSoc.v:8811$2146'.
No latch inferred for signal `\mkSoc.\fabric_xactors_to_slaves_1_f_wr_addr_D_IN' from process `\mkSoc.$proc$mkSoc.v:8857$2153'.
No latch inferred for signal `\mkSoc.\fabric_xactors_to_slaves_1_f_wr_data_D_IN' from process `\mkSoc.$proc$mkSoc.v:8888$2157'.
No latch inferred for signal `\mkSoc.\fabric_xactors_to_slaves_2_f_rd_addr_D_IN' from process `\mkSoc.$proc$mkSoc.v:8934$2167'.
No latch inferred for signal `\mkSoc.\fabric_xactors_to_slaves_2_f_wr_addr_D_IN' from process `\mkSoc.$proc$mkSoc.v:8977$2174'.
No latch inferred for signal `\mkSoc.\fabric_xactors_to_slaves_2_f_wr_data_D_IN' from process `\mkSoc.$proc$mkSoc.v:9008$2178'.
No latch inferred for signal `\mkSoc.\fabric_xactors_to_slaves_3_f_rd_addr_D_IN' from process `\mkSoc.$proc$mkSoc.v:9054$2188'.
No latch inferred for signal `\mkSoc.\fabric_xactors_to_slaves_3_f_wr_addr_D_IN' from process `\mkSoc.$proc$mkSoc.v:9097$2195'.
No latch inferred for signal `\mkSoc.\fabric_xactors_to_slaves_3_f_wr_data_D_IN' from process `\mkSoc.$proc$mkSoc.v:9128$2199'.
No latch inferred for signal `\mkSoc.\fabric_xactors_to_slaves_4_f_rd_addr_D_IN' from process `\mkSoc.$proc$mkSoc.v:9174$2209'.
No latch inferred for signal `\mkSoc.\fabric_xactors_to_slaves_4_f_wr_addr_D_IN' from process `\mkSoc.$proc$mkSoc.v:9220$2216'.
No latch inferred for signal `\mkSoc.\fabric_xactors_to_slaves_4_f_wr_data_D_IN' from process `\mkSoc.$proc$mkSoc.v:9251$2220'.
No latch inferred for signal `\mkSoc.\fabric_xactors_to_slaves_5_f_rd_addr_D_IN' from process `\mkSoc.$proc$mkSoc.v:9297$2230'.
No latch inferred for signal `\mkSoc.\fabric_xactors_to_slaves_5_f_wr_addr_D_IN' from process `\mkSoc.$proc$mkSoc.v:9340$2237'.
No latch inferred for signal `\mkSoc.\fabric_xactors_to_slaves_5_f_wr_data_D_IN' from process `\mkSoc.$proc$mkSoc.v:9371$2241'.
No latch inferred for signal `\mkcsr.\csrfile_write_csr_word' from process `\mkcsr.$proc$mkcsr.v:530$3128'.
No latch inferred for signal `\mkcsr.\y_avValue_snd_fst__h958' from process `\mkcsr.$proc$mkcsr.v:558$3140'.
No latch inferred for signal `\mkcsrfile.\rg_mie_D_IN' from process `\mkcsrfile.$proc$mkcsrfile.v:1287$3355'.
No latch inferred for signal `\mkcsrfile.\rg_mpie_D_IN' from process `\mkcsrfile.$proc$mkcsrfile.v:1322$3371'.
No latch inferred for signal `\mkcsrfile.\rg_mpp_D_IN' from process `\mkcsrfile.$proc$mkcsrfile.v:1340$3379'.
No latch inferred for signal `\mkcsrfile.\rg_uie_D_IN' from process `\mkcsrfile.$proc$mkcsrfile.v:1428$3414'.
No latch inferred for signal `\mkcsrfile.\rg_upie_D_IN' from process `\mkcsrfile.$proc$mkcsrfile.v:1464$3432'.
No latch inferred for signal `\mkcsrfile.\CASE_v_trig_tdata1_1_BITS_19_TO_18_1_v_trig_td_ETC__q1' from process `\mkcsrfile.$proc$mkcsrfile.v:1884$3609'.
No latch inferred for signal `\mkcsrfile.\CASE_v_trig_tdata1_1_BITS_19_TO_18_1_v_trig_td_ETC__q2' from process `\mkcsrfile.$proc$mkcsrfile.v:1894$3612'.
No latch inferred for signal `\mkcsrfile.\CASE_v_trig_tdata1_0_BITS_19_TO_18_1_v_trig_td_ETC__q3' from process `\mkcsrfile.$proc$mkcsrfile.v:1904$3615'.
No latch inferred for signal `\mkcsrfile.\CASE_v_trig_tdata1_0_BITS_19_TO_18_1_v_trig_td_ETC__q4' from process `\mkcsrfile.$proc$mkcsrfile.v:1914$3618'.
No latch inferred for signal `\mkcsrfile.\data___1__h4123' from process `\mkcsrfile.$proc$mkcsrfile.v:1924$3621'.
No latch inferred for signal `\mkcsrfile.\CASE_trigger_index_0_v_trig_tdata3_0_1_v_trig__ETC__q5' from process `\mkcsrfile.$proc$mkcsrfile.v:1931$3622'.
No latch inferred for signal `\mkcsrfile.\data___1__h4321' from process `\mkcsrfile.$proc$mkcsrfile.v:1942$3623'.
No latch inferred for signal `\mkcsrfile.\CASE_trigger_index_0_v_trig_tdata1_0_BIT_15_1__ETC__q8' from process `\mkcsrfile.$proc$mkcsrfile.v:1949$3624'.
No latch inferred for signal `\mkcsrfile.\CASE_trigger_index_0_v_trig_tdata1_0_BIT_16_1__ETC__q9' from process `\mkcsrfile.$proc$mkcsrfile.v:1960$3625'.
No latch inferred for signal `\mkcsrfile.\CASE_trigger_index_0_v_trig_tdata1_0_BIT_17_1__ETC__q10' from process `\mkcsrfile.$proc$mkcsrfile.v:1971$3626'.
No latch inferred for signal `\mkcsrfile.\CASE_trigger_index_0_v_trig_tdata1_0_BITS_12_T_ETC__q11' from process `\mkcsrfile.$proc$mkcsrfile.v:1982$3627'.
No latch inferred for signal `\mkcsrfile.\CASE_trigger_index_0_v_trig_tdata1_0_BIT_13_1__ETC__q12' from process `\mkcsrfile.$proc$mkcsrfile.v:1993$3628'.
No latch inferred for signal `\mkcsrfile.\CASE_trigger_index_0_v_trig_tdata1_0_BIT_14_1__ETC__q13' from process `\mkcsrfile.$proc$mkcsrfile.v:2004$3629'.
No latch inferred for signal `\mkcsrfile.\CASE_trigger_index_0_v_trig_tdata1_0_BITS_7_TO_ETC__q14' from process `\mkcsrfile.$proc$mkcsrfile.v:2015$3630'.
No latch inferred for signal `\mkcsrfile.\CASE_trigger_index_0_v_trig_tdata1_0_BIT_8_1_v_ETC__q15' from process `\mkcsrfile.$proc$mkcsrfile.v:2026$3631'.
No latch inferred for signal `\mkcsrfile.\CASE_trigger_index_0_v_trig_tdata1_0_BIT_1_1_v_ETC__q16' from process `\mkcsrfile.$proc$mkcsrfile.v:2037$3632'.
No latch inferred for signal `\mkcsrfile.\CASE_trigger_index_0_v_trig_tdata1_0_BITS_3_TO_ETC__q17' from process `\mkcsrfile.$proc$mkcsrfile.v:2048$3633'.
No latch inferred for signal `\mkcsrfile.\CASE_trigger_index_0_v_trig_tdata1_0_BIT_2_1_v_ETC__q18' from process `\mkcsrfile.$proc$mkcsrfile.v:2059$3634'.
No latch inferred for signal `\mkcsrfile.\CASE_trigger_index_0_v_trig_tdata1_0_BITS_8_TO_ETC__q19' from process `\mkcsrfile.$proc$mkcsrfile.v:2070$3635'.
No latch inferred for signal `\mkcsrfile.\CASE_trigger_index_0_v_trig_tdata1_0_BITS_19_T_ETC__q20' from process `\mkcsrfile.$proc$mkcsrfile.v:2081$3636'.
No latch inferred for signal `\mkcsrfile.\CASE_trigger_index_0_v_trig_tdata1_0_BIT_0_1_v_ETC__q21' from process `\mkcsrfile.$proc$mkcsrfile.v:2092$3639'.
No latch inferred for signal `\mkcsrfile.\CASE_trigger_index_0_v_trig_tdata1_0_BITS_19_T_ETC__q22' from process `\mkcsrfile.$proc$mkcsrfile.v:2103$3640'.
No latch inferred for signal `\mkcsrfile.\CASE_trigger_index_0_v_trig_tdata1_0_BITS_19_T_ETC__q23' from process `\mkcsrfile.$proc$mkcsrfile.v:2114$3643'.
No latch inferred for signal `\mkcsrfile.\CASE_write_csr_word_BITS_31_TO_28_4_1_5_2_3__q24' from process `\mkcsrfile.$proc$mkcsrfile.v:2125$3646'.
No latch inferred for signal `\mkcsrfile.\read_csr' from process `\mkcsrfile.$proc$mkcsrfile.v:821$3141'.
No latch inferred for signal `\mkeclass.\w_wdata__h5190' from process `\mkeclass.$proc$mkeclass.v:1504$3725'.
No latch inferred for signal `\mkeclass.\write_strobe__h3924' from process `\mkeclass.$proc$mkeclass.v:1512$3726'.
No latch inferred for signal `\mkeclass.\CASE_ff_mem_requestD_OUT_BITS_2_TO_1_0_IF_ff__ETC__q3' from process `\mkeclass.$proc$mkeclass.v:1520$3727'.
No latch inferred for signal `\mksign_dump_axi4.\CASE_s_xactor_f_wr_addrD_OUT_BITS_23_TO_20_0x_ETC__q2' from process `\mksign_dump_axi4.$proc$mksign_dump_axi4.v:1061$3890'.
No latch inferred for signal `\mkstage1.\IF_IF_v_trigger_data1_1_wget__64_BITS_19_TO_18_ETC___d302' from process `\mkstage1.$proc$mkstage1.v:1017$4039'.
No latch inferred for signal `\mkstage1.\rg_pc_D_IN' from process `\mkstage1.$proc$mkstage1.v:790$3929'.
No latch inferred for signal `\mkstage1.\CASE_ma_trigger_data1_t_BITS_19_TO_0_BITS_12_T_ETC__q3' from process `\mkstage1.$proc$mkstage1.v:966$4027'.
No latch inferred for signal `\mkstage1.\IF_IF_v_trigger_data1_0_wget__3_BITS_19_TO_18__ETC___d275' from process `\mkstage1.$proc$mkstage1.v:982$4032'.
No latch inferred for signal `\mkstage1.\IF_IF_v_trigger_data1_1_wget__64_BITS_19_TO_18_ETC___d299' from process `\mkstage1.$proc$mkstage1.v:999$4036'.
No latch inferred for signal `\mkstage2.\alu_inputs_op3' from process `\mkstage2.$proc$mkstage2.v:1080$4075'.
No latch inferred for signal `\mkstage2.\_op2__h3509' from process `\mkstage2.$proc$mkstage2.v:1158$4111'.
No latch inferred for signal `\mkstage2.\IF_alu_inputs_37_BITS_72_TO_71_42_EQ_0_43_THEN_ETC___d302' from process `\mkstage2.$proc$mkstage2.v:1167$4112'.
No latch inferred for signal `\mkstage2.\CASE_aluinputs_BITS_72_TO_71_0_aluinputs_BIT_ETC__q4' from process `\mkstage2.$proc$mkstage2.v:1197$4113'.
No latch inferred for signal `\module_address_valid.\CASE_address_valid_addr_BITS_7_TO_4_0x4_addres_ETC__q3' from process `\module_address_valid.$proc$module_address_valid.v:100$4302'.
No latch inferred for signal `\module_address_valid.\CASE_address_valid_addr_BITS_7_TO_4_0_address__ETC__q4' from process `\module_address_valid.$proc$module_address_valid.v:121$4322'.
No latch inferred for signal `\module_address_valid.\CASE_address_valid_addr_BITS_11_TO_10_0b0_CASE_ETC__q5' from process `\module_address_valid.$proc$module_address_valid.v:137$4326'.
No latch inferred for signal `\module_address_valid.\CASE_address_valid_addr_BITS_7_TO_0_0_address__ETC__q1' from process `\module_address_valid.$proc$module_address_valid.v:71$4289'.
No latch inferred for signal `\module_address_valid.\CASE_address_valid_addr_BITS_11_TO_10_0b0_CASE_ETC__q2' from process `\module_address_valid.$proc$module_address_valid.v:84$4295'.
No latch inferred for signal `\module_decoder_func_32.\x__h260' from process `\module_decoder_func_32.$proc$module_decoder_func_32.v:201$4455'.
No latch inferred for signal `\module_decoder_func_32.\_theResult_____5_snd__h948' from process `\module_decoder_func_32.$proc$module_decoder_func_32.v:208$4456'.
No latch inferred for signal `\module_decoder_func_32.\_theResult_____5_snd__h893' from process `\module_decoder_func_32.$proc$module_decoder_func_32.v:216$4457'.
No latch inferred for signal `\module_decoder_func_32.\CASE_decoder_func_32_inst_BITS_31_TO_7_0_6_0x2_ETC__q1' from process `\module_decoder_func_32.$proc$module_decoder_func_32.v:224$4458'.
No latch inferred for signal `\module_decoder_func_32.\CASE_decoder_func_32_inst_BITS_14_TO_12_0_1_1_1_6__q2' from process `\module_decoder_func_32.$proc$module_decoder_func_32.v:247$4482'.
No latch inferred for signal `\module_decoder_func_32.\CASE_decoder_func_32_inst_BITS_4_TO_2_0b0_IF_N_ETC__q3' from process `\module_decoder_func_32.$proc$module_decoder_func_32.v:255$4483'.
No latch inferred for signal `\module_decoder_func_32.\CASE_decoder_func_32_inst_BITS_14_TO_12_0_deco_ETC__q4' from process `\module_decoder_func_32.$proc$module_decoder_func_32.v:281$4497'.
No latch inferred for signal `\module_decoder_func_32.\CASE_decoder_func_32_inst_BITS_4_TO_2_0b0_IF_d_ETC__q5' from process `\module_decoder_func_32.$proc$module_decoder_func_32.v:292$4502'.
No latch inferred for signal `\module_decoder_func_32.\CASE_decoder_func_32_inst_BITS_4_TO_2_0b0_IF_N_ETC__q6' from process `\module_decoder_func_32.$proc$module_decoder_func_32.v:308$4506'.
No latch inferred for signal `\module_decoder_func_32.\IF_decoder_func_32_inst_BITS_6_TO_5_5_EQ_0b0_6_ETC___d143' from process `\module_decoder_func_32.$proc$module_decoder_func_32.v:330$4513'.
No latch inferred for signal `\module_decoder_func_32.\CASE_decoder_func_32_inst_BITS_6_TO_2_0b101_0__ETC__q7' from process `\module_decoder_func_32.$proc$module_decoder_func_32.v:348$4514'.
No latch inferred for signal `\module_decoder_func_32.\CASE_decoder_func_32_inst_BITS_6_TO_2_0b101_0__ETC__q8' from process `\module_decoder_func_32.$proc$module_decoder_func_32.v:357$4515'.
No latch inferred for signal `\module_decoder_func_32.\CASE_decoder_func_32_inst_BITS_6_TO_2_0b101_de_ETC__q9' from process `\module_decoder_func_32.$proc$module_decoder_func_32.v:369$4516'.
No latch inferred for signal `\module_decoder_func_32.\CASE_decoder_func_32_inst_BITS_6_TO_2_0b101_de_ETC__q10' from process `\module_decoder_func_32.$proc$module_decoder_func_32.v:379$4517'.
No latch inferred for signal `\module_decoder_func_32.\fn___1__h4254' from process `\module_decoder_func_32.$proc$module_decoder_func_32.v:389$4518'.
No latch inferred for signal `\module_decoder_func_32.\fn___1__h4302' from process `\module_decoder_func_32.$proc$module_decoder_func_32.v:401$4519'.
No latch inferred for signal `\module_decoder_func_32.\IF_decoder_func_32_inst_BITS_6_TO_2_EQ_0b11000_ETC___d221' from process `\module_decoder_func_32.$proc$module_decoder_func_32.v:414$4521'.
No latch inferred for signal `\module_decoder_func_32.\CASE_decoder_func_32_inst_BITS_6_TO_2_0b0_1_0b_ETC__q11' from process `\module_decoder_func_32.$proc$module_decoder_func_32.v:431$4523'.
No latch inferred for signal `\module_decoder_func_32.\CASE_decoder_func_32_inst_BITS_6_TO_2_0b11_3_0_ETC__q12' from process `\module_decoder_func_32.$proc$module_decoder_func_32.v:441$4524'.
No latch inferred for signal `\module_fn_alu.\shin__h50' from process `\module_fn_alu.$proc$module_fn_alu.v:305$4698'.
No latch inferred for signal `\module_fn_alu.\CASE_fn_alu_tdata1_BITS_12_TO_9_2_IF_IF_fn_alu_ETC__q1' from process `\module_fn_alu.$proc$module_fn_alu.v:344$4699'.
No latch inferred for signal `\module_fn_alu.\IF_IF_fn_alu_tdata1_BITS_19_TO_18_EQ_0_THEN_fn_ETC___d92' from process `\module_fn_alu.$proc$module_fn_alu.v:360$4704'.
No latch inferred for signal `\module_fn_alu.\IF_IF_fn_alu_tdata1_BITS_39_TO_38_5_EQ_0_6_THE_ETC___d139' from process `\module_fn_alu.$proc$module_fn_alu.v:377$4708'.
No latch inferred for signal `\module_fn_alu.\CASE_fn_alu_fn_2_adder_z_flag2_3_NOT_op1_xor_o_ETC__q2' from process `\module_fn_alu.$proc$module_fn_alu.v:395$4711'.
No latch inferred for signal `\module_fn_alu.\IF_IF_fn_alu_tdata1_BITS_39_TO_38_5_EQ_0_6_THE_ETC___d142' from process `\module_fn_alu.$proc$module_fn_alu.v:413$4714'.
No latch inferred for signal `\module_fn_alu.\x__h3384' from process `\module_fn_alu.$proc$module_fn_alu.v:441$4725'.
No latch inferred for signal `\module_fn_alu.\CASE_fn_alu_inst_type_1_0_5_1_2__q4' from process `\module_fn_alu.$proc$module_fn_alu.v:465$4728'.
No latch inferred for signal `\module_fn_pmp_lookup.\x__h13190' from process `\module_fn_pmp_lookup.$proc$module_fn_pmp_lookup.v:475$4960'.
No latch inferred for signal `\module_fn_pmp_lookup.\IF_fn_pmp_lookup_pmpcfg_BITS_4_TO_3_EQ_1_THEN__ETC___d85' from process `\module_fn_pmp_lookup.$proc$module_fn_pmp_lookup.v:483$4961'.
No latch inferred for signal `\module_fn_pmp_lookup.\IF_fn_pmp_lookup_pmpcfg_BITS_12_TO_11_6_EQ_1_7_ETC___d168' from process `\module_fn_pmp_lookup.$proc$module_fn_pmp_lookup.v:504$4966'.
No latch inferred for signal `\module_fn_pmp_lookup.\IF_fn_pmp_lookup_pmpcfg_BITS_20_TO_19_70_EQ_1__ETC___d252' from process `\module_fn_pmp_lookup.$proc$module_fn_pmp_lookup.v:527$4972'.
No latch inferred for signal `\module_fn_pmp_lookup.\IF_fn_pmp_lookup_pmpcfg_BITS_4_TO_3_EQ_1_THEN__ETC___d348' from process `\module_fn_pmp_lookup.$proc$module_fn_pmp_lookup.v:550$4978'.
No latch inferred for signal `\module_fn_pmp_lookup.\IF_fn_pmp_lookup_pmpcfg_BITS_12_TO_11_6_EQ_1_7_ETC___d361' from process `\module_fn_pmp_lookup.$proc$module_fn_pmp_lookup.v:571$4988'.
No latch inferred for signal `\module_fn_pmp_lookup.\IF_fn_pmp_lookup_pmpcfg_BITS_20_TO_19_70_EQ_1__ETC___d375' from process `\module_fn_pmp_lookup.$proc$module_fn_pmp_lookup.v:594$5000'.
No latch inferred for signal `\module_fn_pmp_lookup.\IF_fn_pmp_lookup_pmpcfg_BITS_28_TO_27_54_EQ_1__ETC___d336' from process `\module_fn_pmp_lookup.$proc$module_fn_pmp_lookup.v:617$5012'.

52.3.9. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\SB_DFFNES.\Q' using process `\SB_DFFNES.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1414$5659'.
  created $adff cell `$procdff$7362' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNESS.\Q' using process `\SB_DFFNESS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1353$5652'.
  created $dff cell `$procdff$7363' with negative edge clock.
Creating register for signal `\SB_DFFNER.\Q' using process `\SB_DFFNER.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1273$5648'.
  created $adff cell `$procdff$7364' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNESR.\Q' using process `\SB_DFFNESR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1212$5641'.
  created $dff cell `$procdff$7365' with negative edge clock.
Creating register for signal `\SB_DFFNS.\Q' using process `\SB_DFFNS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1138$5638'.
  created $adff cell `$procdff$7366' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNSS.\Q' using process `\SB_DFFNSS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1088$5635'.
  created $dff cell `$procdff$7367' with negative edge clock.
Creating register for signal `\SB_DFFNR.\Q' using process `\SB_DFFNR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1017$5632'.
  created $adff cell `$procdff$7368' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNSR.\Q' using process `\SB_DFFNSR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:967$5629'.
  created $dff cell `$procdff$7369' with negative edge clock.
Creating register for signal `\SB_DFFNE.\Q' using process `\SB_DFFNE.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:922$5627'.
  created $dff cell `$procdff$7370' with negative edge clock.
Creating register for signal `\SB_DFFN.\Q' using process `\SB_DFFN.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:882$5625'.
  created $dff cell `$procdff$7371' with negative edge clock.
Creating register for signal `\SB_DFFES.\Q' using process `\SB_DFFES.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:803$5621'.
  created $adff cell `$procdff$7372' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFESS.\Q' using process `\SB_DFFESS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:742$5614'.
  created $dff cell `$procdff$7373' with positive edge clock.
Creating register for signal `\SB_DFFER.\Q' using process `\SB_DFFER.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:662$5610'.
  created $adff cell `$procdff$7374' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFESR.\Q' using process `\SB_DFFESR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:601$5603'.
  created $dff cell `$procdff$7375' with positive edge clock.
Creating register for signal `\SB_DFFS.\Q' using process `\SB_DFFS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:527$5600'.
  created $adff cell `$procdff$7376' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFSS.\Q' using process `\SB_DFFSS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:477$5597'.
  created $dff cell `$procdff$7377' with positive edge clock.
Creating register for signal `\SB_DFFR.\Q' using process `\SB_DFFR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:406$5594'.
  created $adff cell `$procdff$7378' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFSR.\Q' using process `\SB_DFFSR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:356$5591'.
  created $dff cell `$procdff$7379' with positive edge clock.
Creating register for signal `\SB_DFFE.\Q' using process `\SB_DFFE.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:311$5589'.
  created $dff cell `$procdff$7380' with positive edge clock.
Creating register for signal `\SB_DFF.\Q' using process `\SB_DFF.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:271$5587'.
  created $dff cell `$procdff$7381' with positive edge clock.
Creating register for signal `$paramod$44bf3f364de125c08c77a464bb47dd656ea26444\Counter.\q_state' using process `$paramod$44bf3f364de125c08c77a464bb47dd656ea26444\Counter.$proc$Counter.v:54$5062'.
  created $dff cell `$procdff$7382' with positive edge clock.
Creating register for signal `$paramod$56698b439944c97e9107048cd4226f712af1b2b1\RegFile.$memwr$\arr$RegFile.v:68$5360_ADDR' using process `$paramod$56698b439944c97e9107048cd4226f712af1b2b1\RegFile.$proc$RegFile.v:65$5361'.
  created $dff cell `$procdff$7383' with positive edge clock.
Creating register for signal `$paramod$56698b439944c97e9107048cd4226f712af1b2b1\RegFile.$memwr$\arr$RegFile.v:68$5360_DATA' using process `$paramod$56698b439944c97e9107048cd4226f712af1b2b1\RegFile.$proc$RegFile.v:65$5361'.
  created $dff cell `$procdff$7384' with positive edge clock.
Creating register for signal `$paramod$56698b439944c97e9107048cd4226f712af1b2b1\RegFile.$memwr$\arr$RegFile.v:68$5360_EN' using process `$paramod$56698b439944c97e9107048cd4226f712af1b2b1\RegFile.$proc$RegFile.v:65$5361'.
  created $dff cell `$procdff$7385' with positive edge clock.
Creating register for signal `$paramod$daadbc6d5d8d25265c1808e519c5f6fbd2f433d0\SizedFIFO.\not_ring_full' using process `$paramod$daadbc6d5d8d25265c1808e519c5f6fbd2f433d0\SizedFIFO.$proc$SizedFIFO.v:107$5031'.
  created $dff cell `$procdff$7386' with positive edge clock.
Creating register for signal `$paramod$daadbc6d5d8d25265c1808e519c5f6fbd2f433d0\SizedFIFO.\ring_empty' using process `$paramod$daadbc6d5d8d25265c1808e519c5f6fbd2f433d0\SizedFIFO.$proc$SizedFIFO.v:107$5031'.
  created $dff cell `$procdff$7387' with positive edge clock.
Creating register for signal `$paramod$daadbc6d5d8d25265c1808e519c5f6fbd2f433d0\SizedFIFO.\head' using process `$paramod$daadbc6d5d8d25265c1808e519c5f6fbd2f433d0\SizedFIFO.$proc$SizedFIFO.v:107$5031'.
  created $dff cell `$procdff$7388' with positive edge clock.
Creating register for signal `$paramod$daadbc6d5d8d25265c1808e519c5f6fbd2f433d0\SizedFIFO.\tail' using process `$paramod$daadbc6d5d8d25265c1808e519c5f6fbd2f433d0\SizedFIFO.$proc$SizedFIFO.v:107$5031'.
  created $dff cell `$procdff$7389' with positive edge clock.
Creating register for signal `$paramod$daadbc6d5d8d25265c1808e519c5f6fbd2f433d0\SizedFIFO.\hasodata' using process `$paramod$daadbc6d5d8d25265c1808e519c5f6fbd2f433d0\SizedFIFO.$proc$SizedFIFO.v:107$5031'.
  created $dff cell `$procdff$7390' with positive edge clock.
Creating register for signal `$paramod$daadbc6d5d8d25265c1808e519c5f6fbd2f433d0\SizedFIFO.\D_OUT' using process `$paramod$daadbc6d5d8d25265c1808e519c5f6fbd2f433d0\SizedFIFO.$proc$SizedFIFO.v:167$5036'.
  created $dff cell `$procdff$7391' with positive edge clock.
Creating register for signal `$paramod$daadbc6d5d8d25265c1808e519c5f6fbd2f433d0\SizedFIFO.$memwr$\arr$SizedFIFO.v:206$5024_ADDR' using process `$paramod$daadbc6d5d8d25265c1808e519c5f6fbd2f433d0\SizedFIFO.$proc$SizedFIFO.v:190$5039'.
  created $dff cell `$procdff$7392' with positive edge clock.
Creating register for signal `$paramod$daadbc6d5d8d25265c1808e519c5f6fbd2f433d0\SizedFIFO.$memwr$\arr$SizedFIFO.v:206$5024_DATA' using process `$paramod$daadbc6d5d8d25265c1808e519c5f6fbd2f433d0\SizedFIFO.$proc$SizedFIFO.v:190$5039'.
  created $dff cell `$procdff$7393' with positive edge clock.
Creating register for signal `$paramod$daadbc6d5d8d25265c1808e519c5f6fbd2f433d0\SizedFIFO.$memwr$\arr$SizedFIFO.v:206$5024_EN' using process `$paramod$daadbc6d5d8d25265c1808e519c5f6fbd2f433d0\SizedFIFO.$proc$SizedFIFO.v:190$5039'.
  created $dff cell `$procdff$7394' with positive edge clock.
Creating register for signal `$paramod$e03903fe67170b9c8463f29c6528d18b0078fcbe\SizedFIFO.\not_ring_full' using process `$paramod$e03903fe67170b9c8463f29c6528d18b0078fcbe\SizedFIFO.$proc$SizedFIFO.v:107$5311'.
  created $dff cell `$procdff$7395' with positive edge clock.
Creating register for signal `$paramod$e03903fe67170b9c8463f29c6528d18b0078fcbe\SizedFIFO.\ring_empty' using process `$paramod$e03903fe67170b9c8463f29c6528d18b0078fcbe\SizedFIFO.$proc$SizedFIFO.v:107$5311'.
  created $dff cell `$procdff$7396' with positive edge clock.
Creating register for signal `$paramod$e03903fe67170b9c8463f29c6528d18b0078fcbe\SizedFIFO.\head' using process `$paramod$e03903fe67170b9c8463f29c6528d18b0078fcbe\SizedFIFO.$proc$SizedFIFO.v:107$5311'.
  created $dff cell `$procdff$7397' with positive edge clock.
Creating register for signal `$paramod$e03903fe67170b9c8463f29c6528d18b0078fcbe\SizedFIFO.\tail' using process `$paramod$e03903fe67170b9c8463f29c6528d18b0078fcbe\SizedFIFO.$proc$SizedFIFO.v:107$5311'.
  created $dff cell `$procdff$7398' with positive edge clock.
Creating register for signal `$paramod$e03903fe67170b9c8463f29c6528d18b0078fcbe\SizedFIFO.\hasodata' using process `$paramod$e03903fe67170b9c8463f29c6528d18b0078fcbe\SizedFIFO.$proc$SizedFIFO.v:107$5311'.
  created $dff cell `$procdff$7399' with positive edge clock.
Creating register for signal `$paramod$e03903fe67170b9c8463f29c6528d18b0078fcbe\SizedFIFO.\D_OUT' using process `$paramod$e03903fe67170b9c8463f29c6528d18b0078fcbe\SizedFIFO.$proc$SizedFIFO.v:167$5316'.
  created $dff cell `$procdff$7400' with positive edge clock.
Creating register for signal `$paramod$e03903fe67170b9c8463f29c6528d18b0078fcbe\SizedFIFO.$memwr$\arr$SizedFIFO.v:206$5304_ADDR' using process `$paramod$e03903fe67170b9c8463f29c6528d18b0078fcbe\SizedFIFO.$proc$SizedFIFO.v:190$5319'.
  created $dff cell `$procdff$7401' with positive edge clock.
Creating register for signal `$paramod$e03903fe67170b9c8463f29c6528d18b0078fcbe\SizedFIFO.$memwr$\arr$SizedFIFO.v:206$5304_DATA' using process `$paramod$e03903fe67170b9c8463f29c6528d18b0078fcbe\SizedFIFO.$proc$SizedFIFO.v:190$5319'.
  created $dff cell `$procdff$7402' with positive edge clock.
Creating register for signal `$paramod$e03903fe67170b9c8463f29c6528d18b0078fcbe\SizedFIFO.$memwr$\arr$SizedFIFO.v:206$5304_EN' using process `$paramod$e03903fe67170b9c8463f29c6528d18b0078fcbe\SizedFIFO.$proc$SizedFIFO.v:190$5319'.
  created $dff cell `$procdff$7403' with positive edge clock.
Creating register for signal `$paramod\Counter\width=32'00000000000000000000000000000011\init=3'000.\q_state' using process `$paramod\Counter\width=32'00000000000000000000000000000011\init=3'000.$proc$Counter.v:54$5055'.
  created $dff cell `$procdff$7404' with positive edge clock.
Creating register for signal `$paramod\FIFO10\guarded=1'1.\empty_reg' using process `$paramod\FIFO10\guarded=1'1.$proc$FIFO10.v:61$5206'.
  created $dff cell `$procdff$7405' with positive edge clock.
Creating register for signal `$paramod\FIFO1\width=32'00000000000000000000000000000010\guarded=1'1.\empty_reg' using process `$paramod\FIFO1\width=32'00000000000000000000000000000010\guarded=1'1.$proc$FIFO1.v:73$5202'.
  created $dff cell `$procdff$7406' with positive edge clock.
Creating register for signal `$paramod\FIFO1\width=32'00000000000000000000000000000010\guarded=1'1.\D_OUT' using process `$paramod\FIFO1\width=32'00000000000000000000000000000010\guarded=1'1.$proc$FIFO1.v:96$5204'.
  created $dff cell `$procdff$7407' with positive edge clock.
Creating register for signal `$paramod\FIFO1\width=32'00000000000000000000000000000011\guarded=1'1.\empty_reg' using process `$paramod\FIFO1\width=32'00000000000000000000000000000011\guarded=1'1.$proc$FIFO1.v:73$5198'.
  created $dff cell `$procdff$7408' with positive edge clock.
Creating register for signal `$paramod\FIFO1\width=32'00000000000000000000000000000011\guarded=1'1.\D_OUT' using process `$paramod\FIFO1\width=32'00000000000000000000000000000011\guarded=1'1.$proc$FIFO1.v:96$5200'.
  created $dff cell `$procdff$7409' with positive edge clock.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000000001\guarded=1'1.\data0_reg' using process `$paramod\FIFO2\width=32'00000000000000000000000000000001\guarded=1'1.$proc$FIFO2.v:110$5265'.
  created $dff cell `$procdff$7410' with positive edge clock.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000000001\guarded=1'1.\data1_reg' using process `$paramod\FIFO2\width=32'00000000000000000000000000000001\guarded=1'1.$proc$FIFO2.v:110$5265'.
  created $dff cell `$procdff$7411' with positive edge clock.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000000001\guarded=1'1.\empty_reg' using process `$paramod\FIFO2\width=32'00000000000000000000000000000001\guarded=1'1.$proc$FIFO2.v:81$5257'.
  created $dff cell `$procdff$7412' with positive edge clock.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000000001\guarded=1'1.\full_reg' using process `$paramod\FIFO2\width=32'00000000000000000000000000000001\guarded=1'1.$proc$FIFO2.v:81$5257'.
  created $dff cell `$procdff$7413' with positive edge clock.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000000110\guarded=1'1.\data0_reg' using process `$paramod\FIFO2\width=32'00000000000000000000000000000110\guarded=1'1.$proc$FIFO2.v:110$5094'.
  created $dff cell `$procdff$7414' with positive edge clock.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000000110\guarded=1'1.\data1_reg' using process `$paramod\FIFO2\width=32'00000000000000000000000000000110\guarded=1'1.$proc$FIFO2.v:110$5094'.
  created $dff cell `$procdff$7415' with positive edge clock.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000000110\guarded=1'1.\empty_reg' using process `$paramod\FIFO2\width=32'00000000000000000000000000000110\guarded=1'1.$proc$FIFO2.v:81$5086'.
  created $dff cell `$procdff$7416' with positive edge clock.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000000110\guarded=1'1.\full_reg' using process `$paramod\FIFO2\width=32'00000000000000000000000000000110\guarded=1'1.$proc$FIFO2.v:81$5086'.
  created $dff cell `$procdff$7417' with positive edge clock.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000100010\guarded=1'1.\data0_reg' using process `$paramod\FIFO2\width=32'00000000000000000000000000100010\guarded=1'1.$proc$FIFO2.v:110$5297'.
  created $dff cell `$procdff$7418' with positive edge clock.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000100010\guarded=1'1.\data1_reg' using process `$paramod\FIFO2\width=32'00000000000000000000000000100010\guarded=1'1.$proc$FIFO2.v:110$5297'.
  created $dff cell `$procdff$7419' with positive edge clock.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000100010\guarded=1'1.\empty_reg' using process `$paramod\FIFO2\width=32'00000000000000000000000000100010\guarded=1'1.$proc$FIFO2.v:81$5289'.
  created $dff cell `$procdff$7420' with positive edge clock.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000100010\guarded=1'1.\full_reg' using process `$paramod\FIFO2\width=32'00000000000000000000000000100010\guarded=1'1.$proc$FIFO2.v:81$5289'.
  created $dff cell `$procdff$7421' with positive edge clock.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000100011\guarded=1'1.\data0_reg' using process `$paramod\FIFO2\width=32'00000000000000000000000000100011\guarded=1'1.$proc$FIFO2.v:110$5398'.
  created $dff cell `$procdff$7422' with positive edge clock.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000100011\guarded=1'1.\data1_reg' using process `$paramod\FIFO2\width=32'00000000000000000000000000100011\guarded=1'1.$proc$FIFO2.v:110$5398'.
  created $dff cell `$procdff$7423' with positive edge clock.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000100011\guarded=1'1.\empty_reg' using process `$paramod\FIFO2\width=32'00000000000000000000000000100011\guarded=1'1.$proc$FIFO2.v:81$5390'.
  created $dff cell `$procdff$7424' with positive edge clock.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000100011\guarded=1'1.\full_reg' using process `$paramod\FIFO2\width=32'00000000000000000000000000100011\guarded=1'1.$proc$FIFO2.v:81$5390'.
  created $dff cell `$procdff$7425' with positive edge clock.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000100111\guarded=1'1.\data0_reg' using process `$paramod\FIFO2\width=32'00000000000000000000000000100111\guarded=1'1.$proc$FIFO2.v:110$5190'.
  created $dff cell `$procdff$7426' with positive edge clock.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000100111\guarded=1'1.\data1_reg' using process `$paramod\FIFO2\width=32'00000000000000000000000000100111\guarded=1'1.$proc$FIFO2.v:110$5190'.
  created $dff cell `$procdff$7427' with positive edge clock.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000100111\guarded=1'1.\empty_reg' using process `$paramod\FIFO2\width=32'00000000000000000000000000100111\guarded=1'1.$proc$FIFO2.v:81$5182'.
  created $dff cell `$procdff$7428' with positive edge clock.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000100111\guarded=1'1.\full_reg' using process `$paramod\FIFO2\width=32'00000000000000000000000000100111\guarded=1'1.$proc$FIFO2.v:81$5182'.
  created $dff cell `$procdff$7429' with positive edge clock.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000101001\guarded=1'1.\data0_reg' using process `$paramod\FIFO2\width=32'00000000000000000000000000101001\guarded=1'1.$proc$FIFO2.v:110$5126'.
  created $dff cell `$procdff$7430' with positive edge clock.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000101001\guarded=1'1.\data1_reg' using process `$paramod\FIFO2\width=32'00000000000000000000000000101001\guarded=1'1.$proc$FIFO2.v:110$5126'.
  created $dff cell `$procdff$7431' with positive edge clock.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000101001\guarded=1'1.\empty_reg' using process `$paramod\FIFO2\width=32'00000000000000000000000000101001\guarded=1'1.$proc$FIFO2.v:81$5118'.
  created $dff cell `$procdff$7432' with positive edge clock.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000101001\guarded=1'1.\full_reg' using process `$paramod\FIFO2\width=32'00000000000000000000000000101001\guarded=1'1.$proc$FIFO2.v:81$5118'.
  created $dff cell `$procdff$7433' with positive edge clock.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000110100\guarded=1'1.\data0_reg' using process `$paramod\FIFO2\width=32'00000000000000000000000000110100\guarded=1'1.$proc$FIFO2.v:110$5158'.
  created $dff cell `$procdff$7434' with positive edge clock.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000110100\guarded=1'1.\data1_reg' using process `$paramod\FIFO2\width=32'00000000000000000000000000110100\guarded=1'1.$proc$FIFO2.v:110$5158'.
  created $dff cell `$procdff$7435' with positive edge clock.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000110100\guarded=1'1.\empty_reg' using process `$paramod\FIFO2\width=32'00000000000000000000000000110100\guarded=1'1.$proc$FIFO2.v:81$5150'.
  created $dff cell `$procdff$7436' with positive edge clock.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000110100\guarded=1'1.\full_reg' using process `$paramod\FIFO2\width=32'00000000000000000000000000110100\guarded=1'1.$proc$FIFO2.v:81$5150'.
  created $dff cell `$procdff$7437' with positive edge clock.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000001000110\guarded=1'1.\data0_reg' using process `$paramod\FIFO2\width=32'00000000000000000000000001000110\guarded=1'1.$proc$FIFO2.v:110$5233'.
  created $dff cell `$procdff$7438' with positive edge clock.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000001000110\guarded=1'1.\data1_reg' using process `$paramod\FIFO2\width=32'00000000000000000000000001000110\guarded=1'1.$proc$FIFO2.v:110$5233'.
  created $dff cell `$procdff$7439' with positive edge clock.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000001000110\guarded=1'1.\empty_reg' using process `$paramod\FIFO2\width=32'00000000000000000000000001000110\guarded=1'1.$proc$FIFO2.v:81$5225'.
  created $dff cell `$procdff$7440' with positive edge clock.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000001000110\guarded=1'1.\full_reg' using process `$paramod\FIFO2\width=32'00000000000000000000000001000110\guarded=1'1.$proc$FIFO2.v:81$5225'.
  created $dff cell `$procdff$7441' with positive edge clock.
Creating register for signal `$paramod\FIFOL1\width=32'00000000000000000000000000100010.\empty_reg' using process `$paramod\FIFOL1\width=32'00000000000000000000000000100010.$proc$FIFOL1.v:74$5357'.
  created $dff cell `$procdff$7442' with positive edge clock.
Creating register for signal `$paramod\FIFOL1\width=32'00000000000000000000000000100010.\D_OUT' using process `$paramod\FIFOL1\width=32'00000000000000000000000000100010.$proc$FIFOL1.v:97$5359'.
  created $dff cell `$procdff$7443' with positive edge clock.
Creating register for signal `$paramod\FIFOL1\width=32'00000000000000000000000000100110.\empty_reg' using process `$paramod\FIFOL1\width=32'00000000000000000000000000100110.$proc$FIFOL1.v:74$5347'.
  created $dff cell `$procdff$7444' with positive edge clock.
Creating register for signal `$paramod\FIFOL1\width=32'00000000000000000000000000100110.\D_OUT' using process `$paramod\FIFOL1\width=32'00000000000000000000000000100110.$proc$FIFOL1.v:97$5349'.
  created $dff cell `$procdff$7445' with positive edge clock.
Creating register for signal `$paramod\FIFOL1\width=32'00000000000000000000000000110011.\empty_reg' using process `$paramod\FIFOL1\width=32'00000000000000000000000000110011.$proc$FIFOL1.v:74$5342'.
  created $dff cell `$procdff$7446' with positive edge clock.
Creating register for signal `$paramod\FIFOL1\width=32'00000000000000000000000000110011.\D_OUT' using process `$paramod\FIFOL1\width=32'00000000000000000000000000110011.$proc$FIFOL1.v:97$5344'.
  created $dff cell `$procdff$7447' with positive edge clock.
Creating register for signal `$paramod\FIFOL1\width=32'00000000000000000000000000111110.\empty_reg' using process `$paramod\FIFOL1\width=32'00000000000000000000000000111110.$proc$FIFOL1.v:74$5352'.
  created $dff cell `$procdff$7448' with positive edge clock.
Creating register for signal `$paramod\FIFOL1\width=32'00000000000000000000000000111110.\D_OUT' using process `$paramod\FIFOL1\width=32'00000000000000000000000000111110.$proc$FIFOL1.v:97$5354'.
  created $dff cell `$procdff$7449' with positive edge clock.
Creating register for signal `$paramod\FIFOL1\width=32'00000000000000000000000001000000.\empty_reg' using process `$paramod\FIFOL1\width=32'00000000000000000000000001000000.$proc$FIFOL1.v:74$5337'.
  created $dff cell `$procdff$7450' with positive edge clock.
Creating register for signal `$paramod\FIFOL1\width=32'00000000000000000000000001000000.\D_OUT' using process `$paramod\FIFOL1\width=32'00000000000000000000000001000000.$proc$FIFOL1.v:97$5339'.
  created $dff cell `$procdff$7451' with positive edge clock.
Creating register for signal `$paramod\FIFOL1\width=32'00000000000000000000000001000110.\empty_reg' using process `$paramod\FIFOL1\width=32'00000000000000000000000001000110.$proc$FIFOL1.v:74$5407'.
  created $dff cell `$procdff$7452' with positive edge clock.
Creating register for signal `$paramod\FIFOL1\width=32'00000000000000000000000001000110.\D_OUT' using process `$paramod\FIFOL1\width=32'00000000000000000000000001000110.$proc$FIFOL1.v:97$5409'.
  created $dff cell `$procdff$7453' with positive edge clock.
Creating register for signal `$paramod\FIFOL1\width=32'00000000000000000000000001100111.\empty_reg' using process `$paramod\FIFOL1\width=32'00000000000000000000000001100111.$proc$FIFOL1.v:74$5412'.
  created $dff cell `$procdff$7454' with positive edge clock.
Creating register for signal `$paramod\FIFOL1\width=32'00000000000000000000000001100111.\D_OUT' using process `$paramod\FIFOL1\width=32'00000000000000000000000001100111.$proc$FIFOL1.v:97$5414'.
  created $dff cell `$procdff$7455' with positive edge clock.
Creating register for signal `\mkSoc.\clint_clint_msip' using process `\mkSoc.$proc$mkSoc.v:10384$2785'.
  created $dff cell `$procdff$7456' with positive edge clock.
Creating register for signal `\mkSoc.\clint_clint_mtip' using process `\mkSoc.$proc$mkSoc.v:10384$2785'.
  created $dff cell `$procdff$7457' with positive edge clock.
Creating register for signal `\mkSoc.\clint_clint_rg_tick' using process `\mkSoc.$proc$mkSoc.v:10384$2785'.
  created $dff cell `$procdff$7458' with positive edge clock.
Creating register for signal `\mkSoc.\clint_clint_rgmtime' using process `\mkSoc.$proc$mkSoc.v:10384$2785'.
  created $dff cell `$procdff$7459' with positive edge clock.
Creating register for signal `\mkSoc.\clint_clint_rgmtimecmp' using process `\mkSoc.$proc$mkSoc.v:10384$2785'.
  created $dff cell `$procdff$7460' with positive edge clock.
Creating register for signal `\mkSoc.\clint_rg_rdburst_count' using process `\mkSoc.$proc$mkSoc.v:10384$2785'.
  created $dff cell `$procdff$7461' with positive edge clock.
Creating register for signal `\mkSoc.\clint_rg_rdpacket' using process `\mkSoc.$proc$mkSoc.v:10384$2785'.
  created $dff cell `$procdff$7462' with positive edge clock.
Creating register for signal `\mkSoc.\clint_rg_wrburst_count' using process `\mkSoc.$proc$mkSoc.v:10384$2785'.
  created $dff cell `$procdff$7463' with positive edge clock.
Creating register for signal `\mkSoc.\clint_rg_wrpacket' using process `\mkSoc.$proc$mkSoc.v:10384$2785'.
  created $dff cell `$procdff$7464' with positive edge clock.
Creating register for signal `\mkSoc.\err_slave_read_state' using process `\mkSoc.$proc$mkSoc.v:10384$2785'.
  created $dff cell `$procdff$7465' with positive edge clock.
Creating register for signal `\mkSoc.\err_slave_rg_rd_id' using process `\mkSoc.$proc$mkSoc.v:10384$2785'.
  created $dff cell `$procdff$7466' with positive edge clock.
Creating register for signal `\mkSoc.\err_slave_rg_read_length' using process `\mkSoc.$proc$mkSoc.v:10384$2785'.
  created $dff cell `$procdff$7467' with positive edge clock.
Creating register for signal `\mkSoc.\err_slave_rg_readburst_counter' using process `\mkSoc.$proc$mkSoc.v:10384$2785'.
  created $dff cell `$procdff$7468' with positive edge clock.
Creating register for signal `\mkSoc.\err_slave_rg_write_response' using process `\mkSoc.$proc$mkSoc.v:10384$2785'.
  created $dff cell `$procdff$7469' with positive edge clock.
Creating register for signal `\mkSoc.\err_slave_write_state' using process `\mkSoc.$proc$mkSoc.v:10384$2785'.
  created $dff cell `$procdff$7470' with positive edge clock.
Creating register for signal `\mkSoc.\uart_rg_rdburst_count' using process `\mkSoc.$proc$mkSoc.v:10384$2785'.
  created $dff cell `$procdff$7471' with positive edge clock.
Creating register for signal `\mkSoc.\uart_rg_rdpacket' using process `\mkSoc.$proc$mkSoc.v:10384$2785'.
  created $dff cell `$procdff$7472' with positive edge clock.
Creating register for signal `\mkSoc.\uart_rg_wrburst_count' using process `\mkSoc.$proc$mkSoc.v:10384$2785'.
  created $dff cell `$procdff$7473' with positive edge clock.
Creating register for signal `\mkSoc.\uart_rg_wrpacket' using process `\mkSoc.$proc$mkSoc.v:10384$2785'.
  created $dff cell `$procdff$7474' with positive edge clock.
Creating register for signal `\mkSoc.\uart_user_ifc_baud_value' using process `\mkSoc.$proc$mkSoc.v:10384$2785'.
  created $dff cell `$procdff$7475' with positive edge clock.
Creating register for signal `\mkSoc.\uart_user_ifc_uart_fifoRecv_countReg' using process `\mkSoc.$proc$mkSoc.v:10384$2785'.
  created $dff cell `$procdff$7476' with positive edge clock.
Creating register for signal `\mkSoc.\uart_user_ifc_uart_fifoXmit_countReg' using process `\mkSoc.$proc$mkSoc.v:10384$2785'.
  created $dff cell `$procdff$7477' with positive edge clock.
Creating register for signal `\mkSoc.\uart_user_ifc_uart_rRecvData' using process `\mkSoc.$proc$mkSoc.v:10384$2785'.
  created $dff cell `$procdff$7478' with positive edge clock.
Creating register for signal `\mkSoc.\uart_user_ifc_uart_vrRecvBuffer_0' using process `\mkSoc.$proc$mkSoc.v:10384$2785'.
  created $dff cell `$procdff$7479' with positive edge clock.
Creating register for signal `\mkSoc.\uart_user_ifc_uart_vrRecvBuffer_1' using process `\mkSoc.$proc$mkSoc.v:10384$2785'.
  created $dff cell `$procdff$7480' with positive edge clock.
Creating register for signal `\mkSoc.\uart_user_ifc_uart_vrRecvBuffer_2' using process `\mkSoc.$proc$mkSoc.v:10384$2785'.
  created $dff cell `$procdff$7481' with positive edge clock.
Creating register for signal `\mkSoc.\uart_user_ifc_uart_vrRecvBuffer_3' using process `\mkSoc.$proc$mkSoc.v:10384$2785'.
  created $dff cell `$procdff$7482' with positive edge clock.
Creating register for signal `\mkSoc.\uart_user_ifc_uart_vrRecvBuffer_4' using process `\mkSoc.$proc$mkSoc.v:10384$2785'.
  created $dff cell `$procdff$7483' with positive edge clock.
Creating register for signal `\mkSoc.\uart_user_ifc_uart_vrRecvBuffer_5' using process `\mkSoc.$proc$mkSoc.v:10384$2785'.
  created $dff cell `$procdff$7484' with positive edge clock.
Creating register for signal `\mkSoc.\uart_user_ifc_uart_vrRecvBuffer_6' using process `\mkSoc.$proc$mkSoc.v:10384$2785'.
  created $dff cell `$procdff$7485' with positive edge clock.
Creating register for signal `\mkSoc.\uart_user_ifc_uart_vrRecvBuffer_7' using process `\mkSoc.$proc$mkSoc.v:10384$2785'.
  created $dff cell `$procdff$7486' with positive edge clock.
Creating register for signal `\mkSoc.\uart_user_ifc_uart_vrXmitBuffer_0' using process `\mkSoc.$proc$mkSoc.v:10384$2785'.
  created $dff cell `$procdff$7487' with positive edge clock.
Creating register for signal `\mkSoc.\uart_user_ifc_uart_vrXmitBuffer_1' using process `\mkSoc.$proc$mkSoc.v:10384$2785'.
  created $dff cell `$procdff$7488' with positive edge clock.
Creating register for signal `\mkSoc.\uart_user_ifc_uart_vrXmitBuffer_2' using process `\mkSoc.$proc$mkSoc.v:10384$2785'.
  created $dff cell `$procdff$7489' with positive edge clock.
Creating register for signal `\mkSoc.\uart_user_ifc_uart_vrXmitBuffer_3' using process `\mkSoc.$proc$mkSoc.v:10384$2785'.
  created $dff cell `$procdff$7490' with positive edge clock.
Creating register for signal `\mkSoc.\uart_user_ifc_uart_vrXmitBuffer_4' using process `\mkSoc.$proc$mkSoc.v:10384$2785'.
  created $dff cell `$procdff$7491' with positive edge clock.
Creating register for signal `\mkSoc.\uart_user_ifc_uart_vrXmitBuffer_5' using process `\mkSoc.$proc$mkSoc.v:10384$2785'.
  created $dff cell `$procdff$7492' with positive edge clock.
Creating register for signal `\mkSoc.\uart_user_ifc_uart_vrXmitBuffer_6' using process `\mkSoc.$proc$mkSoc.v:10384$2785'.
  created $dff cell `$procdff$7493' with positive edge clock.
Creating register for signal `\mkSoc.\uart_user_ifc_uart_vrXmitBuffer_7' using process `\mkSoc.$proc$mkSoc.v:10384$2785'.
  created $dff cell `$procdff$7494' with positive edge clock.
Creating register for signal `\mkSoc.\uart_user_ifc_uart_rRecvBitCount' using process `\mkSoc.$proc$mkSoc.v:10532$2787'.
  created $adff cell `$procdff$7495' with positive edge clock and negative level reset.
Creating register for signal `\mkSoc.\uart_user_ifc_uart_rRecvCellCount' using process `\mkSoc.$proc$mkSoc.v:10532$2787'.
  created $adff cell `$procdff$7496' with positive edge clock and negative level reset.
Creating register for signal `\mkSoc.\uart_user_ifc_uart_rRecvParity' using process `\mkSoc.$proc$mkSoc.v:10532$2787'.
  created $adff cell `$procdff$7497' with positive edge clock and negative level reset.
Creating register for signal `\mkSoc.\uart_user_ifc_uart_rRecvState' using process `\mkSoc.$proc$mkSoc.v:10532$2787'.
  created $adff cell `$procdff$7498' with positive edge clock and negative level reset.
Creating register for signal `\mkSoc.\uart_user_ifc_uart_rXmitBitCount' using process `\mkSoc.$proc$mkSoc.v:10532$2787'.
  created $adff cell `$procdff$7499' with positive edge clock and negative level reset.
Creating register for signal `\mkSoc.\uart_user_ifc_uart_rXmitCellCount' using process `\mkSoc.$proc$mkSoc.v:10532$2787'.
  created $adff cell `$procdff$7500' with positive edge clock and negative level reset.
Creating register for signal `\mkSoc.\uart_user_ifc_uart_rXmitDataOut' using process `\mkSoc.$proc$mkSoc.v:10532$2787'.
  created $adff cell `$procdff$7501' with positive edge clock and negative level reset.
Creating register for signal `\mkSoc.\uart_user_ifc_uart_rXmitParity' using process `\mkSoc.$proc$mkSoc.v:10532$2787'.
  created $adff cell `$procdff$7502' with positive edge clock and negative level reset.
Creating register for signal `\mkSoc.\uart_user_ifc_uart_rXmitState' using process `\mkSoc.$proc$mkSoc.v:10532$2787'.
  created $adff cell `$procdff$7503' with positive edge clock and negative level reset.
Creating register for signal `\mkcsrfile.\ext_ueip' using process `\mkcsrfile.$proc$mkcsrfile.v:2136$3647'.
  created $adff cell `$procdff$7504' with positive edge clock and negative level reset.
Creating register for signal `\mkcsrfile.\fflags' using process `\mkcsrfile.$proc$mkcsrfile.v:2136$3647'.
  created $adff cell `$procdff$7505' with positive edge clock and negative level reset.
Creating register for signal `\mkcsrfile.\frm' using process `\mkcsrfile.$proc$mkcsrfile.v:2136$3647'.
  created $adff cell `$procdff$7506' with positive edge clock and negative level reset.
Creating register for signal `\mkcsrfile.\fs' using process `\mkcsrfile.$proc$mkcsrfile.v:2136$3647'.
  created $adff cell `$procdff$7507' with positive edge clock and negative level reset.
Creating register for signal `\mkcsrfile.\mcycle' using process `\mkcsrfile.$proc$mkcsrfile.v:2136$3647'.
  created $adff cell `$procdff$7508' with positive edge clock and negative level reset.
Creating register for signal `\mkcsrfile.\mcycleh' using process `\mkcsrfile.$proc$mkcsrfile.v:2136$3647'.
  created $adff cell `$procdff$7509' with positive edge clock and negative level reset.
Creating register for signal `\mkcsrfile.\mhpmcounter_0' using process `\mkcsrfile.$proc$mkcsrfile.v:2136$3647'.
  created $adff cell `$procdff$7510' with positive edge clock and negative level reset.
Creating register for signal `\mkcsrfile.\mhpmevent_0' using process `\mkcsrfile.$proc$mkcsrfile.v:2136$3647'.
  created $adff cell `$procdff$7511' with positive edge clock and negative level reset.
Creating register for signal `\mkcsrfile.\minstret' using process `\mkcsrfile.$proc$mkcsrfile.v:2136$3647'.
  created $adff cell `$procdff$7512' with positive edge clock and negative level reset.
Creating register for signal `\mkcsrfile.\minstreth' using process `\mkcsrfile.$proc$mkcsrfile.v:2136$3647'.
  created $adff cell `$procdff$7513' with positive edge clock and negative level reset.
Creating register for signal `\mkcsrfile.\misa_i' using process `\mkcsrfile.$proc$mkcsrfile.v:2136$3647'.
  created $adff cell `$procdff$7514' with positive edge clock and negative level reset.
Creating register for signal `\mkcsrfile.\misa_n' using process `\mkcsrfile.$proc$mkcsrfile.v:2136$3647'.
  created $adff cell `$procdff$7515' with positive edge clock and negative level reset.
Creating register for signal `\mkcsrfile.\misa_u' using process `\mkcsrfile.$proc$mkcsrfile.v:2136$3647'.
  created $adff cell `$procdff$7516' with positive edge clock and negative level reset.
Creating register for signal `\mkcsrfile.\rg_clint_mtime' using process `\mkcsrfile.$proc$mkcsrfile.v:2136$3647'.
  created $adff cell `$procdff$7517' with positive edge clock and negative level reset.
Creating register for signal `\mkcsrfile.\rg_mcause' using process `\mkcsrfile.$proc$mkcsrfile.v:2136$3647'.
  created $adff cell `$procdff$7518' with positive edge clock and negative level reset.
Creating register for signal `\mkcsrfile.\rg_mcounteren' using process `\mkcsrfile.$proc$mkcsrfile.v:2136$3647'.
  created $adff cell `$procdff$7519' with positive edge clock and negative level reset.
Creating register for signal `\mkcsrfile.\rg_medeleg_l10' using process `\mkcsrfile.$proc$mkcsrfile.v:2136$3647'.
  created $adff cell `$procdff$7520' with positive edge clock and negative level reset.
Creating register for signal `\mkcsrfile.\rg_medeleg_m2' using process `\mkcsrfile.$proc$mkcsrfile.v:2136$3647'.
  created $adff cell `$procdff$7521' with positive edge clock and negative level reset.
Creating register for signal `\mkcsrfile.\rg_medeleg_u1' using process `\mkcsrfile.$proc$mkcsrfile.v:2136$3647'.
  created $adff cell `$procdff$7522' with positive edge clock and negative level reset.
Creating register for signal `\mkcsrfile.\rg_meie' using process `\mkcsrfile.$proc$mkcsrfile.v:2136$3647'.
  created $adff cell `$procdff$7523' with positive edge clock and negative level reset.
Creating register for signal `\mkcsrfile.\rg_meip' using process `\mkcsrfile.$proc$mkcsrfile.v:2136$3647'.
  created $adff cell `$procdff$7524' with positive edge clock and negative level reset.
Creating register for signal `\mkcsrfile.\rg_mepc' using process `\mkcsrfile.$proc$mkcsrfile.v:2136$3647'.
  created $adff cell `$procdff$7525' with positive edge clock and negative level reset.
Creating register for signal `\mkcsrfile.\rg_mideleg' using process `\mkcsrfile.$proc$mkcsrfile.v:2136$3647'.
  created $adff cell `$procdff$7526' with positive edge clock and negative level reset.
Creating register for signal `\mkcsrfile.\rg_mie' using process `\mkcsrfile.$proc$mkcsrfile.v:2136$3647'.
  created $adff cell `$procdff$7527' with positive edge clock and negative level reset.
Creating register for signal `\mkcsrfile.\rg_minterrupt' using process `\mkcsrfile.$proc$mkcsrfile.v:2136$3647'.
  created $adff cell `$procdff$7528' with positive edge clock and negative level reset.
Creating register for signal `\mkcsrfile.\rg_mode' using process `\mkcsrfile.$proc$mkcsrfile.v:2136$3647'.
  created $adff cell `$procdff$7529' with positive edge clock and negative level reset.
Creating register for signal `\mkcsrfile.\rg_mpie' using process `\mkcsrfile.$proc$mkcsrfile.v:2136$3647'.
  created $adff cell `$procdff$7530' with positive edge clock and negative level reset.
Creating register for signal `\mkcsrfile.\rg_mpp' using process `\mkcsrfile.$proc$mkcsrfile.v:2136$3647'.
  created $adff cell `$procdff$7531' with positive edge clock and negative level reset.
Creating register for signal `\mkcsrfile.\rg_mprv' using process `\mkcsrfile.$proc$mkcsrfile.v:2136$3647'.
  created $adff cell `$procdff$7532' with positive edge clock and negative level reset.
Creating register for signal `\mkcsrfile.\rg_mscratch' using process `\mkcsrfile.$proc$mkcsrfile.v:2136$3647'.
  created $adff cell `$procdff$7533' with positive edge clock and negative level reset.
Creating register for signal `\mkcsrfile.\rg_msie' using process `\mkcsrfile.$proc$mkcsrfile.v:2136$3647'.
  created $adff cell `$procdff$7534' with positive edge clock and negative level reset.
Creating register for signal `\mkcsrfile.\rg_msip' using process `\mkcsrfile.$proc$mkcsrfile.v:2136$3647'.
  created $adff cell `$procdff$7535' with positive edge clock and negative level reset.
Creating register for signal `\mkcsrfile.\rg_mtie' using process `\mkcsrfile.$proc$mkcsrfile.v:2136$3647'.
  created $adff cell `$procdff$7536' with positive edge clock and negative level reset.
Creating register for signal `\mkcsrfile.\rg_mtip' using process `\mkcsrfile.$proc$mkcsrfile.v:2136$3647'.
  created $adff cell `$procdff$7537' with positive edge clock and negative level reset.
Creating register for signal `\mkcsrfile.\rg_mtval' using process `\mkcsrfile.$proc$mkcsrfile.v:2136$3647'.
  created $adff cell `$procdff$7538' with positive edge clock and negative level reset.
Creating register for signal `\mkcsrfile.\rg_mtvec' using process `\mkcsrfile.$proc$mkcsrfile.v:2136$3647'.
  created $adff cell `$procdff$7539' with positive edge clock and negative level reset.
Creating register for signal `\mkcsrfile.\rg_prv' using process `\mkcsrfile.$proc$mkcsrfile.v:2136$3647'.
  created $adff cell `$procdff$7540' with positive edge clock and negative level reset.
Creating register for signal `\mkcsrfile.\rg_ucause' using process `\mkcsrfile.$proc$mkcsrfile.v:2136$3647'.
  created $adff cell `$procdff$7541' with positive edge clock and negative level reset.
Creating register for signal `\mkcsrfile.\rg_ueie' using process `\mkcsrfile.$proc$mkcsrfile.v:2136$3647'.
  created $adff cell `$procdff$7542' with positive edge clock and negative level reset.
Creating register for signal `\mkcsrfile.\rg_uepc' using process `\mkcsrfile.$proc$mkcsrfile.v:2136$3647'.
  created $adff cell `$procdff$7543' with positive edge clock and negative level reset.
Creating register for signal `\mkcsrfile.\rg_uie' using process `\mkcsrfile.$proc$mkcsrfile.v:2136$3647'.
  created $adff cell `$procdff$7544' with positive edge clock and negative level reset.
Creating register for signal `\mkcsrfile.\rg_uinterrupt' using process `\mkcsrfile.$proc$mkcsrfile.v:2136$3647'.
  created $adff cell `$procdff$7545' with positive edge clock and negative level reset.
Creating register for signal `\mkcsrfile.\rg_umode' using process `\mkcsrfile.$proc$mkcsrfile.v:2136$3647'.
  created $adff cell `$procdff$7546' with positive edge clock and negative level reset.
Creating register for signal `\mkcsrfile.\rg_upie' using process `\mkcsrfile.$proc$mkcsrfile.v:2136$3647'.
  created $adff cell `$procdff$7547' with positive edge clock and negative level reset.
Creating register for signal `\mkcsrfile.\rg_uscratch' using process `\mkcsrfile.$proc$mkcsrfile.v:2136$3647'.
  created $adff cell `$procdff$7548' with positive edge clock and negative level reset.
Creating register for signal `\mkcsrfile.\rg_usie' using process `\mkcsrfile.$proc$mkcsrfile.v:2136$3647'.
  created $adff cell `$procdff$7549' with positive edge clock and negative level reset.
Creating register for signal `\mkcsrfile.\rg_usip' using process `\mkcsrfile.$proc$mkcsrfile.v:2136$3647'.
  created $adff cell `$procdff$7550' with positive edge clock and negative level reset.
Creating register for signal `\mkcsrfile.\rg_utie' using process `\mkcsrfile.$proc$mkcsrfile.v:2136$3647'.
  created $adff cell `$procdff$7551' with positive edge clock and negative level reset.
Creating register for signal `\mkcsrfile.\rg_utip' using process `\mkcsrfile.$proc$mkcsrfile.v:2136$3647'.
  created $adff cell `$procdff$7552' with positive edge clock and negative level reset.
Creating register for signal `\mkcsrfile.\rg_utval' using process `\mkcsrfile.$proc$mkcsrfile.v:2136$3647'.
  created $adff cell `$procdff$7553' with positive edge clock and negative level reset.
Creating register for signal `\mkcsrfile.\rg_utvec' using process `\mkcsrfile.$proc$mkcsrfile.v:2136$3647'.
  created $adff cell `$procdff$7554' with positive edge clock and negative level reset.
Creating register for signal `\mkcsrfile.\soft_ueip' using process `\mkcsrfile.$proc$mkcsrfile.v:2136$3647'.
  created $adff cell `$procdff$7555' with positive edge clock and negative level reset.
Creating register for signal `\mkcsrfile.\trigger_index' using process `\mkcsrfile.$proc$mkcsrfile.v:2136$3647'.
  created $adff cell `$procdff$7556' with positive edge clock and negative level reset.
Creating register for signal `\mkcsrfile.\v_pmp_addr_0' using process `\mkcsrfile.$proc$mkcsrfile.v:2136$3647'.
  created $adff cell `$procdff$7557' with positive edge clock and negative level reset.
Creating register for signal `\mkcsrfile.\v_pmp_addr_1' using process `\mkcsrfile.$proc$mkcsrfile.v:2136$3647'.
  created $adff cell `$procdff$7558' with positive edge clock and negative level reset.
Creating register for signal `\mkcsrfile.\v_pmp_addr_2' using process `\mkcsrfile.$proc$mkcsrfile.v:2136$3647'.
  created $adff cell `$procdff$7559' with positive edge clock and negative level reset.
Creating register for signal `\mkcsrfile.\v_pmp_addr_3' using process `\mkcsrfile.$proc$mkcsrfile.v:2136$3647'.
  created $adff cell `$procdff$7560' with positive edge clock and negative level reset.
Creating register for signal `\mkcsrfile.\v_pmp_cfg_0' using process `\mkcsrfile.$proc$mkcsrfile.v:2136$3647'.
  created $adff cell `$procdff$7561' with positive edge clock and negative level reset.
Creating register for signal `\mkcsrfile.\v_pmp_cfg_1' using process `\mkcsrfile.$proc$mkcsrfile.v:2136$3647'.
  created $adff cell `$procdff$7562' with positive edge clock and negative level reset.
Creating register for signal `\mkcsrfile.\v_pmp_cfg_2' using process `\mkcsrfile.$proc$mkcsrfile.v:2136$3647'.
  created $adff cell `$procdff$7563' with positive edge clock and negative level reset.
Creating register for signal `\mkcsrfile.\v_pmp_cfg_3' using process `\mkcsrfile.$proc$mkcsrfile.v:2136$3647'.
  created $adff cell `$procdff$7564' with positive edge clock and negative level reset.
Creating register for signal `\mkcsrfile.\v_tinfo_0' using process `\mkcsrfile.$proc$mkcsrfile.v:2136$3647'.
  created $adff cell `$procdff$7565' with positive edge clock and negative level reset.
Creating register for signal `\mkcsrfile.\v_tinfo_1' using process `\mkcsrfile.$proc$mkcsrfile.v:2136$3647'.
  created $adff cell `$procdff$7566' with positive edge clock and negative level reset.
Creating register for signal `\mkcsrfile.\v_trig_tdata1_0' using process `\mkcsrfile.$proc$mkcsrfile.v:2136$3647'.
  created $adff cell `$procdff$7567' with positive edge clock and negative level reset.
Creating register for signal `\mkcsrfile.\v_trig_tdata1_1' using process `\mkcsrfile.$proc$mkcsrfile.v:2136$3647'.
  created $adff cell `$procdff$7568' with positive edge clock and negative level reset.
Creating register for signal `\mkcsrfile.\v_trig_tdata2_0' using process `\mkcsrfile.$proc$mkcsrfile.v:2136$3647'.
  created $adff cell `$procdff$7569' with positive edge clock and negative level reset.
Creating register for signal `\mkcsrfile.\v_trig_tdata2_1' using process `\mkcsrfile.$proc$mkcsrfile.v:2136$3647'.
  created $adff cell `$procdff$7570' with positive edge clock and negative level reset.
Creating register for signal `\mkcsrfile.\v_trig_tdata3_0' using process `\mkcsrfile.$proc$mkcsrfile.v:2136$3647'.
  created $adff cell `$procdff$7571' with positive edge clock and negative level reset.
Creating register for signal `\mkcsrfile.\v_trig_tdata3_1' using process `\mkcsrfile.$proc$mkcsrfile.v:2136$3647'.
  created $adff cell `$procdff$7572' with positive edge clock and negative level reset.
Creating register for signal `\mkeclass.\rg_wEpoch' using process `\mkeclass.$proc$mkeclass.v:1547$3730'.
  created $adff cell `$procdff$7573' with positive edge clock and negative level reset.
Creating register for signal `\mksign_dump_axi4.\dump' using process `\mksign_dump_axi4.$proc$mksign_dump_axi4.v:1072$3891'.
  created $adff cell `$procdff$7574' with positive edge clock and negative level reset.
Creating register for signal `\mksign_dump_axi4.\rg_cnt' using process `\mksign_dump_axi4.$proc$mksign_dump_axi4.v:1072$3891'.
  created $adff cell `$procdff$7575' with positive edge clock and negative level reset.
Creating register for signal `\mksign_dump_axi4.\dataarray_0' using process `\mksign_dump_axi4.$proc$mksign_dump_axi4.v:1072$3891'.
  created $adff cell `$procdff$7576' with positive edge clock and negative level reset.
Creating register for signal `\mksign_dump_axi4.\dataarray_1' using process `\mksign_dump_axi4.$proc$mksign_dump_axi4.v:1072$3891'.
  created $adff cell `$procdff$7577' with positive edge clock and negative level reset.
Creating register for signal `\mksign_dump_axi4.\dataarray_2' using process `\mksign_dump_axi4.$proc$mksign_dump_axi4.v:1072$3891'.
  created $adff cell `$procdff$7578' with positive edge clock and negative level reset.
Creating register for signal `\mksign_dump_axi4.\dataarray_3' using process `\mksign_dump_axi4.$proc$mksign_dump_axi4.v:1072$3891'.
  created $adff cell `$procdff$7579' with positive edge clock and negative level reset.
Creating register for signal `\mksign_dump_axi4.\rg_end_address' using process `\mksign_dump_axi4.$proc$mksign_dump_axi4.v:1072$3891'.
  created $adff cell `$procdff$7580' with positive edge clock and negative level reset.
Creating register for signal `\mksign_dump_axi4.\rg_end_sim' using process `\mksign_dump_axi4.$proc$mksign_dump_axi4.v:1072$3891'.
  created $adff cell `$procdff$7581' with positive edge clock and negative level reset.
Creating register for signal `\mksign_dump_axi4.\rg_start' using process `\mksign_dump_axi4.$proc$mksign_dump_axi4.v:1072$3891'.
  created $adff cell `$procdff$7582' with positive edge clock and negative level reset.
Creating register for signal `\mksign_dump_axi4.\rg_start_address' using process `\mksign_dump_axi4.$proc$mksign_dump_axi4.v:1072$3891'.
  created $adff cell `$procdff$7583' with positive edge clock and negative level reset.
Creating register for signal `\mksign_dump_axi4.\rg_total_count' using process `\mksign_dump_axi4.$proc$mksign_dump_axi4.v:1072$3891'.
  created $adff cell `$procdff$7584' with positive edge clock and negative level reset.
Creating register for signal `\mksign_dump_axi4.\rg_word_count' using process `\mksign_dump_axi4.$proc$mksign_dump_axi4.v:1072$3891'.
  created $adff cell `$procdff$7585' with positive edge clock and negative level reset.
Creating register for signal `\mkstage1.\rg_wEpoch' using process `\mkstage1.$proc$mkstage1.v:1049$4051'.
  created $adff cell `$procdff$7586' with positive edge clock and negative level reset.
Creating register for signal `\mkstage1.\rg_action' using process `\mkstage1.$proc$mkstage1.v:1049$4051'.
  created $adff cell `$procdff$7587' with positive edge clock and negative level reset.
Creating register for signal `\mkstage1.\rg_eEpoch' using process `\mkstage1.$proc$mkstage1.v:1049$4051'.
  created $adff cell `$procdff$7588' with positive edge clock and negative level reset.
Creating register for signal `\mkstage1.\rg_fabric_request' using process `\mkstage1.$proc$mkstage1.v:1049$4051'.
  created $adff cell `$procdff$7589' with positive edge clock and negative level reset.
Creating register for signal `\mkstage1.\rg_index' using process `\mkstage1.$proc$mkstage1.v:1049$4051'.
  created $adff cell `$procdff$7590' with positive edge clock and negative level reset.
Creating register for signal `\mkstage1.\rg_initialize' using process `\mkstage1.$proc$mkstage1.v:1049$4051'.
  created $adff cell `$procdff$7591' with positive edge clock and negative level reset.
Creating register for signal `\mkstage1.\rg_pc' using process `\mkstage1.$proc$mkstage1.v:1049$4051'.
  created $adff cell `$procdff$7592' with positive edge clock and negative level reset.
Creating register for signal `\mkstage1.\rg_wfi' using process `\mkstage1.$proc$mkstage1.v:1049$4051'.
  created $adff cell `$procdff$7593' with positive edge clock and negative level reset.
Creating register for signal `\mkstage2.\rg_wEpoch' using process `\mkstage2.$proc$mkstage2.v:1210$4114'.
  created $adff cell `$procdff$7594' with positive edge clock and negative level reset.
Creating register for signal `\mkstage2.\rg_eEpoch' using process `\mkstage2.$proc$mkstage2.v:1210$4114'.
  created $adff cell `$procdff$7595' with positive edge clock and negative level reset.
Creating register for signal `\mkstage3.\rg_epoch' using process `\mkstage3.$proc$mkstage3.v:1130$4267'.
  created $adff cell `$procdff$7596' with positive edge clock and negative level reset.
Creating register for signal `\mkstage3.\rg_rerun' using process `\mkstage3.$proc$mkstage3.v:1130$4267'.
  created $adff cell `$procdff$7597' with positive edge clock and negative level reset.
Creating register for signal `\mkstage3.\wr_memory_response' using process `\mkstage3.$proc$mkstage3.v:1130$4267'.
  created $adff cell `$procdff$7598' with positive edge clock and negative level reset.

52.3.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

52.3.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `SB_DFFNES.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$5662'.
Found and cleaned up 1 empty switch in `\SB_DFFNES.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1414$5659'.
Removing empty process `SB_DFFNES.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1414$5659'.
Removing empty process `SB_DFFNESS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$5658'.
Found and cleaned up 2 empty switches in `\SB_DFFNESS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1353$5652'.
Removing empty process `SB_DFFNESS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1353$5652'.
Removing empty process `SB_DFFNER.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$5651'.
Found and cleaned up 1 empty switch in `\SB_DFFNER.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1273$5648'.
Removing empty process `SB_DFFNER.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1273$5648'.
Removing empty process `SB_DFFNESR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$5647'.
Found and cleaned up 2 empty switches in `\SB_DFFNESR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1212$5641'.
Removing empty process `SB_DFFNESR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1212$5641'.
Removing empty process `SB_DFFNS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$5640'.
Removing empty process `SB_DFFNS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1138$5638'.
Removing empty process `SB_DFFNSS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$5637'.
Found and cleaned up 1 empty switch in `\SB_DFFNSS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1088$5635'.
Removing empty process `SB_DFFNSS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1088$5635'.
Removing empty process `SB_DFFNR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$5634'.
Removing empty process `SB_DFFNR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1017$5632'.
Removing empty process `SB_DFFNSR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$5631'.
Found and cleaned up 1 empty switch in `\SB_DFFNSR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:967$5629'.
Removing empty process `SB_DFFNSR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:967$5629'.
Removing empty process `SB_DFFNE.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$5628'.
Found and cleaned up 1 empty switch in `\SB_DFFNE.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:922$5627'.
Removing empty process `SB_DFFNE.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:922$5627'.
Removing empty process `SB_DFFN.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$5626'.
Removing empty process `SB_DFFN.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:882$5625'.
Removing empty process `SB_DFFES.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$5624'.
Found and cleaned up 1 empty switch in `\SB_DFFES.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:803$5621'.
Removing empty process `SB_DFFES.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:803$5621'.
Removing empty process `SB_DFFESS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$5620'.
Found and cleaned up 2 empty switches in `\SB_DFFESS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:742$5614'.
Removing empty process `SB_DFFESS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:742$5614'.
Removing empty process `SB_DFFER.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$5613'.
Found and cleaned up 1 empty switch in `\SB_DFFER.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:662$5610'.
Removing empty process `SB_DFFER.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:662$5610'.
Removing empty process `SB_DFFESR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$5609'.
Found and cleaned up 2 empty switches in `\SB_DFFESR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:601$5603'.
Removing empty process `SB_DFFESR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:601$5603'.
Removing empty process `SB_DFFS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$5602'.
Removing empty process `SB_DFFS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:527$5600'.
Removing empty process `SB_DFFSS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$5599'.
Found and cleaned up 1 empty switch in `\SB_DFFSS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:477$5597'.
Removing empty process `SB_DFFSS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:477$5597'.
Removing empty process `SB_DFFR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$5596'.
Removing empty process `SB_DFFR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:406$5594'.
Removing empty process `SB_DFFSR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$5593'.
Found and cleaned up 1 empty switch in `\SB_DFFSR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:356$5591'.
Removing empty process `SB_DFFSR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:356$5591'.
Removing empty process `SB_DFFE.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$5590'.
Found and cleaned up 1 empty switch in `\SB_DFFE.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:311$5589'.
Removing empty process `SB_DFFE.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:311$5589'.
Removing empty process `SB_DFF.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$5588'.
Removing empty process `SB_DFF.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:271$5587'.
Found and cleaned up 2 empty switches in `$paramod$44bf3f364de125c08c77a464bb47dd656ea26444\Counter.$proc$Counter.v:54$5062'.
Removing empty process `$paramod$44bf3f364de125c08c77a464bb47dd656ea26444\Counter.$proc$Counter.v:54$5062'.
Found and cleaned up 1 empty switch in `$paramod$56698b439944c97e9107048cd4226f712af1b2b1\RegFile.$proc$RegFile.v:65$5361'.
Removing empty process `$paramod$56698b439944c97e9107048cd4226f712af1b2b1\RegFile.$proc$RegFile.v:65$5361'.
Found and cleaned up 3 empty switches in `$paramod$daadbc6d5d8d25265c1808e519c5f6fbd2f433d0\SizedFIFO.$proc$SizedFIFO.v:107$5031'.
Removing empty process `$paramod$daadbc6d5d8d25265c1808e519c5f6fbd2f433d0\SizedFIFO.$proc$SizedFIFO.v:107$5031'.
Found and cleaned up 1 empty switch in `$paramod$daadbc6d5d8d25265c1808e519c5f6fbd2f433d0\SizedFIFO.$proc$SizedFIFO.v:167$5036'.
Removing empty process `$paramod$daadbc6d5d8d25265c1808e519c5f6fbd2f433d0\SizedFIFO.$proc$SizedFIFO.v:167$5036'.
Found and cleaned up 1 empty switch in `$paramod$daadbc6d5d8d25265c1808e519c5f6fbd2f433d0\SizedFIFO.$proc$SizedFIFO.v:190$5039'.
Removing empty process `$paramod$daadbc6d5d8d25265c1808e519c5f6fbd2f433d0\SizedFIFO.$proc$SizedFIFO.v:190$5039'.
Found and cleaned up 3 empty switches in `$paramod$e03903fe67170b9c8463f29c6528d18b0078fcbe\SizedFIFO.$proc$SizedFIFO.v:107$5311'.
Removing empty process `$paramod$e03903fe67170b9c8463f29c6528d18b0078fcbe\SizedFIFO.$proc$SizedFIFO.v:107$5311'.
Found and cleaned up 1 empty switch in `$paramod$e03903fe67170b9c8463f29c6528d18b0078fcbe\SizedFIFO.$proc$SizedFIFO.v:167$5316'.
Removing empty process `$paramod$e03903fe67170b9c8463f29c6528d18b0078fcbe\SizedFIFO.$proc$SizedFIFO.v:167$5316'.
Found and cleaned up 1 empty switch in `$paramod$e03903fe67170b9c8463f29c6528d18b0078fcbe\SizedFIFO.$proc$SizedFIFO.v:190$5319'.
Removing empty process `$paramod$e03903fe67170b9c8463f29c6528d18b0078fcbe\SizedFIFO.$proc$SizedFIFO.v:190$5319'.
Found and cleaned up 2 empty switches in `$paramod\Counter\width=32'00000000000000000000000000000011\init=3'000.$proc$Counter.v:54$5055'.
Removing empty process `$paramod\Counter\width=32'00000000000000000000000000000011\init=3'000.$proc$Counter.v:54$5055'.
Found and cleaned up 4 empty switches in `$paramod\FIFO10\guarded=1'1.$proc$FIFO10.v:61$5206'.
Removing empty process `$paramod\FIFO10\guarded=1'1.$proc$FIFO10.v:61$5206'.
Found and cleaned up 4 empty switches in `$paramod\FIFO1\width=32'00000000000000000000000000000010\guarded=1'1.$proc$FIFO1.v:73$5202'.
Removing empty process `$paramod\FIFO1\width=32'00000000000000000000000000000010\guarded=1'1.$proc$FIFO1.v:73$5202'.
Found and cleaned up 1 empty switch in `$paramod\FIFO1\width=32'00000000000000000000000000000010\guarded=1'1.$proc$FIFO1.v:96$5204'.
Removing empty process `$paramod\FIFO1\width=32'00000000000000000000000000000010\guarded=1'1.$proc$FIFO1.v:96$5204'.
Found and cleaned up 4 empty switches in `$paramod\FIFO1\width=32'00000000000000000000000000000011\guarded=1'1.$proc$FIFO1.v:73$5198'.
Removing empty process `$paramod\FIFO1\width=32'00000000000000000000000000000011\guarded=1'1.$proc$FIFO1.v:73$5198'.
Found and cleaned up 1 empty switch in `$paramod\FIFO1\width=32'00000000000000000000000000000011\guarded=1'1.$proc$FIFO1.v:96$5200'.
Removing empty process `$paramod\FIFO1\width=32'00000000000000000000000000000011\guarded=1'1.$proc$FIFO1.v:96$5200'.
Removing empty process `$paramod\FIFO2\width=32'00000000000000000000000000000001\guarded=1'1.$proc$FIFO2.v:110$5265'.
Found and cleaned up 4 empty switches in `$paramod\FIFO2\width=32'00000000000000000000000000000001\guarded=1'1.$proc$FIFO2.v:81$5257'.
Removing empty process `$paramod\FIFO2\width=32'00000000000000000000000000000001\guarded=1'1.$proc$FIFO2.v:81$5257'.
Removing empty process `$paramod\FIFO2\width=32'00000000000000000000000000000110\guarded=1'1.$proc$FIFO2.v:110$5094'.
Found and cleaned up 4 empty switches in `$paramod\FIFO2\width=32'00000000000000000000000000000110\guarded=1'1.$proc$FIFO2.v:81$5086'.
Removing empty process `$paramod\FIFO2\width=32'00000000000000000000000000000110\guarded=1'1.$proc$FIFO2.v:81$5086'.
Removing empty process `$paramod\FIFO2\width=32'00000000000000000000000000100010\guarded=1'1.$proc$FIFO2.v:110$5297'.
Found and cleaned up 4 empty switches in `$paramod\FIFO2\width=32'00000000000000000000000000100010\guarded=1'1.$proc$FIFO2.v:81$5289'.
Removing empty process `$paramod\FIFO2\width=32'00000000000000000000000000100010\guarded=1'1.$proc$FIFO2.v:81$5289'.
Removing empty process `$paramod\FIFO2\width=32'00000000000000000000000000100011\guarded=1'1.$proc$FIFO2.v:110$5398'.
Found and cleaned up 4 empty switches in `$paramod\FIFO2\width=32'00000000000000000000000000100011\guarded=1'1.$proc$FIFO2.v:81$5390'.
Removing empty process `$paramod\FIFO2\width=32'00000000000000000000000000100011\guarded=1'1.$proc$FIFO2.v:81$5390'.
Removing empty process `$paramod\FIFO2\width=32'00000000000000000000000000100111\guarded=1'1.$proc$FIFO2.v:110$5190'.
Found and cleaned up 4 empty switches in `$paramod\FIFO2\width=32'00000000000000000000000000100111\guarded=1'1.$proc$FIFO2.v:81$5182'.
Removing empty process `$paramod\FIFO2\width=32'00000000000000000000000000100111\guarded=1'1.$proc$FIFO2.v:81$5182'.
Removing empty process `$paramod\FIFO2\width=32'00000000000000000000000000101001\guarded=1'1.$proc$FIFO2.v:110$5126'.
Found and cleaned up 4 empty switches in `$paramod\FIFO2\width=32'00000000000000000000000000101001\guarded=1'1.$proc$FIFO2.v:81$5118'.
Removing empty process `$paramod\FIFO2\width=32'00000000000000000000000000101001\guarded=1'1.$proc$FIFO2.v:81$5118'.
Removing empty process `$paramod\FIFO2\width=32'00000000000000000000000000110100\guarded=1'1.$proc$FIFO2.v:110$5158'.
Found and cleaned up 4 empty switches in `$paramod\FIFO2\width=32'00000000000000000000000000110100\guarded=1'1.$proc$FIFO2.v:81$5150'.
Removing empty process `$paramod\FIFO2\width=32'00000000000000000000000000110100\guarded=1'1.$proc$FIFO2.v:81$5150'.
Removing empty process `$paramod\FIFO2\width=32'00000000000000000000000001000110\guarded=1'1.$proc$FIFO2.v:110$5233'.
Found and cleaned up 4 empty switches in `$paramod\FIFO2\width=32'00000000000000000000000001000110\guarded=1'1.$proc$FIFO2.v:81$5225'.
Removing empty process `$paramod\FIFO2\width=32'00000000000000000000000001000110\guarded=1'1.$proc$FIFO2.v:81$5225'.
Found and cleaned up 4 empty switches in `$paramod\FIFOL1\width=32'00000000000000000000000000100010.$proc$FIFOL1.v:74$5357'.
Removing empty process `$paramod\FIFOL1\width=32'00000000000000000000000000100010.$proc$FIFOL1.v:74$5357'.
Found and cleaned up 1 empty switch in `$paramod\FIFOL1\width=32'00000000000000000000000000100010.$proc$FIFOL1.v:97$5359'.
Removing empty process `$paramod\FIFOL1\width=32'00000000000000000000000000100010.$proc$FIFOL1.v:97$5359'.
Found and cleaned up 4 empty switches in `$paramod\FIFOL1\width=32'00000000000000000000000000100110.$proc$FIFOL1.v:74$5347'.
Removing empty process `$paramod\FIFOL1\width=32'00000000000000000000000000100110.$proc$FIFOL1.v:74$5347'.
Found and cleaned up 1 empty switch in `$paramod\FIFOL1\width=32'00000000000000000000000000100110.$proc$FIFOL1.v:97$5349'.
Removing empty process `$paramod\FIFOL1\width=32'00000000000000000000000000100110.$proc$FIFOL1.v:97$5349'.
Found and cleaned up 4 empty switches in `$paramod\FIFOL1\width=32'00000000000000000000000000110011.$proc$FIFOL1.v:74$5342'.
Removing empty process `$paramod\FIFOL1\width=32'00000000000000000000000000110011.$proc$FIFOL1.v:74$5342'.
Found and cleaned up 1 empty switch in `$paramod\FIFOL1\width=32'00000000000000000000000000110011.$proc$FIFOL1.v:97$5344'.
Removing empty process `$paramod\FIFOL1\width=32'00000000000000000000000000110011.$proc$FIFOL1.v:97$5344'.
Found and cleaned up 4 empty switches in `$paramod\FIFOL1\width=32'00000000000000000000000000111110.$proc$FIFOL1.v:74$5352'.
Removing empty process `$paramod\FIFOL1\width=32'00000000000000000000000000111110.$proc$FIFOL1.v:74$5352'.
Found and cleaned up 1 empty switch in `$paramod\FIFOL1\width=32'00000000000000000000000000111110.$proc$FIFOL1.v:97$5354'.
Removing empty process `$paramod\FIFOL1\width=32'00000000000000000000000000111110.$proc$FIFOL1.v:97$5354'.
Found and cleaned up 4 empty switches in `$paramod\FIFOL1\width=32'00000000000000000000000001000000.$proc$FIFOL1.v:74$5337'.
Removing empty process `$paramod\FIFOL1\width=32'00000000000000000000000001000000.$proc$FIFOL1.v:74$5337'.
Found and cleaned up 1 empty switch in `$paramod\FIFOL1\width=32'00000000000000000000000001000000.$proc$FIFOL1.v:97$5339'.
Removing empty process `$paramod\FIFOL1\width=32'00000000000000000000000001000000.$proc$FIFOL1.v:97$5339'.
Found and cleaned up 4 empty switches in `$paramod\FIFOL1\width=32'00000000000000000000000001000110.$proc$FIFOL1.v:74$5407'.
Removing empty process `$paramod\FIFOL1\width=32'00000000000000000000000001000110.$proc$FIFOL1.v:74$5407'.
Found and cleaned up 1 empty switch in `$paramod\FIFOL1\width=32'00000000000000000000000001000110.$proc$FIFOL1.v:97$5409'.
Removing empty process `$paramod\FIFOL1\width=32'00000000000000000000000001000110.$proc$FIFOL1.v:97$5409'.
Found and cleaned up 4 empty switches in `$paramod\FIFOL1\width=32'00000000000000000000000001100111.$proc$FIFOL1.v:74$5412'.
Removing empty process `$paramod\FIFOL1\width=32'00000000000000000000000001100111.$proc$FIFOL1.v:74$5412'.
Found and cleaned up 1 empty switch in `$paramod\FIFOL1\width=32'00000000000000000000000001100111.$proc$FIFOL1.v:97$5414'.
Removing empty process `$paramod\FIFOL1\width=32'00000000000000000000000001100111.$proc$FIFOL1.v:97$5414'.
Found and cleaned up 1 empty switch in `\mkSoc.$proc$mkSoc.v:10298$2776'.
Removing empty process `mkSoc.$proc$mkSoc.v:10298$2776'.
Found and cleaned up 1 empty switch in `\mkSoc.$proc$mkSoc.v:10306$2777'.
Removing empty process `mkSoc.$proc$mkSoc.v:10306$2777'.
Found and cleaned up 1 empty switch in `\mkSoc.$proc$mkSoc.v:10315$2778'.
Removing empty process `mkSoc.$proc$mkSoc.v:10315$2778'.
Found and cleaned up 1 empty switch in `\mkSoc.$proc$mkSoc.v:10324$2779'.
Removing empty process `mkSoc.$proc$mkSoc.v:10324$2779'.
Found and cleaned up 1 empty switch in `\mkSoc.$proc$mkSoc.v:10332$2780'.
Removing empty process `mkSoc.$proc$mkSoc.v:10332$2780'.
Found and cleaned up 1 empty switch in `\mkSoc.$proc$mkSoc.v:10345$2781'.
Removing empty process `mkSoc.$proc$mkSoc.v:10345$2781'.
Found and cleaned up 1 empty switch in `\mkSoc.$proc$mkSoc.v:10355$2782'.
Removing empty process `mkSoc.$proc$mkSoc.v:10355$2782'.
Found and cleaned up 1 empty switch in `\mkSoc.$proc$mkSoc.v:10365$2783'.
Removing empty process `mkSoc.$proc$mkSoc.v:10365$2783'.
Found and cleaned up 1 empty switch in `\mkSoc.$proc$mkSoc.v:10373$2784'.
Removing empty process `mkSoc.$proc$mkSoc.v:10373$2784'.
Found and cleaned up 40 empty switches in `\mkSoc.$proc$mkSoc.v:10384$2785'.
Removing empty process `mkSoc.$proc$mkSoc.v:10384$2785'.
Found and cleaned up 9 empty switches in `\mkSoc.$proc$mkSoc.v:10532$2787'.
Removing empty process `mkSoc.$proc$mkSoc.v:10532$2787'.
Found and cleaned up 1 empty switch in `\mkSoc.$proc$mkSoc.v:6646$1559'.
Removing empty process `mkSoc.$proc$mkSoc.v:6646$1559'.
Found and cleaned up 1 empty switch in `\mkSoc.$proc$mkSoc.v:6892$1666'.
Removing empty process `mkSoc.$proc$mkSoc.v:6892$1666'.
Found and cleaned up 1 empty switch in `\mkSoc.$proc$mkSoc.v:6949$1676'.
Removing empty process `mkSoc.$proc$mkSoc.v:6949$1676'.
Found and cleaned up 1 empty switch in `\mkSoc.$proc$mkSoc.v:6983$1685'.
Removing empty process `mkSoc.$proc$mkSoc.v:6983$1685'.
Found and cleaned up 1 empty switch in `\mkSoc.$proc$mkSoc.v:7344$1732'.
Removing empty process `mkSoc.$proc$mkSoc.v:7344$1732'.
Found and cleaned up 1 empty switch in `\mkSoc.$proc$mkSoc.v:7368$1736'.
Removing empty process `mkSoc.$proc$mkSoc.v:7368$1736'.
Found and cleaned up 1 empty switch in `\mkSoc.$proc$mkSoc.v:7392$1740'.
Removing empty process `mkSoc.$proc$mkSoc.v:7392$1740'.
Found and cleaned up 1 empty switch in `\mkSoc.$proc$mkSoc.v:7416$1744'.
Removing empty process `mkSoc.$proc$mkSoc.v:7416$1744'.
Found and cleaned up 1 empty switch in `\mkSoc.$proc$mkSoc.v:7440$1748'.
Removing empty process `mkSoc.$proc$mkSoc.v:7440$1748'.
Found and cleaned up 1 empty switch in `\mkSoc.$proc$mkSoc.v:7464$1752'.
Removing empty process `mkSoc.$proc$mkSoc.v:7464$1752'.
Found and cleaned up 1 empty switch in `\mkSoc.$proc$mkSoc.v:7488$1756'.
Removing empty process `mkSoc.$proc$mkSoc.v:7488$1756'.
Found and cleaned up 1 empty switch in `\mkSoc.$proc$mkSoc.v:7534$1773'.
Removing empty process `mkSoc.$proc$mkSoc.v:7534$1773'.
Found and cleaned up 1 empty switch in `\mkSoc.$proc$mkSoc.v:7580$1790'.
Removing empty process `mkSoc.$proc$mkSoc.v:7580$1790'.
Found and cleaned up 1 empty switch in `\mkSoc.$proc$mkSoc.v:7641$1807'.
Removing empty process `mkSoc.$proc$mkSoc.v:7641$1807'.
Found and cleaned up 1 empty switch in `\mkSoc.$proc$mkSoc.v:7666$1812'.
Removing empty process `mkSoc.$proc$mkSoc.v:7666$1812'.
Found and cleaned up 1 empty switch in `\mkSoc.$proc$mkSoc.v:7691$1817'.
Removing empty process `mkSoc.$proc$mkSoc.v:7691$1817'.
Found and cleaned up 1 empty switch in `\mkSoc.$proc$mkSoc.v:7716$1822'.
Removing empty process `mkSoc.$proc$mkSoc.v:7716$1822'.
Found and cleaned up 1 empty switch in `\mkSoc.$proc$mkSoc.v:7741$1827'.
Removing empty process `mkSoc.$proc$mkSoc.v:7741$1827'.
Found and cleaned up 1 empty switch in `\mkSoc.$proc$mkSoc.v:7766$1832'.
Removing empty process `mkSoc.$proc$mkSoc.v:7766$1832'.
Found and cleaned up 1 empty switch in `\mkSoc.$proc$mkSoc.v:7791$1837'.
Removing empty process `mkSoc.$proc$mkSoc.v:7791$1837'.
Found and cleaned up 1 empty switch in `\mkSoc.$proc$mkSoc.v:7831$1848'.
Removing empty process `mkSoc.$proc$mkSoc.v:7831$1848'.
Found and cleaned up 1 empty switch in `\mkSoc.$proc$mkSoc.v:7871$1859'.
Removing empty process `mkSoc.$proc$mkSoc.v:7871$1859'.
Found and cleaned up 1 empty switch in `\mkSoc.$proc$mkSoc.v:7926$1870'.
Removing empty process `mkSoc.$proc$mkSoc.v:7926$1870'.
Found and cleaned up 1 empty switch in `\mkSoc.$proc$mkSoc.v:7954$1884'.
Removing empty process `mkSoc.$proc$mkSoc.v:7954$1884'.
Found and cleaned up 1 empty switch in `\mkSoc.$proc$mkSoc.v:7982$1898'.
Removing empty process `mkSoc.$proc$mkSoc.v:7982$1898'.
Found and cleaned up 1 empty switch in `\mkSoc.$proc$mkSoc.v:8010$1912'.
Removing empty process `mkSoc.$proc$mkSoc.v:8010$1912'.
Found and cleaned up 1 empty switch in `\mkSoc.$proc$mkSoc.v:8038$1926'.
Removing empty process `mkSoc.$proc$mkSoc.v:8038$1926'.
Found and cleaned up 1 empty switch in `\mkSoc.$proc$mkSoc.v:8066$1940'.
Removing empty process `mkSoc.$proc$mkSoc.v:8066$1940'.
Found and cleaned up 1 empty switch in `\mkSoc.$proc$mkSoc.v:8094$1954'.
Removing empty process `mkSoc.$proc$mkSoc.v:8094$1954'.
Found and cleaned up 1 empty switch in `\mkSoc.$proc$mkSoc.v:8130$1973'.
Removing empty process `mkSoc.$proc$mkSoc.v:8130$1973'.
Found and cleaned up 1 empty switch in `\mkSoc.$proc$mkSoc.v:8166$1992'.
Removing empty process `mkSoc.$proc$mkSoc.v:8166$1992'.
Found and cleaned up 1 empty switch in `\mkSoc.$proc$mkSoc.v:8222$2017'.
Removing empty process `mkSoc.$proc$mkSoc.v:8222$2017'.
Found and cleaned up 1 empty switch in `\mkSoc.$proc$mkSoc.v:8315$2042'.
Removing empty process `mkSoc.$proc$mkSoc.v:8315$2042'.
Found and cleaned up 1 empty switch in `\mkSoc.$proc$mkSoc.v:8384$2055'.
Removing empty process `mkSoc.$proc$mkSoc.v:8384$2055'.
Found and cleaned up 1 empty switch in `\mkSoc.$proc$mkSoc.v:8477$2080'.
Removing empty process `mkSoc.$proc$mkSoc.v:8477$2080'.
Found and cleaned up 1 empty switch in `\mkSoc.$proc$mkSoc.v:8546$2093'.
Removing empty process `mkSoc.$proc$mkSoc.v:8546$2093'.
Found and cleaned up 1 empty switch in `\mkSoc.$proc$mkSoc.v:8639$2118'.
Removing empty process `mkSoc.$proc$mkSoc.v:8639$2118'.
Found and cleaned up 1 empty switch in `\mkSoc.$proc$mkSoc.v:8688$2125'.
Removing empty process `mkSoc.$proc$mkSoc.v:8688$2125'.
Found and cleaned up 1 empty switch in `\mkSoc.$proc$mkSoc.v:8734$2132'.
Removing empty process `mkSoc.$proc$mkSoc.v:8734$2132'.
Found and cleaned up 1 empty switch in `\mkSoc.$proc$mkSoc.v:8765$2136'.
Removing empty process `mkSoc.$proc$mkSoc.v:8765$2136'.
Found and cleaned up 1 empty switch in `\mkSoc.$proc$mkSoc.v:8811$2146'.
Removing empty process `mkSoc.$proc$mkSoc.v:8811$2146'.
Found and cleaned up 1 empty switch in `\mkSoc.$proc$mkSoc.v:8857$2153'.
Removing empty process `mkSoc.$proc$mkSoc.v:8857$2153'.
Found and cleaned up 1 empty switch in `\mkSoc.$proc$mkSoc.v:8888$2157'.
Removing empty process `mkSoc.$proc$mkSoc.v:8888$2157'.
Found and cleaned up 1 empty switch in `\mkSoc.$proc$mkSoc.v:8934$2167'.
Removing empty process `mkSoc.$proc$mkSoc.v:8934$2167'.
Found and cleaned up 1 empty switch in `\mkSoc.$proc$mkSoc.v:8977$2174'.
Removing empty process `mkSoc.$proc$mkSoc.v:8977$2174'.
Found and cleaned up 1 empty switch in `\mkSoc.$proc$mkSoc.v:9008$2178'.
Removing empty process `mkSoc.$proc$mkSoc.v:9008$2178'.
Found and cleaned up 1 empty switch in `\mkSoc.$proc$mkSoc.v:9054$2188'.
Removing empty process `mkSoc.$proc$mkSoc.v:9054$2188'.
Found and cleaned up 1 empty switch in `\mkSoc.$proc$mkSoc.v:9097$2195'.
Removing empty process `mkSoc.$proc$mkSoc.v:9097$2195'.
Found and cleaned up 1 empty switch in `\mkSoc.$proc$mkSoc.v:9128$2199'.
Removing empty process `mkSoc.$proc$mkSoc.v:9128$2199'.
Found and cleaned up 1 empty switch in `\mkSoc.$proc$mkSoc.v:9174$2209'.
Removing empty process `mkSoc.$proc$mkSoc.v:9174$2209'.
Found and cleaned up 1 empty switch in `\mkSoc.$proc$mkSoc.v:9220$2216'.
Removing empty process `mkSoc.$proc$mkSoc.v:9220$2216'.
Found and cleaned up 1 empty switch in `\mkSoc.$proc$mkSoc.v:9251$2220'.
Removing empty process `mkSoc.$proc$mkSoc.v:9251$2220'.
Found and cleaned up 1 empty switch in `\mkSoc.$proc$mkSoc.v:9297$2230'.
Removing empty process `mkSoc.$proc$mkSoc.v:9297$2230'.
Found and cleaned up 1 empty switch in `\mkSoc.$proc$mkSoc.v:9340$2237'.
Removing empty process `mkSoc.$proc$mkSoc.v:9340$2237'.
Found and cleaned up 1 empty switch in `\mkSoc.$proc$mkSoc.v:9371$2241'.
Removing empty process `mkSoc.$proc$mkSoc.v:9371$2241'.
Found and cleaned up 1 empty switch in `\mkcsr.$proc$mkcsr.v:530$3128'.
Removing empty process `mkcsr.$proc$mkcsr.v:530$3128'.
Found and cleaned up 1 empty switch in `\mkcsr.$proc$mkcsr.v:558$3140'.
Removing empty process `mkcsr.$proc$mkcsr.v:558$3140'.
Found and cleaned up 1 empty switch in `\mkcsrfile.$proc$mkcsrfile.v:1287$3355'.
Removing empty process `mkcsrfile.$proc$mkcsrfile.v:1287$3355'.
Found and cleaned up 1 empty switch in `\mkcsrfile.$proc$mkcsrfile.v:1322$3371'.
Removing empty process `mkcsrfile.$proc$mkcsrfile.v:1322$3371'.
Found and cleaned up 1 empty switch in `\mkcsrfile.$proc$mkcsrfile.v:1340$3379'.
Removing empty process `mkcsrfile.$proc$mkcsrfile.v:1340$3379'.
Found and cleaned up 1 empty switch in `\mkcsrfile.$proc$mkcsrfile.v:1428$3414'.
Removing empty process `mkcsrfile.$proc$mkcsrfile.v:1428$3414'.
Found and cleaned up 1 empty switch in `\mkcsrfile.$proc$mkcsrfile.v:1464$3432'.
Removing empty process `mkcsrfile.$proc$mkcsrfile.v:1464$3432'.
Found and cleaned up 1 empty switch in `\mkcsrfile.$proc$mkcsrfile.v:1884$3609'.
Removing empty process `mkcsrfile.$proc$mkcsrfile.v:1884$3609'.
Found and cleaned up 1 empty switch in `\mkcsrfile.$proc$mkcsrfile.v:1894$3612'.
Removing empty process `mkcsrfile.$proc$mkcsrfile.v:1894$3612'.
Found and cleaned up 1 empty switch in `\mkcsrfile.$proc$mkcsrfile.v:1904$3615'.
Removing empty process `mkcsrfile.$proc$mkcsrfile.v:1904$3615'.
Found and cleaned up 1 empty switch in `\mkcsrfile.$proc$mkcsrfile.v:1914$3618'.
Removing empty process `mkcsrfile.$proc$mkcsrfile.v:1914$3618'.
Found and cleaned up 1 empty switch in `\mkcsrfile.$proc$mkcsrfile.v:1924$3621'.
Removing empty process `mkcsrfile.$proc$mkcsrfile.v:1924$3621'.
Found and cleaned up 1 empty switch in `\mkcsrfile.$proc$mkcsrfile.v:1931$3622'.
Removing empty process `mkcsrfile.$proc$mkcsrfile.v:1931$3622'.
Found and cleaned up 1 empty switch in `\mkcsrfile.$proc$mkcsrfile.v:1942$3623'.
Removing empty process `mkcsrfile.$proc$mkcsrfile.v:1942$3623'.
Found and cleaned up 1 empty switch in `\mkcsrfile.$proc$mkcsrfile.v:1949$3624'.
Removing empty process `mkcsrfile.$proc$mkcsrfile.v:1949$3624'.
Found and cleaned up 1 empty switch in `\mkcsrfile.$proc$mkcsrfile.v:1960$3625'.
Removing empty process `mkcsrfile.$proc$mkcsrfile.v:1960$3625'.
Found and cleaned up 1 empty switch in `\mkcsrfile.$proc$mkcsrfile.v:1971$3626'.
Removing empty process `mkcsrfile.$proc$mkcsrfile.v:1971$3626'.
Found and cleaned up 1 empty switch in `\mkcsrfile.$proc$mkcsrfile.v:1982$3627'.
Removing empty process `mkcsrfile.$proc$mkcsrfile.v:1982$3627'.
Found and cleaned up 1 empty switch in `\mkcsrfile.$proc$mkcsrfile.v:1993$3628'.
Removing empty process `mkcsrfile.$proc$mkcsrfile.v:1993$3628'.
Found and cleaned up 1 empty switch in `\mkcsrfile.$proc$mkcsrfile.v:2004$3629'.
Removing empty process `mkcsrfile.$proc$mkcsrfile.v:2004$3629'.
Found and cleaned up 1 empty switch in `\mkcsrfile.$proc$mkcsrfile.v:2015$3630'.
Removing empty process `mkcsrfile.$proc$mkcsrfile.v:2015$3630'.
Found and cleaned up 1 empty switch in `\mkcsrfile.$proc$mkcsrfile.v:2026$3631'.
Removing empty process `mkcsrfile.$proc$mkcsrfile.v:2026$3631'.
Found and cleaned up 1 empty switch in `\mkcsrfile.$proc$mkcsrfile.v:2037$3632'.
Removing empty process `mkcsrfile.$proc$mkcsrfile.v:2037$3632'.
Found and cleaned up 1 empty switch in `\mkcsrfile.$proc$mkcsrfile.v:2048$3633'.
Removing empty process `mkcsrfile.$proc$mkcsrfile.v:2048$3633'.
Found and cleaned up 1 empty switch in `\mkcsrfile.$proc$mkcsrfile.v:2059$3634'.
Removing empty process `mkcsrfile.$proc$mkcsrfile.v:2059$3634'.
Found and cleaned up 1 empty switch in `\mkcsrfile.$proc$mkcsrfile.v:2070$3635'.
Removing empty process `mkcsrfile.$proc$mkcsrfile.v:2070$3635'.
Found and cleaned up 1 empty switch in `\mkcsrfile.$proc$mkcsrfile.v:2081$3636'.
Removing empty process `mkcsrfile.$proc$mkcsrfile.v:2081$3636'.
Found and cleaned up 1 empty switch in `\mkcsrfile.$proc$mkcsrfile.v:2092$3639'.
Removing empty process `mkcsrfile.$proc$mkcsrfile.v:2092$3639'.
Found and cleaned up 1 empty switch in `\mkcsrfile.$proc$mkcsrfile.v:2103$3640'.
Removing empty process `mkcsrfile.$proc$mkcsrfile.v:2103$3640'.
Found and cleaned up 1 empty switch in `\mkcsrfile.$proc$mkcsrfile.v:2114$3643'.
Removing empty process `mkcsrfile.$proc$mkcsrfile.v:2114$3643'.
Found and cleaned up 1 empty switch in `\mkcsrfile.$proc$mkcsrfile.v:2125$3646'.
Removing empty process `mkcsrfile.$proc$mkcsrfile.v:2125$3646'.
Found and cleaned up 69 empty switches in `\mkcsrfile.$proc$mkcsrfile.v:2136$3647'.
Removing empty process `mkcsrfile.$proc$mkcsrfile.v:2136$3647'.
Found and cleaned up 1 empty switch in `\mkcsrfile.$proc$mkcsrfile.v:821$3141'.
Removing empty process `mkcsrfile.$proc$mkcsrfile.v:821$3141'.
Found and cleaned up 1 empty switch in `\mkeclass.$proc$mkeclass.v:1504$3725'.
Removing empty process `mkeclass.$proc$mkeclass.v:1504$3725'.
Found and cleaned up 1 empty switch in `\mkeclass.$proc$mkeclass.v:1512$3726'.
Removing empty process `mkeclass.$proc$mkeclass.v:1512$3726'.
Found and cleaned up 1 empty switch in `\mkeclass.$proc$mkeclass.v:1520$3727'.
Removing empty process `mkeclass.$proc$mkeclass.v:1520$3727'.
Found and cleaned up 1 empty switch in `\mkeclass.$proc$mkeclass.v:1547$3730'.
Removing empty process `mkeclass.$proc$mkeclass.v:1547$3730'.
Found and cleaned up 1 empty switch in `\mksign_dump_axi4.$proc$mksign_dump_axi4.v:1061$3890'.
Removing empty process `mksign_dump_axi4.$proc$mksign_dump_axi4.v:1061$3890'.
Found and cleaned up 12 empty switches in `\mksign_dump_axi4.$proc$mksign_dump_axi4.v:1072$3891'.
Removing empty process `mksign_dump_axi4.$proc$mksign_dump_axi4.v:1072$3891'.
Found and cleaned up 1 empty switch in `\mkstage1.$proc$mkstage1.v:1017$4039'.
Removing empty process `mkstage1.$proc$mkstage1.v:1017$4039'.
Found and cleaned up 8 empty switches in `\mkstage1.$proc$mkstage1.v:1049$4051'.
Removing empty process `mkstage1.$proc$mkstage1.v:1049$4051'.
Found and cleaned up 1 empty switch in `\mkstage1.$proc$mkstage1.v:790$3929'.
Removing empty process `mkstage1.$proc$mkstage1.v:790$3929'.
Found and cleaned up 1 empty switch in `\mkstage1.$proc$mkstage1.v:966$4027'.
Removing empty process `mkstage1.$proc$mkstage1.v:966$4027'.
Found and cleaned up 1 empty switch in `\mkstage1.$proc$mkstage1.v:982$4032'.
Removing empty process `mkstage1.$proc$mkstage1.v:982$4032'.
Found and cleaned up 1 empty switch in `\mkstage1.$proc$mkstage1.v:999$4036'.
Removing empty process `mkstage1.$proc$mkstage1.v:999$4036'.
Found and cleaned up 1 empty switch in `\mkstage2.$proc$mkstage2.v:1080$4075'.
Removing empty process `mkstage2.$proc$mkstage2.v:1080$4075'.
Found and cleaned up 1 empty switch in `\mkstage2.$proc$mkstage2.v:1158$4111'.
Removing empty process `mkstage2.$proc$mkstage2.v:1158$4111'.
Found and cleaned up 1 empty switch in `\mkstage2.$proc$mkstage2.v:1167$4112'.
Removing empty process `mkstage2.$proc$mkstage2.v:1167$4112'.
Found and cleaned up 1 empty switch in `\mkstage2.$proc$mkstage2.v:1197$4113'.
Removing empty process `mkstage2.$proc$mkstage2.v:1197$4113'.
Found and cleaned up 2 empty switches in `\mkstage2.$proc$mkstage2.v:1210$4114'.
Removing empty process `mkstage2.$proc$mkstage2.v:1210$4114'.
Found and cleaned up 3 empty switches in `\mkstage3.$proc$mkstage3.v:1130$4267'.
Removing empty process `mkstage3.$proc$mkstage3.v:1130$4267'.
Found and cleaned up 1 empty switch in `\module_address_valid.$proc$module_address_valid.v:100$4302'.
Removing empty process `module_address_valid.$proc$module_address_valid.v:100$4302'.
Found and cleaned up 1 empty switch in `\module_address_valid.$proc$module_address_valid.v:121$4322'.
Removing empty process `module_address_valid.$proc$module_address_valid.v:121$4322'.
Found and cleaned up 1 empty switch in `\module_address_valid.$proc$module_address_valid.v:137$4326'.
Removing empty process `module_address_valid.$proc$module_address_valid.v:137$4326'.
Found and cleaned up 1 empty switch in `\module_address_valid.$proc$module_address_valid.v:71$4289'.
Removing empty process `module_address_valid.$proc$module_address_valid.v:71$4289'.
Found and cleaned up 1 empty switch in `\module_address_valid.$proc$module_address_valid.v:84$4295'.
Removing empty process `module_address_valid.$proc$module_address_valid.v:84$4295'.
Found and cleaned up 1 empty switch in `\module_decoder_func_32.$proc$module_decoder_func_32.v:201$4455'.
Removing empty process `module_decoder_func_32.$proc$module_decoder_func_32.v:201$4455'.
Found and cleaned up 1 empty switch in `\module_decoder_func_32.$proc$module_decoder_func_32.v:208$4456'.
Removing empty process `module_decoder_func_32.$proc$module_decoder_func_32.v:208$4456'.
Found and cleaned up 1 empty switch in `\module_decoder_func_32.$proc$module_decoder_func_32.v:216$4457'.
Removing empty process `module_decoder_func_32.$proc$module_decoder_func_32.v:216$4457'.
Found and cleaned up 1 empty switch in `\module_decoder_func_32.$proc$module_decoder_func_32.v:224$4458'.
Removing empty process `module_decoder_func_32.$proc$module_decoder_func_32.v:224$4458'.
Found and cleaned up 1 empty switch in `\module_decoder_func_32.$proc$module_decoder_func_32.v:247$4482'.
Removing empty process `module_decoder_func_32.$proc$module_decoder_func_32.v:247$4482'.
Found and cleaned up 1 empty switch in `\module_decoder_func_32.$proc$module_decoder_func_32.v:255$4483'.
Removing empty process `module_decoder_func_32.$proc$module_decoder_func_32.v:255$4483'.
Found and cleaned up 1 empty switch in `\module_decoder_func_32.$proc$module_decoder_func_32.v:281$4497'.
Removing empty process `module_decoder_func_32.$proc$module_decoder_func_32.v:281$4497'.
Found and cleaned up 1 empty switch in `\module_decoder_func_32.$proc$module_decoder_func_32.v:292$4502'.
Removing empty process `module_decoder_func_32.$proc$module_decoder_func_32.v:292$4502'.
Found and cleaned up 1 empty switch in `\module_decoder_func_32.$proc$module_decoder_func_32.v:308$4506'.
Removing empty process `module_decoder_func_32.$proc$module_decoder_func_32.v:308$4506'.
Found and cleaned up 1 empty switch in `\module_decoder_func_32.$proc$module_decoder_func_32.v:330$4513'.
Removing empty process `module_decoder_func_32.$proc$module_decoder_func_32.v:330$4513'.
Found and cleaned up 1 empty switch in `\module_decoder_func_32.$proc$module_decoder_func_32.v:348$4514'.
Removing empty process `module_decoder_func_32.$proc$module_decoder_func_32.v:348$4514'.
Found and cleaned up 1 empty switch in `\module_decoder_func_32.$proc$module_decoder_func_32.v:357$4515'.
Removing empty process `module_decoder_func_32.$proc$module_decoder_func_32.v:357$4515'.
Found and cleaned up 1 empty switch in `\module_decoder_func_32.$proc$module_decoder_func_32.v:369$4516'.
Removing empty process `module_decoder_func_32.$proc$module_decoder_func_32.v:369$4516'.
Found and cleaned up 1 empty switch in `\module_decoder_func_32.$proc$module_decoder_func_32.v:379$4517'.
Removing empty process `module_decoder_func_32.$proc$module_decoder_func_32.v:379$4517'.
Found and cleaned up 1 empty switch in `\module_decoder_func_32.$proc$module_decoder_func_32.v:389$4518'.
Removing empty process `module_decoder_func_32.$proc$module_decoder_func_32.v:389$4518'.
Found and cleaned up 1 empty switch in `\module_decoder_func_32.$proc$module_decoder_func_32.v:401$4519'.
Removing empty process `module_decoder_func_32.$proc$module_decoder_func_32.v:401$4519'.
Found and cleaned up 1 empty switch in `\module_decoder_func_32.$proc$module_decoder_func_32.v:414$4521'.
Removing empty process `module_decoder_func_32.$proc$module_decoder_func_32.v:414$4521'.
Found and cleaned up 1 empty switch in `\module_decoder_func_32.$proc$module_decoder_func_32.v:431$4523'.
Removing empty process `module_decoder_func_32.$proc$module_decoder_func_32.v:431$4523'.
Found and cleaned up 1 empty switch in `\module_decoder_func_32.$proc$module_decoder_func_32.v:441$4524'.
Removing empty process `module_decoder_func_32.$proc$module_decoder_func_32.v:441$4524'.
Found and cleaned up 1 empty switch in `\module_fn_alu.$proc$module_fn_alu.v:305$4698'.
Removing empty process `module_fn_alu.$proc$module_fn_alu.v:305$4698'.
Found and cleaned up 1 empty switch in `\module_fn_alu.$proc$module_fn_alu.v:344$4699'.
Removing empty process `module_fn_alu.$proc$module_fn_alu.v:344$4699'.
Found and cleaned up 1 empty switch in `\module_fn_alu.$proc$module_fn_alu.v:360$4704'.
Removing empty process `module_fn_alu.$proc$module_fn_alu.v:360$4704'.
Found and cleaned up 1 empty switch in `\module_fn_alu.$proc$module_fn_alu.v:377$4708'.
Removing empty process `module_fn_alu.$proc$module_fn_alu.v:377$4708'.
Found and cleaned up 1 empty switch in `\module_fn_alu.$proc$module_fn_alu.v:395$4711'.
Removing empty process `module_fn_alu.$proc$module_fn_alu.v:395$4711'.
Found and cleaned up 1 empty switch in `\module_fn_alu.$proc$module_fn_alu.v:413$4714'.
Removing empty process `module_fn_alu.$proc$module_fn_alu.v:413$4714'.
Found and cleaned up 1 empty switch in `\module_fn_alu.$proc$module_fn_alu.v:441$4725'.
Removing empty process `module_fn_alu.$proc$module_fn_alu.v:441$4725'.
Found and cleaned up 1 empty switch in `\module_fn_alu.$proc$module_fn_alu.v:465$4728'.
Removing empty process `module_fn_alu.$proc$module_fn_alu.v:465$4728'.
Found and cleaned up 1 empty switch in `\module_fn_pmp_lookup.$proc$module_fn_pmp_lookup.v:475$4960'.
Removing empty process `module_fn_pmp_lookup.$proc$module_fn_pmp_lookup.v:475$4960'.
Found and cleaned up 1 empty switch in `\module_fn_pmp_lookup.$proc$module_fn_pmp_lookup.v:483$4961'.
Removing empty process `module_fn_pmp_lookup.$proc$module_fn_pmp_lookup.v:483$4961'.
Found and cleaned up 1 empty switch in `\module_fn_pmp_lookup.$proc$module_fn_pmp_lookup.v:504$4966'.
Removing empty process `module_fn_pmp_lookup.$proc$module_fn_pmp_lookup.v:504$4966'.
Found and cleaned up 1 empty switch in `\module_fn_pmp_lookup.$proc$module_fn_pmp_lookup.v:527$4972'.
Removing empty process `module_fn_pmp_lookup.$proc$module_fn_pmp_lookup.v:527$4972'.
Found and cleaned up 1 empty switch in `\module_fn_pmp_lookup.$proc$module_fn_pmp_lookup.v:550$4978'.
Removing empty process `module_fn_pmp_lookup.$proc$module_fn_pmp_lookup.v:550$4978'.
Found and cleaned up 1 empty switch in `\module_fn_pmp_lookup.$proc$module_fn_pmp_lookup.v:571$4988'.
Removing empty process `module_fn_pmp_lookup.$proc$module_fn_pmp_lookup.v:571$4988'.
Found and cleaned up 1 empty switch in `\module_fn_pmp_lookup.$proc$module_fn_pmp_lookup.v:594$5000'.
Removing empty process `module_fn_pmp_lookup.$proc$module_fn_pmp_lookup.v:594$5000'.
Found and cleaned up 1 empty switch in `\module_fn_pmp_lookup.$proc$module_fn_pmp_lookup.v:617$5012'.
Removing empty process `module_fn_pmp_lookup.$proc$module_fn_pmp_lookup.v:617$5012'.
Cleaned up 407 empty switches.

52.3.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$44bf3f364de125c08c77a464bb47dd656ea26444\Counter.
<suppressed ~1 debug messages>
Optimizing module $paramod$56698b439944c97e9107048cd4226f712af1b2b1\RegFile.
Optimizing module $paramod$daadbc6d5d8d25265c1808e519c5f6fbd2f433d0\SizedFIFO.
<suppressed ~5 debug messages>
Optimizing module $paramod$e03903fe67170b9c8463f29c6528d18b0078fcbe\SizedFIFO.
<suppressed ~5 debug messages>
Optimizing module $paramod\Counter\width=32'00000000000000000000000000000011\init=3'000.
<suppressed ~1 debug messages>
Optimizing module $paramod\FIFO10\guarded=1'1.
<suppressed ~1 debug messages>
Optimizing module $paramod\FIFO1\width=32'00000000000000000000000000000010\guarded=1'1.
<suppressed ~1 debug messages>
Optimizing module $paramod\FIFO1\width=32'00000000000000000000000000000011\guarded=1'1.
<suppressed ~1 debug messages>
Optimizing module $paramod\FIFO2\width=32'00000000000000000000000000000001\guarded=1'1.
<suppressed ~2 debug messages>
Optimizing module $paramod\FIFO2\width=32'00000000000000000000000000000110\guarded=1'1.
<suppressed ~2 debug messages>
Optimizing module $paramod\FIFO2\width=32'00000000000000000000000000100010\guarded=1'1.
<suppressed ~2 debug messages>
Optimizing module $paramod\FIFO2\width=32'00000000000000000000000000100011\guarded=1'1.
<suppressed ~2 debug messages>
Optimizing module $paramod\FIFO2\width=32'00000000000000000000000000100111\guarded=1'1.
<suppressed ~2 debug messages>
Optimizing module $paramod\FIFO2\width=32'00000000000000000000000000101001\guarded=1'1.
<suppressed ~2 debug messages>
Optimizing module $paramod\FIFO2\width=32'00000000000000000000000000110100\guarded=1'1.
<suppressed ~2 debug messages>
Optimizing module $paramod\FIFO2\width=32'00000000000000000000000001000110\guarded=1'1.
<suppressed ~2 debug messages>
Optimizing module $paramod\FIFOL1\width=32'00000000000000000000000000100010.
<suppressed ~1 debug messages>
Optimizing module $paramod\FIFOL1\width=32'00000000000000000000000000100110.
<suppressed ~1 debug messages>
Optimizing module $paramod\FIFOL1\width=32'00000000000000000000000000110011.
<suppressed ~1 debug messages>
Optimizing module $paramod\FIFOL1\width=32'00000000000000000000000000111110.
<suppressed ~1 debug messages>
Optimizing module $paramod\FIFOL1\width=32'00000000000000000000000001000000.
<suppressed ~1 debug messages>
Optimizing module $paramod\FIFOL1\width=32'00000000000000000000000001000110.
<suppressed ~1 debug messages>
Optimizing module $paramod\FIFOL1\width=32'00000000000000000000000001100111.
<suppressed ~1 debug messages>
Optimizing module mkSoc.
<suppressed ~219 debug messages>
Optimizing module mkalu.
Optimizing module mkcsr.
<suppressed ~1 debug messages>
Optimizing module mkcsrfile.
<suppressed ~35 debug messages>
Optimizing module mkeclass.
<suppressed ~4 debug messages>
Optimizing module mkeclass_axi4.
Optimizing module mkriscv.
Optimizing module mksign_dump_axi4.
<suppressed ~7 debug messages>
Optimizing module mkstage1.
<suppressed ~6 debug messages>
Optimizing module mkstage2.
<suppressed ~3 debug messages>
Optimizing module mkstage3.
<suppressed ~1 debug messages>
Optimizing module module_address_valid.
<suppressed ~4 debug messages>
Optimizing module module_chk_interrupt.
Optimizing module module_decoder_func_32.
<suppressed ~10 debug messages>
Optimizing module module_fn_alu.
<suppressed ~3 debug messages>
Optimizing module module_fn_pmp_lookup.
<suppressed ~1 debug messages>

52.4. Executing FLATTEN pass (flatten design).
Deleting now unused module $paramod$44bf3f364de125c08c77a464bb47dd656ea26444\Counter.
Deleting now unused module $paramod$56698b439944c97e9107048cd4226f712af1b2b1\RegFile.
Deleting now unused module $paramod$daadbc6d5d8d25265c1808e519c5f6fbd2f433d0\SizedFIFO.
Deleting now unused module $paramod$e03903fe67170b9c8463f29c6528d18b0078fcbe\SizedFIFO.
Deleting now unused module $paramod\Counter\width=32'00000000000000000000000000000011\init=3'000.
Deleting now unused module $paramod\FIFO10\guarded=1'1.
Deleting now unused module $paramod\FIFO1\width=32'00000000000000000000000000000010\guarded=1'1.
Deleting now unused module $paramod\FIFO1\width=32'00000000000000000000000000000011\guarded=1'1.
Deleting now unused module $paramod\FIFO2\width=32'00000000000000000000000000000001\guarded=1'1.
Deleting now unused module $paramod\FIFO2\width=32'00000000000000000000000000000110\guarded=1'1.
Deleting now unused module $paramod\FIFO2\width=32'00000000000000000000000000100010\guarded=1'1.
Deleting now unused module $paramod\FIFO2\width=32'00000000000000000000000000100011\guarded=1'1.
Deleting now unused module $paramod\FIFO2\width=32'00000000000000000000000000100111\guarded=1'1.
Deleting now unused module $paramod\FIFO2\width=32'00000000000000000000000000101001\guarded=1'1.
Deleting now unused module $paramod\FIFO2\width=32'00000000000000000000000000110100\guarded=1'1.
Deleting now unused module $paramod\FIFO2\width=32'00000000000000000000000001000110\guarded=1'1.
Deleting now unused module $paramod\FIFOL1\width=32'00000000000000000000000000100010.
Deleting now unused module $paramod\FIFOL1\width=32'00000000000000000000000000100110.
Deleting now unused module $paramod\FIFOL1\width=32'00000000000000000000000000110011.
Deleting now unused module $paramod\FIFOL1\width=32'00000000000000000000000000111110.
Deleting now unused module $paramod\FIFOL1\width=32'00000000000000000000000001000000.
Deleting now unused module $paramod\FIFOL1\width=32'00000000000000000000000001000110.
Deleting now unused module $paramod\FIFOL1\width=32'00000000000000000000000001100111.
Deleting now unused module mkSoc.
Deleting now unused module mkalu.
Deleting now unused module mkcsr.
Deleting now unused module mkcsrfile.
Deleting now unused module mkeclass.
Deleting now unused module mkriscv.
Deleting now unused module mksign_dump_axi4.
Deleting now unused module mkstage1.
Deleting now unused module mkstage2.
Deleting now unused module mkstage3.
Deleting now unused module module_address_valid.
Deleting now unused module module_chk_interrupt.
Deleting now unused module module_decoder_func_32.
Deleting now unused module module_fn_alu.
Deleting now unused module module_fn_pmp_lookup.
<suppressed ~152 debug messages>

52.5. Executing TRIBUF pass.

52.6. Executing DEMINOUT pass (demote inout ports to input or output).

52.7. Executing OPT_EXPR pass (perform const folding).
Optimizing module mkeclass_axi4.
<suppressed ~931 debug messages>

52.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mkeclass_axi4..
Removed 448 unused cells and 6553 unused wires.
<suppressed ~821 debug messages>

52.9. Executing CHECK pass (checking for obvious problems).
Checking module mkeclass_axi4...
Warning: Wire mkeclass_axi4.\soc_inst.fabric_xactors_to_slaves_1_f_wr_resp.D_IN [5] is used but has no driver.
Warning: Wire mkeclass_axi4.\soc_inst.fabric_xactors_to_slaves_1_f_wr_resp.D_IN [4] is used but has no driver.
Warning: Wire mkeclass_axi4.\soc_inst.fabric_xactors_to_slaves_1_f_wr_resp.D_IN [3] is used but has no driver.
Warning: Wire mkeclass_axi4.\soc_inst.fabric_xactors_to_slaves_1_f_wr_resp.D_IN [2] is used but has no driver.
Warning: Wire mkeclass_axi4.\soc_inst.fabric_xactors_to_slaves_1_f_wr_resp.D_IN [1] is used but has no driver.
Warning: Wire mkeclass_axi4.\soc_inst.fabric_xactors_to_slaves_1_f_wr_resp.D_IN [0] is used but has no driver.
Warning: Wire mkeclass_axi4.\soc_inst.fabric_xactors_to_slaves_1_f_rd_data.D_IN [38] is used but has no driver.
Warning: Wire mkeclass_axi4.\soc_inst.fabric_xactors_to_slaves_1_f_rd_data.D_IN [37] is used but has no driver.
Warning: Wire mkeclass_axi4.\soc_inst.fabric_xactors_to_slaves_1_f_rd_data.D_IN [36] is used but has no driver.
Warning: Wire mkeclass_axi4.\soc_inst.fabric_xactors_to_slaves_1_f_rd_data.D_IN [35] is used but has no driver.
Warning: Wire mkeclass_axi4.\soc_inst.fabric_xactors_to_slaves_1_f_rd_data.D_IN [34] is used but has no driver.
Warning: Wire mkeclass_axi4.\soc_inst.fabric_xactors_to_slaves_1_f_rd_data.D_IN [33] is used but has no driver.
Warning: Wire mkeclass_axi4.\soc_inst.fabric_xactors_to_slaves_1_f_rd_data.D_IN [32] is used but has no driver.
Warning: Wire mkeclass_axi4.\soc_inst.fabric_xactors_to_slaves_1_f_rd_data.D_IN [31] is used but has no driver.
Warning: Wire mkeclass_axi4.\soc_inst.fabric_xactors_to_slaves_1_f_rd_data.D_IN [30] is used but has no driver.
Warning: Wire mkeclass_axi4.\soc_inst.fabric_xactors_to_slaves_1_f_rd_data.D_IN [29] is used but has no driver.
Warning: Wire mkeclass_axi4.\soc_inst.fabric_xactors_to_slaves_1_f_rd_data.D_IN [28] is used but has no driver.
Warning: Wire mkeclass_axi4.\soc_inst.fabric_xactors_to_slaves_1_f_rd_data.D_IN [27] is used but has no driver.
Warning: Wire mkeclass_axi4.\soc_inst.fabric_xactors_to_slaves_1_f_rd_data.D_IN [26] is used but has no driver.
Warning: Wire mkeclass_axi4.\soc_inst.fabric_xactors_to_slaves_1_f_rd_data.D_IN [25] is used but has no driver.
Warning: Wire mkeclass_axi4.\soc_inst.fabric_xactors_to_slaves_1_f_rd_data.D_IN [24] is used but has no driver.
Warning: Wire mkeclass_axi4.\soc_inst.fabric_xactors_to_slaves_1_f_rd_data.D_IN [23] is used but has no driver.
Warning: Wire mkeclass_axi4.\soc_inst.fabric_xactors_to_slaves_1_f_rd_data.D_IN [22] is used but has no driver.
Warning: Wire mkeclass_axi4.\soc_inst.fabric_xactors_to_slaves_1_f_rd_data.D_IN [21] is used but has no driver.
Warning: Wire mkeclass_axi4.\soc_inst.fabric_xactors_to_slaves_1_f_rd_data.D_IN [20] is used but has no driver.
Warning: Wire mkeclass_axi4.\soc_inst.fabric_xactors_to_slaves_1_f_rd_data.D_IN [19] is used but has no driver.
Warning: Wire mkeclass_axi4.\soc_inst.fabric_xactors_to_slaves_1_f_rd_data.D_IN [18] is used but has no driver.
Warning: Wire mkeclass_axi4.\soc_inst.fabric_xactors_to_slaves_1_f_rd_data.D_IN [17] is used but has no driver.
Warning: Wire mkeclass_axi4.\soc_inst.fabric_xactors_to_slaves_1_f_rd_data.D_IN [16] is used but has no driver.
Warning: Wire mkeclass_axi4.\soc_inst.fabric_xactors_to_slaves_1_f_rd_data.D_IN [15] is used but has no driver.
Warning: Wire mkeclass_axi4.\soc_inst.fabric_xactors_to_slaves_1_f_rd_data.D_IN [14] is used but has no driver.
Warning: Wire mkeclass_axi4.\soc_inst.fabric_xactors_to_slaves_1_f_rd_data.D_IN [13] is used but has no driver.
Warning: Wire mkeclass_axi4.\soc_inst.fabric_xactors_to_slaves_1_f_rd_data.D_IN [12] is used but has no driver.
Warning: Wire mkeclass_axi4.\soc_inst.fabric_xactors_to_slaves_1_f_rd_data.D_IN [11] is used but has no driver.
Warning: Wire mkeclass_axi4.\soc_inst.fabric_xactors_to_slaves_1_f_rd_data.D_IN [10] is used but has no driver.
Warning: Wire mkeclass_axi4.\soc_inst.fabric_xactors_to_slaves_1_f_rd_data.D_IN [9] is used but has no driver.
Warning: Wire mkeclass_axi4.\soc_inst.fabric_xactors_to_slaves_1_f_rd_data.D_IN [8] is used but has no driver.
Warning: Wire mkeclass_axi4.\soc_inst.fabric_xactors_to_slaves_1_f_rd_data.D_IN [7] is used but has no driver.
Warning: Wire mkeclass_axi4.\soc_inst.fabric_xactors_to_slaves_1_f_rd_data.D_IN [6] is used but has no driver.
Warning: Wire mkeclass_axi4.\soc_inst.fabric_xactors_to_slaves_1_f_rd_data.D_IN [5] is used but has no driver.
Warning: Wire mkeclass_axi4.\soc_inst.fabric_xactors_to_slaves_1_f_rd_data.D_IN [4] is used but has no driver.
Warning: Wire mkeclass_axi4.\soc_inst.fabric_xactors_to_slaves_1_f_rd_data.D_IN [3] is used but has no driver.
Warning: Wire mkeclass_axi4.\soc_inst.fabric_xactors_to_slaves_1_f_rd_data.D_IN [2] is used but has no driver.
Warning: Wire mkeclass_axi4.\soc_inst.fabric_xactors_to_slaves_1_f_rd_data.D_IN [1] is used but has no driver.
Warning: Wire mkeclass_axi4.\soc_inst.fabric_xactors_to_slaves_1_f_rd_data.D_IN [0] is used but has no driver.
Warning: Wire mkeclass_axi4.\soc_inst.fabric_xactors_to_slaves_0_f_wr_resp.D_IN [5] is used but has no driver.
Warning: Wire mkeclass_axi4.\soc_inst.fabric_xactors_to_slaves_0_f_wr_resp.D_IN [4] is used but has no driver.
Warning: Wire mkeclass_axi4.\soc_inst.fabric_xactors_to_slaves_0_f_wr_resp.D_IN [3] is used but has no driver.
Warning: Wire mkeclass_axi4.\soc_inst.fabric_xactors_to_slaves_0_f_wr_resp.D_IN [2] is used but has no driver.
Warning: Wire mkeclass_axi4.\soc_inst.fabric_xactors_to_slaves_0_f_wr_resp.D_IN [1] is used but has no driver.
Warning: Wire mkeclass_axi4.\soc_inst.fabric_xactors_to_slaves_0_f_wr_resp.D_IN [0] is used but has no driver.
Warning: Wire mkeclass_axi4.\soc_inst.fabric_xactors_to_slaves_0_f_rd_data.D_IN [38] is used but has no driver.
Warning: Wire mkeclass_axi4.\soc_inst.fabric_xactors_to_slaves_0_f_rd_data.D_IN [37] is used but has no driver.
Warning: Wire mkeclass_axi4.\soc_inst.fabric_xactors_to_slaves_0_f_rd_data.D_IN [36] is used but has no driver.
Warning: Wire mkeclass_axi4.\soc_inst.fabric_xactors_to_slaves_0_f_rd_data.D_IN [35] is used but has no driver.
Warning: Wire mkeclass_axi4.\soc_inst.fabric_xactors_to_slaves_0_f_rd_data.D_IN [34] is used but has no driver.
Warning: Wire mkeclass_axi4.\soc_inst.fabric_xactors_to_slaves_0_f_rd_data.D_IN [33] is used but has no driver.
Warning: Wire mkeclass_axi4.\soc_inst.fabric_xactors_to_slaves_0_f_rd_data.D_IN [32] is used but has no driver.
Warning: Wire mkeclass_axi4.\soc_inst.fabric_xactors_to_slaves_0_f_rd_data.D_IN [31] is used but has no driver.
Warning: Wire mkeclass_axi4.\soc_inst.fabric_xactors_to_slaves_0_f_rd_data.D_IN [30] is used but has no driver.
Warning: Wire mkeclass_axi4.\soc_inst.fabric_xactors_to_slaves_0_f_rd_data.D_IN [29] is used but has no driver.
Warning: Wire mkeclass_axi4.\soc_inst.fabric_xactors_to_slaves_0_f_rd_data.D_IN [28] is used but has no driver.
Warning: Wire mkeclass_axi4.\soc_inst.fabric_xactors_to_slaves_0_f_rd_data.D_IN [27] is used but has no driver.
Warning: Wire mkeclass_axi4.\soc_inst.fabric_xactors_to_slaves_0_f_rd_data.D_IN [26] is used but has no driver.
Warning: Wire mkeclass_axi4.\soc_inst.fabric_xactors_to_slaves_0_f_rd_data.D_IN [25] is used but has no driver.
Warning: Wire mkeclass_axi4.\soc_inst.fabric_xactors_to_slaves_0_f_rd_data.D_IN [24] is used but has no driver.
Warning: Wire mkeclass_axi4.\soc_inst.fabric_xactors_to_slaves_0_f_rd_data.D_IN [23] is used but has no driver.
Warning: Wire mkeclass_axi4.\soc_inst.fabric_xactors_to_slaves_0_f_rd_data.D_IN [22] is used but has no driver.
Warning: Wire mkeclass_axi4.\soc_inst.fabric_xactors_to_slaves_0_f_rd_data.D_IN [21] is used but has no driver.
Warning: Wire mkeclass_axi4.\soc_inst.fabric_xactors_to_slaves_0_f_rd_data.D_IN [20] is used but has no driver.
Warning: Wire mkeclass_axi4.\soc_inst.fabric_xactors_to_slaves_0_f_rd_data.D_IN [19] is used but has no driver.
Warning: Wire mkeclass_axi4.\soc_inst.fabric_xactors_to_slaves_0_f_rd_data.D_IN [18] is used but has no driver.
Warning: Wire mkeclass_axi4.\soc_inst.fabric_xactors_to_slaves_0_f_rd_data.D_IN [17] is used but has no driver.
Warning: Wire mkeclass_axi4.\soc_inst.fabric_xactors_to_slaves_0_f_rd_data.D_IN [16] is used but has no driver.
Warning: Wire mkeclass_axi4.\soc_inst.fabric_xactors_to_slaves_0_f_rd_data.D_IN [15] is used but has no driver.
Warning: Wire mkeclass_axi4.\soc_inst.fabric_xactors_to_slaves_0_f_rd_data.D_IN [14] is used but has no driver.
Warning: Wire mkeclass_axi4.\soc_inst.fabric_xactors_to_slaves_0_f_rd_data.D_IN [13] is used but has no driver.
Warning: Wire mkeclass_axi4.\soc_inst.fabric_xactors_to_slaves_0_f_rd_data.D_IN [12] is used but has no driver.
Warning: Wire mkeclass_axi4.\soc_inst.fabric_xactors_to_slaves_0_f_rd_data.D_IN [11] is used but has no driver.
Warning: Wire mkeclass_axi4.\soc_inst.fabric_xactors_to_slaves_0_f_rd_data.D_IN [10] is used but has no driver.
Warning: Wire mkeclass_axi4.\soc_inst.fabric_xactors_to_slaves_0_f_rd_data.D_IN [9] is used but has no driver.
Warning: Wire mkeclass_axi4.\soc_inst.fabric_xactors_to_slaves_0_f_rd_data.D_IN [8] is used but has no driver.
Warning: Wire mkeclass_axi4.\soc_inst.fabric_xactors_to_slaves_0_f_rd_data.D_IN [7] is used but has no driver.
Warning: Wire mkeclass_axi4.\soc_inst.fabric_xactors_to_slaves_0_f_rd_data.D_IN [6] is used but has no driver.
Warning: Wire mkeclass_axi4.\soc_inst.fabric_xactors_to_slaves_0_f_rd_data.D_IN [5] is used but has no driver.
Warning: Wire mkeclass_axi4.\soc_inst.fabric_xactors_to_slaves_0_f_rd_data.D_IN [4] is used but has no driver.
Warning: Wire mkeclass_axi4.\soc_inst.fabric_xactors_to_slaves_0_f_rd_data.D_IN [3] is used but has no driver.
Warning: Wire mkeclass_axi4.\soc_inst.fabric_xactors_to_slaves_0_f_rd_data.D_IN [2] is used but has no driver.
Warning: Wire mkeclass_axi4.\soc_inst.fabric_xactors_to_slaves_0_f_rd_data.D_IN [1] is used but has no driver.
Warning: Wire mkeclass_axi4.\soc_inst.fabric_xactors_to_slaves_0_f_rd_data.D_IN [0] is used but has no driver.
Warning: Wire mkeclass_axi4.\soc_inst.eclass.riscv.stage3.dump_ff.DEQ is used but has no driver.
Warning: Wire mkeclass_axi4.\soc_inst.boot_mem_master_BVALID is used but has no driver.
Warning: Wire mkeclass_axi4.\soc_inst.boot_mem_master_WREADY is used but has no driver.
Warning: Wire mkeclass_axi4.\soc_inst.boot_mem_master_AWREADY is used but has no driver.
Warning: Wire mkeclass_axi4.\soc_inst.boot_mem_master_RVALID is used but has no driver.
Warning: Wire mkeclass_axi4.\soc_inst.boot_mem_master_ARREADY is used but has no driver.
Warning: Wire mkeclass_axi4.\soc_inst.main_mem_master_BVALID is used but has no driver.
Warning: Wire mkeclass_axi4.\soc_inst.main_mem_master_WREADY is used but has no driver.
Warning: Wire mkeclass_axi4.\soc_inst.main_mem_master_AWREADY is used but has no driver.
Warning: Wire mkeclass_axi4.\soc_inst.main_mem_master_RVALID is used but has no driver.
Warning: Wire mkeclass_axi4.\soc_inst.main_mem_master_ARREADY is used but has no driver.
Found and reported 101 problems.

52.10. Executing OPT pass (performing simple optimizations).

52.10.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module mkeclass_axi4.

52.10.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mkeclass_axi4'.
<suppressed ~939 debug messages>
Removed a total of 313 cells.

52.10.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mkeclass_axi4..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port B of cell $flatten\soc_inst.\eclass.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:426$4522: { 1'1 \soc_inst.eclass.riscv.stage1.final_instruction__h3569 [14:12] } -> { 2'11 \soc_inst.eclass.riscv.stage1.final_instruction__h3569 [13:12] }
      Replacing known input bits on port A of cell $flatten\soc_inst.\signature.\ff_lower_order_bits.$procmux$5951: \soc_inst.signature.ff_lower_order_bits.not_ring_full -> 1'0
      Replacing known input bits on port A of cell $flatten\soc_inst.\uart_user_ifc_uart_fifoRecv.$procmux$5893: \soc_inst.uart_user_ifc_uart_fifoRecv.not_ring_full -> 1'0
      Replacing known input bits on port A of cell $flatten\soc_inst.\uart_user_ifc_uart_fifoXmit.$procmux$5893: \soc_inst.uart_user_ifc_uart_fifoXmit.not_ring_full -> 1'0
  Analyzing evaluation results.
    dead port 1/2 on $mux $flatten\soc_inst.$ternary$mkSoc.v:9641$2295.
    dead port 1/2 on $mux $flatten\soc_inst.$ternary$mkSoc.v:9645$2297.
    dead port 3/4 on $pmux $flatten\soc_inst.\signature.\ff_lower_order_bits.$procmux$5917.
    dead port 3/4 on $pmux $flatten\soc_inst.\signature.\ff_lower_order_bits.$procmux$5926.
    dead port 3/4 on $pmux $flatten\soc_inst.\signature.\ff_lower_order_bits.$procmux$5935.
    dead port 3/4 on $pmux $flatten\soc_inst.\signature.\ff_lower_order_bits.$procmux$5944.
    dead port 3/4 on $pmux $flatten\soc_inst.\signature.\ff_lower_order_bits.$procmux$5953.
    dead port 3/4 on $pmux $flatten\soc_inst.\uart_user_ifc_uart_fifoRecv.$procmux$5859.
    dead port 3/4 on $pmux $flatten\soc_inst.\uart_user_ifc_uart_fifoRecv.$procmux$5868.
    dead port 3/4 on $pmux $flatten\soc_inst.\uart_user_ifc_uart_fifoRecv.$procmux$5877.
    dead port 3/4 on $pmux $flatten\soc_inst.\uart_user_ifc_uart_fifoRecv.$procmux$5886.
    dead port 3/4 on $pmux $flatten\soc_inst.\uart_user_ifc_uart_fifoRecv.$procmux$5895.
    dead port 3/4 on $pmux $flatten\soc_inst.\uart_user_ifc_uart_fifoXmit.$procmux$5859.
    dead port 3/4 on $pmux $flatten\soc_inst.\uart_user_ifc_uart_fifoXmit.$procmux$5868.
    dead port 3/4 on $pmux $flatten\soc_inst.\uart_user_ifc_uart_fifoXmit.$procmux$5877.
    dead port 3/4 on $pmux $flatten\soc_inst.\uart_user_ifc_uart_fifoXmit.$procmux$5886.
    dead port 3/4 on $pmux $flatten\soc_inst.\uart_user_ifc_uart_fifoXmit.$procmux$5895.
Removed 17 multiplexer ports.
<suppressed ~584 debug messages>

52.10.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mkeclass_axi4.
    Consolidated identical input bits for $mux cell $flatten\soc_inst.\eclass.\riscv.\stage1.\integer_rf_rf.$procmux$5850:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$flatten\soc_inst.\eclass.\riscv.\stage1.\integer_rf_rf.$0$memwr$\arr$RegFile.v:68$5360_EN[31:0]$5364
      New ports: A=1'0, B=1'1, Y=$flatten\soc_inst.\eclass.\riscv.\stage1.\integer_rf_rf.$0$memwr$\arr$RegFile.v:68$5360_EN[31:0]$5364 [0]
      New connections: $flatten\soc_inst.\eclass.\riscv.\stage1.\integer_rf_rf.$0$memwr$\arr$RegFile.v:68$5360_EN[31:0]$5364 [31:1] = { $flatten\soc_inst.\eclass.\riscv.\stage1.\integer_rf_rf.$0$memwr$\arr$RegFile.v:68$5360_EN[31:0]$5364 [0] $flatten\soc_inst.\eclass.\riscv.\stage1.\integer_rf_rf.$0$memwr$\arr$RegFile.v:68$5360_EN[31:0]$5364 [0] $flatten\soc_inst.\eclass.\riscv.\stage1.\integer_rf_rf.$0$memwr$\arr$RegFile.v:68$5360_EN[31:0]$5364 [0] $flatten\soc_inst.\eclass.\riscv.\stage1.\integer_rf_rf.$0$memwr$\arr$RegFile.v:68$5360_EN[31:0]$5364 [0] $flatten\soc_inst.\eclass.\riscv.\stage1.\integer_rf_rf.$0$memwr$\arr$RegFile.v:68$5360_EN[31:0]$5364 [0] $flatten\soc_inst.\eclass.\riscv.\stage1.\integer_rf_rf.$0$memwr$\arr$RegFile.v:68$5360_EN[31:0]$5364 [0] $flatten\soc_inst.\eclass.\riscv.\stage1.\integer_rf_rf.$0$memwr$\arr$RegFile.v:68$5360_EN[31:0]$5364 [0] $flatten\soc_inst.\eclass.\riscv.\stage1.\integer_rf_rf.$0$memwr$\arr$RegFile.v:68$5360_EN[31:0]$5364 [0] $flatten\soc_inst.\eclass.\riscv.\stage1.\integer_rf_rf.$0$memwr$\arr$RegFile.v:68$5360_EN[31:0]$5364 [0] $flatten\soc_inst.\eclass.\riscv.\stage1.\integer_rf_rf.$0$memwr$\arr$RegFile.v:68$5360_EN[31:0]$5364 [0] $flatten\soc_inst.\eclass.\riscv.\stage1.\integer_rf_rf.$0$memwr$\arr$RegFile.v:68$5360_EN[31:0]$5364 [0] $flatten\soc_inst.\eclass.\riscv.\stage1.\integer_rf_rf.$0$memwr$\arr$RegFile.v:68$5360_EN[31:0]$5364 [0] $flatten\soc_inst.\eclass.\riscv.\stage1.\integer_rf_rf.$0$memwr$\arr$RegFile.v:68$5360_EN[31:0]$5364 [0] $flatten\soc_inst.\eclass.\riscv.\stage1.\integer_rf_rf.$0$memwr$\arr$RegFile.v:68$5360_EN[31:0]$5364 [0] $flatten\soc_inst.\eclass.\riscv.\stage1.\integer_rf_rf.$0$memwr$\arr$RegFile.v:68$5360_EN[31:0]$5364 [0] $flatten\soc_inst.\eclass.\riscv.\stage1.\integer_rf_rf.$0$memwr$\arr$RegFile.v:68$5360_EN[31:0]$5364 [0] $flatten\soc_inst.\eclass.\riscv.\stage1.\integer_rf_rf.$0$memwr$\arr$RegFile.v:68$5360_EN[31:0]$5364 [0] $flatten\soc_inst.\eclass.\riscv.\stage1.\integer_rf_rf.$0$memwr$\arr$RegFile.v:68$5360_EN[31:0]$5364 [0] $flatten\soc_inst.\eclass.\riscv.\stage1.\integer_rf_rf.$0$memwr$\arr$RegFile.v:68$5360_EN[31:0]$5364 [0] $flatten\soc_inst.\eclass.\riscv.\stage1.\integer_rf_rf.$0$memwr$\arr$RegFile.v:68$5360_EN[31:0]$5364 [0] $flatten\soc_inst.\eclass.\riscv.\stage1.\integer_rf_rf.$0$memwr$\arr$RegFile.v:68$5360_EN[31:0]$5364 [0] $flatten\soc_inst.\eclass.\riscv.\stage1.\integer_rf_rf.$0$memwr$\arr$RegFile.v:68$5360_EN[31:0]$5364 [0] $flatten\soc_inst.\eclass.\riscv.\stage1.\integer_rf_rf.$0$memwr$\arr$RegFile.v:68$5360_EN[31:0]$5364 [0] $flatten\soc_inst.\eclass.\riscv.\stage1.\integer_rf_rf.$0$memwr$\arr$RegFile.v:68$5360_EN[31:0]$5364 [0] $flatten\soc_inst.\eclass.\riscv.\stage1.\integer_rf_rf.$0$memwr$\arr$RegFile.v:68$5360_EN[31:0]$5364 [0] $flatten\soc_inst.\eclass.\riscv.\stage1.\integer_rf_rf.$0$memwr$\arr$RegFile.v:68$5360_EN[31:0]$5364 [0] $flatten\soc_inst.\eclass.\riscv.\stage1.\integer_rf_rf.$0$memwr$\arr$RegFile.v:68$5360_EN[31:0]$5364 [0] $flatten\soc_inst.\eclass.\riscv.\stage1.\integer_rf_rf.$0$memwr$\arr$RegFile.v:68$5360_EN[31:0]$5364 [0] $flatten\soc_inst.\eclass.\riscv.\stage1.\integer_rf_rf.$0$memwr$\arr$RegFile.v:68$5360_EN[31:0]$5364 [0] $flatten\soc_inst.\eclass.\riscv.\stage1.\integer_rf_rf.$0$memwr$\arr$RegFile.v:68$5360_EN[31:0]$5364 [0] $flatten\soc_inst.\eclass.\riscv.\stage1.\integer_rf_rf.$0$memwr$\arr$RegFile.v:68$5360_EN[31:0]$5364 [0] }
    New ctrl vector for $pmux cell $flatten\soc_inst.\signature.\ff_lower_order_bits.$procmux$5935: $auto$opt_reduce.cc:134:opt_pmux$7603
    New ctrl vector for $pmux cell $flatten\soc_inst.\uart_user_ifc_uart_fifoRecv.$procmux$5877: $auto$opt_reduce.cc:134:opt_pmux$7605
    New ctrl vector for $pmux cell $flatten\soc_inst.\uart_user_ifc_uart_fifoRecv.$procmux$5902: { $auto$opt_reduce.cc:134:opt_pmux$7609 $auto$opt_reduce.cc:134:opt_pmux$7607 }
    Consolidated identical input bits for $mux cell $flatten\soc_inst.\uart_user_ifc_uart_fifoRecv.$procmux$5908:
      Old ports: A=8'00000000, B=8'11111111, Y=$flatten\soc_inst.\uart_user_ifc_uart_fifoRecv.$0$memwr$\arr$SizedFIFO.v:206$5024_EN[7:0]$5042
      New ports: A=1'0, B=1'1, Y=$flatten\soc_inst.\uart_user_ifc_uart_fifoRecv.$0$memwr$\arr$SizedFIFO.v:206$5024_EN[7:0]$5042 [0]
      New connections: $flatten\soc_inst.\uart_user_ifc_uart_fifoRecv.$0$memwr$\arr$SizedFIFO.v:206$5024_EN[7:0]$5042 [7:1] = { $flatten\soc_inst.\uart_user_ifc_uart_fifoRecv.$0$memwr$\arr$SizedFIFO.v:206$5024_EN[7:0]$5042 [0] $flatten\soc_inst.\uart_user_ifc_uart_fifoRecv.$0$memwr$\arr$SizedFIFO.v:206$5024_EN[7:0]$5042 [0] $flatten\soc_inst.\uart_user_ifc_uart_fifoRecv.$0$memwr$\arr$SizedFIFO.v:206$5024_EN[7:0]$5042 [0] $flatten\soc_inst.\uart_user_ifc_uart_fifoRecv.$0$memwr$\arr$SizedFIFO.v:206$5024_EN[7:0]$5042 [0] $flatten\soc_inst.\uart_user_ifc_uart_fifoRecv.$0$memwr$\arr$SizedFIFO.v:206$5024_EN[7:0]$5042 [0] $flatten\soc_inst.\uart_user_ifc_uart_fifoRecv.$0$memwr$\arr$SizedFIFO.v:206$5024_EN[7:0]$5042 [0] $flatten\soc_inst.\uart_user_ifc_uart_fifoRecv.$0$memwr$\arr$SizedFIFO.v:206$5024_EN[7:0]$5042 [0] }
    New ctrl vector for $pmux cell $flatten\soc_inst.\uart_user_ifc_uart_fifoXmit.$procmux$5877: $auto$opt_reduce.cc:134:opt_pmux$7611
    New ctrl vector for $pmux cell $flatten\soc_inst.\uart_user_ifc_uart_fifoXmit.$procmux$5902: { $auto$opt_reduce.cc:134:opt_pmux$7615 $auto$opt_reduce.cc:134:opt_pmux$7613 }
    Consolidated identical input bits for $mux cell $flatten\soc_inst.\uart_user_ifc_uart_fifoXmit.$procmux$5908:
      Old ports: A=8'00000000, B=8'11111111, Y=$flatten\soc_inst.\uart_user_ifc_uart_fifoXmit.$0$memwr$\arr$SizedFIFO.v:206$5024_EN[7:0]$5042
      New ports: A=1'0, B=1'1, Y=$flatten\soc_inst.\uart_user_ifc_uart_fifoXmit.$0$memwr$\arr$SizedFIFO.v:206$5024_EN[7:0]$5042 [0]
      New connections: $flatten\soc_inst.\uart_user_ifc_uart_fifoXmit.$0$memwr$\arr$SizedFIFO.v:206$5024_EN[7:0]$5042 [7:1] = { $flatten\soc_inst.\uart_user_ifc_uart_fifoXmit.$0$memwr$\arr$SizedFIFO.v:206$5024_EN[7:0]$5042 [0] $flatten\soc_inst.\uart_user_ifc_uart_fifoXmit.$0$memwr$\arr$SizedFIFO.v:206$5024_EN[7:0]$5042 [0] $flatten\soc_inst.\uart_user_ifc_uart_fifoXmit.$0$memwr$\arr$SizedFIFO.v:206$5024_EN[7:0]$5042 [0] $flatten\soc_inst.\uart_user_ifc_uart_fifoXmit.$0$memwr$\arr$SizedFIFO.v:206$5024_EN[7:0]$5042 [0] $flatten\soc_inst.\uart_user_ifc_uart_fifoXmit.$0$memwr$\arr$SizedFIFO.v:206$5024_EN[7:0]$5042 [0] $flatten\soc_inst.\uart_user_ifc_uart_fifoXmit.$0$memwr$\arr$SizedFIFO.v:206$5024_EN[7:0]$5042 [0] $flatten\soc_inst.\uart_user_ifc_uart_fifoXmit.$0$memwr$\arr$SizedFIFO.v:206$5024_EN[7:0]$5042 [0] }
  Optimizing cells in module \mkeclass_axi4.
Performed a total of 8 changes.

52.10.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mkeclass_axi4'.
<suppressed ~390 debug messages>
Removed a total of 130 cells.

52.10.6. Executing OPT_DFF pass (perform DFF optimizations).
Handling D = Q on $flatten\soc_inst.\signature.\s_xactor_f_rd_data.$procdff$7427 ($dff) from module mkeclass_axi4 (removing D path).
Handling D = Q on $flatten\soc_inst.\signature.\m_xactor_f_wr_data.$procdff$7431 ($dff) from module mkeclass_axi4 (removing D path).
Handling D = Q on $flatten\soc_inst.\signature.\m_xactor_f_wr_addr.$procdff$7435 ($dff) from module mkeclass_axi4 (removing D path).
Handling D = Q on $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$procdff$7566 ($adff) from module mkeclass_axi4 (removing D path).
Handling D = Q on $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$procdff$7565 ($adff) from module mkeclass_axi4 (removing D path).
Handling D = Q on $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$procdff$7524 ($adff) from module mkeclass_axi4 (removing D path).
Handling D = Q on $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$procdff$7504 ($adff) from module mkeclass_axi4 (removing D path).
Handling D = Q on $flatten\soc_inst.\eclass.\fetch_xactor_f_wr_data.$procdff$7431 ($dff) from module mkeclass_axi4 (removing D path).
Handling D = Q on $flatten\soc_inst.\eclass.\fetch_xactor_f_wr_addr.$procdff$7435 ($dff) from module mkeclass_axi4 (removing D path).
Setting constant 0-bit at position 0 on $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$procdff$7504 ($dlatch) from module mkeclass_axi4.
Setting constant 0-bit at position 0 on $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$procdff$7524 ($dlatch) from module mkeclass_axi4.
Setting constant 0-bit at position 0 on $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$procdff$7565 ($dlatch) from module mkeclass_axi4.
Setting constant 0-bit at position 1 on $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$procdff$7565 ($dlatch) from module mkeclass_axi4.
Setting constant 1-bit at position 2 on $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$procdff$7565 ($dlatch) from module mkeclass_axi4.
Setting constant 0-bit at position 3 on $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$procdff$7565 ($dlatch) from module mkeclass_axi4.
Setting constant 1-bit at position 4 on $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$procdff$7565 ($dlatch) from module mkeclass_axi4.
Setting constant 1-bit at position 5 on $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$procdff$7565 ($dlatch) from module mkeclass_axi4.
Setting constant 0-bit at position 6 on $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$procdff$7565 ($dlatch) from module mkeclass_axi4.
Setting constant 0-bit at position 7 on $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$procdff$7565 ($dlatch) from module mkeclass_axi4.
Setting constant 0-bit at position 8 on $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$procdff$7565 ($dlatch) from module mkeclass_axi4.
Setting constant 0-bit at position 9 on $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$procdff$7565 ($dlatch) from module mkeclass_axi4.
Setting constant 0-bit at position 10 on $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$procdff$7565 ($dlatch) from module mkeclass_axi4.
Setting constant 0-bit at position 11 on $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$procdff$7565 ($dlatch) from module mkeclass_axi4.
Setting constant 0-bit at position 12 on $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$procdff$7565 ($dlatch) from module mkeclass_axi4.
Setting constant 0-bit at position 13 on $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$procdff$7565 ($dlatch) from module mkeclass_axi4.
Setting constant 0-bit at position 14 on $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$procdff$7565 ($dlatch) from module mkeclass_axi4.
Setting constant 0-bit at position 15 on $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$procdff$7565 ($dlatch) from module mkeclass_axi4.
Setting constant 0-bit at position 16 on $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$procdff$7565 ($dlatch) from module mkeclass_axi4.
Setting constant 0-bit at position 17 on $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$procdff$7565 ($dlatch) from module mkeclass_axi4.
Setting constant 0-bit at position 18 on $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$procdff$7565 ($dlatch) from module mkeclass_axi4.
Setting constant 0-bit at position 19 on $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$procdff$7565 ($dlatch) from module mkeclass_axi4.
Setting constant 0-bit at position 20 on $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$procdff$7565 ($dlatch) from module mkeclass_axi4.
Setting constant 0-bit at position 21 on $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$procdff$7565 ($dlatch) from module mkeclass_axi4.
Setting constant 0-bit at position 22 on $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$procdff$7565 ($dlatch) from module mkeclass_axi4.
Setting constant 0-bit at position 23 on $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$procdff$7565 ($dlatch) from module mkeclass_axi4.
Setting constant 0-bit at position 24 on $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$procdff$7565 ($dlatch) from module mkeclass_axi4.
Setting constant 0-bit at position 25 on $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$procdff$7565 ($dlatch) from module mkeclass_axi4.
Setting constant 0-bit at position 26 on $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$procdff$7565 ($dlatch) from module mkeclass_axi4.
Setting constant 0-bit at position 27 on $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$procdff$7565 ($dlatch) from module mkeclass_axi4.
Setting constant 0-bit at position 28 on $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$procdff$7565 ($dlatch) from module mkeclass_axi4.
Setting constant 0-bit at position 29 on $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$procdff$7565 ($dlatch) from module mkeclass_axi4.
Setting constant 0-bit at position 30 on $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$procdff$7565 ($dlatch) from module mkeclass_axi4.
Setting constant 0-bit at position 31 on $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$procdff$7565 ($dlatch) from module mkeclass_axi4.
Setting constant 0-bit at position 0 on $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$procdff$7566 ($dlatch) from module mkeclass_axi4.
Setting constant 0-bit at position 1 on $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$procdff$7566 ($dlatch) from module mkeclass_axi4.
Setting constant 1-bit at position 2 on $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$procdff$7566 ($dlatch) from module mkeclass_axi4.
Setting constant 0-bit at position 3 on $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$procdff$7566 ($dlatch) from module mkeclass_axi4.
Setting constant 1-bit at position 4 on $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$procdff$7566 ($dlatch) from module mkeclass_axi4.
Setting constant 1-bit at position 5 on $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$procdff$7566 ($dlatch) from module mkeclass_axi4.
Setting constant 0-bit at position 6 on $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$procdff$7566 ($dlatch) from module mkeclass_axi4.
Setting constant 0-bit at position 7 on $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$procdff$7566 ($dlatch) from module mkeclass_axi4.
Setting constant 0-bit at position 8 on $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$procdff$7566 ($dlatch) from module mkeclass_axi4.
Setting constant 0-bit at position 9 on $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$procdff$7566 ($dlatch) from module mkeclass_axi4.
Setting constant 0-bit at position 10 on $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$procdff$7566 ($dlatch) from module mkeclass_axi4.
Setting constant 0-bit at position 11 on $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$procdff$7566 ($dlatch) from module mkeclass_axi4.
Setting constant 0-bit at position 12 on $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$procdff$7566 ($dlatch) from module mkeclass_axi4.
Setting constant 0-bit at position 13 on $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$procdff$7566 ($dlatch) from module mkeclass_axi4.
Setting constant 0-bit at position 14 on $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$procdff$7566 ($dlatch) from module mkeclass_axi4.
Setting constant 0-bit at position 15 on $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$procdff$7566 ($dlatch) from module mkeclass_axi4.
Setting constant 0-bit at position 16 on $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$procdff$7566 ($dlatch) from module mkeclass_axi4.
Setting constant 0-bit at position 17 on $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$procdff$7566 ($dlatch) from module mkeclass_axi4.
Setting constant 0-bit at position 18 on $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$procdff$7566 ($dlatch) from module mkeclass_axi4.
Setting constant 0-bit at position 19 on $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$procdff$7566 ($dlatch) from module mkeclass_axi4.
Setting constant 0-bit at position 20 on $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$procdff$7566 ($dlatch) from module mkeclass_axi4.
Setting constant 0-bit at position 21 on $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$procdff$7566 ($dlatch) from module mkeclass_axi4.
Setting constant 0-bit at position 22 on $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$procdff$7566 ($dlatch) from module mkeclass_axi4.
Setting constant 0-bit at position 23 on $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$procdff$7566 ($dlatch) from module mkeclass_axi4.
Setting constant 0-bit at position 24 on $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$procdff$7566 ($dlatch) from module mkeclass_axi4.
Setting constant 0-bit at position 25 on $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$procdff$7566 ($dlatch) from module mkeclass_axi4.
Setting constant 0-bit at position 26 on $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$procdff$7566 ($dlatch) from module mkeclass_axi4.
Setting constant 0-bit at position 27 on $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$procdff$7566 ($dlatch) from module mkeclass_axi4.
Setting constant 0-bit at position 28 on $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$procdff$7566 ($dlatch) from module mkeclass_axi4.
Setting constant 0-bit at position 29 on $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$procdff$7566 ($dlatch) from module mkeclass_axi4.
Setting constant 0-bit at position 30 on $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$procdff$7566 ($dlatch) from module mkeclass_axi4.
Setting constant 0-bit at position 31 on $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$procdff$7566 ($dlatch) from module mkeclass_axi4.

52.10.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mkeclass_axi4..
Removed 0 unused cells and 474 unused wires.
<suppressed ~103 debug messages>

52.10.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module mkeclass_axi4.
<suppressed ~12 debug messages>

52.10.9. Rerunning OPT passes. (Maybe there is more to do..)

52.10.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mkeclass_axi4..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~580 debug messages>

52.10.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mkeclass_axi4.
    New ctrl vector for $pmux cell $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$procmux$6844: $auto$opt_reduce.cc:134:opt_pmux$7617
  Optimizing cells in module \mkeclass_axi4.
Performed a total of 1 changes.

52.10.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mkeclass_axi4'.
Removed a total of 0 cells.

52.10.13. Executing OPT_DFF pass (perform DFF optimizations).

52.10.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mkeclass_axi4..
Removed 5 unused cells and 15 unused wires.
<suppressed ~11 debug messages>

52.10.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module mkeclass_axi4.
<suppressed ~2 debug messages>

52.10.16. Rerunning OPT passes. (Maybe there is more to do..)

52.10.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mkeclass_axi4..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~580 debug messages>

52.10.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mkeclass_axi4.
Performed a total of 0 changes.

52.10.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mkeclass_axi4'.
Removed a total of 0 cells.

52.10.20. Executing OPT_DFF pass (perform DFF optimizations).

52.10.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mkeclass_axi4..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

52.10.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module mkeclass_axi4.

52.10.23. Rerunning OPT passes. (Maybe there is more to do..)

52.10.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mkeclass_axi4..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~580 debug messages>

52.10.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mkeclass_axi4.
Performed a total of 0 changes.

52.10.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mkeclass_axi4'.
Removed a total of 0 cells.

52.10.27. Executing OPT_DFF pass (perform DFF optimizations).

52.10.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mkeclass_axi4..

52.10.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module mkeclass_axi4.

52.10.30. Finished OPT passes. (There is nothing left to do.)

52.11. Executing FSM pass (extract and optimize FSM).

52.11.1. Executing FSM_DETECT pass (finding FSMs in design).
Not marking mkeclass_axi4.soc_inst.clint_rg_wrburst_count as FSM state register:
    Users of register don't seem to benefit from recoding.
Found FSM state register mkeclass_axi4.soc_inst.fabric_v_f_rd_mis_0.D_OUT.
Found FSM state register mkeclass_axi4.soc_inst.fabric_v_f_rd_mis_1.D_OUT.
Found FSM state register mkeclass_axi4.soc_inst.fabric_v_f_rd_mis_2.D_OUT.
Found FSM state register mkeclass_axi4.soc_inst.fabric_v_f_rd_mis_3.D_OUT.
Found FSM state register mkeclass_axi4.soc_inst.fabric_v_f_rd_mis_4.D_OUT.
Found FSM state register mkeclass_axi4.soc_inst.fabric_v_f_rd_mis_5.D_OUT.
Found FSM state register mkeclass_axi4.soc_inst.fabric_v_f_rd_sjs_0.D_OUT.
Found FSM state register mkeclass_axi4.soc_inst.fabric_v_f_rd_sjs_1.D_OUT.
Found FSM state register mkeclass_axi4.soc_inst.fabric_v_f_rd_sjs_2.D_OUT.
Found FSM state register mkeclass_axi4.soc_inst.fabric_v_f_wr_mis_0.D_OUT.
Found FSM state register mkeclass_axi4.soc_inst.fabric_v_f_wr_mis_1.D_OUT.
Found FSM state register mkeclass_axi4.soc_inst.fabric_v_f_wr_mis_2.D_OUT.
Found FSM state register mkeclass_axi4.soc_inst.fabric_v_f_wr_mis_3.D_OUT.
Found FSM state register mkeclass_axi4.soc_inst.fabric_v_f_wr_mis_4.D_OUT.
Found FSM state register mkeclass_axi4.soc_inst.fabric_v_f_wr_mis_5.D_OUT.
Found FSM state register mkeclass_axi4.soc_inst.fabric_v_f_wr_sjs_0.D_OUT.
Found FSM state register mkeclass_axi4.soc_inst.fabric_v_f_wr_sjs_1.D_OUT.
Found FSM state register mkeclass_axi4.soc_inst.fabric_v_f_wr_sjs_2.D_OUT.
Found FSM state register mkeclass_axi4.soc_inst.fabric_v_f_wrd_mis_0.D_OUT.
Found FSM state register mkeclass_axi4.soc_inst.fabric_v_f_wrd_mis_1.D_OUT.
Found FSM state register mkeclass_axi4.soc_inst.fabric_v_f_wrd_mis_2.D_OUT.
Found FSM state register mkeclass_axi4.soc_inst.fabric_v_f_wrd_mis_3.D_OUT.
Found FSM state register mkeclass_axi4.soc_inst.fabric_v_f_wrd_mis_4.D_OUT.
Found FSM state register mkeclass_axi4.soc_inst.fabric_v_f_wrd_mis_5.D_OUT.
Found FSM state register mkeclass_axi4.soc_inst.fabric_v_f_wrd_sjs_0.D_OUT.
Found FSM state register mkeclass_axi4.soc_inst.fabric_v_f_wrd_sjs_1.D_OUT.
Found FSM state register mkeclass_axi4.soc_inst.fabric_v_f_wrd_sjs_2.D_OUT.
Not marking mkeclass_axi4.soc_inst.fabric_xactors_to_slaves_0_f_rd_data.data1_reg as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking mkeclass_axi4.soc_inst.fabric_xactors_to_slaves_0_f_wr_resp.data1_reg as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking mkeclass_axi4.soc_inst.fabric_xactors_to_slaves_1_f_rd_data.data1_reg as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking mkeclass_axi4.soc_inst.fabric_xactors_to_slaves_1_f_wr_resp.data1_reg as FSM state register:
    Users of register don't seem to benefit from recoding.
Found FSM state register mkeclass_axi4.soc_inst.uart_user_ifc_uart_rRecvState.
Found FSM state register mkeclass_axi4.soc_inst.uart_user_ifc_uart_rXmitState.

52.11.2. Executing FSM_EXTRACT pass (extracting FSM from design).
Extracting FSM `\soc_inst.fabric_v_f_rd_mis_0.D_OUT' from module `\mkeclass_axi4'.
  found $dff cell for state register: $flatten\soc_inst.\fabric_v_f_rd_mis_0.$procdff$7407
  root of input selection tree: $flatten\soc_inst.\fabric_v_f_rd_mis_0.$0\D_OUT[1:0]
  found ctrl input: \soc_inst.fabric_xactors_to_slaves_0_f_rd_addr.ENQ
  found ctrl input: \soc_inst.WILL_FIRE_RL_fabric_rl_rd_xaction_master_to_slave_6
  found ctrl input: \soc_inst.WILL_FIRE_RL_fabric_rl_rd_xaction_master_to_slave
  found state code: 2'10
  found state code: 2'01
  found state code: 2'00
  found ctrl output: $flatten\soc_inst.$eq$mkSoc.v:5932$1226_Y
  found ctrl output: $flatten\soc_inst.$eq$mkSoc.v:5998$1268_Y
  found ctrl output: $flatten\soc_inst.$eq$mkSoc.v:6064$1310_Y
  ctrl inputs: { \soc_inst.WILL_FIRE_RL_fabric_rl_rd_xaction_master_to_slave_6 \soc_inst.WILL_FIRE_RL_fabric_rl_rd_xaction_master_to_slave \soc_inst.fabric_xactors_to_slaves_0_f_rd_addr.ENQ }
  ctrl outputs: { $flatten\soc_inst.$eq$mkSoc.v:6064$1310_Y $flatten\soc_inst.$eq$mkSoc.v:5998$1268_Y $flatten\soc_inst.$eq$mkSoc.v:5932$1226_Y $flatten\soc_inst.\fabric_v_f_rd_mis_0.$0\D_OUT[1:0] }
  transition:       2'00 3'--0 ->       2'00 5'00100
  transition:       2'00 3'001 ->       2'10 5'00110
  transition:       2'00 3'-11 ->       2'00 5'00100
  transition:       2'00 3'1-1 ->       2'01 5'00101
  transition:       2'10 3'--0 ->       2'10 5'10010
  transition:       2'10 3'001 ->       2'10 5'10010
  transition:       2'10 3'-11 ->       2'00 5'10000
  transition:       2'10 3'1-1 ->       2'01 5'10001
  transition:       2'01 3'--0 ->       2'01 5'01001
  transition:       2'01 3'001 ->       2'10 5'01010
  transition:       2'01 3'-11 ->       2'00 5'01000
  transition:       2'01 3'1-1 ->       2'01 5'01001
Extracting FSM `\soc_inst.fabric_v_f_rd_mis_1.D_OUT' from module `\mkeclass_axi4'.
  found $dff cell for state register: $flatten\soc_inst.\fabric_v_f_rd_mis_1.$procdff$7407
  root of input selection tree: $flatten\soc_inst.\fabric_v_f_rd_mis_1.$0\D_OUT[1:0]
  found ctrl input: \soc_inst.fabric_xactors_to_slaves_1_f_rd_addr.ENQ
  found ctrl input: \soc_inst.WILL_FIRE_RL_fabric_rl_rd_xaction_master_to_slave_7
  found ctrl input: \soc_inst.WILL_FIRE_RL_fabric_rl_rd_xaction_master_to_slave_1
  found state code: 2'10
  found state code: 2'01
  found state code: 2'00
  found ctrl output: $flatten\soc_inst.$eq$mkSoc.v:5943$1233_Y
  found ctrl output: $flatten\soc_inst.$eq$mkSoc.v:6009$1275_Y
  found ctrl output: $flatten\soc_inst.$eq$mkSoc.v:6075$1317_Y
  ctrl inputs: { \soc_inst.WILL_FIRE_RL_fabric_rl_rd_xaction_master_to_slave_7 \soc_inst.WILL_FIRE_RL_fabric_rl_rd_xaction_master_to_slave_1 \soc_inst.fabric_xactors_to_slaves_1_f_rd_addr.ENQ }
  ctrl outputs: { $flatten\soc_inst.$eq$mkSoc.v:6075$1317_Y $flatten\soc_inst.$eq$mkSoc.v:6009$1275_Y $flatten\soc_inst.$eq$mkSoc.v:5943$1233_Y $flatten\soc_inst.\fabric_v_f_rd_mis_1.$0\D_OUT[1:0] }
  transition:       2'00 3'--0 ->       2'00 5'00100
  transition:       2'00 3'001 ->       2'10 5'00110
  transition:       2'00 3'-11 ->       2'00 5'00100
  transition:       2'00 3'1-1 ->       2'01 5'00101
  transition:       2'10 3'--0 ->       2'10 5'10010
  transition:       2'10 3'001 ->       2'10 5'10010
  transition:       2'10 3'-11 ->       2'00 5'10000
  transition:       2'10 3'1-1 ->       2'01 5'10001
  transition:       2'01 3'--0 ->       2'01 5'01001
  transition:       2'01 3'001 ->       2'10 5'01010
  transition:       2'01 3'-11 ->       2'00 5'01000
  transition:       2'01 3'1-1 ->       2'01 5'01001
Extracting FSM `\soc_inst.fabric_v_f_rd_mis_2.D_OUT' from module `\mkeclass_axi4'.
  found $dff cell for state register: $flatten\soc_inst.\fabric_v_f_rd_mis_2.$procdff$7407
  root of input selection tree: $flatten\soc_inst.\fabric_v_f_rd_mis_2.$0\D_OUT[1:0]
  found ctrl input: \soc_inst.fabric_xactors_to_slaves_2_f_rd_addr.ENQ
  found ctrl input: \soc_inst.WILL_FIRE_RL_fabric_rl_rd_xaction_master_to_slave_8
  found ctrl input: \soc_inst.WILL_FIRE_RL_fabric_rl_rd_xaction_master_to_slave_2
  found state code: 2'10
  found state code: 2'01
  found state code: 2'00
  found ctrl output: $flatten\soc_inst.$eq$mkSoc.v:5954$1240_Y
  found ctrl output: $flatten\soc_inst.$eq$mkSoc.v:6020$1282_Y
  found ctrl output: $flatten\soc_inst.$eq$mkSoc.v:6086$1324_Y
  ctrl inputs: { \soc_inst.WILL_FIRE_RL_fabric_rl_rd_xaction_master_to_slave_8 \soc_inst.WILL_FIRE_RL_fabric_rl_rd_xaction_master_to_slave_2 \soc_inst.fabric_xactors_to_slaves_2_f_rd_addr.ENQ }
  ctrl outputs: { $flatten\soc_inst.$eq$mkSoc.v:6086$1324_Y $flatten\soc_inst.$eq$mkSoc.v:6020$1282_Y $flatten\soc_inst.$eq$mkSoc.v:5954$1240_Y $flatten\soc_inst.\fabric_v_f_rd_mis_2.$0\D_OUT[1:0] }
  transition:       2'00 3'--0 ->       2'00 5'00100
  transition:       2'00 3'001 ->       2'10 5'00110
  transition:       2'00 3'-11 ->       2'00 5'00100
  transition:       2'00 3'1-1 ->       2'01 5'00101
  transition:       2'10 3'--0 ->       2'10 5'10010
  transition:       2'10 3'001 ->       2'10 5'10010
  transition:       2'10 3'-11 ->       2'00 5'10000
  transition:       2'10 3'1-1 ->       2'01 5'10001
  transition:       2'01 3'--0 ->       2'01 5'01001
  transition:       2'01 3'001 ->       2'10 5'01010
  transition:       2'01 3'-11 ->       2'00 5'01000
  transition:       2'01 3'1-1 ->       2'01 5'01001
Extracting FSM `\soc_inst.fabric_v_f_rd_mis_3.D_OUT' from module `\mkeclass_axi4'.
  found $dff cell for state register: $flatten\soc_inst.\fabric_v_f_rd_mis_3.$procdff$7407
  root of input selection tree: $flatten\soc_inst.\fabric_v_f_rd_mis_3.$0\D_OUT[1:0]
  found ctrl input: \soc_inst.fabric_xactors_to_slaves_3_f_rd_addr.ENQ
  found ctrl input: \soc_inst.WILL_FIRE_RL_fabric_rl_rd_xaction_master_to_slave_9
  found ctrl input: \soc_inst.WILL_FIRE_RL_fabric_rl_rd_xaction_master_to_slave_3
  found state code: 2'10
  found state code: 2'01
  found state code: 2'00
  found ctrl output: $flatten\soc_inst.$eq$mkSoc.v:5965$1247_Y
  found ctrl output: $flatten\soc_inst.$eq$mkSoc.v:6031$1289_Y
  found ctrl output: $flatten\soc_inst.$eq$mkSoc.v:6097$1331_Y
  ctrl inputs: { \soc_inst.WILL_FIRE_RL_fabric_rl_rd_xaction_master_to_slave_9 \soc_inst.WILL_FIRE_RL_fabric_rl_rd_xaction_master_to_slave_3 \soc_inst.fabric_xactors_to_slaves_3_f_rd_addr.ENQ }
  ctrl outputs: { $flatten\soc_inst.$eq$mkSoc.v:6097$1331_Y $flatten\soc_inst.$eq$mkSoc.v:6031$1289_Y $flatten\soc_inst.$eq$mkSoc.v:5965$1247_Y $flatten\soc_inst.\fabric_v_f_rd_mis_3.$0\D_OUT[1:0] }
  transition:       2'00 3'--0 ->       2'00 5'00100
  transition:       2'00 3'001 ->       2'10 5'00110
  transition:       2'00 3'-11 ->       2'00 5'00100
  transition:       2'00 3'1-1 ->       2'01 5'00101
  transition:       2'10 3'--0 ->       2'10 5'10010
  transition:       2'10 3'001 ->       2'10 5'10010
  transition:       2'10 3'-11 ->       2'00 5'10000
  transition:       2'10 3'1-1 ->       2'01 5'10001
  transition:       2'01 3'--0 ->       2'01 5'01001
  transition:       2'01 3'001 ->       2'10 5'01010
  transition:       2'01 3'-11 ->       2'00 5'01000
  transition:       2'01 3'1-1 ->       2'01 5'01001
Extracting FSM `\soc_inst.fabric_v_f_rd_mis_4.D_OUT' from module `\mkeclass_axi4'.
  found $dff cell for state register: $flatten\soc_inst.\fabric_v_f_rd_mis_4.$procdff$7407
  root of input selection tree: $flatten\soc_inst.\fabric_v_f_rd_mis_4.$0\D_OUT[1:0]
  found ctrl input: \soc_inst.fabric_xactors_to_slaves_4_f_rd_addr.ENQ
  found ctrl input: \soc_inst.WILL_FIRE_RL_fabric_rl_rd_xaction_master_to_slave_10
  found ctrl input: \soc_inst.WILL_FIRE_RL_fabric_rl_rd_xaction_master_to_slave_4
  found state code: 2'10
  found state code: 2'01
  found state code: 2'00
  found ctrl output: $flatten\soc_inst.$eq$mkSoc.v:5976$1254_Y
  found ctrl output: $flatten\soc_inst.$eq$mkSoc.v:6042$1296_Y
  found ctrl output: $flatten\soc_inst.$eq$mkSoc.v:6108$1338_Y
  ctrl inputs: { \soc_inst.WILL_FIRE_RL_fabric_rl_rd_xaction_master_to_slave_4 \soc_inst.WILL_FIRE_RL_fabric_rl_rd_xaction_master_to_slave_10 \soc_inst.fabric_xactors_to_slaves_4_f_rd_addr.ENQ }
  ctrl outputs: { $flatten\soc_inst.$eq$mkSoc.v:6108$1338_Y $flatten\soc_inst.$eq$mkSoc.v:6042$1296_Y $flatten\soc_inst.$eq$mkSoc.v:5976$1254_Y $flatten\soc_inst.\fabric_v_f_rd_mis_4.$0\D_OUT[1:0] }
  transition:       2'00 3'--0 ->       2'00 5'00100
  transition:       2'00 3'001 ->       2'10 5'00110
  transition:       2'00 3'1-1 ->       2'00 5'00100
  transition:       2'00 3'-11 ->       2'01 5'00101
  transition:       2'10 3'--0 ->       2'10 5'10010
  transition:       2'10 3'001 ->       2'10 5'10010
  transition:       2'10 3'1-1 ->       2'00 5'10000
  transition:       2'10 3'-11 ->       2'01 5'10001
  transition:       2'01 3'--0 ->       2'01 5'01001
  transition:       2'01 3'001 ->       2'10 5'01010
  transition:       2'01 3'1-1 ->       2'00 5'01000
  transition:       2'01 3'-11 ->       2'01 5'01001
Extracting FSM `\soc_inst.fabric_v_f_rd_mis_5.D_OUT' from module `\mkeclass_axi4'.
  found $dff cell for state register: $flatten\soc_inst.\fabric_v_f_rd_mis_5.$procdff$7407
  root of input selection tree: $flatten\soc_inst.\fabric_v_f_rd_mis_5.$0\D_OUT[1:0]
  found ctrl input: \soc_inst.fabric_xactors_to_slaves_5_f_rd_addr.ENQ
  found ctrl input: \soc_inst.WILL_FIRE_RL_fabric_rl_rd_xaction_master_to_slave_11
  found ctrl input: \soc_inst.WILL_FIRE_RL_fabric_rl_rd_xaction_master_to_slave_5
  found state code: 2'10
  found state code: 2'01
  found state code: 2'00
  found ctrl output: $flatten\soc_inst.$eq$mkSoc.v:5987$1261_Y
  found ctrl output: $flatten\soc_inst.$eq$mkSoc.v:6053$1303_Y
  found ctrl output: $flatten\soc_inst.$eq$mkSoc.v:6119$1345_Y
  ctrl inputs: { \soc_inst.WILL_FIRE_RL_fabric_rl_rd_xaction_master_to_slave_5 \soc_inst.WILL_FIRE_RL_fabric_rl_rd_xaction_master_to_slave_11 \soc_inst.fabric_xactors_to_slaves_5_f_rd_addr.ENQ }
  ctrl outputs: { $flatten\soc_inst.$eq$mkSoc.v:6119$1345_Y $flatten\soc_inst.$eq$mkSoc.v:6053$1303_Y $flatten\soc_inst.$eq$mkSoc.v:5987$1261_Y $flatten\soc_inst.\fabric_v_f_rd_mis_5.$0\D_OUT[1:0] }
  transition:       2'00 3'--0 ->       2'00 5'00100
  transition:       2'00 3'001 ->       2'10 5'00110
  transition:       2'00 3'1-1 ->       2'00 5'00100
  transition:       2'00 3'-11 ->       2'01 5'00101
  transition:       2'10 3'--0 ->       2'10 5'10010
  transition:       2'10 3'001 ->       2'10 5'10010
  transition:       2'10 3'1-1 ->       2'00 5'10000
  transition:       2'10 3'-11 ->       2'01 5'10001
  transition:       2'01 3'--0 ->       2'01 5'01001
  transition:       2'01 3'001 ->       2'10 5'01010
  transition:       2'01 3'1-1 ->       2'00 5'01000
  transition:       2'01 3'-11 ->       2'01 5'01001
Extracting FSM `\soc_inst.fabric_v_f_rd_sjs_0.D_OUT' from module `\mkeclass_axi4'.
  found $dff cell for state register: $flatten\soc_inst.\fabric_v_f_rd_sjs_0.$procdff$7409
  root of input selection tree: $flatten\soc_inst.\fabric_v_f_rd_sjs_0.$0\D_OUT[2:0]
  found ctrl input: \soc_inst.fabric_v_f_rd_sjs_0.ENQ
  found ctrl input: \soc_inst.WILL_FIRE_RL_fabric_rl_rd_xaction_master_to_slave_5
  found ctrl input: \soc_inst.WILL_FIRE_RL_fabric_rl_rd_xaction_master_to_slave_4
  found ctrl input: \soc_inst.WILL_FIRE_RL_fabric_rl_rd_xaction_master_to_slave_3
  found ctrl input: \soc_inst.WILL_FIRE_RL_fabric_rl_rd_xaction_master_to_slave_1
  found ctrl input: \soc_inst.WILL_FIRE_RL_fabric_rl_rd_xaction_master_to_slave
  found state code: 3'010
  found state code: 3'101
  found state code: 3'100
  found state code: 3'011
  found state code: 3'001
  found state code: 3'000
  found ctrl output: $flatten\soc_inst.$eq$mkSoc.v:5933$1228_Y
  found ctrl output: $flatten\soc_inst.$eq$mkSoc.v:5944$1235_Y
  found ctrl output: $flatten\soc_inst.$eq$mkSoc.v:5955$1242_Y
  found ctrl output: $flatten\soc_inst.$eq$mkSoc.v:5966$1249_Y
  found ctrl output: $flatten\soc_inst.$eq$mkSoc.v:5977$1256_Y
  found ctrl output: $flatten\soc_inst.$eq$mkSoc.v:5988$1263_Y
  ctrl inputs: { \soc_inst.WILL_FIRE_RL_fabric_rl_rd_xaction_master_to_slave_5 \soc_inst.WILL_FIRE_RL_fabric_rl_rd_xaction_master_to_slave_4 \soc_inst.WILL_FIRE_RL_fabric_rl_rd_xaction_master_to_slave_3 \soc_inst.WILL_FIRE_RL_fabric_rl_rd_xaction_master_to_slave_1 \soc_inst.WILL_FIRE_RL_fabric_rl_rd_xaction_master_to_slave \soc_inst.fabric_v_f_rd_sjs_0.ENQ }
  ctrl outputs: { $flatten\soc_inst.$eq$mkSoc.v:5988$1263_Y $flatten\soc_inst.$eq$mkSoc.v:5977$1256_Y $flatten\soc_inst.$eq$mkSoc.v:5966$1249_Y $flatten\soc_inst.$eq$mkSoc.v:5955$1242_Y $flatten\soc_inst.$eq$mkSoc.v:5944$1235_Y $flatten\soc_inst.$eq$mkSoc.v:5933$1228_Y $flatten\soc_inst.\fabric_v_f_rd_sjs_0.$0\D_OUT[2:0] }
  transition:      3'000 6'-----0 ->      3'000 9'000001000
  transition:      3'000 6'000001 ->      3'010 9'000001010
  transition:      3'000 6'----11 ->      3'000 9'000001000
  transition:      3'000 6'---1-1 ->      3'001 9'000001001
  transition:      3'000 6'--1--1 ->      3'011 9'000001011
  transition:      3'000 6'-1---1 ->      3'100 9'000001100
  transition:      3'000 6'1----1 ->      3'101 9'000001101
  transition:      3'100 6'-----0 ->      3'100 9'010000100
  transition:      3'100 6'000001 ->      3'010 9'010000010
  transition:      3'100 6'----11 ->      3'000 9'010000000
  transition:      3'100 6'---1-1 ->      3'001 9'010000001
  transition:      3'100 6'--1--1 ->      3'011 9'010000011
  transition:      3'100 6'-1---1 ->      3'100 9'010000100
  transition:      3'100 6'1----1 ->      3'101 9'010000101
  transition:      3'010 6'-----0 ->      3'010 9'000100010
  transition:      3'010 6'000001 ->      3'010 9'000100010
  transition:      3'010 6'----11 ->      3'000 9'000100000
  transition:      3'010 6'---1-1 ->      3'001 9'000100001
  transition:      3'010 6'--1--1 ->      3'011 9'000100011
  transition:      3'010 6'-1---1 ->      3'100 9'000100100
  transition:      3'010 6'1----1 ->      3'101 9'000100101
  transition:      3'001 6'-----0 ->      3'001 9'000010001
  transition:      3'001 6'000001 ->      3'010 9'000010010
  transition:      3'001 6'----11 ->      3'000 9'000010000
  transition:      3'001 6'---1-1 ->      3'001 9'000010001
  transition:      3'001 6'--1--1 ->      3'011 9'000010011
  transition:      3'001 6'-1---1 ->      3'100 9'000010100
  transition:      3'001 6'1----1 ->      3'101 9'000010101
  transition:      3'101 6'-----0 ->      3'101 9'100000101
  transition:      3'101 6'000001 ->      3'010 9'100000010
  transition:      3'101 6'----11 ->      3'000 9'100000000
  transition:      3'101 6'---1-1 ->      3'001 9'100000001
  transition:      3'101 6'--1--1 ->      3'011 9'100000011
  transition:      3'101 6'-1---1 ->      3'100 9'100000100
  transition:      3'101 6'1----1 ->      3'101 9'100000101
  transition:      3'011 6'-----0 ->      3'011 9'001000011
  transition:      3'011 6'000001 ->      3'010 9'001000010
  transition:      3'011 6'----11 ->      3'000 9'001000000
  transition:      3'011 6'---1-1 ->      3'001 9'001000001
  transition:      3'011 6'--1--1 ->      3'011 9'001000011
  transition:      3'011 6'-1---1 ->      3'100 9'001000100
  transition:      3'011 6'1----1 ->      3'101 9'001000101
Extracting FSM `\soc_inst.fabric_v_f_rd_sjs_1.D_OUT' from module `\mkeclass_axi4'.
  found $dff cell for state register: $flatten\soc_inst.\fabric_v_f_rd_sjs_1.$procdff$7409
  root of input selection tree: $flatten\soc_inst.\fabric_v_f_rd_sjs_1.$0\D_OUT[2:0]
  found ctrl input: \soc_inst.fabric_v_f_rd_sjs_1.ENQ
  found ctrl input: \soc_inst.WILL_FIRE_RL_fabric_rl_rd_xaction_master_to_slave_11
  found ctrl input: \soc_inst.WILL_FIRE_RL_fabric_rl_rd_xaction_master_to_slave_10
  found ctrl input: \soc_inst.WILL_FIRE_RL_fabric_rl_rd_xaction_master_to_slave_9
  found ctrl input: \soc_inst.WILL_FIRE_RL_fabric_rl_rd_xaction_master_to_slave_7
  found ctrl input: \soc_inst.WILL_FIRE_RL_fabric_rl_rd_xaction_master_to_slave_6
  found state code: 3'010
  found state code: 3'101
  found state code: 3'100
  found state code: 3'011
  found state code: 3'001
  found state code: 3'000
  found ctrl output: $flatten\soc_inst.$eq$mkSoc.v:5999$1270_Y
  found ctrl output: $flatten\soc_inst.$eq$mkSoc.v:6010$1277_Y
  found ctrl output: $flatten\soc_inst.$eq$mkSoc.v:6021$1284_Y
  found ctrl output: $flatten\soc_inst.$eq$mkSoc.v:6032$1291_Y
  found ctrl output: $flatten\soc_inst.$eq$mkSoc.v:6043$1298_Y
  found ctrl output: $flatten\soc_inst.$eq$mkSoc.v:6054$1305_Y
  ctrl inputs: { \soc_inst.WILL_FIRE_RL_fabric_rl_rd_xaction_master_to_slave_9 \soc_inst.WILL_FIRE_RL_fabric_rl_rd_xaction_master_to_slave_7 \soc_inst.WILL_FIRE_RL_fabric_rl_rd_xaction_master_to_slave_6 \soc_inst.WILL_FIRE_RL_fabric_rl_rd_xaction_master_to_slave_11 \soc_inst.WILL_FIRE_RL_fabric_rl_rd_xaction_master_to_slave_10 \soc_inst.fabric_v_f_rd_sjs_1.ENQ }
  ctrl outputs: { $flatten\soc_inst.$eq$mkSoc.v:6054$1305_Y $flatten\soc_inst.$eq$mkSoc.v:6043$1298_Y $flatten\soc_inst.$eq$mkSoc.v:6032$1291_Y $flatten\soc_inst.$eq$mkSoc.v:6021$1284_Y $flatten\soc_inst.$eq$mkSoc.v:6010$1277_Y $flatten\soc_inst.$eq$mkSoc.v:5999$1270_Y $flatten\soc_inst.\fabric_v_f_rd_sjs_1.$0\D_OUT[2:0] }
  transition:      3'000 6'-----0 ->      3'000 9'000001000
  transition:      3'000 6'000001 ->      3'010 9'000001010
  transition:      3'000 6'--1--1 ->      3'000 9'000001000
  transition:      3'000 6'-1---1 ->      3'001 9'000001001
  transition:      3'000 6'1----1 ->      3'011 9'000001011
  transition:      3'000 6'----11 ->      3'100 9'000001100
  transition:      3'000 6'---1-1 ->      3'101 9'000001101
  transition:      3'100 6'-----0 ->      3'100 9'010000100
  transition:      3'100 6'000001 ->      3'010 9'010000010
  transition:      3'100 6'--1--1 ->      3'000 9'010000000
  transition:      3'100 6'-1---1 ->      3'001 9'010000001
  transition:      3'100 6'1----1 ->      3'011 9'010000011
  transition:      3'100 6'----11 ->      3'100 9'010000100
  transition:      3'100 6'---1-1 ->      3'101 9'010000101
  transition:      3'010 6'-----0 ->      3'010 9'000100010
  transition:      3'010 6'000001 ->      3'010 9'000100010
  transition:      3'010 6'--1--1 ->      3'000 9'000100000
  transition:      3'010 6'-1---1 ->      3'001 9'000100001
  transition:      3'010 6'1----1 ->      3'011 9'000100011
  transition:      3'010 6'----11 ->      3'100 9'000100100
  transition:      3'010 6'---1-1 ->      3'101 9'000100101
  transition:      3'001 6'-----0 ->      3'001 9'000010001
  transition:      3'001 6'000001 ->      3'010 9'000010010
  transition:      3'001 6'--1--1 ->      3'000 9'000010000
  transition:      3'001 6'-1---1 ->      3'001 9'000010001
  transition:      3'001 6'1----1 ->      3'011 9'000010011
  transition:      3'001 6'----11 ->      3'100 9'000010100
  transition:      3'001 6'---1-1 ->      3'101 9'000010101
  transition:      3'101 6'-----0 ->      3'101 9'100000101
  transition:      3'101 6'000001 ->      3'010 9'100000010
  transition:      3'101 6'--1--1 ->      3'000 9'100000000
  transition:      3'101 6'-1---1 ->      3'001 9'100000001
  transition:      3'101 6'1----1 ->      3'011 9'100000011
  transition:      3'101 6'----11 ->      3'100 9'100000100
  transition:      3'101 6'---1-1 ->      3'101 9'100000101
  transition:      3'011 6'-----0 ->      3'011 9'001000011
  transition:      3'011 6'000001 ->      3'010 9'001000010
  transition:      3'011 6'--1--1 ->      3'000 9'001000000
  transition:      3'011 6'-1---1 ->      3'001 9'001000001
  transition:      3'011 6'1----1 ->      3'011 9'001000011
  transition:      3'011 6'----11 ->      3'100 9'001000100
  transition:      3'011 6'---1-1 ->      3'101 9'001000101
Extracting FSM `\soc_inst.fabric_v_f_rd_sjs_2.D_OUT' from module `\mkeclass_axi4'.
  found $dff cell for state register: $flatten\soc_inst.\fabric_v_f_rd_sjs_2.$procdff$7409
  root of input selection tree: $flatten\soc_inst.\fabric_v_f_rd_sjs_2.$0\D_OUT[2:0]
  found ctrl input: \soc_inst.fabric_v_f_rd_sjs_2.ENQ
  found ctrl input: \soc_inst.WILL_FIRE_RL_fabric_rl_rd_xaction_master_to_slave_17
  found ctrl input: \soc_inst.WILL_FIRE_RL_fabric_rl_rd_xaction_master_to_slave_16
  found ctrl input: \soc_inst.WILL_FIRE_RL_fabric_rl_rd_xaction_master_to_slave_15
  found ctrl input: \soc_inst.WILL_FIRE_RL_fabric_rl_rd_xaction_master_to_slave_13
  found ctrl input: \soc_inst.WILL_FIRE_RL_fabric_rl_rd_xaction_master_to_slave_12
  found state code: 3'010
  found state code: 3'101
  found state code: 3'100
  found state code: 3'011
  found state code: 3'001
  found state code: 3'000
  found ctrl output: $flatten\soc_inst.$eq$mkSoc.v:6065$1312_Y
  found ctrl output: $flatten\soc_inst.$eq$mkSoc.v:6076$1319_Y
  found ctrl output: $flatten\soc_inst.$eq$mkSoc.v:6087$1326_Y
  found ctrl output: $flatten\soc_inst.$eq$mkSoc.v:6098$1333_Y
  found ctrl output: $flatten\soc_inst.$eq$mkSoc.v:6109$1340_Y
  found ctrl output: $flatten\soc_inst.$eq$mkSoc.v:6120$1347_Y
  ctrl inputs: { \soc_inst.WILL_FIRE_RL_fabric_rl_rd_xaction_master_to_slave_17 \soc_inst.WILL_FIRE_RL_fabric_rl_rd_xaction_master_to_slave_16 \soc_inst.WILL_FIRE_RL_fabric_rl_rd_xaction_master_to_slave_15 \soc_inst.WILL_FIRE_RL_fabric_rl_rd_xaction_master_to_slave_13 \soc_inst.WILL_FIRE_RL_fabric_rl_rd_xaction_master_to_slave_12 \soc_inst.fabric_v_f_rd_sjs_2.ENQ }
  ctrl outputs: { $flatten\soc_inst.$eq$mkSoc.v:6120$1347_Y $flatten\soc_inst.$eq$mkSoc.v:6109$1340_Y $flatten\soc_inst.$eq$mkSoc.v:6098$1333_Y $flatten\soc_inst.$eq$mkSoc.v:6087$1326_Y $flatten\soc_inst.$eq$mkSoc.v:6076$1319_Y $flatten\soc_inst.$eq$mkSoc.v:6065$1312_Y $flatten\soc_inst.\fabric_v_f_rd_sjs_2.$0\D_OUT[2:0] }
  transition:      3'000 6'-----0 ->      3'000 9'000001000
  transition:      3'000 6'000001 ->      3'010 9'000001010
  transition:      3'000 6'----11 ->      3'000 9'000001000
  transition:      3'000 6'---1-1 ->      3'001 9'000001001
  transition:      3'000 6'--1--1 ->      3'011 9'000001011
  transition:      3'000 6'-1---1 ->      3'100 9'000001100
  transition:      3'000 6'1----1 ->      3'101 9'000001101
  transition:      3'100 6'-----0 ->      3'100 9'010000100
  transition:      3'100 6'000001 ->      3'010 9'010000010
  transition:      3'100 6'----11 ->      3'000 9'010000000
  transition:      3'100 6'---1-1 ->      3'001 9'010000001
  transition:      3'100 6'--1--1 ->      3'011 9'010000011
  transition:      3'100 6'-1---1 ->      3'100 9'010000100
  transition:      3'100 6'1----1 ->      3'101 9'010000101
  transition:      3'010 6'-----0 ->      3'010 9'000100010
  transition:      3'010 6'000001 ->      3'010 9'000100010
  transition:      3'010 6'----11 ->      3'000 9'000100000
  transition:      3'010 6'---1-1 ->      3'001 9'000100001
  transition:      3'010 6'--1--1 ->      3'011 9'000100011
  transition:      3'010 6'-1---1 ->      3'100 9'000100100
  transition:      3'010 6'1----1 ->      3'101 9'000100101
  transition:      3'001 6'-----0 ->      3'001 9'000010001
  transition:      3'001 6'000001 ->      3'010 9'000010010
  transition:      3'001 6'----11 ->      3'000 9'000010000
  transition:      3'001 6'---1-1 ->      3'001 9'000010001
  transition:      3'001 6'--1--1 ->      3'011 9'000010011
  transition:      3'001 6'-1---1 ->      3'100 9'000010100
  transition:      3'001 6'1----1 ->      3'101 9'000010101
  transition:      3'101 6'-----0 ->      3'101 9'100000101
  transition:      3'101 6'000001 ->      3'010 9'100000010
  transition:      3'101 6'----11 ->      3'000 9'100000000
  transition:      3'101 6'---1-1 ->      3'001 9'100000001
  transition:      3'101 6'--1--1 ->      3'011 9'100000011
  transition:      3'101 6'-1---1 ->      3'100 9'100000100
  transition:      3'101 6'1----1 ->      3'101 9'100000101
  transition:      3'011 6'-----0 ->      3'011 9'001000011
  transition:      3'011 6'000001 ->      3'010 9'001000010
  transition:      3'011 6'----11 ->      3'000 9'001000000
  transition:      3'011 6'---1-1 ->      3'001 9'001000001
  transition:      3'011 6'--1--1 ->      3'011 9'001000011
  transition:      3'011 6'-1---1 ->      3'100 9'001000100
  transition:      3'011 6'1----1 ->      3'101 9'001000101
Extracting FSM `\soc_inst.fabric_v_f_wr_mis_0.D_OUT' from module `\mkeclass_axi4'.
  found $dff cell for state register: $flatten\soc_inst.\fabric_v_f_wr_mis_0.$procdff$7407
  root of input selection tree: $flatten\soc_inst.\fabric_v_f_wr_mis_0.$0\D_OUT[1:0]
  found ctrl input: \soc_inst.fabric_xactors_to_slaves_0_f_wr_addr.ENQ
  found ctrl input: \soc_inst.WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave_6
  found ctrl input: \soc_inst.WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave
  found state code: 2'10
  found state code: 2'01
  found state code: 2'00
  found ctrl output: $flatten\soc_inst.$eq$mkSoc.v:5734$1100_Y
  found ctrl output: $flatten\soc_inst.$eq$mkSoc.v:5800$1142_Y
  found ctrl output: $flatten\soc_inst.$eq$mkSoc.v:5866$1184_Y
  ctrl inputs: { \soc_inst.WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave_6 \soc_inst.WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave \soc_inst.fabric_xactors_to_slaves_0_f_wr_addr.ENQ }
  ctrl outputs: { $flatten\soc_inst.$eq$mkSoc.v:5866$1184_Y $flatten\soc_inst.$eq$mkSoc.v:5800$1142_Y $flatten\soc_inst.$eq$mkSoc.v:5734$1100_Y $flatten\soc_inst.\fabric_v_f_wr_mis_0.$0\D_OUT[1:0] }
  transition:       2'00 3'--0 ->       2'00 5'00100
  transition:       2'00 3'001 ->       2'10 5'00110
  transition:       2'00 3'-11 ->       2'00 5'00100
  transition:       2'00 3'1-1 ->       2'01 5'00101
  transition:       2'10 3'--0 ->       2'10 5'10010
  transition:       2'10 3'001 ->       2'10 5'10010
  transition:       2'10 3'-11 ->       2'00 5'10000
  transition:       2'10 3'1-1 ->       2'01 5'10001
  transition:       2'01 3'--0 ->       2'01 5'01001
  transition:       2'01 3'001 ->       2'10 5'01010
  transition:       2'01 3'-11 ->       2'00 5'01000
  transition:       2'01 3'1-1 ->       2'01 5'01001
Extracting FSM `\soc_inst.fabric_v_f_wr_mis_1.D_OUT' from module `\mkeclass_axi4'.
  found $dff cell for state register: $flatten\soc_inst.\fabric_v_f_wr_mis_1.$procdff$7407
  root of input selection tree: $flatten\soc_inst.\fabric_v_f_wr_mis_1.$0\D_OUT[1:0]
  found ctrl input: \soc_inst.fabric_xactors_to_slaves_1_f_wr_addr.ENQ
  found ctrl input: \soc_inst.WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave_7
  found ctrl input: \soc_inst.WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave_1
  found state code: 2'10
  found state code: 2'01
  found state code: 2'00
  found ctrl output: $flatten\soc_inst.$eq$mkSoc.v:5745$1107_Y
  found ctrl output: $flatten\soc_inst.$eq$mkSoc.v:5811$1149_Y
  found ctrl output: $flatten\soc_inst.$eq$mkSoc.v:5877$1191_Y
  ctrl inputs: { \soc_inst.WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave_7 \soc_inst.WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave_1 \soc_inst.fabric_xactors_to_slaves_1_f_wr_addr.ENQ }
  ctrl outputs: { $flatten\soc_inst.$eq$mkSoc.v:5877$1191_Y $flatten\soc_inst.$eq$mkSoc.v:5811$1149_Y $flatten\soc_inst.$eq$mkSoc.v:5745$1107_Y $flatten\soc_inst.\fabric_v_f_wr_mis_1.$0\D_OUT[1:0] }
  transition:       2'00 3'--0 ->       2'00 5'00100
  transition:       2'00 3'001 ->       2'10 5'00110
  transition:       2'00 3'-11 ->       2'00 5'00100
  transition:       2'00 3'1-1 ->       2'01 5'00101
  transition:       2'10 3'--0 ->       2'10 5'10010
  transition:       2'10 3'001 ->       2'10 5'10010
  transition:       2'10 3'-11 ->       2'00 5'10000
  transition:       2'10 3'1-1 ->       2'01 5'10001
  transition:       2'01 3'--0 ->       2'01 5'01001
  transition:       2'01 3'001 ->       2'10 5'01010
  transition:       2'01 3'-11 ->       2'00 5'01000
  transition:       2'01 3'1-1 ->       2'01 5'01001
Extracting FSM `\soc_inst.fabric_v_f_wr_mis_2.D_OUT' from module `\mkeclass_axi4'.
  found $dff cell for state register: $flatten\soc_inst.\fabric_v_f_wr_mis_2.$procdff$7407
  root of input selection tree: $flatten\soc_inst.\fabric_v_f_wr_mis_2.$0\D_OUT[1:0]
  found ctrl input: \soc_inst.fabric_xactors_to_slaves_2_f_wr_addr.ENQ
  found ctrl input: \soc_inst.WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave_8
  found ctrl input: \soc_inst.WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave_2
  found state code: 2'10
  found state code: 2'01
  found state code: 2'00
  found ctrl output: $flatten\soc_inst.$eq$mkSoc.v:5756$1114_Y
  found ctrl output: $flatten\soc_inst.$eq$mkSoc.v:5822$1156_Y
  found ctrl output: $flatten\soc_inst.$eq$mkSoc.v:5888$1198_Y
  ctrl inputs: { \soc_inst.WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave_8 \soc_inst.WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave_2 \soc_inst.fabric_xactors_to_slaves_2_f_wr_addr.ENQ }
  ctrl outputs: { $flatten\soc_inst.$eq$mkSoc.v:5888$1198_Y $flatten\soc_inst.$eq$mkSoc.v:5822$1156_Y $flatten\soc_inst.$eq$mkSoc.v:5756$1114_Y $flatten\soc_inst.\fabric_v_f_wr_mis_2.$0\D_OUT[1:0] }
  transition:       2'00 3'--0 ->       2'00 5'00100
  transition:       2'00 3'001 ->       2'10 5'00110
  transition:       2'00 3'-11 ->       2'00 5'00100
  transition:       2'00 3'1-1 ->       2'01 5'00101
  transition:       2'10 3'--0 ->       2'10 5'10010
  transition:       2'10 3'001 ->       2'10 5'10010
  transition:       2'10 3'-11 ->       2'00 5'10000
  transition:       2'10 3'1-1 ->       2'01 5'10001
  transition:       2'01 3'--0 ->       2'01 5'01001
  transition:       2'01 3'001 ->       2'10 5'01010
  transition:       2'01 3'-11 ->       2'00 5'01000
  transition:       2'01 3'1-1 ->       2'01 5'01001
Extracting FSM `\soc_inst.fabric_v_f_wr_mis_3.D_OUT' from module `\mkeclass_axi4'.
  found $dff cell for state register: $flatten\soc_inst.\fabric_v_f_wr_mis_3.$procdff$7407
  root of input selection tree: $flatten\soc_inst.\fabric_v_f_wr_mis_3.$0\D_OUT[1:0]
  found ctrl input: \soc_inst.fabric_xactors_to_slaves_3_f_wr_addr.ENQ
  found ctrl input: \soc_inst.WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave_9
  found ctrl input: \soc_inst.WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave_3
  found state code: 2'10
  found state code: 2'01
  found state code: 2'00
  found ctrl output: $flatten\soc_inst.$eq$mkSoc.v:5767$1121_Y
  found ctrl output: $flatten\soc_inst.$eq$mkSoc.v:5833$1163_Y
  found ctrl output: $flatten\soc_inst.$eq$mkSoc.v:5899$1205_Y
  ctrl inputs: { \soc_inst.WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave_9 \soc_inst.WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave_3 \soc_inst.fabric_xactors_to_slaves_3_f_wr_addr.ENQ }
  ctrl outputs: { $flatten\soc_inst.$eq$mkSoc.v:5899$1205_Y $flatten\soc_inst.$eq$mkSoc.v:5833$1163_Y $flatten\soc_inst.$eq$mkSoc.v:5767$1121_Y $flatten\soc_inst.\fabric_v_f_wr_mis_3.$0\D_OUT[1:0] }
  transition:       2'00 3'--0 ->       2'00 5'00100
  transition:       2'00 3'001 ->       2'10 5'00110
  transition:       2'00 3'-11 ->       2'00 5'00100
  transition:       2'00 3'1-1 ->       2'01 5'00101
  transition:       2'10 3'--0 ->       2'10 5'10010
  transition:       2'10 3'001 ->       2'10 5'10010
  transition:       2'10 3'-11 ->       2'00 5'10000
  transition:       2'10 3'1-1 ->       2'01 5'10001
  transition:       2'01 3'--0 ->       2'01 5'01001
  transition:       2'01 3'001 ->       2'10 5'01010
  transition:       2'01 3'-11 ->       2'00 5'01000
  transition:       2'01 3'1-1 ->       2'01 5'01001
Extracting FSM `\soc_inst.fabric_v_f_wr_mis_4.D_OUT' from module `\mkeclass_axi4'.
  found $dff cell for state register: $flatten\soc_inst.\fabric_v_f_wr_mis_4.$procdff$7407
  root of input selection tree: $flatten\soc_inst.\fabric_v_f_wr_mis_4.$0\D_OUT[1:0]
  found ctrl input: \soc_inst.fabric_xactors_to_slaves_4_f_wr_addr.ENQ
  found ctrl input: \soc_inst.WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave_10
  found ctrl input: \soc_inst.WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave_4
  found state code: 2'10
  found state code: 2'01
  found state code: 2'00
  found ctrl output: $flatten\soc_inst.$eq$mkSoc.v:5778$1128_Y
  found ctrl output: $flatten\soc_inst.$eq$mkSoc.v:5844$1170_Y
  found ctrl output: $flatten\soc_inst.$eq$mkSoc.v:5910$1212_Y
  ctrl inputs: { \soc_inst.WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave_4 \soc_inst.WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave_10 \soc_inst.fabric_xactors_to_slaves_4_f_wr_addr.ENQ }
  ctrl outputs: { $flatten\soc_inst.$eq$mkSoc.v:5910$1212_Y $flatten\soc_inst.$eq$mkSoc.v:5844$1170_Y $flatten\soc_inst.$eq$mkSoc.v:5778$1128_Y $flatten\soc_inst.\fabric_v_f_wr_mis_4.$0\D_OUT[1:0] }
  transition:       2'00 3'--0 ->       2'00 5'00100
  transition:       2'00 3'001 ->       2'10 5'00110
  transition:       2'00 3'1-1 ->       2'00 5'00100
  transition:       2'00 3'-11 ->       2'01 5'00101
  transition:       2'10 3'--0 ->       2'10 5'10010
  transition:       2'10 3'001 ->       2'10 5'10010
  transition:       2'10 3'1-1 ->       2'00 5'10000
  transition:       2'10 3'-11 ->       2'01 5'10001
  transition:       2'01 3'--0 ->       2'01 5'01001
  transition:       2'01 3'001 ->       2'10 5'01010
  transition:       2'01 3'1-1 ->       2'00 5'01000
  transition:       2'01 3'-11 ->       2'01 5'01001
Extracting FSM `\soc_inst.fabric_v_f_wr_mis_5.D_OUT' from module `\mkeclass_axi4'.
  found $dff cell for state register: $flatten\soc_inst.\fabric_v_f_wr_mis_5.$procdff$7407
  root of input selection tree: $flatten\soc_inst.\fabric_v_f_wr_mis_5.$0\D_OUT[1:0]
  found ctrl input: \soc_inst.fabric_xactors_to_slaves_5_f_wr_addr.ENQ
  found ctrl input: \soc_inst.WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave_11
  found ctrl input: \soc_inst.WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave_5
  found state code: 2'10
  found state code: 2'01
  found state code: 2'00
  found ctrl output: $flatten\soc_inst.$eq$mkSoc.v:5789$1135_Y
  found ctrl output: $flatten\soc_inst.$eq$mkSoc.v:5855$1177_Y
  found ctrl output: $flatten\soc_inst.$eq$mkSoc.v:5921$1219_Y
  ctrl inputs: { \soc_inst.WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave_5 \soc_inst.WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave_11 \soc_inst.fabric_xactors_to_slaves_5_f_wr_addr.ENQ }
  ctrl outputs: { $flatten\soc_inst.$eq$mkSoc.v:5921$1219_Y $flatten\soc_inst.$eq$mkSoc.v:5855$1177_Y $flatten\soc_inst.$eq$mkSoc.v:5789$1135_Y $flatten\soc_inst.\fabric_v_f_wr_mis_5.$0\D_OUT[1:0] }
  transition:       2'00 3'--0 ->       2'00 5'00100
  transition:       2'00 3'001 ->       2'10 5'00110
  transition:       2'00 3'1-1 ->       2'00 5'00100
  transition:       2'00 3'-11 ->       2'01 5'00101
  transition:       2'10 3'--0 ->       2'10 5'10010
  transition:       2'10 3'001 ->       2'10 5'10010
  transition:       2'10 3'1-1 ->       2'00 5'10000
  transition:       2'10 3'-11 ->       2'01 5'10001
  transition:       2'01 3'--0 ->       2'01 5'01001
  transition:       2'01 3'001 ->       2'10 5'01010
  transition:       2'01 3'1-1 ->       2'00 5'01000
  transition:       2'01 3'-11 ->       2'01 5'01001
Extracting FSM `\soc_inst.fabric_v_f_wr_sjs_0.D_OUT' from module `\mkeclass_axi4'.
  found $dff cell for state register: $flatten\soc_inst.\fabric_v_f_wr_sjs_0.$procdff$7409
  root of input selection tree: $flatten\soc_inst.\fabric_v_f_wr_sjs_0.$0\D_OUT[2:0]
  found ctrl input: \soc_inst.fabric_v_f_wr_sjs_0.ENQ
  found ctrl input: \soc_inst.WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave_5
  found ctrl input: \soc_inst.WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave_4
  found ctrl input: \soc_inst.WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave_3
  found ctrl input: \soc_inst.WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave_1
  found ctrl input: \soc_inst.WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave
  found state code: 3'010
  found state code: 3'101
  found state code: 3'100
  found state code: 3'011
  found state code: 3'001
  found state code: 3'000
  found ctrl output: $flatten\soc_inst.$eq$mkSoc.v:5735$1102_Y
  found ctrl output: $flatten\soc_inst.$eq$mkSoc.v:5746$1109_Y
  found ctrl output: $flatten\soc_inst.$eq$mkSoc.v:5757$1116_Y
  found ctrl output: $flatten\soc_inst.$eq$mkSoc.v:5768$1123_Y
  found ctrl output: $flatten\soc_inst.$eq$mkSoc.v:5779$1130_Y
  found ctrl output: $flatten\soc_inst.$eq$mkSoc.v:5790$1137_Y
  ctrl inputs: { \soc_inst.WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave_5 \soc_inst.WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave_4 \soc_inst.WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave_3 \soc_inst.WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave_1 \soc_inst.WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave \soc_inst.fabric_v_f_wr_sjs_0.ENQ }
  ctrl outputs: { $flatten\soc_inst.$eq$mkSoc.v:5790$1137_Y $flatten\soc_inst.$eq$mkSoc.v:5779$1130_Y $flatten\soc_inst.$eq$mkSoc.v:5768$1123_Y $flatten\soc_inst.$eq$mkSoc.v:5757$1116_Y $flatten\soc_inst.$eq$mkSoc.v:5746$1109_Y $flatten\soc_inst.$eq$mkSoc.v:5735$1102_Y $flatten\soc_inst.\fabric_v_f_wr_sjs_0.$0\D_OUT[2:0] }
  transition:      3'000 6'-----0 ->      3'000 9'000001000
  transition:      3'000 6'000001 ->      3'010 9'000001010
  transition:      3'000 6'----11 ->      3'000 9'000001000
  transition:      3'000 6'---1-1 ->      3'001 9'000001001
  transition:      3'000 6'--1--1 ->      3'011 9'000001011
  transition:      3'000 6'-1---1 ->      3'100 9'000001100
  transition:      3'000 6'1----1 ->      3'101 9'000001101
  transition:      3'100 6'-----0 ->      3'100 9'010000100
  transition:      3'100 6'000001 ->      3'010 9'010000010
  transition:      3'100 6'----11 ->      3'000 9'010000000
  transition:      3'100 6'---1-1 ->      3'001 9'010000001
  transition:      3'100 6'--1--1 ->      3'011 9'010000011
  transition:      3'100 6'-1---1 ->      3'100 9'010000100
  transition:      3'100 6'1----1 ->      3'101 9'010000101
  transition:      3'010 6'-----0 ->      3'010 9'000100010
  transition:      3'010 6'000001 ->      3'010 9'000100010
  transition:      3'010 6'----11 ->      3'000 9'000100000
  transition:      3'010 6'---1-1 ->      3'001 9'000100001
  transition:      3'010 6'--1--1 ->      3'011 9'000100011
  transition:      3'010 6'-1---1 ->      3'100 9'000100100
  transition:      3'010 6'1----1 ->      3'101 9'000100101
  transition:      3'001 6'-----0 ->      3'001 9'000010001
  transition:      3'001 6'000001 ->      3'010 9'000010010
  transition:      3'001 6'----11 ->      3'000 9'000010000
  transition:      3'001 6'---1-1 ->      3'001 9'000010001
  transition:      3'001 6'--1--1 ->      3'011 9'000010011
  transition:      3'001 6'-1---1 ->      3'100 9'000010100
  transition:      3'001 6'1----1 ->      3'101 9'000010101
  transition:      3'101 6'-----0 ->      3'101 9'100000101
  transition:      3'101 6'000001 ->      3'010 9'100000010
  transition:      3'101 6'----11 ->      3'000 9'100000000
  transition:      3'101 6'---1-1 ->      3'001 9'100000001
  transition:      3'101 6'--1--1 ->      3'011 9'100000011
  transition:      3'101 6'-1---1 ->      3'100 9'100000100
  transition:      3'101 6'1----1 ->      3'101 9'100000101
  transition:      3'011 6'-----0 ->      3'011 9'001000011
  transition:      3'011 6'000001 ->      3'010 9'001000010
  transition:      3'011 6'----11 ->      3'000 9'001000000
  transition:      3'011 6'---1-1 ->      3'001 9'001000001
  transition:      3'011 6'--1--1 ->      3'011 9'001000011
  transition:      3'011 6'-1---1 ->      3'100 9'001000100
  transition:      3'011 6'1----1 ->      3'101 9'001000101
Extracting FSM `\soc_inst.fabric_v_f_wr_sjs_1.D_OUT' from module `\mkeclass_axi4'.
  found $dff cell for state register: $flatten\soc_inst.\fabric_v_f_wr_sjs_1.$procdff$7409
  root of input selection tree: $flatten\soc_inst.\fabric_v_f_wr_sjs_1.$0\D_OUT[2:0]
  found ctrl input: \soc_inst.fabric_v_f_wr_sjs_1.ENQ
  found ctrl input: \soc_inst.WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave_11
  found ctrl input: \soc_inst.WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave_10
  found ctrl input: \soc_inst.WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave_9
  found ctrl input: \soc_inst.WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave_7
  found ctrl input: \soc_inst.WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave_6
  found state code: 3'010
  found state code: 3'101
  found state code: 3'100
  found state code: 3'011
  found state code: 3'001
  found state code: 3'000
  found ctrl output: $flatten\soc_inst.$eq$mkSoc.v:5801$1144_Y
  found ctrl output: $flatten\soc_inst.$eq$mkSoc.v:5812$1151_Y
  found ctrl output: $flatten\soc_inst.$eq$mkSoc.v:5823$1158_Y
  found ctrl output: $flatten\soc_inst.$eq$mkSoc.v:5834$1165_Y
  found ctrl output: $flatten\soc_inst.$eq$mkSoc.v:5845$1172_Y
  found ctrl output: $flatten\soc_inst.$eq$mkSoc.v:5856$1179_Y
  ctrl inputs: { \soc_inst.WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave_9 \soc_inst.WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave_7 \soc_inst.WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave_6 \soc_inst.WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave_11 \soc_inst.WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave_10 \soc_inst.fabric_v_f_wr_sjs_1.ENQ }
  ctrl outputs: { $flatten\soc_inst.$eq$mkSoc.v:5856$1179_Y $flatten\soc_inst.$eq$mkSoc.v:5845$1172_Y $flatten\soc_inst.$eq$mkSoc.v:5834$1165_Y $flatten\soc_inst.$eq$mkSoc.v:5823$1158_Y $flatten\soc_inst.$eq$mkSoc.v:5812$1151_Y $flatten\soc_inst.$eq$mkSoc.v:5801$1144_Y $flatten\soc_inst.\fabric_v_f_wr_sjs_1.$0\D_OUT[2:0] }
  transition:      3'000 6'-----0 ->      3'000 9'000001000
  transition:      3'000 6'000001 ->      3'010 9'000001010
  transition:      3'000 6'--1--1 ->      3'000 9'000001000
  transition:      3'000 6'-1---1 ->      3'001 9'000001001
  transition:      3'000 6'1----1 ->      3'011 9'000001011
  transition:      3'000 6'----11 ->      3'100 9'000001100
  transition:      3'000 6'---1-1 ->      3'101 9'000001101
  transition:      3'100 6'-----0 ->      3'100 9'010000100
  transition:      3'100 6'000001 ->      3'010 9'010000010
  transition:      3'100 6'--1--1 ->      3'000 9'010000000
  transition:      3'100 6'-1---1 ->      3'001 9'010000001
  transition:      3'100 6'1----1 ->      3'011 9'010000011
  transition:      3'100 6'----11 ->      3'100 9'010000100
  transition:      3'100 6'---1-1 ->      3'101 9'010000101
  transition:      3'010 6'-----0 ->      3'010 9'000100010
  transition:      3'010 6'000001 ->      3'010 9'000100010
  transition:      3'010 6'--1--1 ->      3'000 9'000100000
  transition:      3'010 6'-1---1 ->      3'001 9'000100001
  transition:      3'010 6'1----1 ->      3'011 9'000100011
  transition:      3'010 6'----11 ->      3'100 9'000100100
  transition:      3'010 6'---1-1 ->      3'101 9'000100101
  transition:      3'001 6'-----0 ->      3'001 9'000010001
  transition:      3'001 6'000001 ->      3'010 9'000010010
  transition:      3'001 6'--1--1 ->      3'000 9'000010000
  transition:      3'001 6'-1---1 ->      3'001 9'000010001
  transition:      3'001 6'1----1 ->      3'011 9'000010011
  transition:      3'001 6'----11 ->      3'100 9'000010100
  transition:      3'001 6'---1-1 ->      3'101 9'000010101
  transition:      3'101 6'-----0 ->      3'101 9'100000101
  transition:      3'101 6'000001 ->      3'010 9'100000010
  transition:      3'101 6'--1--1 ->      3'000 9'100000000
  transition:      3'101 6'-1---1 ->      3'001 9'100000001
  transition:      3'101 6'1----1 ->      3'011 9'100000011
  transition:      3'101 6'----11 ->      3'100 9'100000100
  transition:      3'101 6'---1-1 ->      3'101 9'100000101
  transition:      3'011 6'-----0 ->      3'011 9'001000011
  transition:      3'011 6'000001 ->      3'010 9'001000010
  transition:      3'011 6'--1--1 ->      3'000 9'001000000
  transition:      3'011 6'-1---1 ->      3'001 9'001000001
  transition:      3'011 6'1----1 ->      3'011 9'001000011
  transition:      3'011 6'----11 ->      3'100 9'001000100
  transition:      3'011 6'---1-1 ->      3'101 9'001000101
Extracting FSM `\soc_inst.fabric_v_f_wr_sjs_2.D_OUT' from module `\mkeclass_axi4'.
  found $dff cell for state register: $flatten\soc_inst.\fabric_v_f_wr_sjs_2.$procdff$7409
  root of input selection tree: $flatten\soc_inst.\fabric_v_f_wr_sjs_2.$0\D_OUT[2:0]
  found ctrl input: \soc_inst.fabric_v_f_wr_sjs_2.ENQ
  found ctrl input: \soc_inst.WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave_17
  found ctrl input: \soc_inst.WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave_16
  found ctrl input: \soc_inst.WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave_15
  found ctrl input: \soc_inst.WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave_13
  found ctrl input: \soc_inst.WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave_12
  found state code: 3'010
  found state code: 3'101
  found state code: 3'100
  found state code: 3'011
  found state code: 3'001
  found state code: 3'000
  found ctrl output: $flatten\soc_inst.$eq$mkSoc.v:5867$1186_Y
  found ctrl output: $flatten\soc_inst.$eq$mkSoc.v:5878$1193_Y
  found ctrl output: $flatten\soc_inst.$eq$mkSoc.v:5889$1200_Y
  found ctrl output: $flatten\soc_inst.$eq$mkSoc.v:5900$1207_Y
  found ctrl output: $flatten\soc_inst.$eq$mkSoc.v:5911$1214_Y
  found ctrl output: $flatten\soc_inst.$eq$mkSoc.v:5922$1221_Y
  ctrl inputs: { \soc_inst.WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave_17 \soc_inst.WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave_16 \soc_inst.WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave_15 \soc_inst.WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave_13 \soc_inst.WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave_12 \soc_inst.fabric_v_f_wr_sjs_2.ENQ }
  ctrl outputs: { $flatten\soc_inst.$eq$mkSoc.v:5922$1221_Y $flatten\soc_inst.$eq$mkSoc.v:5911$1214_Y $flatten\soc_inst.$eq$mkSoc.v:5900$1207_Y $flatten\soc_inst.$eq$mkSoc.v:5889$1200_Y $flatten\soc_inst.$eq$mkSoc.v:5878$1193_Y $flatten\soc_inst.$eq$mkSoc.v:5867$1186_Y $flatten\soc_inst.\fabric_v_f_wr_sjs_2.$0\D_OUT[2:0] }
  transition:      3'000 6'-----0 ->      3'000 9'000001000
  transition:      3'000 6'000001 ->      3'010 9'000001010
  transition:      3'000 6'----11 ->      3'000 9'000001000
  transition:      3'000 6'---1-1 ->      3'001 9'000001001
  transition:      3'000 6'--1--1 ->      3'011 9'000001011
  transition:      3'000 6'-1---1 ->      3'100 9'000001100
  transition:      3'000 6'1----1 ->      3'101 9'000001101
  transition:      3'100 6'-----0 ->      3'100 9'010000100
  transition:      3'100 6'000001 ->      3'010 9'010000010
  transition:      3'100 6'----11 ->      3'000 9'010000000
  transition:      3'100 6'---1-1 ->      3'001 9'010000001
  transition:      3'100 6'--1--1 ->      3'011 9'010000011
  transition:      3'100 6'-1---1 ->      3'100 9'010000100
  transition:      3'100 6'1----1 ->      3'101 9'010000101
  transition:      3'010 6'-----0 ->      3'010 9'000100010
  transition:      3'010 6'000001 ->      3'010 9'000100010
  transition:      3'010 6'----11 ->      3'000 9'000100000
  transition:      3'010 6'---1-1 ->      3'001 9'000100001
  transition:      3'010 6'--1--1 ->      3'011 9'000100011
  transition:      3'010 6'-1---1 ->      3'100 9'000100100
  transition:      3'010 6'1----1 ->      3'101 9'000100101
  transition:      3'001 6'-----0 ->      3'001 9'000010001
  transition:      3'001 6'000001 ->      3'010 9'000010010
  transition:      3'001 6'----11 ->      3'000 9'000010000
  transition:      3'001 6'---1-1 ->      3'001 9'000010001
  transition:      3'001 6'--1--1 ->      3'011 9'000010011
  transition:      3'001 6'-1---1 ->      3'100 9'000010100
  transition:      3'001 6'1----1 ->      3'101 9'000010101
  transition:      3'101 6'-----0 ->      3'101 9'100000101
  transition:      3'101 6'000001 ->      3'010 9'100000010
  transition:      3'101 6'----11 ->      3'000 9'100000000
  transition:      3'101 6'---1-1 ->      3'001 9'100000001
  transition:      3'101 6'--1--1 ->      3'011 9'100000011
  transition:      3'101 6'-1---1 ->      3'100 9'100000100
  transition:      3'101 6'1----1 ->      3'101 9'100000101
  transition:      3'011 6'-----0 ->      3'011 9'001000011
  transition:      3'011 6'000001 ->      3'010 9'001000010
  transition:      3'011 6'----11 ->      3'000 9'001000000
  transition:      3'011 6'---1-1 ->      3'001 9'001000001
  transition:      3'011 6'--1--1 ->      3'011 9'001000011
  transition:      3'011 6'-1---1 ->      3'100 9'001000100
  transition:      3'011 6'1----1 ->      3'101 9'001000101
Extracting FSM `\soc_inst.fabric_v_f_wrd_mis_0.D_OUT' from module `\mkeclass_axi4'.
  found $dff cell for state register: $flatten\soc_inst.\fabric_v_f_wrd_mis_0.$procdff$7407
  root of input selection tree: $flatten\soc_inst.\fabric_v_f_wrd_mis_0.$0\D_OUT[1:0]
  found ctrl input: \soc_inst.fabric_v_f_wrd_mis_0.ENQ
  found ctrl input: \soc_inst.MUX_fabric_v_f_wrd_mis_0_enq_1__SEL_2
  found ctrl input: \soc_inst.MUX_fabric_v_f_wrd_mis_0_enq_1__SEL_1
  found state code: 2'10
  found state code: 2'01
  found state code: 2'00
  found ctrl output: $flatten\soc_inst.$eq$mkSoc.v:5177$548_Y
  found ctrl output: $flatten\soc_inst.$eq$mkSoc.v:5291$686_Y
  found ctrl output: $flatten\soc_inst.$eq$mkSoc.v:5405$824_Y
  ctrl inputs: { \soc_inst.MUX_fabric_v_f_wrd_mis_0_enq_1__SEL_2 \soc_inst.MUX_fabric_v_f_wrd_mis_0_enq_1__SEL_1 \soc_inst.fabric_v_f_wrd_mis_0.ENQ }
  ctrl outputs: { $flatten\soc_inst.$eq$mkSoc.v:5405$824_Y $flatten\soc_inst.$eq$mkSoc.v:5291$686_Y $flatten\soc_inst.$eq$mkSoc.v:5177$548_Y $flatten\soc_inst.\fabric_v_f_wrd_mis_0.$0\D_OUT[1:0] }
  transition:       2'00 3'--0 ->       2'00 5'00100
  transition:       2'00 3'001 ->       2'10 5'00110
  transition:       2'00 3'-11 ->       2'00 5'00100
  transition:       2'00 3'1-1 ->       2'01 5'00101
  transition:       2'10 3'--0 ->       2'10 5'10010
  transition:       2'10 3'001 ->       2'10 5'10010
  transition:       2'10 3'-11 ->       2'00 5'10000
  transition:       2'10 3'1-1 ->       2'01 5'10001
  transition:       2'01 3'--0 ->       2'01 5'01001
  transition:       2'01 3'001 ->       2'10 5'01010
  transition:       2'01 3'-11 ->       2'00 5'01000
  transition:       2'01 3'1-1 ->       2'01 5'01001
Extracting FSM `\soc_inst.fabric_v_f_wrd_mis_1.D_OUT' from module `\mkeclass_axi4'.
  found $dff cell for state register: $flatten\soc_inst.\fabric_v_f_wrd_mis_1.$procdff$7407
  root of input selection tree: $flatten\soc_inst.\fabric_v_f_wrd_mis_1.$0\D_OUT[1:0]
  found ctrl input: \soc_inst.fabric_v_f_wrd_mis_1.ENQ
  found ctrl input: \soc_inst.MUX_fabric_v_f_wrd_mis_1_enq_1__SEL_2
  found ctrl input: \soc_inst.MUX_fabric_v_f_wrd_mis_1_enq_1__SEL_1
  found state code: 2'10
  found state code: 2'01
  found state code: 2'00
  found ctrl output: $flatten\soc_inst.$eq$mkSoc.v:5196$571_Y
  found ctrl output: $flatten\soc_inst.$eq$mkSoc.v:5310$709_Y
  found ctrl output: $flatten\soc_inst.$eq$mkSoc.v:5424$847_Y
  ctrl inputs: { \soc_inst.MUX_fabric_v_f_wrd_mis_1_enq_1__SEL_2 \soc_inst.MUX_fabric_v_f_wrd_mis_1_enq_1__SEL_1 \soc_inst.fabric_v_f_wrd_mis_1.ENQ }
  ctrl outputs: { $flatten\soc_inst.$eq$mkSoc.v:5424$847_Y $flatten\soc_inst.$eq$mkSoc.v:5310$709_Y $flatten\soc_inst.$eq$mkSoc.v:5196$571_Y $flatten\soc_inst.\fabric_v_f_wrd_mis_1.$0\D_OUT[1:0] }
  transition:       2'00 3'--0 ->       2'00 5'00100
  transition:       2'00 3'001 ->       2'10 5'00110
  transition:       2'00 3'-11 ->       2'00 5'00100
  transition:       2'00 3'1-1 ->       2'01 5'00101
  transition:       2'10 3'--0 ->       2'10 5'10010
  transition:       2'10 3'001 ->       2'10 5'10010
  transition:       2'10 3'-11 ->       2'00 5'10000
  transition:       2'10 3'1-1 ->       2'01 5'10001
  transition:       2'01 3'--0 ->       2'01 5'01001
  transition:       2'01 3'001 ->       2'10 5'01010
  transition:       2'01 3'-11 ->       2'00 5'01000
  transition:       2'01 3'1-1 ->       2'01 5'01001
Extracting FSM `\soc_inst.fabric_v_f_wrd_mis_2.D_OUT' from module `\mkeclass_axi4'.
  found $dff cell for state register: $flatten\soc_inst.\fabric_v_f_wrd_mis_2.$procdff$7407
  root of input selection tree: $flatten\soc_inst.\fabric_v_f_wrd_mis_2.$0\D_OUT[1:0]
  found ctrl input: \soc_inst.fabric_v_f_wrd_mis_2.ENQ
  found ctrl input: \soc_inst.MUX_fabric_v_f_wrd_mis_2_enq_1__SEL_2
  found ctrl input: \soc_inst.MUX_fabric_v_f_wrd_mis_2_enq_1__SEL_1
  found state code: 2'10
  found state code: 2'01
  found state code: 2'00
  found ctrl output: $flatten\soc_inst.$eq$mkSoc.v:5215$594_Y
  found ctrl output: $flatten\soc_inst.$eq$mkSoc.v:5329$732_Y
  found ctrl output: $flatten\soc_inst.$eq$mkSoc.v:5443$870_Y
  ctrl inputs: { \soc_inst.MUX_fabric_v_f_wrd_mis_2_enq_1__SEL_2 \soc_inst.MUX_fabric_v_f_wrd_mis_2_enq_1__SEL_1 \soc_inst.fabric_v_f_wrd_mis_2.ENQ }
  ctrl outputs: { $flatten\soc_inst.$eq$mkSoc.v:5443$870_Y $flatten\soc_inst.$eq$mkSoc.v:5329$732_Y $flatten\soc_inst.$eq$mkSoc.v:5215$594_Y $flatten\soc_inst.\fabric_v_f_wrd_mis_2.$0\D_OUT[1:0] }
  transition:       2'00 3'--0 ->       2'00 5'00100
  transition:       2'00 3'001 ->       2'10 5'00110
  transition:       2'00 3'-11 ->       2'00 5'00100
  transition:       2'00 3'1-1 ->       2'01 5'00101
  transition:       2'10 3'--0 ->       2'10 5'10010
  transition:       2'10 3'001 ->       2'10 5'10010
  transition:       2'10 3'-11 ->       2'00 5'10000
  transition:       2'10 3'1-1 ->       2'01 5'10001
  transition:       2'01 3'--0 ->       2'01 5'01001
  transition:       2'01 3'001 ->       2'10 5'01010
  transition:       2'01 3'-11 ->       2'00 5'01000
  transition:       2'01 3'1-1 ->       2'01 5'01001
Extracting FSM `\soc_inst.fabric_v_f_wrd_mis_3.D_OUT' from module `\mkeclass_axi4'.
  found $dff cell for state register: $flatten\soc_inst.\fabric_v_f_wrd_mis_3.$procdff$7407
  root of input selection tree: $flatten\soc_inst.\fabric_v_f_wrd_mis_3.$0\D_OUT[1:0]
  found ctrl input: \soc_inst.fabric_v_f_wrd_mis_3.ENQ
  found ctrl input: \soc_inst.MUX_fabric_v_f_wrd_mis_3_enq_1__SEL_2
  found ctrl input: \soc_inst.MUX_fabric_v_f_wrd_mis_3_enq_1__SEL_1
  found state code: 2'10
  found state code: 2'01
  found state code: 2'00
  found ctrl output: $flatten\soc_inst.$eq$mkSoc.v:5234$617_Y
  found ctrl output: $flatten\soc_inst.$eq$mkSoc.v:5348$755_Y
  found ctrl output: $flatten\soc_inst.$eq$mkSoc.v:5462$893_Y
  ctrl inputs: { \soc_inst.MUX_fabric_v_f_wrd_mis_3_enq_1__SEL_2 \soc_inst.MUX_fabric_v_f_wrd_mis_3_enq_1__SEL_1 \soc_inst.fabric_v_f_wrd_mis_3.ENQ }
  ctrl outputs: { $flatten\soc_inst.$eq$mkSoc.v:5462$893_Y $flatten\soc_inst.$eq$mkSoc.v:5348$755_Y $flatten\soc_inst.$eq$mkSoc.v:5234$617_Y $flatten\soc_inst.\fabric_v_f_wrd_mis_3.$0\D_OUT[1:0] }
  transition:       2'00 3'--0 ->       2'00 5'00100
  transition:       2'00 3'001 ->       2'10 5'00110
  transition:       2'00 3'-11 ->       2'00 5'00100
  transition:       2'00 3'1-1 ->       2'01 5'00101
  transition:       2'10 3'--0 ->       2'10 5'10010
  transition:       2'10 3'001 ->       2'10 5'10010
  transition:       2'10 3'-11 ->       2'00 5'10000
  transition:       2'10 3'1-1 ->       2'01 5'10001
  transition:       2'01 3'--0 ->       2'01 5'01001
  transition:       2'01 3'001 ->       2'10 5'01010
  transition:       2'01 3'-11 ->       2'00 5'01000
  transition:       2'01 3'1-1 ->       2'01 5'01001
Extracting FSM `\soc_inst.fabric_v_f_wrd_mis_4.D_OUT' from module `\mkeclass_axi4'.
  found $dff cell for state register: $flatten\soc_inst.\fabric_v_f_wrd_mis_4.$procdff$7407
  root of input selection tree: $flatten\soc_inst.\fabric_v_f_wrd_mis_4.$0\D_OUT[1:0]
  found ctrl input: \soc_inst.fabric_v_f_wrd_mis_4.ENQ
  found ctrl input: \soc_inst.MUX_fabric_v_f_wrd_mis_4_enq_1__SEL_2
  found ctrl input: \soc_inst.MUX_fabric_v_f_wrd_mis_4_enq_1__SEL_1
  found state code: 2'10
  found state code: 2'01
  found state code: 2'00
  found ctrl output: $flatten\soc_inst.$eq$mkSoc.v:5253$640_Y
  found ctrl output: $flatten\soc_inst.$eq$mkSoc.v:5367$778_Y
  found ctrl output: $flatten\soc_inst.$eq$mkSoc.v:5481$916_Y
  ctrl inputs: { \soc_inst.MUX_fabric_v_f_wrd_mis_4_enq_1__SEL_2 \soc_inst.MUX_fabric_v_f_wrd_mis_4_enq_1__SEL_1 \soc_inst.fabric_v_f_wrd_mis_4.ENQ }
  ctrl outputs: { $flatten\soc_inst.$eq$mkSoc.v:5481$916_Y $flatten\soc_inst.$eq$mkSoc.v:5367$778_Y $flatten\soc_inst.$eq$mkSoc.v:5253$640_Y $flatten\soc_inst.\fabric_v_f_wrd_mis_4.$0\D_OUT[1:0] }
  transition:       2'00 3'--0 ->       2'00 5'00100
  transition:       2'00 3'001 ->       2'10 5'00110
  transition:       2'00 3'-11 ->       2'00 5'00100
  transition:       2'00 3'1-1 ->       2'01 5'00101
  transition:       2'10 3'--0 ->       2'10 5'10010
  transition:       2'10 3'001 ->       2'10 5'10010
  transition:       2'10 3'-11 ->       2'00 5'10000
  transition:       2'10 3'1-1 ->       2'01 5'10001
  transition:       2'01 3'--0 ->       2'01 5'01001
  transition:       2'01 3'001 ->       2'10 5'01010
  transition:       2'01 3'-11 ->       2'00 5'01000
  transition:       2'01 3'1-1 ->       2'01 5'01001
Extracting FSM `\soc_inst.fabric_v_f_wrd_mis_5.D_OUT' from module `\mkeclass_axi4'.
  found $dff cell for state register: $flatten\soc_inst.\fabric_v_f_wrd_mis_5.$procdff$7407
  root of input selection tree: $flatten\soc_inst.\fabric_v_f_wrd_mis_5.$0\D_OUT[1:0]
  found ctrl input: \soc_inst.fabric_v_f_wrd_mis_5.ENQ
  found ctrl input: \soc_inst.MUX_fabric_v_f_wrd_mis_5_enq_1__SEL_2
  found ctrl input: \soc_inst.MUX_fabric_v_f_wrd_mis_5_enq_1__SEL_1
  found state code: 2'10
  found state code: 2'01
  found state code: 2'00
  found ctrl output: $flatten\soc_inst.$eq$mkSoc.v:5272$663_Y
  found ctrl output: $flatten\soc_inst.$eq$mkSoc.v:5386$801_Y
  found ctrl output: $flatten\soc_inst.$eq$mkSoc.v:5500$939_Y
  ctrl inputs: { \soc_inst.MUX_fabric_v_f_wrd_mis_5_enq_1__SEL_2 \soc_inst.MUX_fabric_v_f_wrd_mis_5_enq_1__SEL_1 \soc_inst.fabric_v_f_wrd_mis_5.ENQ }
  ctrl outputs: { $flatten\soc_inst.$eq$mkSoc.v:5500$939_Y $flatten\soc_inst.$eq$mkSoc.v:5386$801_Y $flatten\soc_inst.$eq$mkSoc.v:5272$663_Y $flatten\soc_inst.\fabric_v_f_wrd_mis_5.$0\D_OUT[1:0] }
  transition:       2'00 3'--0 ->       2'00 5'00100
  transition:       2'00 3'001 ->       2'10 5'00110
  transition:       2'00 3'-11 ->       2'00 5'00100
  transition:       2'00 3'1-1 ->       2'01 5'00101
  transition:       2'10 3'--0 ->       2'10 5'10010
  transition:       2'10 3'001 ->       2'10 5'10010
  transition:       2'10 3'-11 ->       2'00 5'10000
  transition:       2'10 3'1-1 ->       2'01 5'10001
  transition:       2'01 3'--0 ->       2'01 5'01001
  transition:       2'01 3'001 ->       2'10 5'01010
  transition:       2'01 3'-11 ->       2'00 5'01000
  transition:       2'01 3'1-1 ->       2'01 5'01001
Extracting FSM `\soc_inst.fabric_v_f_wrd_sjs_0.D_OUT' from module `\mkeclass_axi4'.
  found $dff cell for state register: $flatten\soc_inst.\fabric_v_f_wrd_sjs_0.$procdff$7409
  root of input selection tree: $flatten\soc_inst.\fabric_v_f_wrd_sjs_0.$0\D_OUT[2:0]
  found ctrl input: \soc_inst.fabric_v_f_wrd_sjs_0.ENQ
  found ctrl input: \soc_inst.MUX_fabric_v_f_wrd_mis_5_enq_1__SEL_1
  found ctrl input: \soc_inst.MUX_fabric_v_f_wrd_mis_4_enq_1__SEL_1
  found ctrl input: \soc_inst.MUX_fabric_v_f_wrd_mis_3_enq_1__SEL_1
  found ctrl input: \soc_inst.MUX_fabric_v_f_wrd_mis_1_enq_1__SEL_1
  found ctrl input: \soc_inst.MUX_fabric_v_f_wrd_mis_0_enq_1__SEL_1
  found state code: 3'010
  found state code: 3'101
  found state code: 3'100
  found state code: 3'011
  found state code: 3'001
  found state code: 3'000
  found ctrl output: $flatten\soc_inst.$eq$mkSoc.v:5178$550_Y
  found ctrl output: $flatten\soc_inst.$eq$mkSoc.v:5197$573_Y
  found ctrl output: $flatten\soc_inst.$eq$mkSoc.v:5216$596_Y
  found ctrl output: $flatten\soc_inst.$eq$mkSoc.v:5235$619_Y
  found ctrl output: $flatten\soc_inst.$eq$mkSoc.v:5254$642_Y
  found ctrl output: $flatten\soc_inst.$eq$mkSoc.v:5273$665_Y
  ctrl inputs: { \soc_inst.MUX_fabric_v_f_wrd_mis_5_enq_1__SEL_1 \soc_inst.MUX_fabric_v_f_wrd_mis_4_enq_1__SEL_1 \soc_inst.MUX_fabric_v_f_wrd_mis_3_enq_1__SEL_1 \soc_inst.MUX_fabric_v_f_wrd_mis_1_enq_1__SEL_1 \soc_inst.MUX_fabric_v_f_wrd_mis_0_enq_1__SEL_1 \soc_inst.fabric_v_f_wrd_sjs_0.ENQ }
  ctrl outputs: { $flatten\soc_inst.$eq$mkSoc.v:5273$665_Y $flatten\soc_inst.$eq$mkSoc.v:5254$642_Y $flatten\soc_inst.$eq$mkSoc.v:5235$619_Y $flatten\soc_inst.$eq$mkSoc.v:5216$596_Y $flatten\soc_inst.$eq$mkSoc.v:5197$573_Y $flatten\soc_inst.$eq$mkSoc.v:5178$550_Y $flatten\soc_inst.\fabric_v_f_wrd_sjs_0.$0\D_OUT[2:0] }
  transition:      3'000 6'-----0 ->      3'000 9'000001000
  transition:      3'000 6'000001 ->      3'010 9'000001010
  transition:      3'000 6'----11 ->      3'000 9'000001000
  transition:      3'000 6'---1-1 ->      3'001 9'000001001
  transition:      3'000 6'--1--1 ->      3'011 9'000001011
  transition:      3'000 6'-1---1 ->      3'100 9'000001100
  transition:      3'000 6'1----1 ->      3'101 9'000001101
  transition:      3'100 6'-----0 ->      3'100 9'010000100
  transition:      3'100 6'000001 ->      3'010 9'010000010
  transition:      3'100 6'----11 ->      3'000 9'010000000
  transition:      3'100 6'---1-1 ->      3'001 9'010000001
  transition:      3'100 6'--1--1 ->      3'011 9'010000011
  transition:      3'100 6'-1---1 ->      3'100 9'010000100
  transition:      3'100 6'1----1 ->      3'101 9'010000101
  transition:      3'010 6'-----0 ->      3'010 9'000100010
  transition:      3'010 6'000001 ->      3'010 9'000100010
  transition:      3'010 6'----11 ->      3'000 9'000100000
  transition:      3'010 6'---1-1 ->      3'001 9'000100001
  transition:      3'010 6'--1--1 ->      3'011 9'000100011
  transition:      3'010 6'-1---1 ->      3'100 9'000100100
  transition:      3'010 6'1----1 ->      3'101 9'000100101
  transition:      3'001 6'-----0 ->      3'001 9'000010001
  transition:      3'001 6'000001 ->      3'010 9'000010010
  transition:      3'001 6'----11 ->      3'000 9'000010000
  transition:      3'001 6'---1-1 ->      3'001 9'000010001
  transition:      3'001 6'--1--1 ->      3'011 9'000010011
  transition:      3'001 6'-1---1 ->      3'100 9'000010100
  transition:      3'001 6'1----1 ->      3'101 9'000010101
  transition:      3'101 6'-----0 ->      3'101 9'100000101
  transition:      3'101 6'000001 ->      3'010 9'100000010
  transition:      3'101 6'----11 ->      3'000 9'100000000
  transition:      3'101 6'---1-1 ->      3'001 9'100000001
  transition:      3'101 6'--1--1 ->      3'011 9'100000011
  transition:      3'101 6'-1---1 ->      3'100 9'100000100
  transition:      3'101 6'1----1 ->      3'101 9'100000101
  transition:      3'011 6'-----0 ->      3'011 9'001000011
  transition:      3'011 6'000001 ->      3'010 9'001000010
  transition:      3'011 6'----11 ->      3'000 9'001000000
  transition:      3'011 6'---1-1 ->      3'001 9'001000001
  transition:      3'011 6'--1--1 ->      3'011 9'001000011
  transition:      3'011 6'-1---1 ->      3'100 9'001000100
  transition:      3'011 6'1----1 ->      3'101 9'001000101
Extracting FSM `\soc_inst.fabric_v_f_wrd_sjs_1.D_OUT' from module `\mkeclass_axi4'.
  found $dff cell for state register: $flatten\soc_inst.\fabric_v_f_wrd_sjs_1.$procdff$7409
  root of input selection tree: $flatten\soc_inst.\fabric_v_f_wrd_sjs_1.$0\D_OUT[2:0]
  found ctrl input: \soc_inst.fabric_v_f_wrd_sjs_1.ENQ
  found ctrl input: \soc_inst.MUX_fabric_v_f_wrd_mis_5_enq_1__SEL_2
  found ctrl input: \soc_inst.MUX_fabric_v_f_wrd_mis_4_enq_1__SEL_2
  found ctrl input: \soc_inst.MUX_fabric_v_f_wrd_mis_3_enq_1__SEL_2
  found ctrl input: \soc_inst.MUX_fabric_v_f_wrd_mis_1_enq_1__SEL_2
  found ctrl input: \soc_inst.MUX_fabric_v_f_wrd_mis_0_enq_1__SEL_2
  found state code: 3'010
  found state code: 3'101
  found state code: 3'100
  found state code: 3'011
  found state code: 3'001
  found state code: 3'000
  found ctrl output: $flatten\soc_inst.$eq$mkSoc.v:5292$688_Y
  found ctrl output: $flatten\soc_inst.$eq$mkSoc.v:5311$711_Y
  found ctrl output: $flatten\soc_inst.$eq$mkSoc.v:5330$734_Y
  found ctrl output: $flatten\soc_inst.$eq$mkSoc.v:5349$757_Y
  found ctrl output: $flatten\soc_inst.$eq$mkSoc.v:5368$780_Y
  found ctrl output: $flatten\soc_inst.$eq$mkSoc.v:5387$803_Y
  ctrl inputs: { \soc_inst.MUX_fabric_v_f_wrd_mis_5_enq_1__SEL_2 \soc_inst.MUX_fabric_v_f_wrd_mis_4_enq_1__SEL_2 \soc_inst.MUX_fabric_v_f_wrd_mis_3_enq_1__SEL_2 \soc_inst.MUX_fabric_v_f_wrd_mis_1_enq_1__SEL_2 \soc_inst.MUX_fabric_v_f_wrd_mis_0_enq_1__SEL_2 \soc_inst.fabric_v_f_wrd_sjs_1.ENQ }
  ctrl outputs: { $flatten\soc_inst.$eq$mkSoc.v:5387$803_Y $flatten\soc_inst.$eq$mkSoc.v:5368$780_Y $flatten\soc_inst.$eq$mkSoc.v:5349$757_Y $flatten\soc_inst.$eq$mkSoc.v:5330$734_Y $flatten\soc_inst.$eq$mkSoc.v:5311$711_Y $flatten\soc_inst.$eq$mkSoc.v:5292$688_Y $flatten\soc_inst.\fabric_v_f_wrd_sjs_1.$0\D_OUT[2:0] }
  transition:      3'000 6'-----0 ->      3'000 9'000001000
  transition:      3'000 6'000001 ->      3'010 9'000001010
  transition:      3'000 6'----11 ->      3'000 9'000001000
  transition:      3'000 6'---1-1 ->      3'001 9'000001001
  transition:      3'000 6'--1--1 ->      3'011 9'000001011
  transition:      3'000 6'-1---1 ->      3'100 9'000001100
  transition:      3'000 6'1----1 ->      3'101 9'000001101
  transition:      3'100 6'-----0 ->      3'100 9'010000100
  transition:      3'100 6'000001 ->      3'010 9'010000010
  transition:      3'100 6'----11 ->      3'000 9'010000000
  transition:      3'100 6'---1-1 ->      3'001 9'010000001
  transition:      3'100 6'--1--1 ->      3'011 9'010000011
  transition:      3'100 6'-1---1 ->      3'100 9'010000100
  transition:      3'100 6'1----1 ->      3'101 9'010000101
  transition:      3'010 6'-----0 ->      3'010 9'000100010
  transition:      3'010 6'000001 ->      3'010 9'000100010
  transition:      3'010 6'----11 ->      3'000 9'000100000
  transition:      3'010 6'---1-1 ->      3'001 9'000100001
  transition:      3'010 6'--1--1 ->      3'011 9'000100011
  transition:      3'010 6'-1---1 ->      3'100 9'000100100
  transition:      3'010 6'1----1 ->      3'101 9'000100101
  transition:      3'001 6'-----0 ->      3'001 9'000010001
  transition:      3'001 6'000001 ->      3'010 9'000010010
  transition:      3'001 6'----11 ->      3'000 9'000010000
  transition:      3'001 6'---1-1 ->      3'001 9'000010001
  transition:      3'001 6'--1--1 ->      3'011 9'000010011
  transition:      3'001 6'-1---1 ->      3'100 9'000010100
  transition:      3'001 6'1----1 ->      3'101 9'000010101
  transition:      3'101 6'-----0 ->      3'101 9'100000101
  transition:      3'101 6'000001 ->      3'010 9'100000010
  transition:      3'101 6'----11 ->      3'000 9'100000000
  transition:      3'101 6'---1-1 ->      3'001 9'100000001
  transition:      3'101 6'--1--1 ->      3'011 9'100000011
  transition:      3'101 6'-1---1 ->      3'100 9'100000100
  transition:      3'101 6'1----1 ->      3'101 9'100000101
  transition:      3'011 6'-----0 ->      3'011 9'001000011
  transition:      3'011 6'000001 ->      3'010 9'001000010
  transition:      3'011 6'----11 ->      3'000 9'001000000
  transition:      3'011 6'---1-1 ->      3'001 9'001000001
  transition:      3'011 6'--1--1 ->      3'011 9'001000011
  transition:      3'011 6'-1---1 ->      3'100 9'001000100
  transition:      3'011 6'1----1 ->      3'101 9'001000101
Extracting FSM `\soc_inst.fabric_v_f_wrd_sjs_2.D_OUT' from module `\mkeclass_axi4'.
  found $dff cell for state register: $flatten\soc_inst.\fabric_v_f_wrd_sjs_2.$procdff$7409
  root of input selection tree: $flatten\soc_inst.\fabric_v_f_wrd_sjs_2.$0\D_OUT[2:0]
  found ctrl input: \soc_inst.fabric_v_f_wrd_sjs_2.ENQ
  found ctrl input: \soc_inst.MUX_fabric_v_f_wrd_mis_5_enq_1__SEL_3
  found ctrl input: \soc_inst.MUX_fabric_v_f_wrd_mis_4_enq_1__SEL_3
  found ctrl input: \soc_inst.MUX_fabric_v_f_wrd_mis_3_enq_1__SEL_3
  found ctrl input: \soc_inst.MUX_fabric_v_f_wrd_mis_1_enq_1__SEL_3
  found ctrl input: \soc_inst.MUX_fabric_v_f_wrd_mis_0_enq_1__SEL_3
  found state code: 3'010
  found state code: 3'101
  found state code: 3'100
  found state code: 3'011
  found state code: 3'001
  found state code: 3'000
  found ctrl output: $flatten\soc_inst.$eq$mkSoc.v:5406$826_Y
  found ctrl output: $flatten\soc_inst.$eq$mkSoc.v:5425$849_Y
  found ctrl output: $flatten\soc_inst.$eq$mkSoc.v:5444$872_Y
  found ctrl output: $flatten\soc_inst.$eq$mkSoc.v:5463$895_Y
  found ctrl output: $flatten\soc_inst.$eq$mkSoc.v:5482$918_Y
  found ctrl output: $flatten\soc_inst.$eq$mkSoc.v:5501$941_Y
  ctrl inputs: { \soc_inst.MUX_fabric_v_f_wrd_mis_5_enq_1__SEL_3 \soc_inst.MUX_fabric_v_f_wrd_mis_4_enq_1__SEL_3 \soc_inst.MUX_fabric_v_f_wrd_mis_3_enq_1__SEL_3 \soc_inst.MUX_fabric_v_f_wrd_mis_1_enq_1__SEL_3 \soc_inst.MUX_fabric_v_f_wrd_mis_0_enq_1__SEL_3 \soc_inst.fabric_v_f_wrd_sjs_2.ENQ }
  ctrl outputs: { $flatten\soc_inst.$eq$mkSoc.v:5501$941_Y $flatten\soc_inst.$eq$mkSoc.v:5482$918_Y $flatten\soc_inst.$eq$mkSoc.v:5463$895_Y $flatten\soc_inst.$eq$mkSoc.v:5444$872_Y $flatten\soc_inst.$eq$mkSoc.v:5425$849_Y $flatten\soc_inst.$eq$mkSoc.v:5406$826_Y $flatten\soc_inst.\fabric_v_f_wrd_sjs_2.$0\D_OUT[2:0] }
  transition:      3'000 6'-----0 ->      3'000 9'000001000
  transition:      3'000 6'000001 ->      3'010 9'000001010
  transition:      3'000 6'----11 ->      3'000 9'000001000
  transition:      3'000 6'---1-1 ->      3'001 9'000001001
  transition:      3'000 6'--1--1 ->      3'011 9'000001011
  transition:      3'000 6'-1---1 ->      3'100 9'000001100
  transition:      3'000 6'1----1 ->      3'101 9'000001101
  transition:      3'100 6'-----0 ->      3'100 9'010000100
  transition:      3'100 6'000001 ->      3'010 9'010000010
  transition:      3'100 6'----11 ->      3'000 9'010000000
  transition:      3'100 6'---1-1 ->      3'001 9'010000001
  transition:      3'100 6'--1--1 ->      3'011 9'010000011
  transition:      3'100 6'-1---1 ->      3'100 9'010000100
  transition:      3'100 6'1----1 ->      3'101 9'010000101
  transition:      3'010 6'-----0 ->      3'010 9'000100010
  transition:      3'010 6'000001 ->      3'010 9'000100010
  transition:      3'010 6'----11 ->      3'000 9'000100000
  transition:      3'010 6'---1-1 ->      3'001 9'000100001
  transition:      3'010 6'--1--1 ->      3'011 9'000100011
  transition:      3'010 6'-1---1 ->      3'100 9'000100100
  transition:      3'010 6'1----1 ->      3'101 9'000100101
  transition:      3'001 6'-----0 ->      3'001 9'000010001
  transition:      3'001 6'000001 ->      3'010 9'000010010
  transition:      3'001 6'----11 ->      3'000 9'000010000
  transition:      3'001 6'---1-1 ->      3'001 9'000010001
  transition:      3'001 6'--1--1 ->      3'011 9'000010011
  transition:      3'001 6'-1---1 ->      3'100 9'000010100
  transition:      3'001 6'1----1 ->      3'101 9'000010101
  transition:      3'101 6'-----0 ->      3'101 9'100000101
  transition:      3'101 6'000001 ->      3'010 9'100000010
  transition:      3'101 6'----11 ->      3'000 9'100000000
  transition:      3'101 6'---1-1 ->      3'001 9'100000001
  transition:      3'101 6'--1--1 ->      3'011 9'100000011
  transition:      3'101 6'-1---1 ->      3'100 9'100000100
  transition:      3'101 6'1----1 ->      3'101 9'100000101
  transition:      3'011 6'-----0 ->      3'011 9'001000011
  transition:      3'011 6'000001 ->      3'010 9'001000010
  transition:      3'011 6'----11 ->      3'000 9'001000000
  transition:      3'011 6'---1-1 ->      3'001 9'001000001
  transition:      3'011 6'--1--1 ->      3'011 9'001000011
  transition:      3'011 6'-1---1 ->      3'100 9'001000100
  transition:      3'011 6'1----1 ->      3'101 9'001000101
Extracting FSM `\soc_inst.uart_user_ifc_uart_rRecvState' from module `\mkeclass_axi4'.
  found $adff cell for state register: $flatten\soc_inst.$procdff$7498
  root of input selection tree: $flatten\soc_inst.$0\uart_user_ifc_uart_rRecvState[2:0]
  found reset state: 3'000 (from async reset)
  found ctrl input: \soc_inst.uart_user_ifc_uart_rRecvState_EN
  found ctrl input: \soc_inst.WILL_FIRE_RL_uart_user_ifc_uart_receive_stop_last_bit
  found ctrl input: \soc_inst.WILL_FIRE_RL_uart_user_ifc_uart_receive_stop_first_bit
  found ctrl input: \soc_inst.WILL_FIRE_RL_uart_user_ifc_uart_receive_wait_bit_cell_time_for_sample
  found ctrl input: \soc_inst.WILL_FIRE_RL_uart_user_ifc_uart_receive_find_center_of_bit_cell
  found ctrl input: \soc_inst.WILL_FIRE_RL_uart_user_ifc_uart_receive_wait_for_start_bit
  found state code: 3'010
  found ctrl input: \soc_inst.uart_user_ifc_uart_rRecvData
  found ctrl input: $flatten\soc_inst.$procmux$6488_CTRL
  found state code: 3'011
  found state code: 3'110
  found ctrl input: $flatten\soc_inst.$eq$mkSoc.v:6643$1556_Y
  found state code: 3'001
  found ctrl output: $flatten\soc_inst.$eq$mkSoc.v:6151$1354_Y
  found ctrl output: $flatten\soc_inst.$eq$mkSoc.v:6158$1357_Y
  found ctrl output: $flatten\soc_inst.$eq$mkSoc.v:6165$1360_Y
  found ctrl output: $flatten\soc_inst.$eq$mkSoc.v:6179$1365_Y
  found ctrl output: $flatten\soc_inst.$eq$mkSoc.v:6186$1368_Y
  found ctrl output: $flatten\soc_inst.$eq$mkSoc.v:6197$1371_Y
  found ctrl output: $flatten\soc_inst.$eq$mkSoc.v:6210$1374_Y
  ctrl inputs: { \soc_inst.uart_user_ifc_uart_rRecvState_EN \soc_inst.uart_user_ifc_uart_rRecvData \soc_inst.WILL_FIRE_RL_uart_user_ifc_uart_receive_wait_for_start_bit \soc_inst.WILL_FIRE_RL_uart_user_ifc_uart_receive_wait_bit_cell_time_for_sample \soc_inst.WILL_FIRE_RL_uart_user_ifc_uart_receive_stop_last_bit \soc_inst.WILL_FIRE_RL_uart_user_ifc_uart_receive_stop_first_bit \soc_inst.WILL_FIRE_RL_uart_user_ifc_uart_receive_find_center_of_bit_cell $flatten\soc_inst.$eq$mkSoc.v:6643$1556_Y $flatten\soc_inst.$procmux$6488_CTRL }
  ctrl outputs: { $flatten\soc_inst.$eq$mkSoc.v:6210$1374_Y $flatten\soc_inst.$eq$mkSoc.v:6197$1371_Y $flatten\soc_inst.$eq$mkSoc.v:6186$1368_Y $flatten\soc_inst.$eq$mkSoc.v:6179$1365_Y $flatten\soc_inst.$eq$mkSoc.v:6165$1360_Y $flatten\soc_inst.$eq$mkSoc.v:6158$1357_Y $flatten\soc_inst.$eq$mkSoc.v:6151$1354_Y $flatten\soc_inst.$0\uart_user_ifc_uart_rRecvState[2:0] }
  transition:      3'000 9'0-------- ->      3'000 10'0000001000
  transition:      3'000 9'1-00000-- ->      3'010 10'0000001010
  transition:      3'000 9'101------ ->      3'001 10'0000001001
  transition:      3'000 9'111------ ->      3'000 10'0000001000
  transition:      3'000 9'1-----10- ->      3'001 10'0000001001
  transition:      3'000 9'10----11- ->      3'010 10'0000001010
  transition:      3'000 9'11----11- ->      3'000 10'0000001000
  transition:      3'000 9'1--1----0 ->      3'011 10'0000001011
  transition:      3'000 9'1--1----1 ->      3'110 10'0000001110
  transition:      3'000 9'10---1--- ->      3'000 10'0000001000
  transition:      3'000 9'11---1--- ->      3'010 10'0000001010
  transition:      3'000 9'1---1---- ->      3'000 10'0000001000
  transition:      3'010 9'0-------- ->      3'010 10'0000100010
  transition:      3'010 9'1-00000-- ->      3'010 10'0000100010
  transition:      3'010 9'101------ ->      3'001 10'0000100001
  transition:      3'010 9'111------ ->      3'000 10'0000100000
  transition:      3'010 9'1-----10- ->      3'001 10'0000100001
  transition:      3'010 9'10----11- ->      3'010 10'0000100010
  transition:      3'010 9'11----11- ->      3'000 10'0000100000
  transition:      3'010 9'1--1----0 ->      3'011 10'0000100011
  transition:      3'010 9'1--1----1 ->      3'110 10'0000100110
  transition:      3'010 9'10---1--- ->      3'000 10'0000100000
  transition:      3'010 9'11---1--- ->      3'010 10'0000100010
  transition:      3'010 9'1---1---- ->      3'000 10'0000100000
  transition:      3'110 9'0-------- ->      3'110 10'0100000110
  transition:      3'110 9'1-00000-- ->      3'010 10'0100000010
  transition:      3'110 9'101------ ->      3'001 10'0100000001
  transition:      3'110 9'111------ ->      3'000 10'0100000000
  transition:      3'110 9'1-----10- ->      3'001 10'0100000001
  transition:      3'110 9'10----11- ->      3'010 10'0100000010
  transition:      3'110 9'11----11- ->      3'000 10'0100000000
  transition:      3'110 9'1--1----0 ->      3'011 10'0100000011
  transition:      3'110 9'1--1----1 ->      3'110 10'0100000110
  transition:      3'110 9'10---1--- ->      3'000 10'0100000000
  transition:      3'110 9'11---1--- ->      3'010 10'0100000010
  transition:      3'110 9'1---1---- ->      3'000 10'0100000000
  transition:      3'001 9'0-------- ->      3'001 10'0000010001
  transition:      3'001 9'1-00000-- ->      3'010 10'0000010010
  transition:      3'001 9'101------ ->      3'001 10'0000010001
  transition:      3'001 9'111------ ->      3'000 10'0000010000
  transition:      3'001 9'1-----10- ->      3'001 10'0000010001
  transition:      3'001 9'10----11- ->      3'010 10'0000010010
  transition:      3'001 9'11----11- ->      3'000 10'0000010000
  transition:      3'001 9'1--1----0 ->      3'011 10'0000010011
  transition:      3'001 9'1--1----1 ->      3'110 10'0000010110
  transition:      3'001 9'10---1--- ->      3'000 10'0000010000
  transition:      3'001 9'11---1--- ->      3'010 10'0000010010
  transition:      3'001 9'1---1---- ->      3'000 10'0000010000
  transition:      3'011 9'0-------- ->      3'011 10'1000000011
  transition:      3'011 9'1-00000-- ->      3'010 10'1000000010
  transition:      3'011 9'101------ ->      3'001 10'1000000001
  transition:      3'011 9'111------ ->      3'000 10'1000000000
  transition:      3'011 9'1-----10- ->      3'001 10'1000000001
  transition:      3'011 9'10----11- ->      3'010 10'1000000010
  transition:      3'011 9'11----11- ->      3'000 10'1000000000
  transition:      3'011 9'1--1----0 ->      3'011 10'1000000011
  transition:      3'011 9'1--1----1 ->      3'110 10'1000000110
  transition:      3'011 9'10---1--- ->      3'000 10'1000000000
  transition:      3'011 9'11---1--- ->      3'010 10'1000000010
  transition:      3'011 9'1---1---- ->      3'000 10'1000000000
Extracting FSM `\soc_inst.uart_user_ifc_uart_rXmitState' from module `\mkeclass_axi4'.
  found $adff cell for state register: $flatten\soc_inst.$procdff$7503
  root of input selection tree: $flatten\soc_inst.$0\uart_user_ifc_uart_rXmitState[2:0]
  found reset state: 3'000 (from async reset)
  found ctrl input: \soc_inst.uart_user_ifc_uart_rXmitState_EN
  found ctrl input: \soc_inst.WILL_FIRE_RL_uart_user_ifc_uart_transmit_send_stop_bit2
  found ctrl input: \soc_inst.WILL_FIRE_RL_uart_user_ifc_uart_transmit_send_stop_bit1_5
  found ctrl input: \soc_inst.WILL_FIRE_RL_uart_user_ifc_uart_transmit_send_stop_bit
  found ctrl input: \soc_inst.WILL_FIRE_RL_uart_user_ifc_uart_transmit_send_parity_bit
  found ctrl input: \soc_inst.WILL_FIRE_RL_uart_user_ifc_uart_transmit_wait_1_bit_cell_time
  found ctrl input: \soc_inst.WILL_FIRE_RL_uart_user_ifc_uart_transmit_send_start_bit
  found ctrl input: \soc_inst.CAN_FIRE_RL_uart_user_ifc_uart_transmit_wait_for_start_command
  found state code: 3'010
  found ctrl input: $flatten\soc_inst.$eq$mkSoc.v:6659$1562_Y
  found state code: 3'110
  found ctrl input: $flatten\soc_inst.$eq$mkSoc.v:6669$1572_Y
  found state code: 3'101
  found state code: 3'100
  found state code: 3'111
  found ctrl input: $flatten\soc_inst.$eq$mkSoc.v:6662$1565_Y
  found state code: 3'011
  found state code: 3'001
  found ctrl input: \soc_inst.uart_user_ifc_uart_fifoXmit.hasodata
  found ctrl output: $flatten\soc_inst.$eq$mkSoc.v:10289$2768_Y
  found ctrl output: $flatten\soc_inst.$eq$mkSoc.v:6240$1387_Y
  found ctrl output: $flatten\soc_inst.$eq$mkSoc.v:6247$1390_Y
  found ctrl output: $flatten\soc_inst.$eq$mkSoc.v:6258$1393_Y
  found ctrl output: $flatten\soc_inst.$eq$mkSoc.v:6279$1399_Y
  found ctrl output: $flatten\soc_inst.$eq$mkSoc.v:6286$1402_Y
  found ctrl output: $flatten\soc_inst.$eq$mkSoc.v:6293$1405_Y
  found ctrl output: $flatten\soc_inst.$eq$mkSoc.v:6300$1408_Y
  ctrl inputs: { \soc_inst.uart_user_ifc_uart_rXmitState_EN \soc_inst.WILL_FIRE_RL_uart_user_ifc_uart_transmit_wait_1_bit_cell_time \soc_inst.WILL_FIRE_RL_uart_user_ifc_uart_transmit_send_stop_bit2 \soc_inst.WILL_FIRE_RL_uart_user_ifc_uart_transmit_send_stop_bit1_5 \soc_inst.WILL_FIRE_RL_uart_user_ifc_uart_transmit_send_stop_bit \soc_inst.WILL_FIRE_RL_uart_user_ifc_uart_transmit_send_start_bit \soc_inst.WILL_FIRE_RL_uart_user_ifc_uart_transmit_send_parity_bit \soc_inst.CAN_FIRE_RL_uart_user_ifc_uart_transmit_wait_for_start_command $flatten\soc_inst.$eq$mkSoc.v:6669$1572_Y $flatten\soc_inst.$eq$mkSoc.v:6662$1565_Y $flatten\soc_inst.$eq$mkSoc.v:6659$1562_Y \soc_inst.uart_user_ifc_uart_fifoXmit.hasodata }
  ctrl outputs: { $flatten\soc_inst.$eq$mkSoc.v:6300$1408_Y $flatten\soc_inst.$eq$mkSoc.v:6293$1405_Y $flatten\soc_inst.$eq$mkSoc.v:6286$1402_Y $flatten\soc_inst.$eq$mkSoc.v:6279$1399_Y $flatten\soc_inst.$eq$mkSoc.v:6258$1393_Y $flatten\soc_inst.$eq$mkSoc.v:6247$1390_Y $flatten\soc_inst.$eq$mkSoc.v:6240$1387_Y $flatten\soc_inst.$eq$mkSoc.v:10289$2768_Y $flatten\soc_inst.$0\uart_user_ifc_uart_rXmitState[2:0] }
  transition:      3'000 12'0----------- ->      3'000 11'00000001000
  transition:      3'000 12'10000000---- ->      3'010 11'00000001010
  transition:      3'000 12'1------1---0 ->      3'000 11'00000001000
  transition:      3'000 12'1------1---1 ->      3'001 11'00000001001
  transition:      3'000 12'1----1----0- ->      3'001 11'00000001001
  transition:      3'000 12'1----1----1- ->      3'010 11'00000001010
  transition:      3'000 12'11--------0- ->      3'010 11'00000001010
  transition:      3'000 12'11-------01- ->      3'011 11'00000001011
  transition:      3'000 12'11-------11- ->      3'100 11'00000001100
  transition:      3'000 12'1-----1---0- ->      3'111 11'00000001111
  transition:      3'000 12'1-----1---1- ->      3'100 11'00000001100
  transition:      3'000 12'1---1-----0- ->      3'100 11'00000001100
  transition:      3'000 12'1---1-----1- ->      3'000 11'00000001000
  transition:      3'000 12'1--1----0--- ->      3'101 11'00000001101
  transition:      3'000 12'1--1----1--- ->      3'000 11'00000001000
  transition:      3'000 12'1-1-------0- ->      3'110 11'00000001110
  transition:      3'000 12'1-1-------1- ->      3'000 11'00000001000
  transition:      3'100 12'0----------- ->      3'100 11'00100000100
  transition:      3'100 12'10000000---- ->      3'010 11'00100000010
  transition:      3'100 12'1------1---0 ->      3'000 11'00100000000
  transition:      3'100 12'1------1---1 ->      3'001 11'00100000001
  transition:      3'100 12'1----1----0- ->      3'001 11'00100000001
  transition:      3'100 12'1----1----1- ->      3'010 11'00100000010
  transition:      3'100 12'11--------0- ->      3'010 11'00100000010
  transition:      3'100 12'11-------01- ->      3'011 11'00100000011
  transition:      3'100 12'11-------11- ->      3'100 11'00100000100
  transition:      3'100 12'1-----1---0- ->      3'111 11'00100000111
  transition:      3'100 12'1-----1---1- ->      3'100 11'00100000100
  transition:      3'100 12'1---1-----0- ->      3'100 11'00100000100
  transition:      3'100 12'1---1-----1- ->      3'000 11'00100000000
  transition:      3'100 12'1--1----0--- ->      3'101 11'00100000101
  transition:      3'100 12'1--1----1--- ->      3'000 11'00100000000
  transition:      3'100 12'1-1-------0- ->      3'110 11'00100000110
  transition:      3'100 12'1-1-------1- ->      3'000 11'00100000000
  transition:      3'010 12'0----------- ->      3'010 11'00000100010
  transition:      3'010 12'10000000---- ->      3'010 11'00000100010
  transition:      3'010 12'1------1---0 ->      3'000 11'00000100000
  transition:      3'010 12'1------1---1 ->      3'001 11'00000100001
  transition:      3'010 12'1----1----0- ->      3'001 11'00000100001
  transition:      3'010 12'1----1----1- ->      3'010 11'00000100010
  transition:      3'010 12'11--------0- ->      3'010 11'00000100010
  transition:      3'010 12'11-------01- ->      3'011 11'00000100011
  transition:      3'010 12'11-------11- ->      3'100 11'00000100100
  transition:      3'010 12'1-----1---0- ->      3'111 11'00000100111
  transition:      3'010 12'1-----1---1- ->      3'100 11'00000100100
  transition:      3'010 12'1---1-----0- ->      3'100 11'00000100100
  transition:      3'010 12'1---1-----1- ->      3'000 11'00000100000
  transition:      3'010 12'1--1----0--- ->      3'101 11'00000100101
  transition:      3'010 12'1--1----1--- ->      3'000 11'00000100000
  transition:      3'010 12'1-1-------0- ->      3'110 11'00000100110
  transition:      3'010 12'1-1-------1- ->      3'000 11'00000100000
  transition:      3'110 12'0----------- ->      3'110 11'10000000110
  transition:      3'110 12'10000000---- ->      3'010 11'10000000010
  transition:      3'110 12'1------1---0 ->      3'000 11'10000000000
  transition:      3'110 12'1------1---1 ->      3'001 11'10000000001
  transition:      3'110 12'1----1----0- ->      3'001 11'10000000001
  transition:      3'110 12'1----1----1- ->      3'010 11'10000000010
  transition:      3'110 12'11--------0- ->      3'010 11'10000000010
  transition:      3'110 12'11-------01- ->      3'011 11'10000000011
  transition:      3'110 12'11-------11- ->      3'100 11'10000000100
  transition:      3'110 12'1-----1---0- ->      3'111 11'10000000111
  transition:      3'110 12'1-----1---1- ->      3'100 11'10000000100
  transition:      3'110 12'1---1-----0- ->      3'100 11'10000000100
  transition:      3'110 12'1---1-----1- ->      3'000 11'10000000000
  transition:      3'110 12'1--1----0--- ->      3'101 11'10000000101
  transition:      3'110 12'1--1----1--- ->      3'000 11'10000000000
  transition:      3'110 12'1-1-------0- ->      3'110 11'10000000110
  transition:      3'110 12'1-1-------1- ->      3'000 11'10000000000
  transition:      3'001 12'0----------- ->      3'001 11'00000010001
  transition:      3'001 12'10000000---- ->      3'010 11'00000010010
  transition:      3'001 12'1------1---0 ->      3'000 11'00000010000
  transition:      3'001 12'1------1---1 ->      3'001 11'00000010001
  transition:      3'001 12'1----1----0- ->      3'001 11'00000010001
  transition:      3'001 12'1----1----1- ->      3'010 11'00000010010
  transition:      3'001 12'11--------0- ->      3'010 11'00000010010
  transition:      3'001 12'11-------01- ->      3'011 11'00000010011
  transition:      3'001 12'11-------11- ->      3'100 11'00000010100
  transition:      3'001 12'1-----1---0- ->      3'111 11'00000010111
  transition:      3'001 12'1-----1---1- ->      3'100 11'00000010100
  transition:      3'001 12'1---1-----0- ->      3'100 11'00000010100
  transition:      3'001 12'1---1-----1- ->      3'000 11'00000010000
  transition:      3'001 12'1--1----0--- ->      3'101 11'00000010101
  transition:      3'001 12'1--1----1--- ->      3'000 11'00000010000
  transition:      3'001 12'1-1-------0- ->      3'110 11'00000010110
  transition:      3'001 12'1-1-------1- ->      3'000 11'00000010000
  transition:      3'101 12'0----------- ->      3'101 11'01000000101
  transition:      3'101 12'10000000---- ->      3'010 11'01000000010
  transition:      3'101 12'1------1---0 ->      3'000 11'01000000000
  transition:      3'101 12'1------1---1 ->      3'001 11'01000000001
  transition:      3'101 12'1----1----0- ->      3'001 11'01000000001
  transition:      3'101 12'1----1----1- ->      3'010 11'01000000010
  transition:      3'101 12'11--------0- ->      3'010 11'01000000010
  transition:      3'101 12'11-------01- ->      3'011 11'01000000011
  transition:      3'101 12'11-------11- ->      3'100 11'01000000100
  transition:      3'101 12'1-----1---0- ->      3'111 11'01000000111
  transition:      3'101 12'1-----1---1- ->      3'100 11'01000000100
  transition:      3'101 12'1---1-----0- ->      3'100 11'01000000100
  transition:      3'101 12'1---1-----1- ->      3'000 11'01000000000
  transition:      3'101 12'1--1----0--- ->      3'101 11'01000000101
  transition:      3'101 12'1--1----1--- ->      3'000 11'01000000000
  transition:      3'101 12'1-1-------0- ->      3'110 11'01000000110
  transition:      3'101 12'1-1-------1- ->      3'000 11'01000000000
  transition:      3'011 12'0----------- ->      3'011 11'00001000011
  transition:      3'011 12'10000000---- ->      3'010 11'00001000010
  transition:      3'011 12'1------1---0 ->      3'000 11'00001000000
  transition:      3'011 12'1------1---1 ->      3'001 11'00001000001
  transition:      3'011 12'1----1----0- ->      3'001 11'00001000001
  transition:      3'011 12'1----1----1- ->      3'010 11'00001000010
  transition:      3'011 12'11--------0- ->      3'010 11'00001000010
  transition:      3'011 12'11-------01- ->      3'011 11'00001000011
  transition:      3'011 12'11-------11- ->      3'100 11'00001000100
  transition:      3'011 12'1-----1---0- ->      3'111 11'00001000111
  transition:      3'011 12'1-----1---1- ->      3'100 11'00001000100
  transition:      3'011 12'1---1-----0- ->      3'100 11'00001000100
  transition:      3'011 12'1---1-----1- ->      3'000 11'00001000000
  transition:      3'011 12'1--1----0--- ->      3'101 11'00001000101
  transition:      3'011 12'1--1----1--- ->      3'000 11'00001000000
  transition:      3'011 12'1-1-------0- ->      3'110 11'00001000110
  transition:      3'011 12'1-1-------1- ->      3'000 11'00001000000
  transition:      3'111 12'0----------- ->      3'111 11'00010000111
  transition:      3'111 12'10000000---- ->      3'010 11'00010000010
  transition:      3'111 12'1------1---0 ->      3'000 11'00010000000
  transition:      3'111 12'1------1---1 ->      3'001 11'00010000001
  transition:      3'111 12'1----1----0- ->      3'001 11'00010000001
  transition:      3'111 12'1----1----1- ->      3'010 11'00010000010
  transition:      3'111 12'11--------0- ->      3'010 11'00010000010
  transition:      3'111 12'11-------01- ->      3'011 11'00010000011
  transition:      3'111 12'11-------11- ->      3'100 11'00010000100
  transition:      3'111 12'1-----1---0- ->      3'111 11'00010000111
  transition:      3'111 12'1-----1---1- ->      3'100 11'00010000100
  transition:      3'111 12'1---1-----0- ->      3'100 11'00010000100
  transition:      3'111 12'1---1-----1- ->      3'000 11'00010000000
  transition:      3'111 12'1--1----0--- ->      3'101 11'00010000101
  transition:      3'111 12'1--1----1--- ->      3'000 11'00010000000
  transition:      3'111 12'1-1-------0- ->      3'110 11'00010000110
  transition:      3'111 12'1-1-------1- ->      3'000 11'00010000000

52.11.3. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\soc_inst.uart_user_ifc_uart_rXmitState$7789' from module `\mkeclass_axi4'.
Optimizing FSM `$fsm$\soc_inst.uart_user_ifc_uart_rRecvState$7780' from module `\mkeclass_axi4'.
Optimizing FSM `$fsm$\soc_inst.fabric_v_f_wrd_sjs_2.D_OUT$7772' from module `\mkeclass_axi4'.
Optimizing FSM `$fsm$\soc_inst.fabric_v_f_wrd_sjs_1.D_OUT$7764' from module `\mkeclass_axi4'.
Optimizing FSM `$fsm$\soc_inst.fabric_v_f_wrd_sjs_0.D_OUT$7756' from module `\mkeclass_axi4'.
Optimizing FSM `$fsm$\soc_inst.fabric_v_f_wrd_mis_5.D_OUT$7751' from module `\mkeclass_axi4'.
Optimizing FSM `$fsm$\soc_inst.fabric_v_f_wrd_mis_4.D_OUT$7746' from module `\mkeclass_axi4'.
Optimizing FSM `$fsm$\soc_inst.fabric_v_f_wrd_mis_3.D_OUT$7741' from module `\mkeclass_axi4'.
Optimizing FSM `$fsm$\soc_inst.fabric_v_f_wrd_mis_2.D_OUT$7736' from module `\mkeclass_axi4'.
Optimizing FSM `$fsm$\soc_inst.fabric_v_f_wrd_mis_1.D_OUT$7731' from module `\mkeclass_axi4'.
Optimizing FSM `$fsm$\soc_inst.fabric_v_f_wrd_mis_0.D_OUT$7726' from module `\mkeclass_axi4'.
Optimizing FSM `$fsm$\soc_inst.fabric_v_f_wr_sjs_2.D_OUT$7718' from module `\mkeclass_axi4'.
Optimizing FSM `$fsm$\soc_inst.fabric_v_f_wr_sjs_1.D_OUT$7710' from module `\mkeclass_axi4'.
Optimizing FSM `$fsm$\soc_inst.fabric_v_f_wr_sjs_0.D_OUT$7702' from module `\mkeclass_axi4'.
Optimizing FSM `$fsm$\soc_inst.fabric_v_f_wr_mis_5.D_OUT$7697' from module `\mkeclass_axi4'.
Optimizing FSM `$fsm$\soc_inst.fabric_v_f_wr_mis_4.D_OUT$7692' from module `\mkeclass_axi4'.
Optimizing FSM `$fsm$\soc_inst.fabric_v_f_wr_mis_3.D_OUT$7687' from module `\mkeclass_axi4'.
Optimizing FSM `$fsm$\soc_inst.fabric_v_f_wr_mis_2.D_OUT$7682' from module `\mkeclass_axi4'.
Optimizing FSM `$fsm$\soc_inst.fabric_v_f_wr_mis_1.D_OUT$7677' from module `\mkeclass_axi4'.
Optimizing FSM `$fsm$\soc_inst.fabric_v_f_wr_mis_0.D_OUT$7672' from module `\mkeclass_axi4'.
Optimizing FSM `$fsm$\soc_inst.fabric_v_f_rd_sjs_2.D_OUT$7664' from module `\mkeclass_axi4'.
Optimizing FSM `$fsm$\soc_inst.fabric_v_f_rd_sjs_1.D_OUT$7656' from module `\mkeclass_axi4'.
Optimizing FSM `$fsm$\soc_inst.fabric_v_f_rd_sjs_0.D_OUT$7648' from module `\mkeclass_axi4'.
Optimizing FSM `$fsm$\soc_inst.fabric_v_f_rd_mis_5.D_OUT$7643' from module `\mkeclass_axi4'.
Optimizing FSM `$fsm$\soc_inst.fabric_v_f_rd_mis_4.D_OUT$7638' from module `\mkeclass_axi4'.
Optimizing FSM `$fsm$\soc_inst.fabric_v_f_rd_mis_3.D_OUT$7633' from module `\mkeclass_axi4'.
Optimizing FSM `$fsm$\soc_inst.fabric_v_f_rd_mis_2.D_OUT$7628' from module `\mkeclass_axi4'.
Optimizing FSM `$fsm$\soc_inst.fabric_v_f_rd_mis_1.D_OUT$7623' from module `\mkeclass_axi4'.
Optimizing FSM `$fsm$\soc_inst.fabric_v_f_rd_mis_0.D_OUT$7618' from module `\mkeclass_axi4'.

52.11.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mkeclass_axi4..
Removed 223 unused cells and 277 unused wires.
<suppressed ~318 debug messages>

52.11.5. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\soc_inst.fabric_v_f_rd_mis_0.D_OUT$7618' from module `\mkeclass_axi4'.
  Removing unused output signal $flatten\soc_inst.\fabric_v_f_rd_mis_0.$0\D_OUT[1:0] [0].
  Removing unused output signal $flatten\soc_inst.\fabric_v_f_rd_mis_0.$0\D_OUT[1:0] [1].
Optimizing FSM `$fsm$\soc_inst.fabric_v_f_rd_mis_1.D_OUT$7623' from module `\mkeclass_axi4'.
  Removing unused output signal $flatten\soc_inst.\fabric_v_f_rd_mis_1.$0\D_OUT[1:0] [0].
  Removing unused output signal $flatten\soc_inst.\fabric_v_f_rd_mis_1.$0\D_OUT[1:0] [1].
Optimizing FSM `$fsm$\soc_inst.fabric_v_f_rd_mis_2.D_OUT$7628' from module `\mkeclass_axi4'.
  Removing unused output signal $flatten\soc_inst.\fabric_v_f_rd_mis_2.$0\D_OUT[1:0] [0].
  Removing unused output signal $flatten\soc_inst.\fabric_v_f_rd_mis_2.$0\D_OUT[1:0] [1].
Optimizing FSM `$fsm$\soc_inst.fabric_v_f_rd_mis_3.D_OUT$7633' from module `\mkeclass_axi4'.
  Removing unused output signal $flatten\soc_inst.\fabric_v_f_rd_mis_3.$0\D_OUT[1:0] [0].
  Removing unused output signal $flatten\soc_inst.\fabric_v_f_rd_mis_3.$0\D_OUT[1:0] [1].
Optimizing FSM `$fsm$\soc_inst.fabric_v_f_rd_mis_4.D_OUT$7638' from module `\mkeclass_axi4'.
  Removing unused output signal $flatten\soc_inst.\fabric_v_f_rd_mis_4.$0\D_OUT[1:0] [0].
  Removing unused output signal $flatten\soc_inst.\fabric_v_f_rd_mis_4.$0\D_OUT[1:0] [1].
Optimizing FSM `$fsm$\soc_inst.fabric_v_f_rd_mis_5.D_OUT$7643' from module `\mkeclass_axi4'.
  Removing unused output signal $flatten\soc_inst.\fabric_v_f_rd_mis_5.$0\D_OUT[1:0] [0].
  Removing unused output signal $flatten\soc_inst.\fabric_v_f_rd_mis_5.$0\D_OUT[1:0] [1].
Optimizing FSM `$fsm$\soc_inst.fabric_v_f_rd_sjs_0.D_OUT$7648' from module `\mkeclass_axi4'.
  Removing unused output signal $flatten\soc_inst.\fabric_v_f_rd_sjs_0.$0\D_OUT[2:0] [0].
  Removing unused output signal $flatten\soc_inst.\fabric_v_f_rd_sjs_0.$0\D_OUT[2:0] [1].
  Removing unused output signal $flatten\soc_inst.\fabric_v_f_rd_sjs_0.$0\D_OUT[2:0] [2].
Optimizing FSM `$fsm$\soc_inst.fabric_v_f_rd_sjs_1.D_OUT$7656' from module `\mkeclass_axi4'.
  Removing unused output signal $flatten\soc_inst.\fabric_v_f_rd_sjs_1.$0\D_OUT[2:0] [0].
  Removing unused output signal $flatten\soc_inst.\fabric_v_f_rd_sjs_1.$0\D_OUT[2:0] [1].
  Removing unused output signal $flatten\soc_inst.\fabric_v_f_rd_sjs_1.$0\D_OUT[2:0] [2].
Optimizing FSM `$fsm$\soc_inst.fabric_v_f_rd_sjs_2.D_OUT$7664' from module `\mkeclass_axi4'.
  Removing unused output signal $flatten\soc_inst.\fabric_v_f_rd_sjs_2.$0\D_OUT[2:0] [0].
  Removing unused output signal $flatten\soc_inst.\fabric_v_f_rd_sjs_2.$0\D_OUT[2:0] [1].
  Removing unused output signal $flatten\soc_inst.\fabric_v_f_rd_sjs_2.$0\D_OUT[2:0] [2].
Optimizing FSM `$fsm$\soc_inst.fabric_v_f_wr_mis_0.D_OUT$7672' from module `\mkeclass_axi4'.
  Removing unused output signal $flatten\soc_inst.\fabric_v_f_wr_mis_0.$0\D_OUT[1:0] [0].
  Removing unused output signal $flatten\soc_inst.\fabric_v_f_wr_mis_0.$0\D_OUT[1:0] [1].
Optimizing FSM `$fsm$\soc_inst.fabric_v_f_wr_mis_1.D_OUT$7677' from module `\mkeclass_axi4'.
  Removing unused output signal $flatten\soc_inst.\fabric_v_f_wr_mis_1.$0\D_OUT[1:0] [0].
  Removing unused output signal $flatten\soc_inst.\fabric_v_f_wr_mis_1.$0\D_OUT[1:0] [1].
Optimizing FSM `$fsm$\soc_inst.fabric_v_f_wr_mis_2.D_OUT$7682' from module `\mkeclass_axi4'.
  Removing unused output signal $flatten\soc_inst.\fabric_v_f_wr_mis_2.$0\D_OUT[1:0] [0].
  Removing unused output signal $flatten\soc_inst.\fabric_v_f_wr_mis_2.$0\D_OUT[1:0] [1].
Optimizing FSM `$fsm$\soc_inst.fabric_v_f_wr_mis_3.D_OUT$7687' from module `\mkeclass_axi4'.
  Removing unused output signal $flatten\soc_inst.\fabric_v_f_wr_mis_3.$0\D_OUT[1:0] [0].
  Removing unused output signal $flatten\soc_inst.\fabric_v_f_wr_mis_3.$0\D_OUT[1:0] [1].
Optimizing FSM `$fsm$\soc_inst.fabric_v_f_wr_mis_4.D_OUT$7692' from module `\mkeclass_axi4'.
  Removing unused output signal $flatten\soc_inst.\fabric_v_f_wr_mis_4.$0\D_OUT[1:0] [0].
  Removing unused output signal $flatten\soc_inst.\fabric_v_f_wr_mis_4.$0\D_OUT[1:0] [1].
Optimizing FSM `$fsm$\soc_inst.fabric_v_f_wr_mis_5.D_OUT$7697' from module `\mkeclass_axi4'.
  Removing unused output signal $flatten\soc_inst.\fabric_v_f_wr_mis_5.$0\D_OUT[1:0] [0].
  Removing unused output signal $flatten\soc_inst.\fabric_v_f_wr_mis_5.$0\D_OUT[1:0] [1].
Optimizing FSM `$fsm$\soc_inst.fabric_v_f_wr_sjs_0.D_OUT$7702' from module `\mkeclass_axi4'.
  Removing unused output signal $flatten\soc_inst.\fabric_v_f_wr_sjs_0.$0\D_OUT[2:0] [0].
  Removing unused output signal $flatten\soc_inst.\fabric_v_f_wr_sjs_0.$0\D_OUT[2:0] [1].
  Removing unused output signal $flatten\soc_inst.\fabric_v_f_wr_sjs_0.$0\D_OUT[2:0] [2].
Optimizing FSM `$fsm$\soc_inst.fabric_v_f_wr_sjs_1.D_OUT$7710' from module `\mkeclass_axi4'.
  Removing unused output signal $flatten\soc_inst.\fabric_v_f_wr_sjs_1.$0\D_OUT[2:0] [0].
  Removing unused output signal $flatten\soc_inst.\fabric_v_f_wr_sjs_1.$0\D_OUT[2:0] [1].
  Removing unused output signal $flatten\soc_inst.\fabric_v_f_wr_sjs_1.$0\D_OUT[2:0] [2].
Optimizing FSM `$fsm$\soc_inst.fabric_v_f_wr_sjs_2.D_OUT$7718' from module `\mkeclass_axi4'.
  Removing unused output signal $flatten\soc_inst.\fabric_v_f_wr_sjs_2.$0\D_OUT[2:0] [0].
  Removing unused output signal $flatten\soc_inst.\fabric_v_f_wr_sjs_2.$0\D_OUT[2:0] [1].
  Removing unused output signal $flatten\soc_inst.\fabric_v_f_wr_sjs_2.$0\D_OUT[2:0] [2].
Optimizing FSM `$fsm$\soc_inst.fabric_v_f_wrd_mis_0.D_OUT$7726' from module `\mkeclass_axi4'.
  Removing unused output signal $flatten\soc_inst.\fabric_v_f_wrd_mis_0.$0\D_OUT[1:0] [0].
  Removing unused output signal $flatten\soc_inst.\fabric_v_f_wrd_mis_0.$0\D_OUT[1:0] [1].
Optimizing FSM `$fsm$\soc_inst.fabric_v_f_wrd_mis_1.D_OUT$7731' from module `\mkeclass_axi4'.
  Removing unused output signal $flatten\soc_inst.\fabric_v_f_wrd_mis_1.$0\D_OUT[1:0] [0].
  Removing unused output signal $flatten\soc_inst.\fabric_v_f_wrd_mis_1.$0\D_OUT[1:0] [1].
Optimizing FSM `$fsm$\soc_inst.fabric_v_f_wrd_mis_2.D_OUT$7736' from module `\mkeclass_axi4'.
  Removing unused output signal $flatten\soc_inst.\fabric_v_f_wrd_mis_2.$0\D_OUT[1:0] [0].
  Removing unused output signal $flatten\soc_inst.\fabric_v_f_wrd_mis_2.$0\D_OUT[1:0] [1].
Optimizing FSM `$fsm$\soc_inst.fabric_v_f_wrd_mis_3.D_OUT$7741' from module `\mkeclass_axi4'.
  Removing unused output signal $flatten\soc_inst.\fabric_v_f_wrd_mis_3.$0\D_OUT[1:0] [0].
  Removing unused output signal $flatten\soc_inst.\fabric_v_f_wrd_mis_3.$0\D_OUT[1:0] [1].
Optimizing FSM `$fsm$\soc_inst.fabric_v_f_wrd_mis_4.D_OUT$7746' from module `\mkeclass_axi4'.
  Removing unused output signal $flatten\soc_inst.\fabric_v_f_wrd_mis_4.$0\D_OUT[1:0] [0].
  Removing unused output signal $flatten\soc_inst.\fabric_v_f_wrd_mis_4.$0\D_OUT[1:0] [1].
Optimizing FSM `$fsm$\soc_inst.fabric_v_f_wrd_mis_5.D_OUT$7751' from module `\mkeclass_axi4'.
  Removing unused output signal $flatten\soc_inst.\fabric_v_f_wrd_mis_5.$0\D_OUT[1:0] [0].
  Removing unused output signal $flatten\soc_inst.\fabric_v_f_wrd_mis_5.$0\D_OUT[1:0] [1].
Optimizing FSM `$fsm$\soc_inst.fabric_v_f_wrd_sjs_0.D_OUT$7756' from module `\mkeclass_axi4'.
  Removing unused output signal $flatten\soc_inst.\fabric_v_f_wrd_sjs_0.$0\D_OUT[2:0] [0].
  Removing unused output signal $flatten\soc_inst.\fabric_v_f_wrd_sjs_0.$0\D_OUT[2:0] [1].
  Removing unused output signal $flatten\soc_inst.\fabric_v_f_wrd_sjs_0.$0\D_OUT[2:0] [2].
Optimizing FSM `$fsm$\soc_inst.fabric_v_f_wrd_sjs_1.D_OUT$7764' from module `\mkeclass_axi4'.
  Removing unused output signal $flatten\soc_inst.\fabric_v_f_wrd_sjs_1.$0\D_OUT[2:0] [0].
  Removing unused output signal $flatten\soc_inst.\fabric_v_f_wrd_sjs_1.$0\D_OUT[2:0] [1].
  Removing unused output signal $flatten\soc_inst.\fabric_v_f_wrd_sjs_1.$0\D_OUT[2:0] [2].
Optimizing FSM `$fsm$\soc_inst.fabric_v_f_wrd_sjs_2.D_OUT$7772' from module `\mkeclass_axi4'.
  Removing unused output signal $flatten\soc_inst.\fabric_v_f_wrd_sjs_2.$0\D_OUT[2:0] [0].
  Removing unused output signal $flatten\soc_inst.\fabric_v_f_wrd_sjs_2.$0\D_OUT[2:0] [1].
  Removing unused output signal $flatten\soc_inst.\fabric_v_f_wrd_sjs_2.$0\D_OUT[2:0] [2].
Optimizing FSM `$fsm$\soc_inst.uart_user_ifc_uart_rRecvState$7780' from module `\mkeclass_axi4'.
  Removing unused output signal $flatten\soc_inst.$0\uart_user_ifc_uart_rRecvState[2:0] [0].
  Removing unused output signal $flatten\soc_inst.$0\uart_user_ifc_uart_rRecvState[2:0] [1].
  Removing unused output signal $flatten\soc_inst.$0\uart_user_ifc_uart_rRecvState[2:0] [2].
Optimizing FSM `$fsm$\soc_inst.uart_user_ifc_uart_rXmitState$7789' from module `\mkeclass_axi4'.
  Removing unused output signal $flatten\soc_inst.$0\uart_user_ifc_uart_rXmitState[2:0] [0].
  Removing unused output signal $flatten\soc_inst.$0\uart_user_ifc_uart_rXmitState[2:0] [1].
  Removing unused output signal $flatten\soc_inst.$0\uart_user_ifc_uart_rXmitState[2:0] [2].

52.11.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).
Recoding FSM `$fsm$\soc_inst.fabric_v_f_rd_mis_0.D_OUT$7618' from module `\mkeclass_axi4' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  00 -> --1
  10 -> -1-
  01 -> 1--
Recoding FSM `$fsm$\soc_inst.fabric_v_f_rd_mis_1.D_OUT$7623' from module `\mkeclass_axi4' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  00 -> --1
  10 -> -1-
  01 -> 1--
Recoding FSM `$fsm$\soc_inst.fabric_v_f_rd_mis_2.D_OUT$7628' from module `\mkeclass_axi4' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  00 -> --1
  10 -> -1-
  01 -> 1--
Recoding FSM `$fsm$\soc_inst.fabric_v_f_rd_mis_3.D_OUT$7633' from module `\mkeclass_axi4' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  00 -> --1
  10 -> -1-
  01 -> 1--
Recoding FSM `$fsm$\soc_inst.fabric_v_f_rd_mis_4.D_OUT$7638' from module `\mkeclass_axi4' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  00 -> --1
  10 -> -1-
  01 -> 1--
Recoding FSM `$fsm$\soc_inst.fabric_v_f_rd_mis_5.D_OUT$7643' from module `\mkeclass_axi4' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  00 -> --1
  10 -> -1-
  01 -> 1--
Recoding FSM `$fsm$\soc_inst.fabric_v_f_rd_sjs_0.D_OUT$7648' from module `\mkeclass_axi4' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  000 -> -----1
  100 -> ----1-
  010 -> ---1--
  001 -> --1---
  101 -> -1----
  011 -> 1-----
Recoding FSM `$fsm$\soc_inst.fabric_v_f_rd_sjs_1.D_OUT$7656' from module `\mkeclass_axi4' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  000 -> -----1
  100 -> ----1-
  010 -> ---1--
  001 -> --1---
  101 -> -1----
  011 -> 1-----
Recoding FSM `$fsm$\soc_inst.fabric_v_f_rd_sjs_2.D_OUT$7664' from module `\mkeclass_axi4' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  000 -> -----1
  100 -> ----1-
  010 -> ---1--
  001 -> --1---
  101 -> -1----
  011 -> 1-----
Recoding FSM `$fsm$\soc_inst.fabric_v_f_wr_mis_0.D_OUT$7672' from module `\mkeclass_axi4' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  00 -> --1
  10 -> -1-
  01 -> 1--
Recoding FSM `$fsm$\soc_inst.fabric_v_f_wr_mis_1.D_OUT$7677' from module `\mkeclass_axi4' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  00 -> --1
  10 -> -1-
  01 -> 1--
Recoding FSM `$fsm$\soc_inst.fabric_v_f_wr_mis_2.D_OUT$7682' from module `\mkeclass_axi4' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  00 -> --1
  10 -> -1-
  01 -> 1--
Recoding FSM `$fsm$\soc_inst.fabric_v_f_wr_mis_3.D_OUT$7687' from module `\mkeclass_axi4' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  00 -> --1
  10 -> -1-
  01 -> 1--
Recoding FSM `$fsm$\soc_inst.fabric_v_f_wr_mis_4.D_OUT$7692' from module `\mkeclass_axi4' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  00 -> --1
  10 -> -1-
  01 -> 1--
Recoding FSM `$fsm$\soc_inst.fabric_v_f_wr_mis_5.D_OUT$7697' from module `\mkeclass_axi4' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  00 -> --1
  10 -> -1-
  01 -> 1--
Recoding FSM `$fsm$\soc_inst.fabric_v_f_wr_sjs_0.D_OUT$7702' from module `\mkeclass_axi4' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  000 -> -----1
  100 -> ----1-
  010 -> ---1--
  001 -> --1---
  101 -> -1----
  011 -> 1-----
Recoding FSM `$fsm$\soc_inst.fabric_v_f_wr_sjs_1.D_OUT$7710' from module `\mkeclass_axi4' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  000 -> -----1
  100 -> ----1-
  010 -> ---1--
  001 -> --1---
  101 -> -1----
  011 -> 1-----
Recoding FSM `$fsm$\soc_inst.fabric_v_f_wr_sjs_2.D_OUT$7718' from module `\mkeclass_axi4' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  000 -> -----1
  100 -> ----1-
  010 -> ---1--
  001 -> --1---
  101 -> -1----
  011 -> 1-----
Recoding FSM `$fsm$\soc_inst.fabric_v_f_wrd_mis_0.D_OUT$7726' from module `\mkeclass_axi4' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  00 -> --1
  10 -> -1-
  01 -> 1--
Recoding FSM `$fsm$\soc_inst.fabric_v_f_wrd_mis_1.D_OUT$7731' from module `\mkeclass_axi4' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  00 -> --1
  10 -> -1-
  01 -> 1--
Recoding FSM `$fsm$\soc_inst.fabric_v_f_wrd_mis_2.D_OUT$7736' from module `\mkeclass_axi4' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  00 -> --1
  10 -> -1-
  01 -> 1--
Recoding FSM `$fsm$\soc_inst.fabric_v_f_wrd_mis_3.D_OUT$7741' from module `\mkeclass_axi4' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  00 -> --1
  10 -> -1-
  01 -> 1--
Recoding FSM `$fsm$\soc_inst.fabric_v_f_wrd_mis_4.D_OUT$7746' from module `\mkeclass_axi4' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  00 -> --1
  10 -> -1-
  01 -> 1--
Recoding FSM `$fsm$\soc_inst.fabric_v_f_wrd_mis_5.D_OUT$7751' from module `\mkeclass_axi4' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  00 -> --1
  10 -> -1-
  01 -> 1--
Recoding FSM `$fsm$\soc_inst.fabric_v_f_wrd_sjs_0.D_OUT$7756' from module `\mkeclass_axi4' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  000 -> -----1
  100 -> ----1-
  010 -> ---1--
  001 -> --1---
  101 -> -1----
  011 -> 1-----
Recoding FSM `$fsm$\soc_inst.fabric_v_f_wrd_sjs_1.D_OUT$7764' from module `\mkeclass_axi4' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  000 -> -----1
  100 -> ----1-
  010 -> ---1--
  001 -> --1---
  101 -> -1----
  011 -> 1-----
Recoding FSM `$fsm$\soc_inst.fabric_v_f_wrd_sjs_2.D_OUT$7772' from module `\mkeclass_axi4' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  000 -> -----1
  100 -> ----1-
  010 -> ---1--
  001 -> --1---
  101 -> -1----
  011 -> 1-----
Recoding FSM `$fsm$\soc_inst.uart_user_ifc_uart_rRecvState$7780' from module `\mkeclass_axi4' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  000 -> ----1
  010 -> ---1-
  110 -> --1--
  001 -> -1---
  011 -> 1----
Recoding FSM `$fsm$\soc_inst.uart_user_ifc_uart_rXmitState$7789' from module `\mkeclass_axi4' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  000 -> -------1
  100 -> ------1-
  010 -> -----1--
  110 -> ----1---
  001 -> ---1----
  101 -> --1-----
  011 -> -1------
  111 -> 1-------

52.11.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

FSM `$fsm$\soc_inst.fabric_v_f_rd_mis_0.D_OUT$7618' from module `mkeclass_axi4':
-------------------------------------

  Information on FSM $fsm$\soc_inst.fabric_v_f_rd_mis_0.D_OUT$7618 (\soc_inst.fabric_v_f_rd_mis_0.D_OUT):

  Number of input signals:    3
  Number of output signals:   3
  Number of state bits:       3

  Input signals:
    0: \soc_inst.fabric_xactors_to_slaves_0_f_rd_addr.ENQ
    1: \soc_inst.WILL_FIRE_RL_fabric_rl_rd_xaction_master_to_slave
    2: \soc_inst.WILL_FIRE_RL_fabric_rl_rd_xaction_master_to_slave_6

  Output signals:
    0: $flatten\soc_inst.$eq$mkSoc.v:5932$1226_Y
    1: $flatten\soc_inst.$eq$mkSoc.v:5998$1268_Y
    2: $flatten\soc_inst.$eq$mkSoc.v:6064$1310_Y

  State encoding:
    0:      3'--1
    1:      3'-1-
    2:      3'1--

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 3'--0   ->     0 3'001
      1:     0 3'-11   ->     0 3'001
      2:     0 3'001   ->     1 3'001
      3:     0 3'1-1   ->     2 3'001
      4:     1 3'-11   ->     0 3'100
      5:     1 3'--0   ->     1 3'100
      6:     1 3'001   ->     1 3'100
      7:     1 3'1-1   ->     2 3'100
      8:     2 3'-11   ->     0 3'010
      9:     2 3'001   ->     1 3'010
     10:     2 3'--0   ->     2 3'010
     11:     2 3'1-1   ->     2 3'010

-------------------------------------

FSM `$fsm$\soc_inst.fabric_v_f_rd_mis_1.D_OUT$7623' from module `mkeclass_axi4':
-------------------------------------

  Information on FSM $fsm$\soc_inst.fabric_v_f_rd_mis_1.D_OUT$7623 (\soc_inst.fabric_v_f_rd_mis_1.D_OUT):

  Number of input signals:    3
  Number of output signals:   3
  Number of state bits:       3

  Input signals:
    0: \soc_inst.fabric_xactors_to_slaves_1_f_rd_addr.ENQ
    1: \soc_inst.WILL_FIRE_RL_fabric_rl_rd_xaction_master_to_slave_1
    2: \soc_inst.WILL_FIRE_RL_fabric_rl_rd_xaction_master_to_slave_7

  Output signals:
    0: $flatten\soc_inst.$eq$mkSoc.v:5943$1233_Y
    1: $flatten\soc_inst.$eq$mkSoc.v:6009$1275_Y
    2: $flatten\soc_inst.$eq$mkSoc.v:6075$1317_Y

  State encoding:
    0:      3'--1
    1:      3'-1-
    2:      3'1--

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 3'--0   ->     0 3'001
      1:     0 3'-11   ->     0 3'001
      2:     0 3'001   ->     1 3'001
      3:     0 3'1-1   ->     2 3'001
      4:     1 3'-11   ->     0 3'100
      5:     1 3'--0   ->     1 3'100
      6:     1 3'001   ->     1 3'100
      7:     1 3'1-1   ->     2 3'100
      8:     2 3'-11   ->     0 3'010
      9:     2 3'001   ->     1 3'010
     10:     2 3'--0   ->     2 3'010
     11:     2 3'1-1   ->     2 3'010

-------------------------------------

FSM `$fsm$\soc_inst.fabric_v_f_rd_mis_2.D_OUT$7628' from module `mkeclass_axi4':
-------------------------------------

  Information on FSM $fsm$\soc_inst.fabric_v_f_rd_mis_2.D_OUT$7628 (\soc_inst.fabric_v_f_rd_mis_2.D_OUT):

  Number of input signals:    3
  Number of output signals:   3
  Number of state bits:       3

  Input signals:
    0: \soc_inst.fabric_xactors_to_slaves_2_f_rd_addr.ENQ
    1: \soc_inst.WILL_FIRE_RL_fabric_rl_rd_xaction_master_to_slave_2
    2: \soc_inst.WILL_FIRE_RL_fabric_rl_rd_xaction_master_to_slave_8

  Output signals:
    0: $flatten\soc_inst.$eq$mkSoc.v:5954$1240_Y
    1: $flatten\soc_inst.$eq$mkSoc.v:6020$1282_Y
    2: $flatten\soc_inst.$eq$mkSoc.v:6086$1324_Y

  State encoding:
    0:      3'--1
    1:      3'-1-
    2:      3'1--

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 3'--0   ->     0 3'001
      1:     0 3'-11   ->     0 3'001
      2:     0 3'001   ->     1 3'001
      3:     0 3'1-1   ->     2 3'001
      4:     1 3'-11   ->     0 3'100
      5:     1 3'--0   ->     1 3'100
      6:     1 3'001   ->     1 3'100
      7:     1 3'1-1   ->     2 3'100
      8:     2 3'-11   ->     0 3'010
      9:     2 3'001   ->     1 3'010
     10:     2 3'--0   ->     2 3'010
     11:     2 3'1-1   ->     2 3'010

-------------------------------------

FSM `$fsm$\soc_inst.fabric_v_f_rd_mis_3.D_OUT$7633' from module `mkeclass_axi4':
-------------------------------------

  Information on FSM $fsm$\soc_inst.fabric_v_f_rd_mis_3.D_OUT$7633 (\soc_inst.fabric_v_f_rd_mis_3.D_OUT):

  Number of input signals:    3
  Number of output signals:   3
  Number of state bits:       3

  Input signals:
    0: \soc_inst.fabric_xactors_to_slaves_3_f_rd_addr.ENQ
    1: \soc_inst.WILL_FIRE_RL_fabric_rl_rd_xaction_master_to_slave_3
    2: \soc_inst.WILL_FIRE_RL_fabric_rl_rd_xaction_master_to_slave_9

  Output signals:
    0: $flatten\soc_inst.$eq$mkSoc.v:5965$1247_Y
    1: $flatten\soc_inst.$eq$mkSoc.v:6031$1289_Y
    2: $flatten\soc_inst.$eq$mkSoc.v:6097$1331_Y

  State encoding:
    0:      3'--1
    1:      3'-1-
    2:      3'1--

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 3'--0   ->     0 3'001
      1:     0 3'-11   ->     0 3'001
      2:     0 3'001   ->     1 3'001
      3:     0 3'1-1   ->     2 3'001
      4:     1 3'-11   ->     0 3'100
      5:     1 3'--0   ->     1 3'100
      6:     1 3'001   ->     1 3'100
      7:     1 3'1-1   ->     2 3'100
      8:     2 3'-11   ->     0 3'010
      9:     2 3'001   ->     1 3'010
     10:     2 3'--0   ->     2 3'010
     11:     2 3'1-1   ->     2 3'010

-------------------------------------

FSM `$fsm$\soc_inst.fabric_v_f_rd_mis_4.D_OUT$7638' from module `mkeclass_axi4':
-------------------------------------

  Information on FSM $fsm$\soc_inst.fabric_v_f_rd_mis_4.D_OUT$7638 (\soc_inst.fabric_v_f_rd_mis_4.D_OUT):

  Number of input signals:    3
  Number of output signals:   3
  Number of state bits:       3

  Input signals:
    0: \soc_inst.fabric_xactors_to_slaves_4_f_rd_addr.ENQ
    1: \soc_inst.WILL_FIRE_RL_fabric_rl_rd_xaction_master_to_slave_10
    2: \soc_inst.WILL_FIRE_RL_fabric_rl_rd_xaction_master_to_slave_4

  Output signals:
    0: $flatten\soc_inst.$eq$mkSoc.v:5976$1254_Y
    1: $flatten\soc_inst.$eq$mkSoc.v:6042$1296_Y
    2: $flatten\soc_inst.$eq$mkSoc.v:6108$1338_Y

  State encoding:
    0:      3'--1
    1:      3'-1-
    2:      3'1--

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 3'--0   ->     0 3'001
      1:     0 3'1-1   ->     0 3'001
      2:     0 3'001   ->     1 3'001
      3:     0 3'-11   ->     2 3'001
      4:     1 3'1-1   ->     0 3'100
      5:     1 3'--0   ->     1 3'100
      6:     1 3'001   ->     1 3'100
      7:     1 3'-11   ->     2 3'100
      8:     2 3'1-1   ->     0 3'010
      9:     2 3'001   ->     1 3'010
     10:     2 3'--0   ->     2 3'010
     11:     2 3'-11   ->     2 3'010

-------------------------------------

FSM `$fsm$\soc_inst.fabric_v_f_rd_mis_5.D_OUT$7643' from module `mkeclass_axi4':
-------------------------------------

  Information on FSM $fsm$\soc_inst.fabric_v_f_rd_mis_5.D_OUT$7643 (\soc_inst.fabric_v_f_rd_mis_5.D_OUT):

  Number of input signals:    3
  Number of output signals:   3
  Number of state bits:       3

  Input signals:
    0: \soc_inst.fabric_xactors_to_slaves_5_f_rd_addr.ENQ
    1: \soc_inst.WILL_FIRE_RL_fabric_rl_rd_xaction_master_to_slave_11
    2: \soc_inst.WILL_FIRE_RL_fabric_rl_rd_xaction_master_to_slave_5

  Output signals:
    0: $flatten\soc_inst.$eq$mkSoc.v:5987$1261_Y
    1: $flatten\soc_inst.$eq$mkSoc.v:6053$1303_Y
    2: $flatten\soc_inst.$eq$mkSoc.v:6119$1345_Y

  State encoding:
    0:      3'--1
    1:      3'-1-
    2:      3'1--

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 3'--0   ->     0 3'001
      1:     0 3'1-1   ->     0 3'001
      2:     0 3'001   ->     1 3'001
      3:     0 3'-11   ->     2 3'001
      4:     1 3'1-1   ->     0 3'100
      5:     1 3'--0   ->     1 3'100
      6:     1 3'001   ->     1 3'100
      7:     1 3'-11   ->     2 3'100
      8:     2 3'1-1   ->     0 3'010
      9:     2 3'001   ->     1 3'010
     10:     2 3'--0   ->     2 3'010
     11:     2 3'-11   ->     2 3'010

-------------------------------------

FSM `$fsm$\soc_inst.fabric_v_f_rd_sjs_0.D_OUT$7648' from module `mkeclass_axi4':
-------------------------------------

  Information on FSM $fsm$\soc_inst.fabric_v_f_rd_sjs_0.D_OUT$7648 (\soc_inst.fabric_v_f_rd_sjs_0.D_OUT):

  Number of input signals:    6
  Number of output signals:   6
  Number of state bits:       6

  Input signals:
    0: \soc_inst.fabric_v_f_rd_sjs_0.ENQ
    1: \soc_inst.WILL_FIRE_RL_fabric_rl_rd_xaction_master_to_slave
    2: \soc_inst.WILL_FIRE_RL_fabric_rl_rd_xaction_master_to_slave_1
    3: \soc_inst.WILL_FIRE_RL_fabric_rl_rd_xaction_master_to_slave_3
    4: \soc_inst.WILL_FIRE_RL_fabric_rl_rd_xaction_master_to_slave_4
    5: \soc_inst.WILL_FIRE_RL_fabric_rl_rd_xaction_master_to_slave_5

  Output signals:
    0: $flatten\soc_inst.$eq$mkSoc.v:5933$1228_Y
    1: $flatten\soc_inst.$eq$mkSoc.v:5944$1235_Y
    2: $flatten\soc_inst.$eq$mkSoc.v:5955$1242_Y
    3: $flatten\soc_inst.$eq$mkSoc.v:5966$1249_Y
    4: $flatten\soc_inst.$eq$mkSoc.v:5977$1256_Y
    5: $flatten\soc_inst.$eq$mkSoc.v:5988$1263_Y

  State encoding:
    0:   6'-----1
    1:   6'----1-
    2:   6'---1--
    3:   6'--1---
    4:   6'-1----
    5:   6'1-----

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 6'-----0   ->     0 6'000001
      1:     0 6'----11   ->     0 6'000001
      2:     0 6'-1---1   ->     1 6'000001
      3:     0 6'000001   ->     2 6'000001
      4:     0 6'---1-1   ->     3 6'000001
      5:     0 6'1----1   ->     4 6'000001
      6:     0 6'--1--1   ->     5 6'000001
      7:     1 6'----11   ->     0 6'010000
      8:     1 6'-----0   ->     1 6'010000
      9:     1 6'-1---1   ->     1 6'010000
     10:     1 6'000001   ->     2 6'010000
     11:     1 6'---1-1   ->     3 6'010000
     12:     1 6'1----1   ->     4 6'010000
     13:     1 6'--1--1   ->     5 6'010000
     14:     2 6'----11   ->     0 6'000100
     15:     2 6'-1---1   ->     1 6'000100
     16:     2 6'-----0   ->     2 6'000100
     17:     2 6'000001   ->     2 6'000100
     18:     2 6'---1-1   ->     3 6'000100
     19:     2 6'1----1   ->     4 6'000100
     20:     2 6'--1--1   ->     5 6'000100
     21:     3 6'----11   ->     0 6'000010
     22:     3 6'-1---1   ->     1 6'000010
     23:     3 6'000001   ->     2 6'000010
     24:     3 6'-----0   ->     3 6'000010
     25:     3 6'---1-1   ->     3 6'000010
     26:     3 6'1----1   ->     4 6'000010
     27:     3 6'--1--1   ->     5 6'000010
     28:     4 6'----11   ->     0 6'100000
     29:     4 6'-1---1   ->     1 6'100000
     30:     4 6'000001   ->     2 6'100000
     31:     4 6'---1-1   ->     3 6'100000
     32:     4 6'-----0   ->     4 6'100000
     33:     4 6'1----1   ->     4 6'100000
     34:     4 6'--1--1   ->     5 6'100000
     35:     5 6'----11   ->     0 6'001000
     36:     5 6'-1---1   ->     1 6'001000
     37:     5 6'000001   ->     2 6'001000
     38:     5 6'---1-1   ->     3 6'001000
     39:     5 6'1----1   ->     4 6'001000
     40:     5 6'-----0   ->     5 6'001000
     41:     5 6'--1--1   ->     5 6'001000

-------------------------------------

FSM `$fsm$\soc_inst.fabric_v_f_rd_sjs_1.D_OUT$7656' from module `mkeclass_axi4':
-------------------------------------

  Information on FSM $fsm$\soc_inst.fabric_v_f_rd_sjs_1.D_OUT$7656 (\soc_inst.fabric_v_f_rd_sjs_1.D_OUT):

  Number of input signals:    6
  Number of output signals:   6
  Number of state bits:       6

  Input signals:
    0: \soc_inst.fabric_v_f_rd_sjs_1.ENQ
    1: \soc_inst.WILL_FIRE_RL_fabric_rl_rd_xaction_master_to_slave_10
    2: \soc_inst.WILL_FIRE_RL_fabric_rl_rd_xaction_master_to_slave_11
    3: \soc_inst.WILL_FIRE_RL_fabric_rl_rd_xaction_master_to_slave_6
    4: \soc_inst.WILL_FIRE_RL_fabric_rl_rd_xaction_master_to_slave_7
    5: \soc_inst.WILL_FIRE_RL_fabric_rl_rd_xaction_master_to_slave_9

  Output signals:
    0: $flatten\soc_inst.$eq$mkSoc.v:5999$1270_Y
    1: $flatten\soc_inst.$eq$mkSoc.v:6010$1277_Y
    2: $flatten\soc_inst.$eq$mkSoc.v:6021$1284_Y
    3: $flatten\soc_inst.$eq$mkSoc.v:6032$1291_Y
    4: $flatten\soc_inst.$eq$mkSoc.v:6043$1298_Y
    5: $flatten\soc_inst.$eq$mkSoc.v:6054$1305_Y

  State encoding:
    0:   6'-----1
    1:   6'----1-
    2:   6'---1--
    3:   6'--1---
    4:   6'-1----
    5:   6'1-----

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 6'-----0   ->     0 6'000001
      1:     0 6'--1--1   ->     0 6'000001
      2:     0 6'----11   ->     1 6'000001
      3:     0 6'000001   ->     2 6'000001
      4:     0 6'-1---1   ->     3 6'000001
      5:     0 6'---1-1   ->     4 6'000001
      6:     0 6'1----1   ->     5 6'000001
      7:     1 6'--1--1   ->     0 6'010000
      8:     1 6'-----0   ->     1 6'010000
      9:     1 6'----11   ->     1 6'010000
     10:     1 6'000001   ->     2 6'010000
     11:     1 6'-1---1   ->     3 6'010000
     12:     1 6'---1-1   ->     4 6'010000
     13:     1 6'1----1   ->     5 6'010000
     14:     2 6'--1--1   ->     0 6'000100
     15:     2 6'----11   ->     1 6'000100
     16:     2 6'-----0   ->     2 6'000100
     17:     2 6'000001   ->     2 6'000100
     18:     2 6'-1---1   ->     3 6'000100
     19:     2 6'---1-1   ->     4 6'000100
     20:     2 6'1----1   ->     5 6'000100
     21:     3 6'--1--1   ->     0 6'000010
     22:     3 6'----11   ->     1 6'000010
     23:     3 6'000001   ->     2 6'000010
     24:     3 6'-----0   ->     3 6'000010
     25:     3 6'-1---1   ->     3 6'000010
     26:     3 6'---1-1   ->     4 6'000010
     27:     3 6'1----1   ->     5 6'000010
     28:     4 6'--1--1   ->     0 6'100000
     29:     4 6'----11   ->     1 6'100000
     30:     4 6'000001   ->     2 6'100000
     31:     4 6'-1---1   ->     3 6'100000
     32:     4 6'-----0   ->     4 6'100000
     33:     4 6'---1-1   ->     4 6'100000
     34:     4 6'1----1   ->     5 6'100000
     35:     5 6'--1--1   ->     0 6'001000
     36:     5 6'----11   ->     1 6'001000
     37:     5 6'000001   ->     2 6'001000
     38:     5 6'-1---1   ->     3 6'001000
     39:     5 6'---1-1   ->     4 6'001000
     40:     5 6'-----0   ->     5 6'001000
     41:     5 6'1----1   ->     5 6'001000

-------------------------------------

FSM `$fsm$\soc_inst.fabric_v_f_rd_sjs_2.D_OUT$7664' from module `mkeclass_axi4':
-------------------------------------

  Information on FSM $fsm$\soc_inst.fabric_v_f_rd_sjs_2.D_OUT$7664 (\soc_inst.fabric_v_f_rd_sjs_2.D_OUT):

  Number of input signals:    6
  Number of output signals:   6
  Number of state bits:       6

  Input signals:
    0: \soc_inst.fabric_v_f_rd_sjs_2.ENQ
    1: \soc_inst.WILL_FIRE_RL_fabric_rl_rd_xaction_master_to_slave_12
    2: \soc_inst.WILL_FIRE_RL_fabric_rl_rd_xaction_master_to_slave_13
    3: \soc_inst.WILL_FIRE_RL_fabric_rl_rd_xaction_master_to_slave_15
    4: \soc_inst.WILL_FIRE_RL_fabric_rl_rd_xaction_master_to_slave_16
    5: \soc_inst.WILL_FIRE_RL_fabric_rl_rd_xaction_master_to_slave_17

  Output signals:
    0: $flatten\soc_inst.$eq$mkSoc.v:6065$1312_Y
    1: $flatten\soc_inst.$eq$mkSoc.v:6076$1319_Y
    2: $flatten\soc_inst.$eq$mkSoc.v:6087$1326_Y
    3: $flatten\soc_inst.$eq$mkSoc.v:6098$1333_Y
    4: $flatten\soc_inst.$eq$mkSoc.v:6109$1340_Y
    5: $flatten\soc_inst.$eq$mkSoc.v:6120$1347_Y

  State encoding:
    0:   6'-----1
    1:   6'----1-
    2:   6'---1--
    3:   6'--1---
    4:   6'-1----
    5:   6'1-----

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 6'-----0   ->     0 6'000001
      1:     0 6'----11   ->     0 6'000001
      2:     0 6'-1---1   ->     1 6'000001
      3:     0 6'000001   ->     2 6'000001
      4:     0 6'---1-1   ->     3 6'000001
      5:     0 6'1----1   ->     4 6'000001
      6:     0 6'--1--1   ->     5 6'000001
      7:     1 6'----11   ->     0 6'010000
      8:     1 6'-----0   ->     1 6'010000
      9:     1 6'-1---1   ->     1 6'010000
     10:     1 6'000001   ->     2 6'010000
     11:     1 6'---1-1   ->     3 6'010000
     12:     1 6'1----1   ->     4 6'010000
     13:     1 6'--1--1   ->     5 6'010000
     14:     2 6'----11   ->     0 6'000100
     15:     2 6'-1---1   ->     1 6'000100
     16:     2 6'-----0   ->     2 6'000100
     17:     2 6'000001   ->     2 6'000100
     18:     2 6'---1-1   ->     3 6'000100
     19:     2 6'1----1   ->     4 6'000100
     20:     2 6'--1--1   ->     5 6'000100
     21:     3 6'----11   ->     0 6'000010
     22:     3 6'-1---1   ->     1 6'000010
     23:     3 6'000001   ->     2 6'000010
     24:     3 6'-----0   ->     3 6'000010
     25:     3 6'---1-1   ->     3 6'000010
     26:     3 6'1----1   ->     4 6'000010
     27:     3 6'--1--1   ->     5 6'000010
     28:     4 6'----11   ->     0 6'100000
     29:     4 6'-1---1   ->     1 6'100000
     30:     4 6'000001   ->     2 6'100000
     31:     4 6'---1-1   ->     3 6'100000
     32:     4 6'-----0   ->     4 6'100000
     33:     4 6'1----1   ->     4 6'100000
     34:     4 6'--1--1   ->     5 6'100000
     35:     5 6'----11   ->     0 6'001000
     36:     5 6'-1---1   ->     1 6'001000
     37:     5 6'000001   ->     2 6'001000
     38:     5 6'---1-1   ->     3 6'001000
     39:     5 6'1----1   ->     4 6'001000
     40:     5 6'-----0   ->     5 6'001000
     41:     5 6'--1--1   ->     5 6'001000

-------------------------------------

FSM `$fsm$\soc_inst.fabric_v_f_wr_mis_0.D_OUT$7672' from module `mkeclass_axi4':
-------------------------------------

  Information on FSM $fsm$\soc_inst.fabric_v_f_wr_mis_0.D_OUT$7672 (\soc_inst.fabric_v_f_wr_mis_0.D_OUT):

  Number of input signals:    3
  Number of output signals:   3
  Number of state bits:       3

  Input signals:
    0: \soc_inst.fabric_xactors_to_slaves_0_f_wr_addr.ENQ
    1: \soc_inst.WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave
    2: \soc_inst.WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave_6

  Output signals:
    0: $flatten\soc_inst.$eq$mkSoc.v:5734$1100_Y
    1: $flatten\soc_inst.$eq$mkSoc.v:5800$1142_Y
    2: $flatten\soc_inst.$eq$mkSoc.v:5866$1184_Y

  State encoding:
    0:      3'--1
    1:      3'-1-
    2:      3'1--

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 3'--0   ->     0 3'001
      1:     0 3'-11   ->     0 3'001
      2:     0 3'001   ->     1 3'001
      3:     0 3'1-1   ->     2 3'001
      4:     1 3'-11   ->     0 3'100
      5:     1 3'--0   ->     1 3'100
      6:     1 3'001   ->     1 3'100
      7:     1 3'1-1   ->     2 3'100
      8:     2 3'-11   ->     0 3'010
      9:     2 3'001   ->     1 3'010
     10:     2 3'--0   ->     2 3'010
     11:     2 3'1-1   ->     2 3'010

-------------------------------------

FSM `$fsm$\soc_inst.fabric_v_f_wr_mis_1.D_OUT$7677' from module `mkeclass_axi4':
-------------------------------------

  Information on FSM $fsm$\soc_inst.fabric_v_f_wr_mis_1.D_OUT$7677 (\soc_inst.fabric_v_f_wr_mis_1.D_OUT):

  Number of input signals:    3
  Number of output signals:   3
  Number of state bits:       3

  Input signals:
    0: \soc_inst.fabric_xactors_to_slaves_1_f_wr_addr.ENQ
    1: \soc_inst.WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave_1
    2: \soc_inst.WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave_7

  Output signals:
    0: $flatten\soc_inst.$eq$mkSoc.v:5745$1107_Y
    1: $flatten\soc_inst.$eq$mkSoc.v:5811$1149_Y
    2: $flatten\soc_inst.$eq$mkSoc.v:5877$1191_Y

  State encoding:
    0:      3'--1
    1:      3'-1-
    2:      3'1--

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 3'--0   ->     0 3'001
      1:     0 3'-11   ->     0 3'001
      2:     0 3'001   ->     1 3'001
      3:     0 3'1-1   ->     2 3'001
      4:     1 3'-11   ->     0 3'100
      5:     1 3'--0   ->     1 3'100
      6:     1 3'001   ->     1 3'100
      7:     1 3'1-1   ->     2 3'100
      8:     2 3'-11   ->     0 3'010
      9:     2 3'001   ->     1 3'010
     10:     2 3'--0   ->     2 3'010
     11:     2 3'1-1   ->     2 3'010

-------------------------------------

FSM `$fsm$\soc_inst.fabric_v_f_wr_mis_2.D_OUT$7682' from module `mkeclass_axi4':
-------------------------------------

  Information on FSM $fsm$\soc_inst.fabric_v_f_wr_mis_2.D_OUT$7682 (\soc_inst.fabric_v_f_wr_mis_2.D_OUT):

  Number of input signals:    3
  Number of output signals:   3
  Number of state bits:       3

  Input signals:
    0: \soc_inst.fabric_xactors_to_slaves_2_f_wr_addr.ENQ
    1: \soc_inst.WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave_2
    2: \soc_inst.WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave_8

  Output signals:
    0: $flatten\soc_inst.$eq$mkSoc.v:5756$1114_Y
    1: $flatten\soc_inst.$eq$mkSoc.v:5822$1156_Y
    2: $flatten\soc_inst.$eq$mkSoc.v:5888$1198_Y

  State encoding:
    0:      3'--1
    1:      3'-1-
    2:      3'1--

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 3'--0   ->     0 3'001
      1:     0 3'-11   ->     0 3'001
      2:     0 3'001   ->     1 3'001
      3:     0 3'1-1   ->     2 3'001
      4:     1 3'-11   ->     0 3'100
      5:     1 3'--0   ->     1 3'100
      6:     1 3'001   ->     1 3'100
      7:     1 3'1-1   ->     2 3'100
      8:     2 3'-11   ->     0 3'010
      9:     2 3'001   ->     1 3'010
     10:     2 3'--0   ->     2 3'010
     11:     2 3'1-1   ->     2 3'010

-------------------------------------

FSM `$fsm$\soc_inst.fabric_v_f_wr_mis_3.D_OUT$7687' from module `mkeclass_axi4':
-------------------------------------

  Information on FSM $fsm$\soc_inst.fabric_v_f_wr_mis_3.D_OUT$7687 (\soc_inst.fabric_v_f_wr_mis_3.D_OUT):

  Number of input signals:    3
  Number of output signals:   3
  Number of state bits:       3

  Input signals:
    0: \soc_inst.fabric_xactors_to_slaves_3_f_wr_addr.ENQ
    1: \soc_inst.WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave_3
    2: \soc_inst.WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave_9

  Output signals:
    0: $flatten\soc_inst.$eq$mkSoc.v:5767$1121_Y
    1: $flatten\soc_inst.$eq$mkSoc.v:5833$1163_Y
    2: $flatten\soc_inst.$eq$mkSoc.v:5899$1205_Y

  State encoding:
    0:      3'--1
    1:      3'-1-
    2:      3'1--

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 3'--0   ->     0 3'001
      1:     0 3'-11   ->     0 3'001
      2:     0 3'001   ->     1 3'001
      3:     0 3'1-1   ->     2 3'001
      4:     1 3'-11   ->     0 3'100
      5:     1 3'--0   ->     1 3'100
      6:     1 3'001   ->     1 3'100
      7:     1 3'1-1   ->     2 3'100
      8:     2 3'-11   ->     0 3'010
      9:     2 3'001   ->     1 3'010
     10:     2 3'--0   ->     2 3'010
     11:     2 3'1-1   ->     2 3'010

-------------------------------------

FSM `$fsm$\soc_inst.fabric_v_f_wr_mis_4.D_OUT$7692' from module `mkeclass_axi4':
-------------------------------------

  Information on FSM $fsm$\soc_inst.fabric_v_f_wr_mis_4.D_OUT$7692 (\soc_inst.fabric_v_f_wr_mis_4.D_OUT):

  Number of input signals:    3
  Number of output signals:   3
  Number of state bits:       3

  Input signals:
    0: \soc_inst.fabric_xactors_to_slaves_4_f_wr_addr.ENQ
    1: \soc_inst.WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave_10
    2: \soc_inst.WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave_4

  Output signals:
    0: $flatten\soc_inst.$eq$mkSoc.v:5778$1128_Y
    1: $flatten\soc_inst.$eq$mkSoc.v:5844$1170_Y
    2: $flatten\soc_inst.$eq$mkSoc.v:5910$1212_Y

  State encoding:
    0:      3'--1
    1:      3'-1-
    2:      3'1--

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 3'--0   ->     0 3'001
      1:     0 3'1-1   ->     0 3'001
      2:     0 3'001   ->     1 3'001
      3:     0 3'-11   ->     2 3'001
      4:     1 3'1-1   ->     0 3'100
      5:     1 3'--0   ->     1 3'100
      6:     1 3'001   ->     1 3'100
      7:     1 3'-11   ->     2 3'100
      8:     2 3'1-1   ->     0 3'010
      9:     2 3'001   ->     1 3'010
     10:     2 3'--0   ->     2 3'010
     11:     2 3'-11   ->     2 3'010

-------------------------------------

FSM `$fsm$\soc_inst.fabric_v_f_wr_mis_5.D_OUT$7697' from module `mkeclass_axi4':
-------------------------------------

  Information on FSM $fsm$\soc_inst.fabric_v_f_wr_mis_5.D_OUT$7697 (\soc_inst.fabric_v_f_wr_mis_5.D_OUT):

  Number of input signals:    3
  Number of output signals:   3
  Number of state bits:       3

  Input signals:
    0: \soc_inst.fabric_xactors_to_slaves_5_f_wr_addr.ENQ
    1: \soc_inst.WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave_11
    2: \soc_inst.WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave_5

  Output signals:
    0: $flatten\soc_inst.$eq$mkSoc.v:5789$1135_Y
    1: $flatten\soc_inst.$eq$mkSoc.v:5855$1177_Y
    2: $flatten\soc_inst.$eq$mkSoc.v:5921$1219_Y

  State encoding:
    0:      3'--1
    1:      3'-1-
    2:      3'1--

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 3'--0   ->     0 3'001
      1:     0 3'1-1   ->     0 3'001
      2:     0 3'001   ->     1 3'001
      3:     0 3'-11   ->     2 3'001
      4:     1 3'1-1   ->     0 3'100
      5:     1 3'--0   ->     1 3'100
      6:     1 3'001   ->     1 3'100
      7:     1 3'-11   ->     2 3'100
      8:     2 3'1-1   ->     0 3'010
      9:     2 3'001   ->     1 3'010
     10:     2 3'--0   ->     2 3'010
     11:     2 3'-11   ->     2 3'010

-------------------------------------

FSM `$fsm$\soc_inst.fabric_v_f_wr_sjs_0.D_OUT$7702' from module `mkeclass_axi4':
-------------------------------------

  Information on FSM $fsm$\soc_inst.fabric_v_f_wr_sjs_0.D_OUT$7702 (\soc_inst.fabric_v_f_wr_sjs_0.D_OUT):

  Number of input signals:    6
  Number of output signals:   6
  Number of state bits:       6

  Input signals:
    0: \soc_inst.fabric_v_f_wr_sjs_0.ENQ
    1: \soc_inst.WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave
    2: \soc_inst.WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave_1
    3: \soc_inst.WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave_3
    4: \soc_inst.WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave_4
    5: \soc_inst.WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave_5

  Output signals:
    0: $flatten\soc_inst.$eq$mkSoc.v:5735$1102_Y
    1: $flatten\soc_inst.$eq$mkSoc.v:5746$1109_Y
    2: $flatten\soc_inst.$eq$mkSoc.v:5757$1116_Y
    3: $flatten\soc_inst.$eq$mkSoc.v:5768$1123_Y
    4: $flatten\soc_inst.$eq$mkSoc.v:5779$1130_Y
    5: $flatten\soc_inst.$eq$mkSoc.v:5790$1137_Y

  State encoding:
    0:   6'-----1
    1:   6'----1-
    2:   6'---1--
    3:   6'--1---
    4:   6'-1----
    5:   6'1-----

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 6'-----0   ->     0 6'000001
      1:     0 6'----11   ->     0 6'000001
      2:     0 6'-1---1   ->     1 6'000001
      3:     0 6'000001   ->     2 6'000001
      4:     0 6'---1-1   ->     3 6'000001
      5:     0 6'1----1   ->     4 6'000001
      6:     0 6'--1--1   ->     5 6'000001
      7:     1 6'----11   ->     0 6'010000
      8:     1 6'-----0   ->     1 6'010000
      9:     1 6'-1---1   ->     1 6'010000
     10:     1 6'000001   ->     2 6'010000
     11:     1 6'---1-1   ->     3 6'010000
     12:     1 6'1----1   ->     4 6'010000
     13:     1 6'--1--1   ->     5 6'010000
     14:     2 6'----11   ->     0 6'000100
     15:     2 6'-1---1   ->     1 6'000100
     16:     2 6'-----0   ->     2 6'000100
     17:     2 6'000001   ->     2 6'000100
     18:     2 6'---1-1   ->     3 6'000100
     19:     2 6'1----1   ->     4 6'000100
     20:     2 6'--1--1   ->     5 6'000100
     21:     3 6'----11   ->     0 6'000010
     22:     3 6'-1---1   ->     1 6'000010
     23:     3 6'000001   ->     2 6'000010
     24:     3 6'-----0   ->     3 6'000010
     25:     3 6'---1-1   ->     3 6'000010
     26:     3 6'1----1   ->     4 6'000010
     27:     3 6'--1--1   ->     5 6'000010
     28:     4 6'----11   ->     0 6'100000
     29:     4 6'-1---1   ->     1 6'100000
     30:     4 6'000001   ->     2 6'100000
     31:     4 6'---1-1   ->     3 6'100000
     32:     4 6'-----0   ->     4 6'100000
     33:     4 6'1----1   ->     4 6'100000
     34:     4 6'--1--1   ->     5 6'100000
     35:     5 6'----11   ->     0 6'001000
     36:     5 6'-1---1   ->     1 6'001000
     37:     5 6'000001   ->     2 6'001000
     38:     5 6'---1-1   ->     3 6'001000
     39:     5 6'1----1   ->     4 6'001000
     40:     5 6'-----0   ->     5 6'001000
     41:     5 6'--1--1   ->     5 6'001000

-------------------------------------

FSM `$fsm$\soc_inst.fabric_v_f_wr_sjs_1.D_OUT$7710' from module `mkeclass_axi4':
-------------------------------------

  Information on FSM $fsm$\soc_inst.fabric_v_f_wr_sjs_1.D_OUT$7710 (\soc_inst.fabric_v_f_wr_sjs_1.D_OUT):

  Number of input signals:    6
  Number of output signals:   6
  Number of state bits:       6

  Input signals:
    0: \soc_inst.fabric_v_f_wr_sjs_1.ENQ
    1: \soc_inst.WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave_10
    2: \soc_inst.WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave_11
    3: \soc_inst.WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave_6
    4: \soc_inst.WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave_7
    5: \soc_inst.WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave_9

  Output signals:
    0: $flatten\soc_inst.$eq$mkSoc.v:5801$1144_Y
    1: $flatten\soc_inst.$eq$mkSoc.v:5812$1151_Y
    2: $flatten\soc_inst.$eq$mkSoc.v:5823$1158_Y
    3: $flatten\soc_inst.$eq$mkSoc.v:5834$1165_Y
    4: $flatten\soc_inst.$eq$mkSoc.v:5845$1172_Y
    5: $flatten\soc_inst.$eq$mkSoc.v:5856$1179_Y

  State encoding:
    0:   6'-----1
    1:   6'----1-
    2:   6'---1--
    3:   6'--1---
    4:   6'-1----
    5:   6'1-----

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 6'-----0   ->     0 6'000001
      1:     0 6'--1--1   ->     0 6'000001
      2:     0 6'----11   ->     1 6'000001
      3:     0 6'000001   ->     2 6'000001
      4:     0 6'-1---1   ->     3 6'000001
      5:     0 6'---1-1   ->     4 6'000001
      6:     0 6'1----1   ->     5 6'000001
      7:     1 6'--1--1   ->     0 6'010000
      8:     1 6'-----0   ->     1 6'010000
      9:     1 6'----11   ->     1 6'010000
     10:     1 6'000001   ->     2 6'010000
     11:     1 6'-1---1   ->     3 6'010000
     12:     1 6'---1-1   ->     4 6'010000
     13:     1 6'1----1   ->     5 6'010000
     14:     2 6'--1--1   ->     0 6'000100
     15:     2 6'----11   ->     1 6'000100
     16:     2 6'-----0   ->     2 6'000100
     17:     2 6'000001   ->     2 6'000100
     18:     2 6'-1---1   ->     3 6'000100
     19:     2 6'---1-1   ->     4 6'000100
     20:     2 6'1----1   ->     5 6'000100
     21:     3 6'--1--1   ->     0 6'000010
     22:     3 6'----11   ->     1 6'000010
     23:     3 6'000001   ->     2 6'000010
     24:     3 6'-----0   ->     3 6'000010
     25:     3 6'-1---1   ->     3 6'000010
     26:     3 6'---1-1   ->     4 6'000010
     27:     3 6'1----1   ->     5 6'000010
     28:     4 6'--1--1   ->     0 6'100000
     29:     4 6'----11   ->     1 6'100000
     30:     4 6'000001   ->     2 6'100000
     31:     4 6'-1---1   ->     3 6'100000
     32:     4 6'-----0   ->     4 6'100000
     33:     4 6'---1-1   ->     4 6'100000
     34:     4 6'1----1   ->     5 6'100000
     35:     5 6'--1--1   ->     0 6'001000
     36:     5 6'----11   ->     1 6'001000
     37:     5 6'000001   ->     2 6'001000
     38:     5 6'-1---1   ->     3 6'001000
     39:     5 6'---1-1   ->     4 6'001000
     40:     5 6'-----0   ->     5 6'001000
     41:     5 6'1----1   ->     5 6'001000

-------------------------------------

FSM `$fsm$\soc_inst.fabric_v_f_wr_sjs_2.D_OUT$7718' from module `mkeclass_axi4':
-------------------------------------

  Information on FSM $fsm$\soc_inst.fabric_v_f_wr_sjs_2.D_OUT$7718 (\soc_inst.fabric_v_f_wr_sjs_2.D_OUT):

  Number of input signals:    6
  Number of output signals:   6
  Number of state bits:       6

  Input signals:
    0: \soc_inst.fabric_v_f_wr_sjs_2.ENQ
    1: \soc_inst.WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave_12
    2: \soc_inst.WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave_13
    3: \soc_inst.WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave_15
    4: \soc_inst.WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave_16
    5: \soc_inst.WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave_17

  Output signals:
    0: $flatten\soc_inst.$eq$mkSoc.v:5867$1186_Y
    1: $flatten\soc_inst.$eq$mkSoc.v:5878$1193_Y
    2: $flatten\soc_inst.$eq$mkSoc.v:5889$1200_Y
    3: $flatten\soc_inst.$eq$mkSoc.v:5900$1207_Y
    4: $flatten\soc_inst.$eq$mkSoc.v:5911$1214_Y
    5: $flatten\soc_inst.$eq$mkSoc.v:5922$1221_Y

  State encoding:
    0:   6'-----1
    1:   6'----1-
    2:   6'---1--
    3:   6'--1---
    4:   6'-1----
    5:   6'1-----

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 6'-----0   ->     0 6'000001
      1:     0 6'----11   ->     0 6'000001
      2:     0 6'-1---1   ->     1 6'000001
      3:     0 6'000001   ->     2 6'000001
      4:     0 6'---1-1   ->     3 6'000001
      5:     0 6'1----1   ->     4 6'000001
      6:     0 6'--1--1   ->     5 6'000001
      7:     1 6'----11   ->     0 6'010000
      8:     1 6'-----0   ->     1 6'010000
      9:     1 6'-1---1   ->     1 6'010000
     10:     1 6'000001   ->     2 6'010000
     11:     1 6'---1-1   ->     3 6'010000
     12:     1 6'1----1   ->     4 6'010000
     13:     1 6'--1--1   ->     5 6'010000
     14:     2 6'----11   ->     0 6'000100
     15:     2 6'-1---1   ->     1 6'000100
     16:     2 6'-----0   ->     2 6'000100
     17:     2 6'000001   ->     2 6'000100
     18:     2 6'---1-1   ->     3 6'000100
     19:     2 6'1----1   ->     4 6'000100
     20:     2 6'--1--1   ->     5 6'000100
     21:     3 6'----11   ->     0 6'000010
     22:     3 6'-1---1   ->     1 6'000010
     23:     3 6'000001   ->     2 6'000010
     24:     3 6'-----0   ->     3 6'000010
     25:     3 6'---1-1   ->     3 6'000010
     26:     3 6'1----1   ->     4 6'000010
     27:     3 6'--1--1   ->     5 6'000010
     28:     4 6'----11   ->     0 6'100000
     29:     4 6'-1---1   ->     1 6'100000
     30:     4 6'000001   ->     2 6'100000
     31:     4 6'---1-1   ->     3 6'100000
     32:     4 6'-----0   ->     4 6'100000
     33:     4 6'1----1   ->     4 6'100000
     34:     4 6'--1--1   ->     5 6'100000
     35:     5 6'----11   ->     0 6'001000
     36:     5 6'-1---1   ->     1 6'001000
     37:     5 6'000001   ->     2 6'001000
     38:     5 6'---1-1   ->     3 6'001000
     39:     5 6'1----1   ->     4 6'001000
     40:     5 6'-----0   ->     5 6'001000
     41:     5 6'--1--1   ->     5 6'001000

-------------------------------------

FSM `$fsm$\soc_inst.fabric_v_f_wrd_mis_0.D_OUT$7726' from module `mkeclass_axi4':
-------------------------------------

  Information on FSM $fsm$\soc_inst.fabric_v_f_wrd_mis_0.D_OUT$7726 (\soc_inst.fabric_v_f_wrd_mis_0.D_OUT):

  Number of input signals:    3
  Number of output signals:   3
  Number of state bits:       3

  Input signals:
    0: \soc_inst.fabric_v_f_wrd_mis_0.ENQ
    1: \soc_inst.MUX_fabric_v_f_wrd_mis_0_enq_1__SEL_1
    2: \soc_inst.MUX_fabric_v_f_wrd_mis_0_enq_1__SEL_2

  Output signals:
    0: $flatten\soc_inst.$eq$mkSoc.v:5177$548_Y
    1: $flatten\soc_inst.$eq$mkSoc.v:5291$686_Y
    2: $flatten\soc_inst.$eq$mkSoc.v:5405$824_Y

  State encoding:
    0:      3'--1
    1:      3'-1-
    2:      3'1--

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 3'--0   ->     0 3'001
      1:     0 3'-11   ->     0 3'001
      2:     0 3'001   ->     1 3'001
      3:     0 3'1-1   ->     2 3'001
      4:     1 3'-11   ->     0 3'100
      5:     1 3'--0   ->     1 3'100
      6:     1 3'001   ->     1 3'100
      7:     1 3'1-1   ->     2 3'100
      8:     2 3'-11   ->     0 3'010
      9:     2 3'001   ->     1 3'010
     10:     2 3'--0   ->     2 3'010
     11:     2 3'1-1   ->     2 3'010

-------------------------------------

FSM `$fsm$\soc_inst.fabric_v_f_wrd_mis_1.D_OUT$7731' from module `mkeclass_axi4':
-------------------------------------

  Information on FSM $fsm$\soc_inst.fabric_v_f_wrd_mis_1.D_OUT$7731 (\soc_inst.fabric_v_f_wrd_mis_1.D_OUT):

  Number of input signals:    3
  Number of output signals:   3
  Number of state bits:       3

  Input signals:
    0: \soc_inst.fabric_v_f_wrd_mis_1.ENQ
    1: \soc_inst.MUX_fabric_v_f_wrd_mis_1_enq_1__SEL_1
    2: \soc_inst.MUX_fabric_v_f_wrd_mis_1_enq_1__SEL_2

  Output signals:
    0: $flatten\soc_inst.$eq$mkSoc.v:5196$571_Y
    1: $flatten\soc_inst.$eq$mkSoc.v:5310$709_Y
    2: $flatten\soc_inst.$eq$mkSoc.v:5424$847_Y

  State encoding:
    0:      3'--1
    1:      3'-1-
    2:      3'1--

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 3'--0   ->     0 3'001
      1:     0 3'-11   ->     0 3'001
      2:     0 3'001   ->     1 3'001
      3:     0 3'1-1   ->     2 3'001
      4:     1 3'-11   ->     0 3'100
      5:     1 3'--0   ->     1 3'100
      6:     1 3'001   ->     1 3'100
      7:     1 3'1-1   ->     2 3'100
      8:     2 3'-11   ->     0 3'010
      9:     2 3'001   ->     1 3'010
     10:     2 3'--0   ->     2 3'010
     11:     2 3'1-1   ->     2 3'010

-------------------------------------

FSM `$fsm$\soc_inst.fabric_v_f_wrd_mis_2.D_OUT$7736' from module `mkeclass_axi4':
-------------------------------------

  Information on FSM $fsm$\soc_inst.fabric_v_f_wrd_mis_2.D_OUT$7736 (\soc_inst.fabric_v_f_wrd_mis_2.D_OUT):

  Number of input signals:    3
  Number of output signals:   3
  Number of state bits:       3

  Input signals:
    0: \soc_inst.fabric_v_f_wrd_mis_2.ENQ
    1: \soc_inst.MUX_fabric_v_f_wrd_mis_2_enq_1__SEL_1
    2: \soc_inst.MUX_fabric_v_f_wrd_mis_2_enq_1__SEL_2

  Output signals:
    0: $flatten\soc_inst.$eq$mkSoc.v:5215$594_Y
    1: $flatten\soc_inst.$eq$mkSoc.v:5329$732_Y
    2: $flatten\soc_inst.$eq$mkSoc.v:5443$870_Y

  State encoding:
    0:      3'--1
    1:      3'-1-
    2:      3'1--

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 3'--0   ->     0 3'001
      1:     0 3'-11   ->     0 3'001
      2:     0 3'001   ->     1 3'001
      3:     0 3'1-1   ->     2 3'001
      4:     1 3'-11   ->     0 3'100
      5:     1 3'--0   ->     1 3'100
      6:     1 3'001   ->     1 3'100
      7:     1 3'1-1   ->     2 3'100
      8:     2 3'-11   ->     0 3'010
      9:     2 3'001   ->     1 3'010
     10:     2 3'--0   ->     2 3'010
     11:     2 3'1-1   ->     2 3'010

-------------------------------------

FSM `$fsm$\soc_inst.fabric_v_f_wrd_mis_3.D_OUT$7741' from module `mkeclass_axi4':
-------------------------------------

  Information on FSM $fsm$\soc_inst.fabric_v_f_wrd_mis_3.D_OUT$7741 (\soc_inst.fabric_v_f_wrd_mis_3.D_OUT):

  Number of input signals:    3
  Number of output signals:   3
  Number of state bits:       3

  Input signals:
    0: \soc_inst.fabric_v_f_wrd_mis_3.ENQ
    1: \soc_inst.MUX_fabric_v_f_wrd_mis_3_enq_1__SEL_1
    2: \soc_inst.MUX_fabric_v_f_wrd_mis_3_enq_1__SEL_2

  Output signals:
    0: $flatten\soc_inst.$eq$mkSoc.v:5234$617_Y
    1: $flatten\soc_inst.$eq$mkSoc.v:5348$755_Y
    2: $flatten\soc_inst.$eq$mkSoc.v:5462$893_Y

  State encoding:
    0:      3'--1
    1:      3'-1-
    2:      3'1--

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 3'--0   ->     0 3'001
      1:     0 3'-11   ->     0 3'001
      2:     0 3'001   ->     1 3'001
      3:     0 3'1-1   ->     2 3'001
      4:     1 3'-11   ->     0 3'100
      5:     1 3'--0   ->     1 3'100
      6:     1 3'001   ->     1 3'100
      7:     1 3'1-1   ->     2 3'100
      8:     2 3'-11   ->     0 3'010
      9:     2 3'001   ->     1 3'010
     10:     2 3'--0   ->     2 3'010
     11:     2 3'1-1   ->     2 3'010

-------------------------------------

FSM `$fsm$\soc_inst.fabric_v_f_wrd_mis_4.D_OUT$7746' from module `mkeclass_axi4':
-------------------------------------

  Information on FSM $fsm$\soc_inst.fabric_v_f_wrd_mis_4.D_OUT$7746 (\soc_inst.fabric_v_f_wrd_mis_4.D_OUT):

  Number of input signals:    3
  Number of output signals:   3
  Number of state bits:       3

  Input signals:
    0: \soc_inst.fabric_v_f_wrd_mis_4.ENQ
    1: \soc_inst.MUX_fabric_v_f_wrd_mis_4_enq_1__SEL_1
    2: \soc_inst.MUX_fabric_v_f_wrd_mis_4_enq_1__SEL_2

  Output signals:
    0: $flatten\soc_inst.$eq$mkSoc.v:5253$640_Y
    1: $flatten\soc_inst.$eq$mkSoc.v:5367$778_Y
    2: $flatten\soc_inst.$eq$mkSoc.v:5481$916_Y

  State encoding:
    0:      3'--1
    1:      3'-1-
    2:      3'1--

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 3'--0   ->     0 3'001
      1:     0 3'-11   ->     0 3'001
      2:     0 3'001   ->     1 3'001
      3:     0 3'1-1   ->     2 3'001
      4:     1 3'-11   ->     0 3'100
      5:     1 3'--0   ->     1 3'100
      6:     1 3'001   ->     1 3'100
      7:     1 3'1-1   ->     2 3'100
      8:     2 3'-11   ->     0 3'010
      9:     2 3'001   ->     1 3'010
     10:     2 3'--0   ->     2 3'010
     11:     2 3'1-1   ->     2 3'010

-------------------------------------

FSM `$fsm$\soc_inst.fabric_v_f_wrd_mis_5.D_OUT$7751' from module `mkeclass_axi4':
-------------------------------------

  Information on FSM $fsm$\soc_inst.fabric_v_f_wrd_mis_5.D_OUT$7751 (\soc_inst.fabric_v_f_wrd_mis_5.D_OUT):

  Number of input signals:    3
  Number of output signals:   3
  Number of state bits:       3

  Input signals:
    0: \soc_inst.fabric_v_f_wrd_mis_5.ENQ
    1: \soc_inst.MUX_fabric_v_f_wrd_mis_5_enq_1__SEL_1
    2: \soc_inst.MUX_fabric_v_f_wrd_mis_5_enq_1__SEL_2

  Output signals:
    0: $flatten\soc_inst.$eq$mkSoc.v:5272$663_Y
    1: $flatten\soc_inst.$eq$mkSoc.v:5386$801_Y
    2: $flatten\soc_inst.$eq$mkSoc.v:5500$939_Y

  State encoding:
    0:      3'--1
    1:      3'-1-
    2:      3'1--

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 3'--0   ->     0 3'001
      1:     0 3'-11   ->     0 3'001
      2:     0 3'001   ->     1 3'001
      3:     0 3'1-1   ->     2 3'001
      4:     1 3'-11   ->     0 3'100
      5:     1 3'--0   ->     1 3'100
      6:     1 3'001   ->     1 3'100
      7:     1 3'1-1   ->     2 3'100
      8:     2 3'-11   ->     0 3'010
      9:     2 3'001   ->     1 3'010
     10:     2 3'--0   ->     2 3'010
     11:     2 3'1-1   ->     2 3'010

-------------------------------------

FSM `$fsm$\soc_inst.fabric_v_f_wrd_sjs_0.D_OUT$7756' from module `mkeclass_axi4':
-------------------------------------

  Information on FSM $fsm$\soc_inst.fabric_v_f_wrd_sjs_0.D_OUT$7756 (\soc_inst.fabric_v_f_wrd_sjs_0.D_OUT):

  Number of input signals:    6
  Number of output signals:   6
  Number of state bits:       6

  Input signals:
    0: \soc_inst.fabric_v_f_wrd_sjs_0.ENQ
    1: \soc_inst.MUX_fabric_v_f_wrd_mis_0_enq_1__SEL_1
    2: \soc_inst.MUX_fabric_v_f_wrd_mis_1_enq_1__SEL_1
    3: \soc_inst.MUX_fabric_v_f_wrd_mis_3_enq_1__SEL_1
    4: \soc_inst.MUX_fabric_v_f_wrd_mis_4_enq_1__SEL_1
    5: \soc_inst.MUX_fabric_v_f_wrd_mis_5_enq_1__SEL_1

  Output signals:
    0: $flatten\soc_inst.$eq$mkSoc.v:5178$550_Y
    1: $flatten\soc_inst.$eq$mkSoc.v:5197$573_Y
    2: $flatten\soc_inst.$eq$mkSoc.v:5216$596_Y
    3: $flatten\soc_inst.$eq$mkSoc.v:5235$619_Y
    4: $flatten\soc_inst.$eq$mkSoc.v:5254$642_Y
    5: $flatten\soc_inst.$eq$mkSoc.v:5273$665_Y

  State encoding:
    0:   6'-----1
    1:   6'----1-
    2:   6'---1--
    3:   6'--1---
    4:   6'-1----
    5:   6'1-----

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 6'-----0   ->     0 6'000001
      1:     0 6'----11   ->     0 6'000001
      2:     0 6'-1---1   ->     1 6'000001
      3:     0 6'000001   ->     2 6'000001
      4:     0 6'---1-1   ->     3 6'000001
      5:     0 6'1----1   ->     4 6'000001
      6:     0 6'--1--1   ->     5 6'000001
      7:     1 6'----11   ->     0 6'010000
      8:     1 6'-----0   ->     1 6'010000
      9:     1 6'-1---1   ->     1 6'010000
     10:     1 6'000001   ->     2 6'010000
     11:     1 6'---1-1   ->     3 6'010000
     12:     1 6'1----1   ->     4 6'010000
     13:     1 6'--1--1   ->     5 6'010000
     14:     2 6'----11   ->     0 6'000100
     15:     2 6'-1---1   ->     1 6'000100
     16:     2 6'-----0   ->     2 6'000100
     17:     2 6'000001   ->     2 6'000100
     18:     2 6'---1-1   ->     3 6'000100
     19:     2 6'1----1   ->     4 6'000100
     20:     2 6'--1--1   ->     5 6'000100
     21:     3 6'----11   ->     0 6'000010
     22:     3 6'-1---1   ->     1 6'000010
     23:     3 6'000001   ->     2 6'000010
     24:     3 6'-----0   ->     3 6'000010
     25:     3 6'---1-1   ->     3 6'000010
     26:     3 6'1----1   ->     4 6'000010
     27:     3 6'--1--1   ->     5 6'000010
     28:     4 6'----11   ->     0 6'100000
     29:     4 6'-1---1   ->     1 6'100000
     30:     4 6'000001   ->     2 6'100000
     31:     4 6'---1-1   ->     3 6'100000
     32:     4 6'-----0   ->     4 6'100000
     33:     4 6'1----1   ->     4 6'100000
     34:     4 6'--1--1   ->     5 6'100000
     35:     5 6'----11   ->     0 6'001000
     36:     5 6'-1---1   ->     1 6'001000
     37:     5 6'000001   ->     2 6'001000
     38:     5 6'---1-1   ->     3 6'001000
     39:     5 6'1----1   ->     4 6'001000
     40:     5 6'-----0   ->     5 6'001000
     41:     5 6'--1--1   ->     5 6'001000

-------------------------------------

FSM `$fsm$\soc_inst.fabric_v_f_wrd_sjs_1.D_OUT$7764' from module `mkeclass_axi4':
-------------------------------------

  Information on FSM $fsm$\soc_inst.fabric_v_f_wrd_sjs_1.D_OUT$7764 (\soc_inst.fabric_v_f_wrd_sjs_1.D_OUT):

  Number of input signals:    6
  Number of output signals:   6
  Number of state bits:       6

  Input signals:
    0: \soc_inst.fabric_v_f_wrd_sjs_1.ENQ
    1: \soc_inst.MUX_fabric_v_f_wrd_mis_0_enq_1__SEL_2
    2: \soc_inst.MUX_fabric_v_f_wrd_mis_1_enq_1__SEL_2
    3: \soc_inst.MUX_fabric_v_f_wrd_mis_3_enq_1__SEL_2
    4: \soc_inst.MUX_fabric_v_f_wrd_mis_4_enq_1__SEL_2
    5: \soc_inst.MUX_fabric_v_f_wrd_mis_5_enq_1__SEL_2

  Output signals:
    0: $flatten\soc_inst.$eq$mkSoc.v:5292$688_Y
    1: $flatten\soc_inst.$eq$mkSoc.v:5311$711_Y
    2: $flatten\soc_inst.$eq$mkSoc.v:5330$734_Y
    3: $flatten\soc_inst.$eq$mkSoc.v:5349$757_Y
    4: $flatten\soc_inst.$eq$mkSoc.v:5368$780_Y
    5: $flatten\soc_inst.$eq$mkSoc.v:5387$803_Y

  State encoding:
    0:   6'-----1
    1:   6'----1-
    2:   6'---1--
    3:   6'--1---
    4:   6'-1----
    5:   6'1-----

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 6'-----0   ->     0 6'000001
      1:     0 6'----11   ->     0 6'000001
      2:     0 6'-1---1   ->     1 6'000001
      3:     0 6'000001   ->     2 6'000001
      4:     0 6'---1-1   ->     3 6'000001
      5:     0 6'1----1   ->     4 6'000001
      6:     0 6'--1--1   ->     5 6'000001
      7:     1 6'----11   ->     0 6'010000
      8:     1 6'-----0   ->     1 6'010000
      9:     1 6'-1---1   ->     1 6'010000
     10:     1 6'000001   ->     2 6'010000
     11:     1 6'---1-1   ->     3 6'010000
     12:     1 6'1----1   ->     4 6'010000
     13:     1 6'--1--1   ->     5 6'010000
     14:     2 6'----11   ->     0 6'000100
     15:     2 6'-1---1   ->     1 6'000100
     16:     2 6'-----0   ->     2 6'000100
     17:     2 6'000001   ->     2 6'000100
     18:     2 6'---1-1   ->     3 6'000100
     19:     2 6'1----1   ->     4 6'000100
     20:     2 6'--1--1   ->     5 6'000100
     21:     3 6'----11   ->     0 6'000010
     22:     3 6'-1---1   ->     1 6'000010
     23:     3 6'000001   ->     2 6'000010
     24:     3 6'-----0   ->     3 6'000010
     25:     3 6'---1-1   ->     3 6'000010
     26:     3 6'1----1   ->     4 6'000010
     27:     3 6'--1--1   ->     5 6'000010
     28:     4 6'----11   ->     0 6'100000
     29:     4 6'-1---1   ->     1 6'100000
     30:     4 6'000001   ->     2 6'100000
     31:     4 6'---1-1   ->     3 6'100000
     32:     4 6'-----0   ->     4 6'100000
     33:     4 6'1----1   ->     4 6'100000
     34:     4 6'--1--1   ->     5 6'100000
     35:     5 6'----11   ->     0 6'001000
     36:     5 6'-1---1   ->     1 6'001000
     37:     5 6'000001   ->     2 6'001000
     38:     5 6'---1-1   ->     3 6'001000
     39:     5 6'1----1   ->     4 6'001000
     40:     5 6'-----0   ->     5 6'001000
     41:     5 6'--1--1   ->     5 6'001000

-------------------------------------

FSM `$fsm$\soc_inst.fabric_v_f_wrd_sjs_2.D_OUT$7772' from module `mkeclass_axi4':
-------------------------------------

  Information on FSM $fsm$\soc_inst.fabric_v_f_wrd_sjs_2.D_OUT$7772 (\soc_inst.fabric_v_f_wrd_sjs_2.D_OUT):

  Number of input signals:    6
  Number of output signals:   6
  Number of state bits:       6

  Input signals:
    0: \soc_inst.fabric_v_f_wrd_sjs_2.ENQ
    1: \soc_inst.MUX_fabric_v_f_wrd_mis_0_enq_1__SEL_3
    2: \soc_inst.MUX_fabric_v_f_wrd_mis_1_enq_1__SEL_3
    3: \soc_inst.MUX_fabric_v_f_wrd_mis_3_enq_1__SEL_3
    4: \soc_inst.MUX_fabric_v_f_wrd_mis_4_enq_1__SEL_3
    5: \soc_inst.MUX_fabric_v_f_wrd_mis_5_enq_1__SEL_3

  Output signals:
    0: $flatten\soc_inst.$eq$mkSoc.v:5406$826_Y
    1: $flatten\soc_inst.$eq$mkSoc.v:5425$849_Y
    2: $flatten\soc_inst.$eq$mkSoc.v:5444$872_Y
    3: $flatten\soc_inst.$eq$mkSoc.v:5463$895_Y
    4: $flatten\soc_inst.$eq$mkSoc.v:5482$918_Y
    5: $flatten\soc_inst.$eq$mkSoc.v:5501$941_Y

  State encoding:
    0:   6'-----1
    1:   6'----1-
    2:   6'---1--
    3:   6'--1---
    4:   6'-1----
    5:   6'1-----

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 6'-----0   ->     0 6'000001
      1:     0 6'----11   ->     0 6'000001
      2:     0 6'-1---1   ->     1 6'000001
      3:     0 6'000001   ->     2 6'000001
      4:     0 6'---1-1   ->     3 6'000001
      5:     0 6'1----1   ->     4 6'000001
      6:     0 6'--1--1   ->     5 6'000001
      7:     1 6'----11   ->     0 6'010000
      8:     1 6'-----0   ->     1 6'010000
      9:     1 6'-1---1   ->     1 6'010000
     10:     1 6'000001   ->     2 6'010000
     11:     1 6'---1-1   ->     3 6'010000
     12:     1 6'1----1   ->     4 6'010000
     13:     1 6'--1--1   ->     5 6'010000
     14:     2 6'----11   ->     0 6'000100
     15:     2 6'-1---1   ->     1 6'000100
     16:     2 6'-----0   ->     2 6'000100
     17:     2 6'000001   ->     2 6'000100
     18:     2 6'---1-1   ->     3 6'000100
     19:     2 6'1----1   ->     4 6'000100
     20:     2 6'--1--1   ->     5 6'000100
     21:     3 6'----11   ->     0 6'000010
     22:     3 6'-1---1   ->     1 6'000010
     23:     3 6'000001   ->     2 6'000010
     24:     3 6'-----0   ->     3 6'000010
     25:     3 6'---1-1   ->     3 6'000010
     26:     3 6'1----1   ->     4 6'000010
     27:     3 6'--1--1   ->     5 6'000010
     28:     4 6'----11   ->     0 6'100000
     29:     4 6'-1---1   ->     1 6'100000
     30:     4 6'000001   ->     2 6'100000
     31:     4 6'---1-1   ->     3 6'100000
     32:     4 6'-----0   ->     4 6'100000
     33:     4 6'1----1   ->     4 6'100000
     34:     4 6'--1--1   ->     5 6'100000
     35:     5 6'----11   ->     0 6'001000
     36:     5 6'-1---1   ->     1 6'001000
     37:     5 6'000001   ->     2 6'001000
     38:     5 6'---1-1   ->     3 6'001000
     39:     5 6'1----1   ->     4 6'001000
     40:     5 6'-----0   ->     5 6'001000
     41:     5 6'--1--1   ->     5 6'001000

-------------------------------------

FSM `$fsm$\soc_inst.uart_user_ifc_uart_rRecvState$7780' from module `mkeclass_axi4':
-------------------------------------

  Information on FSM $fsm$\soc_inst.uart_user_ifc_uart_rRecvState$7780 (\soc_inst.uart_user_ifc_uart_rRecvState):

  Number of input signals:    9
  Number of output signals:   7
  Number of state bits:       5

  Input signals:
    0: $flatten\soc_inst.$procmux$6488_CTRL
    1: $flatten\soc_inst.$eq$mkSoc.v:6643$1556_Y
    2: \soc_inst.WILL_FIRE_RL_uart_user_ifc_uart_receive_find_center_of_bit_cell
    3: \soc_inst.WILL_FIRE_RL_uart_user_ifc_uart_receive_stop_first_bit
    4: \soc_inst.WILL_FIRE_RL_uart_user_ifc_uart_receive_stop_last_bit
    5: \soc_inst.WILL_FIRE_RL_uart_user_ifc_uart_receive_wait_bit_cell_time_for_sample
    6: \soc_inst.WILL_FIRE_RL_uart_user_ifc_uart_receive_wait_for_start_bit
    7: \soc_inst.uart_user_ifc_uart_rRecvData
    8: \soc_inst.uart_user_ifc_uart_rRecvState_EN

  Output signals:
    0: $flatten\soc_inst.$eq$mkSoc.v:6151$1354_Y
    1: $flatten\soc_inst.$eq$mkSoc.v:6158$1357_Y
    2: $flatten\soc_inst.$eq$mkSoc.v:6165$1360_Y
    3: $flatten\soc_inst.$eq$mkSoc.v:6179$1365_Y
    4: $flatten\soc_inst.$eq$mkSoc.v:6186$1368_Y
    5: $flatten\soc_inst.$eq$mkSoc.v:6197$1371_Y
    6: $flatten\soc_inst.$eq$mkSoc.v:6210$1374_Y

  State encoding:
    0:    5'----1  <RESET STATE>
    1:    5'---1-
    2:    5'--1--
    3:    5'-1---
    4:    5'1----

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 9'11----11-   ->     0 7'0000001
      1:     0 9'10---1---   ->     0 7'0000001
      2:     0 9'1---1----   ->     0 7'0000001
      3:     0 9'111------   ->     0 7'0000001
      4:     0 9'0--------   ->     0 7'0000001
      5:     0 9'10----11-   ->     1 7'0000001
      6:     0 9'1-00000--   ->     1 7'0000001
      7:     0 9'11---1---   ->     1 7'0000001
      8:     0 9'1--1----1   ->     2 7'0000001
      9:     0 9'1-----10-   ->     3 7'0000001
     10:     0 9'101------   ->     3 7'0000001
     11:     0 9'1--1----0   ->     4 7'0000001
     12:     1 9'11----11-   ->     0 7'0000100
     13:     1 9'10---1---   ->     0 7'0000100
     14:     1 9'1---1----   ->     0 7'0000100
     15:     1 9'111------   ->     0 7'0000100
     16:     1 9'10----11-   ->     1 7'0000100
     17:     1 9'1-00000--   ->     1 7'0000100
     18:     1 9'11---1---   ->     1 7'0000100
     19:     1 9'0--------   ->     1 7'0000100
     20:     1 9'1--1----1   ->     2 7'0000100
     21:     1 9'1-----10-   ->     3 7'0000100
     22:     1 9'101------   ->     3 7'0000100
     23:     1 9'1--1----0   ->     4 7'0000100
     24:     2 9'11----11-   ->     0 7'0100000
     25:     2 9'10---1---   ->     0 7'0100000
     26:     2 9'1---1----   ->     0 7'0100000
     27:     2 9'111------   ->     0 7'0100000
     28:     2 9'10----11-   ->     1 7'0100000
     29:     2 9'1-00000--   ->     1 7'0100000
     30:     2 9'11---1---   ->     1 7'0100000
     31:     2 9'1--1----1   ->     2 7'0100000
     32:     2 9'0--------   ->     2 7'0100000
     33:     2 9'1-----10-   ->     3 7'0100000
     34:     2 9'101------   ->     3 7'0100000
     35:     2 9'1--1----0   ->     4 7'0100000
     36:     3 9'11----11-   ->     0 7'0000010
     37:     3 9'10---1---   ->     0 7'0000010
     38:     3 9'1---1----   ->     0 7'0000010
     39:     3 9'111------   ->     0 7'0000010
     40:     3 9'10----11-   ->     1 7'0000010
     41:     3 9'1-00000--   ->     1 7'0000010
     42:     3 9'11---1---   ->     1 7'0000010
     43:     3 9'1--1----1   ->     2 7'0000010
     44:     3 9'1-----10-   ->     3 7'0000010
     45:     3 9'101------   ->     3 7'0000010
     46:     3 9'0--------   ->     3 7'0000010
     47:     3 9'1--1----0   ->     4 7'0000010
     48:     4 9'11----11-   ->     0 7'1000000
     49:     4 9'10---1---   ->     0 7'1000000
     50:     4 9'1---1----   ->     0 7'1000000
     51:     4 9'111------   ->     0 7'1000000
     52:     4 9'10----11-   ->     1 7'1000000
     53:     4 9'1-00000--   ->     1 7'1000000
     54:     4 9'11---1---   ->     1 7'1000000
     55:     4 9'1--1----1   ->     2 7'1000000
     56:     4 9'1-----10-   ->     3 7'1000000
     57:     4 9'101------   ->     3 7'1000000
     58:     4 9'1--1----0   ->     4 7'1000000
     59:     4 9'0--------   ->     4 7'1000000

-------------------------------------

FSM `$fsm$\soc_inst.uart_user_ifc_uart_rXmitState$7789' from module `mkeclass_axi4':
-------------------------------------

  Information on FSM $fsm$\soc_inst.uart_user_ifc_uart_rXmitState$7789 (\soc_inst.uart_user_ifc_uart_rXmitState):

  Number of input signals:   12
  Number of output signals:   8
  Number of state bits:       8

  Input signals:
    0: \soc_inst.uart_user_ifc_uart_fifoXmit.hasodata
    1: $flatten\soc_inst.$eq$mkSoc.v:6659$1562_Y
    2: $flatten\soc_inst.$eq$mkSoc.v:6662$1565_Y
    3: $flatten\soc_inst.$eq$mkSoc.v:6669$1572_Y
    4: \soc_inst.CAN_FIRE_RL_uart_user_ifc_uart_transmit_wait_for_start_command
    5: \soc_inst.WILL_FIRE_RL_uart_user_ifc_uart_transmit_send_parity_bit
    6: \soc_inst.WILL_FIRE_RL_uart_user_ifc_uart_transmit_send_start_bit
    7: \soc_inst.WILL_FIRE_RL_uart_user_ifc_uart_transmit_send_stop_bit
    8: \soc_inst.WILL_FIRE_RL_uart_user_ifc_uart_transmit_send_stop_bit1_5
    9: \soc_inst.WILL_FIRE_RL_uart_user_ifc_uart_transmit_send_stop_bit2
   10: \soc_inst.WILL_FIRE_RL_uart_user_ifc_uart_transmit_wait_1_bit_cell_time
   11: \soc_inst.uart_user_ifc_uart_rXmitState_EN

  Output signals:
    0: $flatten\soc_inst.$eq$mkSoc.v:10289$2768_Y
    1: $flatten\soc_inst.$eq$mkSoc.v:6240$1387_Y
    2: $flatten\soc_inst.$eq$mkSoc.v:6247$1390_Y
    3: $flatten\soc_inst.$eq$mkSoc.v:6258$1393_Y
    4: $flatten\soc_inst.$eq$mkSoc.v:6279$1399_Y
    5: $flatten\soc_inst.$eq$mkSoc.v:6286$1402_Y
    6: $flatten\soc_inst.$eq$mkSoc.v:6293$1405_Y
    7: $flatten\soc_inst.$eq$mkSoc.v:6300$1408_Y

  State encoding:
    0: 8'-------1  <RESET STATE>
    1: 8'------1-
    2: 8'-----1--
    3: 8'----1---
    4: 8'---1----
    5: 8'--1-----
    6: 8'-1------
    7: 8'1-------

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 12'1------1---0   ->     0 8'00000001
      1:     0 12'1---1-----1-   ->     0 8'00000001
      2:     0 12'1-1-------1-   ->     0 8'00000001
      3:     0 12'1--1----1---   ->     0 8'00000001
      4:     0 12'0-----------   ->     0 8'00000001
      5:     0 12'1---1-----0-   ->     1 8'00000001
      6:     0 12'11-------11-   ->     1 8'00000001
      7:     0 12'1-----1---1-   ->     1 8'00000001
      8:     0 12'11--------0-   ->     2 8'00000001
      9:     0 12'1----1----1-   ->     2 8'00000001
     10:     0 12'10000000----   ->     2 8'00000001
     11:     0 12'1-1-------0-   ->     3 8'00000001
     12:     0 12'1------1---1   ->     4 8'00000001
     13:     0 12'1----1----0-   ->     4 8'00000001
     14:     0 12'1--1----0---   ->     5 8'00000001
     15:     0 12'11-------01-   ->     6 8'00000001
     16:     0 12'1-----1---0-   ->     7 8'00000001
     17:     1 12'1------1---0   ->     0 8'00100000
     18:     1 12'1---1-----1-   ->     0 8'00100000
     19:     1 12'1-1-------1-   ->     0 8'00100000
     20:     1 12'1--1----1---   ->     0 8'00100000
     21:     1 12'1---1-----0-   ->     1 8'00100000
     22:     1 12'11-------11-   ->     1 8'00100000
     23:     1 12'1-----1---1-   ->     1 8'00100000
     24:     1 12'0-----------   ->     1 8'00100000
     25:     1 12'11--------0-   ->     2 8'00100000
     26:     1 12'1----1----1-   ->     2 8'00100000
     27:     1 12'10000000----   ->     2 8'00100000
     28:     1 12'1-1-------0-   ->     3 8'00100000
     29:     1 12'1------1---1   ->     4 8'00100000
     30:     1 12'1----1----0-   ->     4 8'00100000
     31:     1 12'1--1----0---   ->     5 8'00100000
     32:     1 12'11-------01-   ->     6 8'00100000
     33:     1 12'1-----1---0-   ->     7 8'00100000
     34:     2 12'1------1---0   ->     0 8'00000100
     35:     2 12'1---1-----1-   ->     0 8'00000100
     36:     2 12'1-1-------1-   ->     0 8'00000100
     37:     2 12'1--1----1---   ->     0 8'00000100
     38:     2 12'1---1-----0-   ->     1 8'00000100
     39:     2 12'11-------11-   ->     1 8'00000100
     40:     2 12'1-----1---1-   ->     1 8'00000100
     41:     2 12'11--------0-   ->     2 8'00000100
     42:     2 12'1----1----1-   ->     2 8'00000100
     43:     2 12'10000000----   ->     2 8'00000100
     44:     2 12'0-----------   ->     2 8'00000100
     45:     2 12'1-1-------0-   ->     3 8'00000100
     46:     2 12'1------1---1   ->     4 8'00000100
     47:     2 12'1----1----0-   ->     4 8'00000100
     48:     2 12'1--1----0---   ->     5 8'00000100
     49:     2 12'11-------01-   ->     6 8'00000100
     50:     2 12'1-----1---0-   ->     7 8'00000100
     51:     3 12'1------1---0   ->     0 8'10000000
     52:     3 12'1---1-----1-   ->     0 8'10000000
     53:     3 12'1-1-------1-   ->     0 8'10000000
     54:     3 12'1--1----1---   ->     0 8'10000000
     55:     3 12'1---1-----0-   ->     1 8'10000000
     56:     3 12'11-------11-   ->     1 8'10000000
     57:     3 12'1-----1---1-   ->     1 8'10000000
     58:     3 12'11--------0-   ->     2 8'10000000
     59:     3 12'1----1----1-   ->     2 8'10000000
     60:     3 12'10000000----   ->     2 8'10000000
     61:     3 12'1-1-------0-   ->     3 8'10000000
     62:     3 12'0-----------   ->     3 8'10000000
     63:     3 12'1------1---1   ->     4 8'10000000
     64:     3 12'1----1----0-   ->     4 8'10000000
     65:     3 12'1--1----0---   ->     5 8'10000000
     66:     3 12'11-------01-   ->     6 8'10000000
     67:     3 12'1-----1---0-   ->     7 8'10000000
     68:     4 12'1------1---0   ->     0 8'00000010
     69:     4 12'1---1-----1-   ->     0 8'00000010
     70:     4 12'1-1-------1-   ->     0 8'00000010
     71:     4 12'1--1----1---   ->     0 8'00000010
     72:     4 12'1---1-----0-   ->     1 8'00000010
     73:     4 12'11-------11-   ->     1 8'00000010
     74:     4 12'1-----1---1-   ->     1 8'00000010
     75:     4 12'11--------0-   ->     2 8'00000010
     76:     4 12'1----1----1-   ->     2 8'00000010
     77:     4 12'10000000----   ->     2 8'00000010
     78:     4 12'1-1-------0-   ->     3 8'00000010
     79:     4 12'1------1---1   ->     4 8'00000010
     80:     4 12'1----1----0-   ->     4 8'00000010
     81:     4 12'0-----------   ->     4 8'00000010
     82:     4 12'1--1----0---   ->     5 8'00000010
     83:     4 12'11-------01-   ->     6 8'00000010
     84:     4 12'1-----1---0-   ->     7 8'00000010
     85:     5 12'1------1---0   ->     0 8'01000000
     86:     5 12'1---1-----1-   ->     0 8'01000000
     87:     5 12'1-1-------1-   ->     0 8'01000000
     88:     5 12'1--1----1---   ->     0 8'01000000
     89:     5 12'1---1-----0-   ->     1 8'01000000
     90:     5 12'11-------11-   ->     1 8'01000000
     91:     5 12'1-----1---1-   ->     1 8'01000000
     92:     5 12'11--------0-   ->     2 8'01000000
     93:     5 12'1----1----1-   ->     2 8'01000000
     94:     5 12'10000000----   ->     2 8'01000000
     95:     5 12'1-1-------0-   ->     3 8'01000000
     96:     5 12'1------1---1   ->     4 8'01000000
     97:     5 12'1----1----0-   ->     4 8'01000000
     98:     5 12'1--1----0---   ->     5 8'01000000
     99:     5 12'0-----------   ->     5 8'01000000
    100:     5 12'11-------01-   ->     6 8'01000000
    101:     5 12'1-----1---0-   ->     7 8'01000000
    102:     6 12'1------1---0   ->     0 8'00001000
    103:     6 12'1---1-----1-   ->     0 8'00001000
    104:     6 12'1-1-------1-   ->     0 8'00001000
    105:     6 12'1--1----1---   ->     0 8'00001000
    106:     6 12'1---1-----0-   ->     1 8'00001000
    107:     6 12'11-------11-   ->     1 8'00001000
    108:     6 12'1-----1---1-   ->     1 8'00001000
    109:     6 12'11--------0-   ->     2 8'00001000
    110:     6 12'1----1----1-   ->     2 8'00001000
    111:     6 12'10000000----   ->     2 8'00001000
    112:     6 12'1-1-------0-   ->     3 8'00001000
    113:     6 12'1------1---1   ->     4 8'00001000
    114:     6 12'1----1----0-   ->     4 8'00001000
    115:     6 12'1--1----0---   ->     5 8'00001000
    116:     6 12'11-------01-   ->     6 8'00001000
    117:     6 12'0-----------   ->     6 8'00001000
    118:     6 12'1-----1---0-   ->     7 8'00001000
    119:     7 12'1------1---0   ->     0 8'00010000
    120:     7 12'1---1-----1-   ->     0 8'00010000
    121:     7 12'1-1-------1-   ->     0 8'00010000
    122:     7 12'1--1----1---   ->     0 8'00010000
    123:     7 12'1---1-----0-   ->     1 8'00010000
    124:     7 12'11-------11-   ->     1 8'00010000
    125:     7 12'1-----1---1-   ->     1 8'00010000
    126:     7 12'11--------0-   ->     2 8'00010000
    127:     7 12'1----1----1-   ->     2 8'00010000
    128:     7 12'10000000----   ->     2 8'00010000
    129:     7 12'1-1-------0-   ->     3 8'00010000
    130:     7 12'1------1---1   ->     4 8'00010000
    131:     7 12'1----1----0-   ->     4 8'00010000
    132:     7 12'1--1----0---   ->     5 8'00010000
    133:     7 12'11-------01-   ->     6 8'00010000
    134:     7 12'1-----1---0-   ->     7 8'00010000
    135:     7 12'0-----------   ->     7 8'00010000

-------------------------------------

52.11.8. Executing FSM_MAP pass (mapping FSMs to basic logic).
Mapping FSM `$fsm$\soc_inst.fabric_v_f_rd_mis_0.D_OUT$7618' from module `\mkeclass_axi4'.
Mapping FSM `$fsm$\soc_inst.fabric_v_f_rd_mis_1.D_OUT$7623' from module `\mkeclass_axi4'.
Mapping FSM `$fsm$\soc_inst.fabric_v_f_rd_mis_2.D_OUT$7628' from module `\mkeclass_axi4'.
Mapping FSM `$fsm$\soc_inst.fabric_v_f_rd_mis_3.D_OUT$7633' from module `\mkeclass_axi4'.
Mapping FSM `$fsm$\soc_inst.fabric_v_f_rd_mis_4.D_OUT$7638' from module `\mkeclass_axi4'.
Mapping FSM `$fsm$\soc_inst.fabric_v_f_rd_mis_5.D_OUT$7643' from module `\mkeclass_axi4'.
Mapping FSM `$fsm$\soc_inst.fabric_v_f_rd_sjs_0.D_OUT$7648' from module `\mkeclass_axi4'.
Mapping FSM `$fsm$\soc_inst.fabric_v_f_rd_sjs_1.D_OUT$7656' from module `\mkeclass_axi4'.
Mapping FSM `$fsm$\soc_inst.fabric_v_f_rd_sjs_2.D_OUT$7664' from module `\mkeclass_axi4'.
Mapping FSM `$fsm$\soc_inst.fabric_v_f_wr_mis_0.D_OUT$7672' from module `\mkeclass_axi4'.
Mapping FSM `$fsm$\soc_inst.fabric_v_f_wr_mis_1.D_OUT$7677' from module `\mkeclass_axi4'.
Mapping FSM `$fsm$\soc_inst.fabric_v_f_wr_mis_2.D_OUT$7682' from module `\mkeclass_axi4'.
Mapping FSM `$fsm$\soc_inst.fabric_v_f_wr_mis_3.D_OUT$7687' from module `\mkeclass_axi4'.
Mapping FSM `$fsm$\soc_inst.fabric_v_f_wr_mis_4.D_OUT$7692' from module `\mkeclass_axi4'.
Mapping FSM `$fsm$\soc_inst.fabric_v_f_wr_mis_5.D_OUT$7697' from module `\mkeclass_axi4'.
Mapping FSM `$fsm$\soc_inst.fabric_v_f_wr_sjs_0.D_OUT$7702' from module `\mkeclass_axi4'.
Mapping FSM `$fsm$\soc_inst.fabric_v_f_wr_sjs_1.D_OUT$7710' from module `\mkeclass_axi4'.
Mapping FSM `$fsm$\soc_inst.fabric_v_f_wr_sjs_2.D_OUT$7718' from module `\mkeclass_axi4'.
Mapping FSM `$fsm$\soc_inst.fabric_v_f_wrd_mis_0.D_OUT$7726' from module `\mkeclass_axi4'.
Mapping FSM `$fsm$\soc_inst.fabric_v_f_wrd_mis_1.D_OUT$7731' from module `\mkeclass_axi4'.
Mapping FSM `$fsm$\soc_inst.fabric_v_f_wrd_mis_2.D_OUT$7736' from module `\mkeclass_axi4'.
Mapping FSM `$fsm$\soc_inst.fabric_v_f_wrd_mis_3.D_OUT$7741' from module `\mkeclass_axi4'.
Mapping FSM `$fsm$\soc_inst.fabric_v_f_wrd_mis_4.D_OUT$7746' from module `\mkeclass_axi4'.
Mapping FSM `$fsm$\soc_inst.fabric_v_f_wrd_mis_5.D_OUT$7751' from module `\mkeclass_axi4'.
Mapping FSM `$fsm$\soc_inst.fabric_v_f_wrd_sjs_0.D_OUT$7756' from module `\mkeclass_axi4'.
Mapping FSM `$fsm$\soc_inst.fabric_v_f_wrd_sjs_1.D_OUT$7764' from module `\mkeclass_axi4'.
Mapping FSM `$fsm$\soc_inst.fabric_v_f_wrd_sjs_2.D_OUT$7772' from module `\mkeclass_axi4'.
Mapping FSM `$fsm$\soc_inst.uart_user_ifc_uart_rRecvState$7780' from module `\mkeclass_axi4'.
Mapping FSM `$fsm$\soc_inst.uart_user_ifc_uart_rXmitState$7789' from module `\mkeclass_axi4'.

52.12. Executing OPT pass (performing simple optimizations).

52.12.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module mkeclass_axi4.
<suppressed ~129 debug messages>

52.12.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mkeclass_axi4'.
<suppressed ~276 debug messages>
Removed a total of 92 cells.

52.12.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mkeclass_axi4..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~551 debug messages>

52.12.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mkeclass_axi4.
Performed a total of 0 changes.

52.12.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mkeclass_axi4'.
Removed a total of 0 cells.

52.12.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $flatten\soc_inst.\uart_user_ifc_uart_fifoXmit.$procdff$7391 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\uart_user_ifc_uart_fifoXmit.$0\D_OUT[7:0], Q = \soc_inst.uart_user_ifc_uart_fifoXmit.D_OUT).
Adding SRST signal on $flatten\soc_inst.\uart_user_ifc_uart_fifoXmit.$procdff$7390 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\uart_user_ifc_uart_fifoXmit.$procmux$5859_Y, Q = \soc_inst.uart_user_ifc_uart_fifoXmit.hasodata, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$8793 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\uart_user_ifc_uart_fifoXmit.$procmux$5859_Y, Q = \soc_inst.uart_user_ifc_uart_fifoXmit.hasodata).
Adding SRST signal on $flatten\soc_inst.\uart_user_ifc_uart_fifoXmit.$procdff$7389 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\uart_user_ifc_uart_fifoXmit.$procmux$5868_Y, Q = \soc_inst.uart_user_ifc_uart_fifoXmit.tail, rval = 4'0000).
Adding EN signal on $auto$ff.cc:266:slice$8797 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\uart_user_ifc_uart_fifoXmit.$procmux$5868_Y, Q = \soc_inst.uart_user_ifc_uart_fifoXmit.tail).
Adding SRST signal on $flatten\soc_inst.\uart_user_ifc_uart_fifoXmit.$procdff$7388 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\uart_user_ifc_uart_fifoXmit.$procmux$5877_Y, Q = \soc_inst.uart_user_ifc_uart_fifoXmit.head, rval = 4'0000).
Adding EN signal on $auto$ff.cc:266:slice$8805 ($sdff) from module mkeclass_axi4 (D = \soc_inst.uart_user_ifc_uart_fifoXmit.next_head, Q = \soc_inst.uart_user_ifc_uart_fifoXmit.head).
Adding SRST signal on $flatten\soc_inst.\uart_user_ifc_uart_fifoXmit.$procdff$7387 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\uart_user_ifc_uart_fifoXmit.$procmux$5886_Y, Q = \soc_inst.uart_user_ifc_uart_fifoXmit.ring_empty, rval = 1'1).
Adding EN signal on $auto$ff.cc:266:slice$8807 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\uart_user_ifc_uart_fifoXmit.$procmux$5886_Y, Q = \soc_inst.uart_user_ifc_uart_fifoXmit.ring_empty).
Adding SRST signal on $flatten\soc_inst.\uart_user_ifc_uart_fifoXmit.$procdff$7386 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\uart_user_ifc_uart_fifoXmit.$procmux$5895_Y, Q = \soc_inst.uart_user_ifc_uart_fifoXmit.not_ring_full, rval = 1'1).
Adding EN signal on $auto$ff.cc:266:slice$8815 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\uart_user_ifc_uart_fifoXmit.$procmux$5895_Y, Q = \soc_inst.uart_user_ifc_uart_fifoXmit.not_ring_full).
Adding EN signal on $flatten\soc_inst.\uart_user_ifc_uart_fifoRecv.$procdff$7391 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\uart_user_ifc_uart_fifoRecv.$0\D_OUT[7:0], Q = \soc_inst.uart_user_ifc_uart_fifoRecv.D_OUT).
Adding SRST signal on $flatten\soc_inst.\uart_user_ifc_uart_fifoRecv.$procdff$7390 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\uart_user_ifc_uart_fifoRecv.$procmux$5859_Y, Q = \soc_inst.uart_user_ifc_uart_fifoRecv.hasodata, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$8822 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\uart_user_ifc_uart_fifoRecv.$procmux$5859_Y, Q = \soc_inst.uart_user_ifc_uart_fifoRecv.hasodata).
Adding SRST signal on $flatten\soc_inst.\uart_user_ifc_uart_fifoRecv.$procdff$7389 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\uart_user_ifc_uart_fifoRecv.$procmux$5868_Y, Q = \soc_inst.uart_user_ifc_uart_fifoRecv.tail, rval = 4'0000).
Adding EN signal on $auto$ff.cc:266:slice$8826 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\uart_user_ifc_uart_fifoRecv.$procmux$5868_Y, Q = \soc_inst.uart_user_ifc_uart_fifoRecv.tail).
Adding SRST signal on $flatten\soc_inst.\uart_user_ifc_uart_fifoRecv.$procdff$7388 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\uart_user_ifc_uart_fifoRecv.$procmux$5877_Y, Q = \soc_inst.uart_user_ifc_uart_fifoRecv.head, rval = 4'0000).
Adding EN signal on $auto$ff.cc:266:slice$8834 ($sdff) from module mkeclass_axi4 (D = \soc_inst.uart_user_ifc_uart_fifoRecv.next_head, Q = \soc_inst.uart_user_ifc_uart_fifoRecv.head).
Adding SRST signal on $flatten\soc_inst.\uart_user_ifc_uart_fifoRecv.$procdff$7387 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\uart_user_ifc_uart_fifoRecv.$procmux$5886_Y, Q = \soc_inst.uart_user_ifc_uart_fifoRecv.ring_empty, rval = 1'1).
Adding EN signal on $auto$ff.cc:266:slice$8836 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\uart_user_ifc_uart_fifoRecv.$procmux$5886_Y, Q = \soc_inst.uart_user_ifc_uart_fifoRecv.ring_empty).
Adding SRST signal on $flatten\soc_inst.\uart_user_ifc_uart_fifoRecv.$procdff$7386 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\uart_user_ifc_uart_fifoRecv.$procmux$5895_Y, Q = \soc_inst.uart_user_ifc_uart_fifoRecv.not_ring_full, rval = 1'1).
Adding EN signal on $auto$ff.cc:266:slice$8844 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\uart_user_ifc_uart_fifoRecv.$procmux$5895_Y, Q = \soc_inst.uart_user_ifc_uart_fifoRecv.not_ring_full).
Adding SRST signal on $flatten\soc_inst.\uart_user_ifc_uart_baudGen_rBaudCounter.$procdff$7382 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\uart_user_ifc_uart_baudGen_rBaudCounter.$add$Counter.v:62$5066_Y, Q = \soc_inst.uart_user_ifc_uart_baudGen_rBaudCounter.q_state, rval = 16'0000000000000000).
Adding SRST signal on $flatten\soc_inst.\uart_s_xactor_f_wr_resp.$procdff$7417 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\uart_s_xactor_f_wr_resp.$procmux$6042_Y, Q = \soc_inst.uart_s_xactor_f_wr_resp.full_reg, rval = 1'1).
Adding EN signal on $auto$ff.cc:266:slice$8853 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\uart_s_xactor_f_wr_resp.$procmux$6042_Y, Q = \soc_inst.uart_s_xactor_f_wr_resp.full_reg).
Adding SRST signal on $flatten\soc_inst.\uart_s_xactor_f_wr_resp.$procdff$7416 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\uart_s_xactor_f_wr_resp.$procmux$6053_Y, Q = \soc_inst.uart_s_xactor_f_wr_resp.empty_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$8857 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\uart_s_xactor_f_wr_resp.$procmux$6053_Y, Q = \soc_inst.uart_s_xactor_f_wr_resp.empty_reg).
Adding EN signal on $flatten\soc_inst.\uart_s_xactor_f_wr_resp.$procdff$7415 ($dff) from module mkeclass_axi4 (D = \soc_inst.uart_s_xactor_f_wr_resp.D_IN, Q = \soc_inst.uart_s_xactor_f_wr_resp.data1_reg).
Adding SRST signal on $flatten\soc_inst.\uart_s_xactor_f_wr_data.$procdff$7433 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\uart_s_xactor_f_wr_data.$procmux$6130_Y, Q = \soc_inst.uart_s_xactor_f_wr_data.full_reg, rval = 1'1).
Adding EN signal on $auto$ff.cc:266:slice$8862 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\uart_s_xactor_f_wr_data.$procmux$6130_Y, Q = \soc_inst.uart_s_xactor_f_wr_data.full_reg).
Adding SRST signal on $flatten\soc_inst.\uart_s_xactor_f_wr_data.$procdff$7432 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\uart_s_xactor_f_wr_data.$procmux$6141_Y, Q = \soc_inst.uart_s_xactor_f_wr_data.empty_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$8866 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\uart_s_xactor_f_wr_data.$procmux$6141_Y, Q = \soc_inst.uart_s_xactor_f_wr_data.empty_reg).
Adding EN signal on $flatten\soc_inst.\uart_s_xactor_f_wr_data.$procdff$7431 ($dff) from module mkeclass_axi4 (D = \soc_inst.fabric_xactors_to_slaves_2_f_wr_data.data0_reg, Q = \soc_inst.uart_s_xactor_f_wr_data.data1_reg).
Adding SRST signal on $flatten\soc_inst.\uart_s_xactor_f_wr_addr.$procdff$7437 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\uart_s_xactor_f_wr_addr.$procmux$6152_Y, Q = \soc_inst.uart_s_xactor_f_wr_addr.full_reg, rval = 1'1).
Adding EN signal on $auto$ff.cc:266:slice$8871 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\uart_s_xactor_f_wr_addr.$procmux$6152_Y, Q = \soc_inst.uart_s_xactor_f_wr_addr.full_reg).
Adding SRST signal on $flatten\soc_inst.\uart_s_xactor_f_wr_addr.$procdff$7436 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\uart_s_xactor_f_wr_addr.$procmux$6163_Y, Q = \soc_inst.uart_s_xactor_f_wr_addr.empty_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$8875 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\uart_s_xactor_f_wr_addr.$procmux$6163_Y, Q = \soc_inst.uart_s_xactor_f_wr_addr.empty_reg).
Adding EN signal on $flatten\soc_inst.\uart_s_xactor_f_wr_addr.$procdff$7435 ($dff) from module mkeclass_axi4 (D = \soc_inst.fabric_xactors_to_slaves_2_f_wr_addr.data0_reg, Q = \soc_inst.uart_s_xactor_f_wr_addr.data1_reg).
Adding SRST signal on $flatten\soc_inst.\uart_s_xactor_f_rd_data.$procdff$7429 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\uart_s_xactor_f_rd_data.$procmux$6108_Y, Q = \soc_inst.uart_s_xactor_f_rd_data.full_reg, rval = 1'1).
Adding EN signal on $auto$ff.cc:266:slice$8880 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\uart_s_xactor_f_rd_data.$procmux$6108_Y, Q = \soc_inst.uart_s_xactor_f_rd_data.full_reg).
Adding SRST signal on $flatten\soc_inst.\uart_s_xactor_f_rd_data.$procdff$7428 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\uart_s_xactor_f_rd_data.$procmux$6119_Y, Q = \soc_inst.uart_s_xactor_f_rd_data.empty_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$8884 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\uart_s_xactor_f_rd_data.$procmux$6119_Y, Q = \soc_inst.uart_s_xactor_f_rd_data.empty_reg).
Adding EN signal on $flatten\soc_inst.\uart_s_xactor_f_rd_data.$procdff$7427 ($dff) from module mkeclass_axi4 (D = \soc_inst.uart_s_xactor_f_rd_data.D_IN, Q = \soc_inst.uart_s_xactor_f_rd_data.data1_reg).
Adding SRST signal on $flatten\soc_inst.\uart_s_xactor_f_rd_addr.$procdff$7437 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\uart_s_xactor_f_rd_addr.$procmux$6152_Y, Q = \soc_inst.uart_s_xactor_f_rd_addr.full_reg, rval = 1'1).
Adding EN signal on $auto$ff.cc:266:slice$8889 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\uart_s_xactor_f_rd_addr.$procmux$6152_Y, Q = \soc_inst.uart_s_xactor_f_rd_addr.full_reg).
Adding SRST signal on $flatten\soc_inst.\uart_s_xactor_f_rd_addr.$procdff$7436 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\uart_s_xactor_f_rd_addr.$procmux$6163_Y, Q = \soc_inst.uart_s_xactor_f_rd_addr.empty_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$8893 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\uart_s_xactor_f_rd_addr.$procmux$6163_Y, Q = \soc_inst.uart_s_xactor_f_rd_addr.empty_reg).
Adding EN signal on $flatten\soc_inst.\uart_s_xactor_f_rd_addr.$procdff$7435 ($dff) from module mkeclass_axi4 (D = \soc_inst.fabric_xactors_to_slaves_2_f_rd_addr.data0_reg, Q = \soc_inst.uart_s_xactor_f_rd_addr.data1_reg).
Adding SRST signal on $flatten\soc_inst.\signature.\s_xactor_f_wr_resp.$procdff$7417 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\signature.\s_xactor_f_wr_resp.$procmux$6042_Y, Q = \soc_inst.signature.s_xactor_f_wr_resp.full_reg, rval = 1'1).
Adding EN signal on $auto$ff.cc:266:slice$8898 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\signature.\s_xactor_f_wr_resp.$procmux$6042_Y, Q = \soc_inst.signature.s_xactor_f_wr_resp.full_reg).
Adding SRST signal on $flatten\soc_inst.\signature.\s_xactor_f_wr_resp.$procdff$7416 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\signature.\s_xactor_f_wr_resp.$procmux$6053_Y, Q = \soc_inst.signature.s_xactor_f_wr_resp.empty_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$8902 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\signature.\s_xactor_f_wr_resp.$procmux$6053_Y, Q = \soc_inst.signature.s_xactor_f_wr_resp.empty_reg).
Adding EN signal on $flatten\soc_inst.\signature.\s_xactor_f_wr_resp.$procdff$7415 ($dff) from module mkeclass_axi4 (D = { \soc_inst.signature.CASE_s_xactor_f_wr_addrD_OUT_BITS_23_TO_20_0x_ETC__q2 \soc_inst.signature.s_xactor_f_wr_addr.data0_reg [3:0] }, Q = \soc_inst.signature.s_xactor_f_wr_resp.data1_reg).
Adding SRST signal on $flatten\soc_inst.\signature.\s_xactor_f_wr_data.$procdff$7433 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\signature.\s_xactor_f_wr_data.$procmux$6130_Y, Q = \soc_inst.signature.s_xactor_f_wr_data.full_reg, rval = 1'1).
Adding EN signal on $auto$ff.cc:266:slice$8907 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\signature.\s_xactor_f_wr_data.$procmux$6130_Y, Q = \soc_inst.signature.s_xactor_f_wr_data.full_reg).
Adding SRST signal on $flatten\soc_inst.\signature.\s_xactor_f_wr_data.$procdff$7432 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\signature.\s_xactor_f_wr_data.$procmux$6141_Y, Q = \soc_inst.signature.s_xactor_f_wr_data.empty_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$8911 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\signature.\s_xactor_f_wr_data.$procmux$6141_Y, Q = \soc_inst.signature.s_xactor_f_wr_data.empty_reg).
Adding EN signal on $flatten\soc_inst.\signature.\s_xactor_f_wr_data.$procdff$7431 ($dff) from module mkeclass_axi4 (D = \soc_inst.fabric_xactors_to_slaves_4_f_wr_data.data0_reg, Q = \soc_inst.signature.s_xactor_f_wr_data.data1_reg).
Adding SRST signal on $flatten\soc_inst.\signature.\s_xactor_f_wr_addr.$procdff$7437 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\signature.\s_xactor_f_wr_addr.$procmux$6152_Y, Q = \soc_inst.signature.s_xactor_f_wr_addr.full_reg, rval = 1'1).
Adding EN signal on $auto$ff.cc:266:slice$8916 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\signature.\s_xactor_f_wr_addr.$procmux$6152_Y, Q = \soc_inst.signature.s_xactor_f_wr_addr.full_reg).
Adding SRST signal on $flatten\soc_inst.\signature.\s_xactor_f_wr_addr.$procdff$7436 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\signature.\s_xactor_f_wr_addr.$procmux$6163_Y, Q = \soc_inst.signature.s_xactor_f_wr_addr.empty_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$8920 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\signature.\s_xactor_f_wr_addr.$procmux$6163_Y, Q = \soc_inst.signature.s_xactor_f_wr_addr.empty_reg).
Adding EN signal on $flatten\soc_inst.\signature.\s_xactor_f_wr_addr.$procdff$7435 ($dff) from module mkeclass_axi4 (D = \soc_inst.fabric_xactors_to_slaves_4_f_wr_addr.data0_reg, Q = \soc_inst.signature.s_xactor_f_wr_addr.data1_reg).
Adding SRST signal on $flatten\soc_inst.\signature.\s_xactor_f_rd_data.$procdff$7429 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\signature.\s_xactor_f_rd_data.$procmux$6105_Y, Q = \soc_inst.signature.s_xactor_f_rd_data.full_reg, rval = 1'1).
Adding EN signal on $auto$ff.cc:266:slice$8925 ($sdff) from module mkeclass_axi4 (D = 1'1, Q = \soc_inst.signature.s_xactor_f_rd_data.full_reg).
Adding SRST signal on $flatten\soc_inst.\signature.\s_xactor_f_rd_data.$procdff$7428 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\signature.\s_xactor_f_rd_data.$procmux$6116_Y, Q = \soc_inst.signature.s_xactor_f_rd_data.empty_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$8927 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\signature.\s_xactor_f_rd_data.$logic_not$FIFO2.v:103$5189_Y, Q = \soc_inst.signature.s_xactor_f_rd_data.empty_reg).
Adding SRST signal on $flatten\soc_inst.\signature.\s_xactor_f_rd_addr.$procdff$7437 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\signature.\s_xactor_f_rd_addr.$procmux$6152_Y, Q = \soc_inst.signature.s_xactor_f_rd_addr.full_reg, rval = 1'1).
Adding EN signal on $auto$ff.cc:266:slice$8929 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\signature.\s_xactor_f_rd_addr.$logic_not$FIFO2.v:63$5133_Y, Q = \soc_inst.signature.s_xactor_f_rd_addr.full_reg).
Adding SRST signal on $flatten\soc_inst.\signature.\s_xactor_f_rd_addr.$procdff$7436 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\signature.\s_xactor_f_rd_addr.$procmux$6163_Y, Q = \soc_inst.signature.s_xactor_f_rd_addr.empty_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$8931 ($sdff) from module mkeclass_axi4 (D = 1'1, Q = \soc_inst.signature.s_xactor_f_rd_addr.empty_reg).
Adding SRST signal on $flatten\soc_inst.\signature.\m_xactor_f_wr_resp.$procdff$7417 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\signature.\m_xactor_f_wr_resp.$procmux$6042_Y, Q = \soc_inst.signature.m_xactor_f_wr_resp.full_reg, rval = 1'1).
Adding EN signal on $auto$ff.cc:266:slice$8933 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\signature.\m_xactor_f_wr_resp.$logic_not$FIFO2.v:63$5069_Y, Q = \soc_inst.signature.m_xactor_f_wr_resp.full_reg).
Adding SRST signal on $flatten\soc_inst.\signature.\m_xactor_f_wr_resp.$procdff$7416 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\signature.\m_xactor_f_wr_resp.$procmux$6053_Y, Q = \soc_inst.signature.m_xactor_f_wr_resp.empty_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$8935 ($sdff) from module mkeclass_axi4 (D = 1'1, Q = \soc_inst.signature.m_xactor_f_wr_resp.empty_reg).
Adding SRST signal on $flatten\soc_inst.\signature.\m_xactor_f_wr_data.$procdff$7433 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\signature.\m_xactor_f_wr_data.$procmux$6127_Y, Q = \soc_inst.signature.m_xactor_f_wr_data.full_reg, rval = 1'1).
Adding EN signal on $auto$ff.cc:266:slice$8937 ($sdff) from module mkeclass_axi4 (D = 1'1, Q = \soc_inst.signature.m_xactor_f_wr_data.full_reg).
Adding SRST signal on $flatten\soc_inst.\signature.\m_xactor_f_wr_data.$procdff$7432 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\signature.\m_xactor_f_wr_data.$procmux$6138_Y, Q = \soc_inst.signature.m_xactor_f_wr_data.empty_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$8939 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\signature.\m_xactor_f_wr_data.$logic_not$FIFO2.v:103$5125_Y, Q = \soc_inst.signature.m_xactor_f_wr_data.empty_reg).
Adding SRST signal on $flatten\soc_inst.\signature.\m_xactor_f_wr_addr.$procdff$7437 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\signature.\m_xactor_f_wr_addr.$procmux$6149_Y, Q = \soc_inst.signature.m_xactor_f_wr_addr.full_reg, rval = 1'1).
Adding EN signal on $auto$ff.cc:266:slice$8941 ($sdff) from module mkeclass_axi4 (D = 1'1, Q = \soc_inst.signature.m_xactor_f_wr_addr.full_reg).
Adding SRST signal on $flatten\soc_inst.\signature.\m_xactor_f_wr_addr.$procdff$7436 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\signature.\m_xactor_f_wr_addr.$procmux$6160_Y, Q = \soc_inst.signature.m_xactor_f_wr_addr.empty_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$8943 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\signature.\m_xactor_f_wr_addr.$logic_not$FIFO2.v:103$5157_Y, Q = \soc_inst.signature.m_xactor_f_wr_addr.empty_reg).
Adding SRST signal on $flatten\soc_inst.\signature.\m_xactor_f_rd_data.$procdff$7429 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\signature.\m_xactor_f_rd_data.$procmux$6108_Y, Q = \soc_inst.signature.m_xactor_f_rd_data.full_reg, rval = 1'1).
Adding EN signal on $auto$ff.cc:266:slice$8945 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\signature.\m_xactor_f_rd_data.$procmux$6108_Y, Q = \soc_inst.signature.m_xactor_f_rd_data.full_reg).
Adding SRST signal on $flatten\soc_inst.\signature.\m_xactor_f_rd_data.$procdff$7428 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\signature.\m_xactor_f_rd_data.$procmux$6119_Y, Q = \soc_inst.signature.m_xactor_f_rd_data.empty_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$8949 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\signature.\m_xactor_f_rd_data.$procmux$6119_Y, Q = \soc_inst.signature.m_xactor_f_rd_data.empty_reg).
Adding SRST signal on $flatten\soc_inst.\signature.\m_xactor_f_rd_addr.$procdff$7437 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\signature.\m_xactor_f_rd_addr.$procmux$6152_Y, Q = \soc_inst.signature.m_xactor_f_rd_addr.full_reg, rval = 1'1).
Adding EN signal on $auto$ff.cc:266:slice$8953 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\signature.\m_xactor_f_rd_addr.$procmux$6152_Y, Q = \soc_inst.signature.m_xactor_f_rd_addr.full_reg).
Adding SRST signal on $flatten\soc_inst.\signature.\m_xactor_f_rd_addr.$procdff$7436 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\signature.\m_xactor_f_rd_addr.$procmux$6163_Y, Q = \soc_inst.signature.m_xactor_f_rd_addr.empty_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$8957 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\signature.\m_xactor_f_rd_addr.$procmux$6163_Y, Q = \soc_inst.signature.m_xactor_f_rd_addr.empty_reg).
Adding EN signal on $flatten\soc_inst.\signature.\m_xactor_f_rd_addr.$procdff$7435 ($dff) from module mkeclass_axi4 (D = { \soc_inst.signature.rg_start_address 20'00101000000000010010 }, Q = \soc_inst.signature.m_xactor_f_rd_addr.data1_reg).
Adding SRST signal on $flatten\soc_inst.\signature.\ff_lower_order_bits.$procdff$7399 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\signature.\ff_lower_order_bits.$procmux$5917_Y, Q = \soc_inst.signature.ff_lower_order_bits.hasodata, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$8962 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\signature.\ff_lower_order_bits.$procmux$5917_Y, Q = \soc_inst.signature.ff_lower_order_bits.hasodata).
Adding SRST signal on $flatten\soc_inst.\signature.\ff_lower_order_bits.$procdff$7398 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\signature.\ff_lower_order_bits.$procmux$5926_Y, Q = \soc_inst.signature.ff_lower_order_bits.tail, rval = 3'000).
Adding EN signal on $auto$ff.cc:266:slice$8966 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\signature.\ff_lower_order_bits.$procmux$5926_Y, Q = \soc_inst.signature.ff_lower_order_bits.tail).
Adding SRST signal on $flatten\soc_inst.\signature.\ff_lower_order_bits.$procdff$7397 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\signature.\ff_lower_order_bits.$procmux$5935_Y, Q = \soc_inst.signature.ff_lower_order_bits.head, rval = 3'000).
Adding EN signal on $auto$ff.cc:266:slice$8974 ($sdff) from module mkeclass_axi4 (D = \soc_inst.signature.ff_lower_order_bits.next_head, Q = \soc_inst.signature.ff_lower_order_bits.head).
Adding SRST signal on $flatten\soc_inst.\signature.\ff_lower_order_bits.$procdff$7396 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\signature.\ff_lower_order_bits.$procmux$5944_Y, Q = \soc_inst.signature.ff_lower_order_bits.ring_empty, rval = 1'1).
Adding EN signal on $auto$ff.cc:266:slice$8976 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\signature.\ff_lower_order_bits.$procmux$5944_Y, Q = \soc_inst.signature.ff_lower_order_bits.ring_empty).
Adding SRST signal on $flatten\soc_inst.\signature.\ff_lower_order_bits.$procdff$7395 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\signature.\ff_lower_order_bits.$procmux$5953_Y, Q = \soc_inst.signature.ff_lower_order_bits.not_ring_full, rval = 1'1).
Adding EN signal on $auto$ff.cc:266:slice$8984 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\signature.\ff_lower_order_bits.$procmux$5953_Y, Q = \soc_inst.signature.ff_lower_order_bits.not_ring_full).
Adding EN signal on $flatten\soc_inst.\signature.$procdff$7584 ($adff) from module mkeclass_axi4 (D = \soc_inst.signature.rg_total_count_D_IN, Q = \soc_inst.signature.rg_total_count).
Adding EN signal on $flatten\soc_inst.\signature.$procdff$7583 ($adff) from module mkeclass_axi4 (D = \soc_inst.signature.rg_start_address_D_IN, Q = \soc_inst.signature.rg_start_address).
Adding EN signal on $flatten\soc_inst.\signature.$procdff$7582 ($adff) from module mkeclass_axi4 (D = \soc_inst.signature.MUX_rg_start_write_1__SEL_1, Q = \soc_inst.signature.rg_start).
Adding EN signal on $flatten\soc_inst.\signature.$procdff$7580 ($adff) from module mkeclass_axi4 (D = \soc_inst.signature.s_xactor_f_wr_data.data0_reg [40:9], Q = \soc_inst.signature.rg_end_address).
Adding EN signal on $flatten\soc_inst.\signature.$procdff$7575 ($adff) from module mkeclass_axi4 (D = \soc_inst.signature.rg_cnt_D_IN, Q = \soc_inst.signature.rg_cnt).
Adding SRST signal on $flatten\soc_inst.\fabric_xactors_to_slaves_5_f_wr_resp.$procdff$7417 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_to_slaves_5_f_wr_resp.$procmux$6042_Y, Q = \soc_inst.fabric_xactors_to_slaves_5_f_wr_resp.full_reg, rval = 1'1).
Adding EN signal on $auto$ff.cc:266:slice$8993 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_to_slaves_5_f_wr_resp.$procmux$6042_Y, Q = \soc_inst.fabric_xactors_to_slaves_5_f_wr_resp.full_reg).
Adding SRST signal on $flatten\soc_inst.\fabric_xactors_to_slaves_5_f_wr_resp.$procdff$7416 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_to_slaves_5_f_wr_resp.$procmux$6053_Y, Q = \soc_inst.fabric_xactors_to_slaves_5_f_wr_resp.empty_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$8997 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_to_slaves_5_f_wr_resp.$procmux$6053_Y, Q = \soc_inst.fabric_xactors_to_slaves_5_f_wr_resp.empty_reg).
Adding EN signal on $flatten\soc_inst.\fabric_xactors_to_slaves_5_f_wr_resp.$procdff$7415 ($dff) from module mkeclass_axi4 (D = \soc_inst.err_slave_s_xactor_f_wr_resp.data0_reg, Q = \soc_inst.fabric_xactors_to_slaves_5_f_wr_resp.data1_reg).
Adding SRST signal on $flatten\soc_inst.\fabric_xactors_to_slaves_5_f_wr_data.$procdff$7433 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_to_slaves_5_f_wr_data.$procmux$6130_Y, Q = \soc_inst.fabric_xactors_to_slaves_5_f_wr_data.full_reg, rval = 1'1).
Adding EN signal on $auto$ff.cc:266:slice$9002 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_to_slaves_5_f_wr_data.$procmux$6130_Y, Q = \soc_inst.fabric_xactors_to_slaves_5_f_wr_data.full_reg).
Adding SRST signal on $flatten\soc_inst.\fabric_xactors_to_slaves_5_f_wr_data.$procdff$7432 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_to_slaves_5_f_wr_data.$procmux$6141_Y, Q = \soc_inst.fabric_xactors_to_slaves_5_f_wr_data.empty_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$9006 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_to_slaves_5_f_wr_data.$procmux$6141_Y, Q = \soc_inst.fabric_xactors_to_slaves_5_f_wr_data.empty_reg).
Adding EN signal on $flatten\soc_inst.\fabric_xactors_to_slaves_5_f_wr_data.$procdff$7431 ($dff) from module mkeclass_axi4 (D = \soc_inst.fabric_xactors_to_slaves_5_f_wr_data.D_IN, Q = \soc_inst.fabric_xactors_to_slaves_5_f_wr_data.data1_reg).
Adding SRST signal on $flatten\soc_inst.\fabric_xactors_to_slaves_5_f_wr_addr.$procdff$7437 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_to_slaves_5_f_wr_addr.$procmux$6152_Y, Q = \soc_inst.fabric_xactors_to_slaves_5_f_wr_addr.full_reg, rval = 1'1).
Adding EN signal on $auto$ff.cc:266:slice$9011 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_to_slaves_5_f_wr_addr.$procmux$6152_Y, Q = \soc_inst.fabric_xactors_to_slaves_5_f_wr_addr.full_reg).
Adding SRST signal on $flatten\soc_inst.\fabric_xactors_to_slaves_5_f_wr_addr.$procdff$7436 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_to_slaves_5_f_wr_addr.$procmux$6163_Y, Q = \soc_inst.fabric_xactors_to_slaves_5_f_wr_addr.empty_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$9015 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_to_slaves_5_f_wr_addr.$procmux$6163_Y, Q = \soc_inst.fabric_xactors_to_slaves_5_f_wr_addr.empty_reg).
Adding SRST signal on $flatten\soc_inst.\fabric_xactors_to_slaves_5_f_rd_data.$procdff$7429 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_to_slaves_5_f_rd_data.$procmux$6108_Y, Q = \soc_inst.fabric_xactors_to_slaves_5_f_rd_data.full_reg, rval = 1'1).
Adding EN signal on $auto$ff.cc:266:slice$9019 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_to_slaves_5_f_rd_data.$procmux$6108_Y, Q = \soc_inst.fabric_xactors_to_slaves_5_f_rd_data.full_reg).
Adding SRST signal on $flatten\soc_inst.\fabric_xactors_to_slaves_5_f_rd_data.$procdff$7428 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_to_slaves_5_f_rd_data.$procmux$6119_Y, Q = \soc_inst.fabric_xactors_to_slaves_5_f_rd_data.empty_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$9023 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_to_slaves_5_f_rd_data.$procmux$6119_Y, Q = \soc_inst.fabric_xactors_to_slaves_5_f_rd_data.empty_reg).
Adding EN signal on $flatten\soc_inst.\fabric_xactors_to_slaves_5_f_rd_data.$procdff$7427 ($dff) from module mkeclass_axi4 (D = \soc_inst.err_slave_s_xactor_f_rd_data.data0_reg, Q = \soc_inst.fabric_xactors_to_slaves_5_f_rd_data.data1_reg).
Adding SRST signal on $flatten\soc_inst.\fabric_xactors_to_slaves_5_f_rd_addr.$procdff$7437 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_to_slaves_5_f_rd_addr.$procmux$6152_Y, Q = \soc_inst.fabric_xactors_to_slaves_5_f_rd_addr.full_reg, rval = 1'1).
Adding EN signal on $auto$ff.cc:266:slice$9028 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_to_slaves_5_f_rd_addr.$procmux$6152_Y, Q = \soc_inst.fabric_xactors_to_slaves_5_f_rd_addr.full_reg).
Adding SRST signal on $flatten\soc_inst.\fabric_xactors_to_slaves_5_f_rd_addr.$procdff$7436 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_to_slaves_5_f_rd_addr.$procmux$6163_Y, Q = \soc_inst.fabric_xactors_to_slaves_5_f_rd_addr.empty_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$9032 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_to_slaves_5_f_rd_addr.$procmux$6163_Y, Q = \soc_inst.fabric_xactors_to_slaves_5_f_rd_addr.empty_reg).
Adding EN signal on $flatten\soc_inst.\fabric_xactors_to_slaves_5_f_rd_addr.$procdff$7435 ($dff) from module mkeclass_axi4 (D = \soc_inst.fabric_xactors_to_slaves_5_f_rd_addr.D_IN, Q = \soc_inst.fabric_xactors_to_slaves_5_f_rd_addr.data1_reg).
Adding SRST signal on $flatten\soc_inst.\fabric_xactors_to_slaves_4_f_wr_resp.$procdff$7417 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_to_slaves_4_f_wr_resp.$procmux$6042_Y, Q = \soc_inst.fabric_xactors_to_slaves_4_f_wr_resp.full_reg, rval = 1'1).
Adding EN signal on $auto$ff.cc:266:slice$9037 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_to_slaves_4_f_wr_resp.$procmux$6042_Y, Q = \soc_inst.fabric_xactors_to_slaves_4_f_wr_resp.full_reg).
Adding SRST signal on $flatten\soc_inst.\fabric_xactors_to_slaves_4_f_wr_resp.$procdff$7416 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_to_slaves_4_f_wr_resp.$procmux$6053_Y, Q = \soc_inst.fabric_xactors_to_slaves_4_f_wr_resp.empty_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$9041 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_to_slaves_4_f_wr_resp.$procmux$6053_Y, Q = \soc_inst.fabric_xactors_to_slaves_4_f_wr_resp.empty_reg).
Adding EN signal on $flatten\soc_inst.\fabric_xactors_to_slaves_4_f_wr_resp.$procdff$7415 ($dff) from module mkeclass_axi4 (D = \soc_inst.signature.s_xactor_f_wr_resp.data0_reg, Q = \soc_inst.fabric_xactors_to_slaves_4_f_wr_resp.data1_reg).
Adding SRST signal on $flatten\soc_inst.\fabric_xactors_to_slaves_4_f_wr_data.$procdff$7433 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_to_slaves_4_f_wr_data.$procmux$6130_Y, Q = \soc_inst.fabric_xactors_to_slaves_4_f_wr_data.full_reg, rval = 1'1).
Adding EN signal on $auto$ff.cc:266:slice$9046 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_to_slaves_4_f_wr_data.$procmux$6130_Y, Q = \soc_inst.fabric_xactors_to_slaves_4_f_wr_data.full_reg).
Adding SRST signal on $flatten\soc_inst.\fabric_xactors_to_slaves_4_f_wr_data.$procdff$7432 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_to_slaves_4_f_wr_data.$procmux$6141_Y, Q = \soc_inst.fabric_xactors_to_slaves_4_f_wr_data.empty_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$9050 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_to_slaves_4_f_wr_data.$procmux$6141_Y, Q = \soc_inst.fabric_xactors_to_slaves_4_f_wr_data.empty_reg).
Adding EN signal on $flatten\soc_inst.\fabric_xactors_to_slaves_4_f_wr_data.$procdff$7431 ($dff) from module mkeclass_axi4 (D = \soc_inst.fabric_xactors_to_slaves_4_f_wr_data.D_IN, Q = \soc_inst.fabric_xactors_to_slaves_4_f_wr_data.data1_reg).
Adding SRST signal on $flatten\soc_inst.\fabric_xactors_to_slaves_4_f_wr_addr.$procdff$7437 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_to_slaves_4_f_wr_addr.$procmux$6152_Y, Q = \soc_inst.fabric_xactors_to_slaves_4_f_wr_addr.full_reg, rval = 1'1).
Adding EN signal on $auto$ff.cc:266:slice$9055 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_to_slaves_4_f_wr_addr.$procmux$6152_Y, Q = \soc_inst.fabric_xactors_to_slaves_4_f_wr_addr.full_reg).
Adding SRST signal on $flatten\soc_inst.\fabric_xactors_to_slaves_4_f_wr_addr.$procdff$7436 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_to_slaves_4_f_wr_addr.$procmux$6163_Y, Q = \soc_inst.fabric_xactors_to_slaves_4_f_wr_addr.empty_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$9059 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_to_slaves_4_f_wr_addr.$procmux$6163_Y, Q = \soc_inst.fabric_xactors_to_slaves_4_f_wr_addr.empty_reg).
Adding EN signal on $flatten\soc_inst.\fabric_xactors_to_slaves_4_f_wr_addr.$procdff$7435 ($dff) from module mkeclass_axi4 (D = \soc_inst.fabric_xactors_to_slaves_4_f_wr_addr.D_IN, Q = \soc_inst.fabric_xactors_to_slaves_4_f_wr_addr.data1_reg).
Adding SRST signal on $flatten\soc_inst.\fabric_xactors_to_slaves_4_f_rd_data.$procdff$7429 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_to_slaves_4_f_rd_data.$procmux$6108_Y, Q = \soc_inst.fabric_xactors_to_slaves_4_f_rd_data.full_reg, rval = 1'1).
Adding EN signal on $auto$ff.cc:266:slice$9064 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_to_slaves_4_f_rd_data.$procmux$6108_Y, Q = \soc_inst.fabric_xactors_to_slaves_4_f_rd_data.full_reg).
Adding SRST signal on $flatten\soc_inst.\fabric_xactors_to_slaves_4_f_rd_data.$procdff$7428 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_to_slaves_4_f_rd_data.$procmux$6119_Y, Q = \soc_inst.fabric_xactors_to_slaves_4_f_rd_data.empty_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$9068 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_to_slaves_4_f_rd_data.$procmux$6119_Y, Q = \soc_inst.fabric_xactors_to_slaves_4_f_rd_data.empty_reg).
Adding EN signal on $flatten\soc_inst.\fabric_xactors_to_slaves_4_f_rd_data.$procdff$7427 ($dff) from module mkeclass_axi4 (D = \soc_inst.signature.s_xactor_f_rd_data.data0_reg, Q = \soc_inst.fabric_xactors_to_slaves_4_f_rd_data.data1_reg).
Adding SRST signal on $flatten\soc_inst.\fabric_xactors_to_slaves_4_f_rd_addr.$procdff$7437 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_to_slaves_4_f_rd_addr.$procmux$6152_Y, Q = \soc_inst.fabric_xactors_to_slaves_4_f_rd_addr.full_reg, rval = 1'1).
Adding EN signal on $auto$ff.cc:266:slice$9073 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_to_slaves_4_f_rd_addr.$procmux$6152_Y, Q = \soc_inst.fabric_xactors_to_slaves_4_f_rd_addr.full_reg).
Adding SRST signal on $flatten\soc_inst.\fabric_xactors_to_slaves_4_f_rd_addr.$procdff$7436 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_to_slaves_4_f_rd_addr.$procmux$6163_Y, Q = \soc_inst.fabric_xactors_to_slaves_4_f_rd_addr.empty_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$9077 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_to_slaves_4_f_rd_addr.$procmux$6163_Y, Q = \soc_inst.fabric_xactors_to_slaves_4_f_rd_addr.empty_reg).
Adding SRST signal on $flatten\soc_inst.\fabric_xactors_to_slaves_3_f_wr_resp.$procdff$7417 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_to_slaves_3_f_wr_resp.$procmux$6042_Y, Q = \soc_inst.fabric_xactors_to_slaves_3_f_wr_resp.full_reg, rval = 1'1).
Adding EN signal on $auto$ff.cc:266:slice$9081 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_to_slaves_3_f_wr_resp.$procmux$6042_Y, Q = \soc_inst.fabric_xactors_to_slaves_3_f_wr_resp.full_reg).
Adding SRST signal on $flatten\soc_inst.\fabric_xactors_to_slaves_3_f_wr_resp.$procdff$7416 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_to_slaves_3_f_wr_resp.$procmux$6053_Y, Q = \soc_inst.fabric_xactors_to_slaves_3_f_wr_resp.empty_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$9085 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_to_slaves_3_f_wr_resp.$procmux$6053_Y, Q = \soc_inst.fabric_xactors_to_slaves_3_f_wr_resp.empty_reg).
Adding EN signal on $flatten\soc_inst.\fabric_xactors_to_slaves_3_f_wr_resp.$procdff$7415 ($dff) from module mkeclass_axi4 (D = \soc_inst.clint_s_xactor_f_wr_resp.data0_reg, Q = \soc_inst.fabric_xactors_to_slaves_3_f_wr_resp.data1_reg).
Adding SRST signal on $flatten\soc_inst.\fabric_xactors_to_slaves_3_f_wr_data.$procdff$7433 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_to_slaves_3_f_wr_data.$procmux$6130_Y, Q = \soc_inst.fabric_xactors_to_slaves_3_f_wr_data.full_reg, rval = 1'1).
Adding EN signal on $auto$ff.cc:266:slice$9090 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_to_slaves_3_f_wr_data.$procmux$6130_Y, Q = \soc_inst.fabric_xactors_to_slaves_3_f_wr_data.full_reg).
Adding SRST signal on $flatten\soc_inst.\fabric_xactors_to_slaves_3_f_wr_data.$procdff$7432 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_to_slaves_3_f_wr_data.$procmux$6141_Y, Q = \soc_inst.fabric_xactors_to_slaves_3_f_wr_data.empty_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$9094 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_to_slaves_3_f_wr_data.$procmux$6141_Y, Q = \soc_inst.fabric_xactors_to_slaves_3_f_wr_data.empty_reg).
Adding EN signal on $flatten\soc_inst.\fabric_xactors_to_slaves_3_f_wr_data.$procdff$7431 ($dff) from module mkeclass_axi4 (D = \soc_inst.fabric_xactors_to_slaves_3_f_wr_data.D_IN, Q = \soc_inst.fabric_xactors_to_slaves_3_f_wr_data.data1_reg).
Adding SRST signal on $flatten\soc_inst.\fabric_xactors_to_slaves_3_f_wr_addr.$procdff$7437 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_to_slaves_3_f_wr_addr.$procmux$6152_Y, Q = \soc_inst.fabric_xactors_to_slaves_3_f_wr_addr.full_reg, rval = 1'1).
Adding EN signal on $auto$ff.cc:266:slice$9099 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_to_slaves_3_f_wr_addr.$procmux$6152_Y, Q = \soc_inst.fabric_xactors_to_slaves_3_f_wr_addr.full_reg).
Adding SRST signal on $flatten\soc_inst.\fabric_xactors_to_slaves_3_f_wr_addr.$procdff$7436 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_to_slaves_3_f_wr_addr.$procmux$6163_Y, Q = \soc_inst.fabric_xactors_to_slaves_3_f_wr_addr.empty_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$9103 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_to_slaves_3_f_wr_addr.$procmux$6163_Y, Q = \soc_inst.fabric_xactors_to_slaves_3_f_wr_addr.empty_reg).
Adding EN signal on $flatten\soc_inst.\fabric_xactors_to_slaves_3_f_wr_addr.$procdff$7435 ($dff) from module mkeclass_axi4 (D = \soc_inst.fabric_xactors_to_slaves_3_f_wr_addr.D_IN, Q = \soc_inst.fabric_xactors_to_slaves_3_f_wr_addr.data1_reg).
Adding SRST signal on $flatten\soc_inst.\fabric_xactors_to_slaves_3_f_rd_data.$procdff$7429 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_to_slaves_3_f_rd_data.$procmux$6108_Y, Q = \soc_inst.fabric_xactors_to_slaves_3_f_rd_data.full_reg, rval = 1'1).
Adding EN signal on $auto$ff.cc:266:slice$9108 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_to_slaves_3_f_rd_data.$procmux$6108_Y, Q = \soc_inst.fabric_xactors_to_slaves_3_f_rd_data.full_reg).
Adding SRST signal on $flatten\soc_inst.\fabric_xactors_to_slaves_3_f_rd_data.$procdff$7428 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_to_slaves_3_f_rd_data.$procmux$6119_Y, Q = \soc_inst.fabric_xactors_to_slaves_3_f_rd_data.empty_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$9112 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_to_slaves_3_f_rd_data.$procmux$6119_Y, Q = \soc_inst.fabric_xactors_to_slaves_3_f_rd_data.empty_reg).
Adding EN signal on $flatten\soc_inst.\fabric_xactors_to_slaves_3_f_rd_data.$procdff$7427 ($dff) from module mkeclass_axi4 (D = \soc_inst.clint_s_xactor_f_rd_data.data0_reg, Q = \soc_inst.fabric_xactors_to_slaves_3_f_rd_data.data1_reg).
Adding SRST signal on $flatten\soc_inst.\fabric_xactors_to_slaves_3_f_rd_addr.$procdff$7437 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_to_slaves_3_f_rd_addr.$procmux$6152_Y, Q = \soc_inst.fabric_xactors_to_slaves_3_f_rd_addr.full_reg, rval = 1'1).
Adding EN signal on $auto$ff.cc:266:slice$9117 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_to_slaves_3_f_rd_addr.$procmux$6152_Y, Q = \soc_inst.fabric_xactors_to_slaves_3_f_rd_addr.full_reg).
Adding SRST signal on $flatten\soc_inst.\fabric_xactors_to_slaves_3_f_rd_addr.$procdff$7436 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_to_slaves_3_f_rd_addr.$procmux$6163_Y, Q = \soc_inst.fabric_xactors_to_slaves_3_f_rd_addr.empty_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$9121 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_to_slaves_3_f_rd_addr.$procmux$6163_Y, Q = \soc_inst.fabric_xactors_to_slaves_3_f_rd_addr.empty_reg).
Adding EN signal on $flatten\soc_inst.\fabric_xactors_to_slaves_3_f_rd_addr.$procdff$7435 ($dff) from module mkeclass_axi4 (D = \soc_inst.fabric_xactors_to_slaves_3_f_rd_addr.D_IN, Q = \soc_inst.fabric_xactors_to_slaves_3_f_rd_addr.data1_reg).
Adding SRST signal on $flatten\soc_inst.\fabric_xactors_to_slaves_2_f_wr_resp.$procdff$7417 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_to_slaves_2_f_wr_resp.$procmux$6042_Y, Q = \soc_inst.fabric_xactors_to_slaves_2_f_wr_resp.full_reg, rval = 1'1).
Adding EN signal on $auto$ff.cc:266:slice$9126 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_to_slaves_2_f_wr_resp.$procmux$6042_Y, Q = \soc_inst.fabric_xactors_to_slaves_2_f_wr_resp.full_reg).
Adding SRST signal on $flatten\soc_inst.\fabric_xactors_to_slaves_2_f_wr_resp.$procdff$7416 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_to_slaves_2_f_wr_resp.$procmux$6053_Y, Q = \soc_inst.fabric_xactors_to_slaves_2_f_wr_resp.empty_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$9130 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_to_slaves_2_f_wr_resp.$procmux$6053_Y, Q = \soc_inst.fabric_xactors_to_slaves_2_f_wr_resp.empty_reg).
Adding EN signal on $flatten\soc_inst.\fabric_xactors_to_slaves_2_f_wr_resp.$procdff$7415 ($dff) from module mkeclass_axi4 (D = \soc_inst.uart_s_xactor_f_wr_resp.data0_reg, Q = \soc_inst.fabric_xactors_to_slaves_2_f_wr_resp.data1_reg).
Adding SRST signal on $flatten\soc_inst.\fabric_xactors_to_slaves_2_f_wr_data.$procdff$7433 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_to_slaves_2_f_wr_data.$procmux$6130_Y, Q = \soc_inst.fabric_xactors_to_slaves_2_f_wr_data.full_reg, rval = 1'1).
Adding EN signal on $auto$ff.cc:266:slice$9135 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_to_slaves_2_f_wr_data.$procmux$6130_Y, Q = \soc_inst.fabric_xactors_to_slaves_2_f_wr_data.full_reg).
Adding SRST signal on $flatten\soc_inst.\fabric_xactors_to_slaves_2_f_wr_data.$procdff$7432 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_to_slaves_2_f_wr_data.$procmux$6141_Y, Q = \soc_inst.fabric_xactors_to_slaves_2_f_wr_data.empty_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$9139 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_to_slaves_2_f_wr_data.$procmux$6141_Y, Q = \soc_inst.fabric_xactors_to_slaves_2_f_wr_data.empty_reg).
Adding EN signal on $flatten\soc_inst.\fabric_xactors_to_slaves_2_f_wr_data.$procdff$7431 ($dff) from module mkeclass_axi4 (D = \soc_inst.fabric_xactors_to_slaves_2_f_wr_data.D_IN, Q = \soc_inst.fabric_xactors_to_slaves_2_f_wr_data.data1_reg).
Adding SRST signal on $flatten\soc_inst.\fabric_xactors_to_slaves_2_f_wr_addr.$procdff$7437 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_to_slaves_2_f_wr_addr.$procmux$6152_Y, Q = \soc_inst.fabric_xactors_to_slaves_2_f_wr_addr.full_reg, rval = 1'1).
Adding EN signal on $auto$ff.cc:266:slice$9144 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_to_slaves_2_f_wr_addr.$procmux$6152_Y, Q = \soc_inst.fabric_xactors_to_slaves_2_f_wr_addr.full_reg).
Adding SRST signal on $flatten\soc_inst.\fabric_xactors_to_slaves_2_f_wr_addr.$procdff$7436 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_to_slaves_2_f_wr_addr.$procmux$6163_Y, Q = \soc_inst.fabric_xactors_to_slaves_2_f_wr_addr.empty_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$9148 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_to_slaves_2_f_wr_addr.$procmux$6163_Y, Q = \soc_inst.fabric_xactors_to_slaves_2_f_wr_addr.empty_reg).
Adding EN signal on $flatten\soc_inst.\fabric_xactors_to_slaves_2_f_wr_addr.$procdff$7435 ($dff) from module mkeclass_axi4 (D = \soc_inst.fabric_xactors_to_slaves_2_f_wr_addr.D_IN, Q = \soc_inst.fabric_xactors_to_slaves_2_f_wr_addr.data1_reg).
Adding SRST signal on $flatten\soc_inst.\fabric_xactors_to_slaves_2_f_rd_data.$procdff$7429 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_to_slaves_2_f_rd_data.$procmux$6108_Y, Q = \soc_inst.fabric_xactors_to_slaves_2_f_rd_data.full_reg, rval = 1'1).
Adding EN signal on $auto$ff.cc:266:slice$9153 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_to_slaves_2_f_rd_data.$procmux$6108_Y, Q = \soc_inst.fabric_xactors_to_slaves_2_f_rd_data.full_reg).
Adding SRST signal on $flatten\soc_inst.\fabric_xactors_to_slaves_2_f_rd_data.$procdff$7428 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_to_slaves_2_f_rd_data.$procmux$6119_Y, Q = \soc_inst.fabric_xactors_to_slaves_2_f_rd_data.empty_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$9157 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_to_slaves_2_f_rd_data.$procmux$6119_Y, Q = \soc_inst.fabric_xactors_to_slaves_2_f_rd_data.empty_reg).
Adding EN signal on $flatten\soc_inst.\fabric_xactors_to_slaves_2_f_rd_data.$procdff$7427 ($dff) from module mkeclass_axi4 (D = \soc_inst.uart_s_xactor_f_rd_data.data0_reg, Q = \soc_inst.fabric_xactors_to_slaves_2_f_rd_data.data1_reg).
Adding SRST signal on $flatten\soc_inst.\fabric_xactors_to_slaves_2_f_rd_addr.$procdff$7437 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_to_slaves_2_f_rd_addr.$procmux$6152_Y, Q = \soc_inst.fabric_xactors_to_slaves_2_f_rd_addr.full_reg, rval = 1'1).
Adding EN signal on $auto$ff.cc:266:slice$9162 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_to_slaves_2_f_rd_addr.$procmux$6152_Y, Q = \soc_inst.fabric_xactors_to_slaves_2_f_rd_addr.full_reg).
Adding SRST signal on $flatten\soc_inst.\fabric_xactors_to_slaves_2_f_rd_addr.$procdff$7436 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_to_slaves_2_f_rd_addr.$procmux$6163_Y, Q = \soc_inst.fabric_xactors_to_slaves_2_f_rd_addr.empty_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$9166 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_to_slaves_2_f_rd_addr.$procmux$6163_Y, Q = \soc_inst.fabric_xactors_to_slaves_2_f_rd_addr.empty_reg).
Adding EN signal on $flatten\soc_inst.\fabric_xactors_to_slaves_2_f_rd_addr.$procdff$7435 ($dff) from module mkeclass_axi4 (D = \soc_inst.fabric_xactors_to_slaves_2_f_rd_addr.D_IN, Q = \soc_inst.fabric_xactors_to_slaves_2_f_rd_addr.data1_reg).
Adding SRST signal on $flatten\soc_inst.\fabric_xactors_to_slaves_1_f_wr_resp.$procdff$7417 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_to_slaves_1_f_wr_resp.$procmux$6042_Y, Q = \soc_inst.fabric_xactors_to_slaves_1_f_wr_resp.full_reg, rval = 1'1).
Adding EN signal on $auto$ff.cc:266:slice$9171 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_to_slaves_1_f_wr_resp.$procmux$6042_Y, Q = \soc_inst.fabric_xactors_to_slaves_1_f_wr_resp.full_reg).
Adding SRST signal on $flatten\soc_inst.\fabric_xactors_to_slaves_1_f_wr_resp.$procdff$7416 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_to_slaves_1_f_wr_resp.$procmux$6053_Y, Q = \soc_inst.fabric_xactors_to_slaves_1_f_wr_resp.empty_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$9175 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_to_slaves_1_f_wr_resp.$procmux$6053_Y, Q = \soc_inst.fabric_xactors_to_slaves_1_f_wr_resp.empty_reg).
Adding EN signal on $flatten\soc_inst.\fabric_xactors_to_slaves_1_f_wr_resp.$procdff$7415 ($dff) from module mkeclass_axi4 (D = \soc_inst.fabric_xactors_to_slaves_1_f_wr_resp.D_IN, Q = \soc_inst.fabric_xactors_to_slaves_1_f_wr_resp.data1_reg).
Adding SRST signal on $flatten\soc_inst.\fabric_xactors_to_slaves_1_f_wr_data.$procdff$7433 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_to_slaves_1_f_wr_data.$procmux$6130_Y, Q = \soc_inst.fabric_xactors_to_slaves_1_f_wr_data.full_reg, rval = 1'1).
Adding EN signal on $auto$ff.cc:266:slice$9180 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_to_slaves_1_f_wr_data.$procmux$6130_Y, Q = \soc_inst.fabric_xactors_to_slaves_1_f_wr_data.full_reg).
Adding SRST signal on $flatten\soc_inst.\fabric_xactors_to_slaves_1_f_wr_data.$procdff$7432 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_to_slaves_1_f_wr_data.$procmux$6141_Y, Q = \soc_inst.fabric_xactors_to_slaves_1_f_wr_data.empty_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$9184 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_to_slaves_1_f_wr_data.$procmux$6141_Y, Q = \soc_inst.fabric_xactors_to_slaves_1_f_wr_data.empty_reg).
Adding SRST signal on $flatten\soc_inst.\fabric_xactors_to_slaves_1_f_wr_addr.$procdff$7437 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_to_slaves_1_f_wr_addr.$procmux$6152_Y, Q = \soc_inst.fabric_xactors_to_slaves_1_f_wr_addr.full_reg, rval = 1'1).
Adding EN signal on $auto$ff.cc:266:slice$9188 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_to_slaves_1_f_wr_addr.$procmux$6152_Y, Q = \soc_inst.fabric_xactors_to_slaves_1_f_wr_addr.full_reg).
Adding SRST signal on $flatten\soc_inst.\fabric_xactors_to_slaves_1_f_wr_addr.$procdff$7436 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_to_slaves_1_f_wr_addr.$procmux$6163_Y, Q = \soc_inst.fabric_xactors_to_slaves_1_f_wr_addr.empty_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$9192 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_to_slaves_1_f_wr_addr.$procmux$6163_Y, Q = \soc_inst.fabric_xactors_to_slaves_1_f_wr_addr.empty_reg).
Adding SRST signal on $flatten\soc_inst.\fabric_xactors_to_slaves_1_f_rd_data.$procdff$7429 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_to_slaves_1_f_rd_data.$procmux$6108_Y, Q = \soc_inst.fabric_xactors_to_slaves_1_f_rd_data.full_reg, rval = 1'1).
Adding EN signal on $auto$ff.cc:266:slice$9196 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_to_slaves_1_f_rd_data.$procmux$6108_Y, Q = \soc_inst.fabric_xactors_to_slaves_1_f_rd_data.full_reg).
Adding SRST signal on $flatten\soc_inst.\fabric_xactors_to_slaves_1_f_rd_data.$procdff$7428 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_to_slaves_1_f_rd_data.$procmux$6119_Y, Q = \soc_inst.fabric_xactors_to_slaves_1_f_rd_data.empty_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$9200 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_to_slaves_1_f_rd_data.$procmux$6119_Y, Q = \soc_inst.fabric_xactors_to_slaves_1_f_rd_data.empty_reg).
Adding EN signal on $flatten\soc_inst.\fabric_xactors_to_slaves_1_f_rd_data.$procdff$7427 ($dff) from module mkeclass_axi4 (D = \soc_inst.fabric_xactors_to_slaves_1_f_rd_data.D_IN, Q = \soc_inst.fabric_xactors_to_slaves_1_f_rd_data.data1_reg).
Adding SRST signal on $flatten\soc_inst.\fabric_xactors_to_slaves_1_f_rd_addr.$procdff$7437 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_to_slaves_1_f_rd_addr.$procmux$6152_Y, Q = \soc_inst.fabric_xactors_to_slaves_1_f_rd_addr.full_reg, rval = 1'1).
Adding EN signal on $auto$ff.cc:266:slice$9205 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_to_slaves_1_f_rd_addr.$procmux$6152_Y, Q = \soc_inst.fabric_xactors_to_slaves_1_f_rd_addr.full_reg).
Adding SRST signal on $flatten\soc_inst.\fabric_xactors_to_slaves_1_f_rd_addr.$procdff$7436 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_to_slaves_1_f_rd_addr.$procmux$6163_Y, Q = \soc_inst.fabric_xactors_to_slaves_1_f_rd_addr.empty_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$9209 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_to_slaves_1_f_rd_addr.$procmux$6163_Y, Q = \soc_inst.fabric_xactors_to_slaves_1_f_rd_addr.empty_reg).
Adding SRST signal on $flatten\soc_inst.\fabric_xactors_to_slaves_0_f_wr_resp.$procdff$7417 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_to_slaves_0_f_wr_resp.$procmux$6042_Y, Q = \soc_inst.fabric_xactors_to_slaves_0_f_wr_resp.full_reg, rval = 1'1).
Adding EN signal on $auto$ff.cc:266:slice$9213 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_to_slaves_0_f_wr_resp.$procmux$6042_Y, Q = \soc_inst.fabric_xactors_to_slaves_0_f_wr_resp.full_reg).
Adding SRST signal on $flatten\soc_inst.\fabric_xactors_to_slaves_0_f_wr_resp.$procdff$7416 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_to_slaves_0_f_wr_resp.$procmux$6053_Y, Q = \soc_inst.fabric_xactors_to_slaves_0_f_wr_resp.empty_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$9217 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_to_slaves_0_f_wr_resp.$procmux$6053_Y, Q = \soc_inst.fabric_xactors_to_slaves_0_f_wr_resp.empty_reg).
Adding EN signal on $flatten\soc_inst.\fabric_xactors_to_slaves_0_f_wr_resp.$procdff$7415 ($dff) from module mkeclass_axi4 (D = \soc_inst.fabric_xactors_to_slaves_0_f_wr_resp.D_IN, Q = \soc_inst.fabric_xactors_to_slaves_0_f_wr_resp.data1_reg).
Adding SRST signal on $flatten\soc_inst.\fabric_xactors_to_slaves_0_f_wr_data.$procdff$7433 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_to_slaves_0_f_wr_data.$procmux$6130_Y, Q = \soc_inst.fabric_xactors_to_slaves_0_f_wr_data.full_reg, rval = 1'1).
Adding EN signal on $auto$ff.cc:266:slice$9222 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_to_slaves_0_f_wr_data.$procmux$6130_Y, Q = \soc_inst.fabric_xactors_to_slaves_0_f_wr_data.full_reg).
Adding SRST signal on $flatten\soc_inst.\fabric_xactors_to_slaves_0_f_wr_data.$procdff$7432 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_to_slaves_0_f_wr_data.$procmux$6141_Y, Q = \soc_inst.fabric_xactors_to_slaves_0_f_wr_data.empty_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$9226 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_to_slaves_0_f_wr_data.$procmux$6141_Y, Q = \soc_inst.fabric_xactors_to_slaves_0_f_wr_data.empty_reg).
Adding SRST signal on $flatten\soc_inst.\fabric_xactors_to_slaves_0_f_wr_addr.$procdff$7437 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_to_slaves_0_f_wr_addr.$procmux$6152_Y, Q = \soc_inst.fabric_xactors_to_slaves_0_f_wr_addr.full_reg, rval = 1'1).
Adding EN signal on $auto$ff.cc:266:slice$9230 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_to_slaves_0_f_wr_addr.$procmux$6152_Y, Q = \soc_inst.fabric_xactors_to_slaves_0_f_wr_addr.full_reg).
Adding SRST signal on $flatten\soc_inst.\fabric_xactors_to_slaves_0_f_wr_addr.$procdff$7436 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_to_slaves_0_f_wr_addr.$procmux$6163_Y, Q = \soc_inst.fabric_xactors_to_slaves_0_f_wr_addr.empty_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$9234 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_to_slaves_0_f_wr_addr.$procmux$6163_Y, Q = \soc_inst.fabric_xactors_to_slaves_0_f_wr_addr.empty_reg).
Adding SRST signal on $flatten\soc_inst.\fabric_xactors_to_slaves_0_f_rd_data.$procdff$7429 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_to_slaves_0_f_rd_data.$procmux$6108_Y, Q = \soc_inst.fabric_xactors_to_slaves_0_f_rd_data.full_reg, rval = 1'1).
Adding EN signal on $auto$ff.cc:266:slice$9238 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_to_slaves_0_f_rd_data.$procmux$6108_Y, Q = \soc_inst.fabric_xactors_to_slaves_0_f_rd_data.full_reg).
Adding SRST signal on $flatten\soc_inst.\fabric_xactors_to_slaves_0_f_rd_data.$procdff$7428 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_to_slaves_0_f_rd_data.$procmux$6119_Y, Q = \soc_inst.fabric_xactors_to_slaves_0_f_rd_data.empty_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$9242 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_to_slaves_0_f_rd_data.$procmux$6119_Y, Q = \soc_inst.fabric_xactors_to_slaves_0_f_rd_data.empty_reg).
Adding EN signal on $flatten\soc_inst.\fabric_xactors_to_slaves_0_f_rd_data.$procdff$7427 ($dff) from module mkeclass_axi4 (D = \soc_inst.fabric_xactors_to_slaves_0_f_rd_data.D_IN, Q = \soc_inst.fabric_xactors_to_slaves_0_f_rd_data.data1_reg).
Adding SRST signal on $flatten\soc_inst.\fabric_xactors_to_slaves_0_f_rd_addr.$procdff$7437 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_to_slaves_0_f_rd_addr.$procmux$6152_Y, Q = \soc_inst.fabric_xactors_to_slaves_0_f_rd_addr.full_reg, rval = 1'1).
Adding EN signal on $auto$ff.cc:266:slice$9247 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_to_slaves_0_f_rd_addr.$procmux$6152_Y, Q = \soc_inst.fabric_xactors_to_slaves_0_f_rd_addr.full_reg).
Adding SRST signal on $flatten\soc_inst.\fabric_xactors_to_slaves_0_f_rd_addr.$procdff$7436 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_to_slaves_0_f_rd_addr.$procmux$6163_Y, Q = \soc_inst.fabric_xactors_to_slaves_0_f_rd_addr.empty_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$9251 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_to_slaves_0_f_rd_addr.$procmux$6163_Y, Q = \soc_inst.fabric_xactors_to_slaves_0_f_rd_addr.empty_reg).
Adding SRST signal on $flatten\soc_inst.\fabric_xactors_from_masters_2_f_wr_resp.$procdff$7417 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_from_masters_2_f_wr_resp.$procmux$6042_Y, Q = \soc_inst.fabric_xactors_from_masters_2_f_wr_resp.full_reg, rval = 1'1).
Adding EN signal on $auto$ff.cc:266:slice$9255 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_from_masters_2_f_wr_resp.$procmux$6042_Y, Q = \soc_inst.fabric_xactors_from_masters_2_f_wr_resp.full_reg).
Adding SRST signal on $flatten\soc_inst.\fabric_xactors_from_masters_2_f_wr_resp.$procdff$7416 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_from_masters_2_f_wr_resp.$procmux$6053_Y, Q = \soc_inst.fabric_xactors_from_masters_2_f_wr_resp.empty_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$9259 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_from_masters_2_f_wr_resp.$procmux$6053_Y, Q = \soc_inst.fabric_xactors_from_masters_2_f_wr_resp.empty_reg).
Adding SRST signal on $flatten\soc_inst.\fabric_xactors_from_masters_2_f_wr_data.$procdff$7433 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_from_masters_2_f_wr_data.$procmux$6130_Y, Q = \soc_inst.fabric_xactors_from_masters_2_f_wr_data.full_reg, rval = 1'1).
Adding EN signal on $auto$ff.cc:266:slice$9263 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_from_masters_2_f_wr_data.$procmux$6130_Y, Q = \soc_inst.fabric_xactors_from_masters_2_f_wr_data.full_reg).
Adding SRST signal on $flatten\soc_inst.\fabric_xactors_from_masters_2_f_wr_data.$procdff$7432 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_from_masters_2_f_wr_data.$procmux$6141_Y, Q = \soc_inst.fabric_xactors_from_masters_2_f_wr_data.empty_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$9267 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_from_masters_2_f_wr_data.$procmux$6141_Y, Q = \soc_inst.fabric_xactors_from_masters_2_f_wr_data.empty_reg).
Adding EN signal on $flatten\soc_inst.\fabric_xactors_from_masters_2_f_wr_data.$procdff$7431 ($dff) from module mkeclass_axi4 (D = \soc_inst.eclass.fetch_xactor_f_wr_data.data0_reg, Q = \soc_inst.fabric_xactors_from_masters_2_f_wr_data.data1_reg).
Adding SRST signal on $flatten\soc_inst.\fabric_xactors_from_masters_2_f_wr_addr.$procdff$7437 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_from_masters_2_f_wr_addr.$procmux$6152_Y, Q = \soc_inst.fabric_xactors_from_masters_2_f_wr_addr.full_reg, rval = 1'1).
Adding EN signal on $auto$ff.cc:266:slice$9272 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_from_masters_2_f_wr_addr.$procmux$6152_Y, Q = \soc_inst.fabric_xactors_from_masters_2_f_wr_addr.full_reg).
Adding SRST signal on $flatten\soc_inst.\fabric_xactors_from_masters_2_f_wr_addr.$procdff$7436 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_from_masters_2_f_wr_addr.$procmux$6163_Y, Q = \soc_inst.fabric_xactors_from_masters_2_f_wr_addr.empty_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$9276 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_from_masters_2_f_wr_addr.$procmux$6163_Y, Q = \soc_inst.fabric_xactors_from_masters_2_f_wr_addr.empty_reg).
Adding EN signal on $flatten\soc_inst.\fabric_xactors_from_masters_2_f_wr_addr.$procdff$7435 ($dff) from module mkeclass_axi4 (D = \soc_inst.eclass.fetch_xactor_f_wr_addr.data0_reg, Q = \soc_inst.fabric_xactors_from_masters_2_f_wr_addr.data1_reg).
Adding SRST signal on $flatten\soc_inst.\fabric_xactors_from_masters_2_f_rd_data.$procdff$7429 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_from_masters_2_f_rd_data.$procmux$6108_Y, Q = \soc_inst.fabric_xactors_from_masters_2_f_rd_data.full_reg, rval = 1'1).
Adding EN signal on $auto$ff.cc:266:slice$9281 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_from_masters_2_f_rd_data.$procmux$6108_Y, Q = \soc_inst.fabric_xactors_from_masters_2_f_rd_data.full_reg).
Adding SRST signal on $flatten\soc_inst.\fabric_xactors_from_masters_2_f_rd_data.$procdff$7428 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_from_masters_2_f_rd_data.$procmux$6119_Y, Q = \soc_inst.fabric_xactors_from_masters_2_f_rd_data.empty_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$9285 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_from_masters_2_f_rd_data.$procmux$6119_Y, Q = \soc_inst.fabric_xactors_from_masters_2_f_rd_data.empty_reg).
Adding EN signal on $flatten\soc_inst.\fabric_xactors_from_masters_2_f_rd_data.$procdff$7427 ($dff) from module mkeclass_axi4 (D = \soc_inst.fabric_xactors_from_masters_2_f_rd_data.D_IN, Q = \soc_inst.fabric_xactors_from_masters_2_f_rd_data.data1_reg).
Adding SRST signal on $flatten\soc_inst.\fabric_xactors_from_masters_2_f_rd_addr.$procdff$7437 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_from_masters_2_f_rd_addr.$procmux$6152_Y, Q = \soc_inst.fabric_xactors_from_masters_2_f_rd_addr.full_reg, rval = 1'1).
Adding EN signal on $auto$ff.cc:266:slice$9290 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_from_masters_2_f_rd_addr.$procmux$6152_Y, Q = \soc_inst.fabric_xactors_from_masters_2_f_rd_addr.full_reg).
Adding SRST signal on $flatten\soc_inst.\fabric_xactors_from_masters_2_f_rd_addr.$procdff$7436 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_from_masters_2_f_rd_addr.$procmux$6163_Y, Q = \soc_inst.fabric_xactors_from_masters_2_f_rd_addr.empty_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$9294 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_from_masters_2_f_rd_addr.$procmux$6163_Y, Q = \soc_inst.fabric_xactors_from_masters_2_f_rd_addr.empty_reg).
Adding EN signal on $flatten\soc_inst.\fabric_xactors_from_masters_2_f_rd_addr.$procdff$7435 ($dff) from module mkeclass_axi4 (D = \soc_inst.eclass.fetch_xactor_f_rd_addr.data0_reg, Q = \soc_inst.fabric_xactors_from_masters_2_f_rd_addr.data1_reg).
Adding SRST signal on $flatten\soc_inst.\fabric_xactors_from_masters_1_f_wr_resp.$procdff$7417 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_from_masters_1_f_wr_resp.$procmux$6042_Y, Q = \soc_inst.fabric_xactors_from_masters_1_f_wr_resp.full_reg, rval = 1'1).
Adding EN signal on $auto$ff.cc:266:slice$9299 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_from_masters_1_f_wr_resp.$procmux$6042_Y, Q = \soc_inst.fabric_xactors_from_masters_1_f_wr_resp.full_reg).
Adding SRST signal on $flatten\soc_inst.\fabric_xactors_from_masters_1_f_wr_resp.$procdff$7416 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_from_masters_1_f_wr_resp.$procmux$6053_Y, Q = \soc_inst.fabric_xactors_from_masters_1_f_wr_resp.empty_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$9303 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_from_masters_1_f_wr_resp.$procmux$6053_Y, Q = \soc_inst.fabric_xactors_from_masters_1_f_wr_resp.empty_reg).
Adding EN signal on $flatten\soc_inst.\fabric_xactors_from_masters_1_f_wr_resp.$procdff$7415 ($dff) from module mkeclass_axi4 (D = \soc_inst.fabric_xactors_from_masters_1_f_wr_resp.D_IN, Q = \soc_inst.fabric_xactors_from_masters_1_f_wr_resp.data1_reg).
Adding SRST signal on $flatten\soc_inst.\fabric_xactors_from_masters_1_f_wr_data.$procdff$7433 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_from_masters_1_f_wr_data.$procmux$6130_Y, Q = \soc_inst.fabric_xactors_from_masters_1_f_wr_data.full_reg, rval = 1'1).
Adding EN signal on $auto$ff.cc:266:slice$9308 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_from_masters_1_f_wr_data.$procmux$6130_Y, Q = \soc_inst.fabric_xactors_from_masters_1_f_wr_data.full_reg).
Adding SRST signal on $flatten\soc_inst.\fabric_xactors_from_masters_1_f_wr_data.$procdff$7432 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_from_masters_1_f_wr_data.$procmux$6141_Y, Q = \soc_inst.fabric_xactors_from_masters_1_f_wr_data.empty_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$9312 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_from_masters_1_f_wr_data.$procmux$6141_Y, Q = \soc_inst.fabric_xactors_from_masters_1_f_wr_data.empty_reg).
Adding EN signal on $flatten\soc_inst.\fabric_xactors_from_masters_1_f_wr_data.$procdff$7431 ($dff) from module mkeclass_axi4 (D = \soc_inst.eclass.memory_xactor_f_wr_data.data0_reg, Q = \soc_inst.fabric_xactors_from_masters_1_f_wr_data.data1_reg).
Adding SRST signal on $flatten\soc_inst.\fabric_xactors_from_masters_1_f_wr_addr.$procdff$7437 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_from_masters_1_f_wr_addr.$procmux$6152_Y, Q = \soc_inst.fabric_xactors_from_masters_1_f_wr_addr.full_reg, rval = 1'1).
Adding EN signal on $auto$ff.cc:266:slice$9317 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_from_masters_1_f_wr_addr.$procmux$6152_Y, Q = \soc_inst.fabric_xactors_from_masters_1_f_wr_addr.full_reg).
Adding SRST signal on $flatten\soc_inst.\fabric_xactors_from_masters_1_f_wr_addr.$procdff$7436 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_from_masters_1_f_wr_addr.$procmux$6163_Y, Q = \soc_inst.fabric_xactors_from_masters_1_f_wr_addr.empty_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$9321 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_from_masters_1_f_wr_addr.$procmux$6163_Y, Q = \soc_inst.fabric_xactors_from_masters_1_f_wr_addr.empty_reg).
Adding EN signal on $flatten\soc_inst.\fabric_xactors_from_masters_1_f_wr_addr.$procdff$7435 ($dff) from module mkeclass_axi4 (D = \soc_inst.eclass.memory_xactor_f_wr_addr.data0_reg, Q = \soc_inst.fabric_xactors_from_masters_1_f_wr_addr.data1_reg).
Adding SRST signal on $flatten\soc_inst.\fabric_xactors_from_masters_1_f_rd_data.$procdff$7429 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_from_masters_1_f_rd_data.$procmux$6108_Y, Q = \soc_inst.fabric_xactors_from_masters_1_f_rd_data.full_reg, rval = 1'1).
Adding EN signal on $auto$ff.cc:266:slice$9326 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_from_masters_1_f_rd_data.$procmux$6108_Y, Q = \soc_inst.fabric_xactors_from_masters_1_f_rd_data.full_reg).
Adding SRST signal on $flatten\soc_inst.\fabric_xactors_from_masters_1_f_rd_data.$procdff$7428 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_from_masters_1_f_rd_data.$procmux$6119_Y, Q = \soc_inst.fabric_xactors_from_masters_1_f_rd_data.empty_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$9330 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_from_masters_1_f_rd_data.$procmux$6119_Y, Q = \soc_inst.fabric_xactors_from_masters_1_f_rd_data.empty_reg).
Adding EN signal on $flatten\soc_inst.\fabric_xactors_from_masters_1_f_rd_data.$procdff$7427 ($dff) from module mkeclass_axi4 (D = \soc_inst.fabric_xactors_from_masters_1_f_rd_data.D_IN, Q = \soc_inst.fabric_xactors_from_masters_1_f_rd_data.data1_reg).
Adding SRST signal on $flatten\soc_inst.\fabric_xactors_from_masters_1_f_rd_addr.$procdff$7437 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_from_masters_1_f_rd_addr.$procmux$6152_Y, Q = \soc_inst.fabric_xactors_from_masters_1_f_rd_addr.full_reg, rval = 1'1).
Adding EN signal on $auto$ff.cc:266:slice$9335 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_from_masters_1_f_rd_addr.$procmux$6152_Y, Q = \soc_inst.fabric_xactors_from_masters_1_f_rd_addr.full_reg).
Adding SRST signal on $flatten\soc_inst.\fabric_xactors_from_masters_1_f_rd_addr.$procdff$7436 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_from_masters_1_f_rd_addr.$procmux$6163_Y, Q = \soc_inst.fabric_xactors_from_masters_1_f_rd_addr.empty_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$9339 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_from_masters_1_f_rd_addr.$procmux$6163_Y, Q = \soc_inst.fabric_xactors_from_masters_1_f_rd_addr.empty_reg).
Adding EN signal on $flatten\soc_inst.\fabric_xactors_from_masters_1_f_rd_addr.$procdff$7435 ($dff) from module mkeclass_axi4 (D = \soc_inst.eclass.memory_xactor_f_rd_addr.data0_reg, Q = \soc_inst.fabric_xactors_from_masters_1_f_rd_addr.data1_reg).
Adding SRST signal on $flatten\soc_inst.\fabric_xactors_from_masters_0_f_wr_resp.$procdff$7417 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_from_masters_0_f_wr_resp.$procmux$6042_Y, Q = \soc_inst.fabric_xactors_from_masters_0_f_wr_resp.full_reg, rval = 1'1).
Adding EN signal on $auto$ff.cc:266:slice$9344 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_from_masters_0_f_wr_resp.$procmux$6042_Y, Q = \soc_inst.fabric_xactors_from_masters_0_f_wr_resp.full_reg).
Adding SRST signal on $flatten\soc_inst.\fabric_xactors_from_masters_0_f_wr_resp.$procdff$7416 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_from_masters_0_f_wr_resp.$procmux$6053_Y, Q = \soc_inst.fabric_xactors_from_masters_0_f_wr_resp.empty_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$9348 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_from_masters_0_f_wr_resp.$procmux$6053_Y, Q = \soc_inst.fabric_xactors_from_masters_0_f_wr_resp.empty_reg).
Adding SRST signal on $flatten\soc_inst.\fabric_xactors_from_masters_0_f_wr_data.$procdff$7433 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_from_masters_0_f_wr_data.$procmux$6130_Y, Q = \soc_inst.fabric_xactors_from_masters_0_f_wr_data.full_reg, rval = 1'1).
Adding EN signal on $auto$ff.cc:266:slice$9352 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_from_masters_0_f_wr_data.$procmux$6130_Y, Q = \soc_inst.fabric_xactors_from_masters_0_f_wr_data.full_reg).
Adding SRST signal on $flatten\soc_inst.\fabric_xactors_from_masters_0_f_wr_data.$procdff$7432 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_from_masters_0_f_wr_data.$procmux$6141_Y, Q = \soc_inst.fabric_xactors_from_masters_0_f_wr_data.empty_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$9356 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_from_masters_0_f_wr_data.$procmux$6141_Y, Q = \soc_inst.fabric_xactors_from_masters_0_f_wr_data.empty_reg).
Adding EN signal on $flatten\soc_inst.\fabric_xactors_from_masters_0_f_wr_data.$procdff$7431 ($dff) from module mkeclass_axi4 (D = \soc_inst.signature.m_xactor_f_wr_data.data0_reg, Q = \soc_inst.fabric_xactors_from_masters_0_f_wr_data.data1_reg).
Adding SRST signal on $flatten\soc_inst.\fabric_xactors_from_masters_0_f_wr_addr.$procdff$7437 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_from_masters_0_f_wr_addr.$procmux$6152_Y, Q = \soc_inst.fabric_xactors_from_masters_0_f_wr_addr.full_reg, rval = 1'1).
Adding EN signal on $auto$ff.cc:266:slice$9361 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_from_masters_0_f_wr_addr.$procmux$6152_Y, Q = \soc_inst.fabric_xactors_from_masters_0_f_wr_addr.full_reg).
Adding SRST signal on $flatten\soc_inst.\fabric_xactors_from_masters_0_f_wr_addr.$procdff$7436 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_from_masters_0_f_wr_addr.$procmux$6163_Y, Q = \soc_inst.fabric_xactors_from_masters_0_f_wr_addr.empty_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$9365 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_from_masters_0_f_wr_addr.$procmux$6163_Y, Q = \soc_inst.fabric_xactors_from_masters_0_f_wr_addr.empty_reg).
Adding EN signal on $flatten\soc_inst.\fabric_xactors_from_masters_0_f_wr_addr.$procdff$7435 ($dff) from module mkeclass_axi4 (D = \soc_inst.signature.m_xactor_f_wr_addr.data0_reg, Q = \soc_inst.fabric_xactors_from_masters_0_f_wr_addr.data1_reg).
Adding SRST signal on $flatten\soc_inst.\fabric_xactors_from_masters_0_f_rd_data.$procdff$7429 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_from_masters_0_f_rd_data.$procmux$6108_Y, Q = \soc_inst.fabric_xactors_from_masters_0_f_rd_data.full_reg, rval = 1'1).
Adding EN signal on $auto$ff.cc:266:slice$9370 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_from_masters_0_f_rd_data.$procmux$6108_Y, Q = \soc_inst.fabric_xactors_from_masters_0_f_rd_data.full_reg).
Adding SRST signal on $flatten\soc_inst.\fabric_xactors_from_masters_0_f_rd_data.$procdff$7428 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_from_masters_0_f_rd_data.$procmux$6119_Y, Q = \soc_inst.fabric_xactors_from_masters_0_f_rd_data.empty_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$9374 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_from_masters_0_f_rd_data.$procmux$6119_Y, Q = \soc_inst.fabric_xactors_from_masters_0_f_rd_data.empty_reg).
Adding SRST signal on $flatten\soc_inst.\fabric_xactors_from_masters_0_f_rd_addr.$procdff$7437 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_from_masters_0_f_rd_addr.$procmux$6152_Y, Q = \soc_inst.fabric_xactors_from_masters_0_f_rd_addr.full_reg, rval = 1'1).
Adding EN signal on $auto$ff.cc:266:slice$9378 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_from_masters_0_f_rd_addr.$procmux$6152_Y, Q = \soc_inst.fabric_xactors_from_masters_0_f_rd_addr.full_reg).
Adding SRST signal on $flatten\soc_inst.\fabric_xactors_from_masters_0_f_rd_addr.$procdff$7436 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_from_masters_0_f_rd_addr.$procmux$6163_Y, Q = \soc_inst.fabric_xactors_from_masters_0_f_rd_addr.empty_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$9382 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_xactors_from_masters_0_f_rd_addr.$procmux$6163_Y, Q = \soc_inst.fabric_xactors_from_masters_0_f_rd_addr.empty_reg).
Adding EN signal on $flatten\soc_inst.\fabric_xactors_from_masters_0_f_rd_addr.$procdff$7435 ($dff) from module mkeclass_axi4 (D = \soc_inst.signature.m_xactor_f_rd_addr.data0_reg, Q = \soc_inst.fabric_xactors_from_masters_0_f_rd_addr.data1_reg).
Adding SRST signal on $flatten\soc_inst.\fabric_v_f_wrd_sjs_2.$procdff$7408 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_v_f_wrd_sjs_2.$procmux$6007_Y, Q = \soc_inst.fabric_v_f_wrd_sjs_2.empty_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$9387 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_v_f_wrd_sjs_2.$procmux$6007_Y, Q = \soc_inst.fabric_v_f_wrd_sjs_2.empty_reg).
Adding SRST signal on $flatten\soc_inst.\fabric_v_f_wrd_sjs_1.$procdff$7408 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_v_f_wrd_sjs_1.$procmux$6007_Y, Q = \soc_inst.fabric_v_f_wrd_sjs_1.empty_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$9391 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_v_f_wrd_sjs_1.$procmux$6007_Y, Q = \soc_inst.fabric_v_f_wrd_sjs_1.empty_reg).
Adding SRST signal on $flatten\soc_inst.\fabric_v_f_wrd_sjs_0.$procdff$7408 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_v_f_wrd_sjs_0.$procmux$6007_Y, Q = \soc_inst.fabric_v_f_wrd_sjs_0.empty_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$9395 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_v_f_wrd_sjs_0.$procmux$6007_Y, Q = \soc_inst.fabric_v_f_wrd_sjs_0.empty_reg).
Adding SRST signal on $flatten\soc_inst.\fabric_v_f_wrd_mis_5.$procdff$7406 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_v_f_wrd_mis_5.$procmux$5994_Y, Q = \soc_inst.fabric_v_f_wrd_mis_5.empty_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$9399 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_v_f_wrd_mis_5.$procmux$5994_Y, Q = \soc_inst.fabric_v_f_wrd_mis_5.empty_reg).
Adding SRST signal on $flatten\soc_inst.\fabric_v_f_wrd_mis_4.$procdff$7406 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_v_f_wrd_mis_4.$procmux$5994_Y, Q = \soc_inst.fabric_v_f_wrd_mis_4.empty_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$9403 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_v_f_wrd_mis_4.$procmux$5994_Y, Q = \soc_inst.fabric_v_f_wrd_mis_4.empty_reg).
Adding SRST signal on $flatten\soc_inst.\fabric_v_f_wrd_mis_3.$procdff$7406 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_v_f_wrd_mis_3.$procmux$5994_Y, Q = \soc_inst.fabric_v_f_wrd_mis_3.empty_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$9407 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_v_f_wrd_mis_3.$procmux$5994_Y, Q = \soc_inst.fabric_v_f_wrd_mis_3.empty_reg).
Adding SRST signal on $flatten\soc_inst.\fabric_v_f_wrd_mis_2.$procdff$7406 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_v_f_wrd_mis_2.$procmux$5994_Y, Q = \soc_inst.fabric_v_f_wrd_mis_2.empty_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$9411 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_v_f_wrd_mis_2.$procmux$5994_Y, Q = \soc_inst.fabric_v_f_wrd_mis_2.empty_reg).
Adding SRST signal on $flatten\soc_inst.\fabric_v_f_wrd_mis_1.$procdff$7406 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_v_f_wrd_mis_1.$procmux$5994_Y, Q = \soc_inst.fabric_v_f_wrd_mis_1.empty_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$9415 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_v_f_wrd_mis_1.$procmux$5994_Y, Q = \soc_inst.fabric_v_f_wrd_mis_1.empty_reg).
Adding SRST signal on $flatten\soc_inst.\fabric_v_f_wrd_mis_0.$procdff$7406 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_v_f_wrd_mis_0.$procmux$5994_Y, Q = \soc_inst.fabric_v_f_wrd_mis_0.empty_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$9419 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_v_f_wrd_mis_0.$procmux$5994_Y, Q = \soc_inst.fabric_v_f_wrd_mis_0.empty_reg).
Adding SRST signal on $flatten\soc_inst.\fabric_v_f_wr_sjs_2.$procdff$7408 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_v_f_wr_sjs_2.$procmux$6007_Y, Q = \soc_inst.fabric_v_f_wr_sjs_2.empty_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$9423 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_v_f_wr_sjs_2.$procmux$6007_Y, Q = \soc_inst.fabric_v_f_wr_sjs_2.empty_reg).
Adding SRST signal on $flatten\soc_inst.\fabric_v_f_wr_sjs_1.$procdff$7408 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_v_f_wr_sjs_1.$procmux$6007_Y, Q = \soc_inst.fabric_v_f_wr_sjs_1.empty_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$9427 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_v_f_wr_sjs_1.$procmux$6007_Y, Q = \soc_inst.fabric_v_f_wr_sjs_1.empty_reg).
Adding SRST signal on $flatten\soc_inst.\fabric_v_f_wr_sjs_0.$procdff$7408 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_v_f_wr_sjs_0.$procmux$6007_Y, Q = \soc_inst.fabric_v_f_wr_sjs_0.empty_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$9431 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_v_f_wr_sjs_0.$procmux$6007_Y, Q = \soc_inst.fabric_v_f_wr_sjs_0.empty_reg).
Adding SRST signal on $flatten\soc_inst.\fabric_v_f_wr_mis_5.$procdff$7406 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_v_f_wr_mis_5.$procmux$5994_Y, Q = \soc_inst.fabric_v_f_wr_mis_5.empty_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$9435 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_v_f_wr_mis_5.$procmux$5994_Y, Q = \soc_inst.fabric_v_f_wr_mis_5.empty_reg).
Adding SRST signal on $flatten\soc_inst.\fabric_v_f_wr_mis_4.$procdff$7406 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_v_f_wr_mis_4.$procmux$5994_Y, Q = \soc_inst.fabric_v_f_wr_mis_4.empty_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$9439 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_v_f_wr_mis_4.$procmux$5994_Y, Q = \soc_inst.fabric_v_f_wr_mis_4.empty_reg).
Adding SRST signal on $flatten\soc_inst.\fabric_v_f_wr_mis_3.$procdff$7406 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_v_f_wr_mis_3.$procmux$5994_Y, Q = \soc_inst.fabric_v_f_wr_mis_3.empty_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$9443 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_v_f_wr_mis_3.$procmux$5994_Y, Q = \soc_inst.fabric_v_f_wr_mis_3.empty_reg).
Adding SRST signal on $flatten\soc_inst.\fabric_v_f_wr_mis_2.$procdff$7406 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_v_f_wr_mis_2.$procmux$5994_Y, Q = \soc_inst.fabric_v_f_wr_mis_2.empty_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$9447 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_v_f_wr_mis_2.$procmux$5994_Y, Q = \soc_inst.fabric_v_f_wr_mis_2.empty_reg).
Adding SRST signal on $flatten\soc_inst.\fabric_v_f_wr_mis_1.$procdff$7406 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_v_f_wr_mis_1.$procmux$5994_Y, Q = \soc_inst.fabric_v_f_wr_mis_1.empty_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$9451 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_v_f_wr_mis_1.$procmux$5994_Y, Q = \soc_inst.fabric_v_f_wr_mis_1.empty_reg).
Adding SRST signal on $flatten\soc_inst.\fabric_v_f_wr_mis_0.$procdff$7406 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_v_f_wr_mis_0.$procmux$5994_Y, Q = \soc_inst.fabric_v_f_wr_mis_0.empty_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$9455 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_v_f_wr_mis_0.$procmux$5994_Y, Q = \soc_inst.fabric_v_f_wr_mis_0.empty_reg).
Adding SRST signal on $flatten\soc_inst.\fabric_v_f_rd_sjs_2.$procdff$7408 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_v_f_rd_sjs_2.$procmux$6007_Y, Q = \soc_inst.fabric_v_f_rd_sjs_2.empty_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$9459 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_v_f_rd_sjs_2.$procmux$6007_Y, Q = \soc_inst.fabric_v_f_rd_sjs_2.empty_reg).
Adding SRST signal on $flatten\soc_inst.\fabric_v_f_rd_sjs_1.$procdff$7408 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_v_f_rd_sjs_1.$procmux$6007_Y, Q = \soc_inst.fabric_v_f_rd_sjs_1.empty_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$9463 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_v_f_rd_sjs_1.$procmux$6007_Y, Q = \soc_inst.fabric_v_f_rd_sjs_1.empty_reg).
Adding SRST signal on $flatten\soc_inst.\fabric_v_f_rd_sjs_0.$procdff$7408 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_v_f_rd_sjs_0.$procmux$6007_Y, Q = \soc_inst.fabric_v_f_rd_sjs_0.empty_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$9467 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_v_f_rd_sjs_0.$procmux$6007_Y, Q = \soc_inst.fabric_v_f_rd_sjs_0.empty_reg).
Adding SRST signal on $flatten\soc_inst.\fabric_v_f_rd_mis_5.$procdff$7406 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_v_f_rd_mis_5.$procmux$5994_Y, Q = \soc_inst.fabric_v_f_rd_mis_5.empty_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$9471 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_v_f_rd_mis_5.$procmux$5994_Y, Q = \soc_inst.fabric_v_f_rd_mis_5.empty_reg).
Adding SRST signal on $flatten\soc_inst.\fabric_v_f_rd_mis_4.$procdff$7406 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_v_f_rd_mis_4.$procmux$5994_Y, Q = \soc_inst.fabric_v_f_rd_mis_4.empty_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$9475 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_v_f_rd_mis_4.$procmux$5994_Y, Q = \soc_inst.fabric_v_f_rd_mis_4.empty_reg).
Adding SRST signal on $flatten\soc_inst.\fabric_v_f_rd_mis_3.$procdff$7406 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_v_f_rd_mis_3.$procmux$5994_Y, Q = \soc_inst.fabric_v_f_rd_mis_3.empty_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$9479 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_v_f_rd_mis_3.$procmux$5994_Y, Q = \soc_inst.fabric_v_f_rd_mis_3.empty_reg).
Adding SRST signal on $flatten\soc_inst.\fabric_v_f_rd_mis_2.$procdff$7406 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_v_f_rd_mis_2.$procmux$5994_Y, Q = \soc_inst.fabric_v_f_rd_mis_2.empty_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$9483 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_v_f_rd_mis_2.$procmux$5994_Y, Q = \soc_inst.fabric_v_f_rd_mis_2.empty_reg).
Adding SRST signal on $flatten\soc_inst.\fabric_v_f_rd_mis_1.$procdff$7406 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_v_f_rd_mis_1.$procmux$5994_Y, Q = \soc_inst.fabric_v_f_rd_mis_1.empty_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$9487 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_v_f_rd_mis_1.$procmux$5994_Y, Q = \soc_inst.fabric_v_f_rd_mis_1.empty_reg).
Adding SRST signal on $flatten\soc_inst.\fabric_v_f_rd_mis_0.$procdff$7406 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_v_f_rd_mis_0.$procmux$5994_Y, Q = \soc_inst.fabric_v_f_rd_mis_0.empty_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$9491 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\fabric_v_f_rd_mis_0.$procmux$5994_Y, Q = \soc_inst.fabric_v_f_rd_mis_0.empty_reg).
Adding SRST signal on $flatten\soc_inst.\err_slave_s_xactor_f_wr_resp.$procdff$7417 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\err_slave_s_xactor_f_wr_resp.$procmux$6042_Y, Q = \soc_inst.err_slave_s_xactor_f_wr_resp.full_reg, rval = 1'1).
Adding EN signal on $auto$ff.cc:266:slice$9495 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\err_slave_s_xactor_f_wr_resp.$procmux$6042_Y, Q = \soc_inst.err_slave_s_xactor_f_wr_resp.full_reg).
Adding SRST signal on $flatten\soc_inst.\err_slave_s_xactor_f_wr_resp.$procdff$7416 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\err_slave_s_xactor_f_wr_resp.$procmux$6053_Y, Q = \soc_inst.err_slave_s_xactor_f_wr_resp.empty_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$9499 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\err_slave_s_xactor_f_wr_resp.$procmux$6053_Y, Q = \soc_inst.err_slave_s_xactor_f_wr_resp.empty_reg).
Adding EN signal on $flatten\soc_inst.\err_slave_s_xactor_f_wr_resp.$procdff$7415 ($dff) from module mkeclass_axi4 (D = \soc_inst.err_slave_s_xactor_f_wr_resp.D_IN, Q = \soc_inst.err_slave_s_xactor_f_wr_resp.data1_reg).
Adding SRST signal on $flatten\soc_inst.\err_slave_s_xactor_f_wr_data.$procdff$7433 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\err_slave_s_xactor_f_wr_data.$procmux$6130_Y, Q = \soc_inst.err_slave_s_xactor_f_wr_data.full_reg, rval = 1'1).
Adding EN signal on $auto$ff.cc:266:slice$9504 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\err_slave_s_xactor_f_wr_data.$procmux$6130_Y, Q = \soc_inst.err_slave_s_xactor_f_wr_data.full_reg).
Adding SRST signal on $flatten\soc_inst.\err_slave_s_xactor_f_wr_data.$procdff$7432 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\err_slave_s_xactor_f_wr_data.$procmux$6141_Y, Q = \soc_inst.err_slave_s_xactor_f_wr_data.empty_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$9508 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\err_slave_s_xactor_f_wr_data.$procmux$6141_Y, Q = \soc_inst.err_slave_s_xactor_f_wr_data.empty_reg).
Adding EN signal on $flatten\soc_inst.\err_slave_s_xactor_f_wr_data.$procdff$7431 ($dff) from module mkeclass_axi4 (D = \soc_inst.fabric_xactors_to_slaves_5_f_wr_data.data0_reg, Q = \soc_inst.err_slave_s_xactor_f_wr_data.data1_reg).
Adding SRST signal on $flatten\soc_inst.\err_slave_s_xactor_f_wr_addr.$procdff$7437 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\err_slave_s_xactor_f_wr_addr.$procmux$6152_Y, Q = \soc_inst.err_slave_s_xactor_f_wr_addr.full_reg, rval = 1'1).
Adding EN signal on $auto$ff.cc:266:slice$9513 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\err_slave_s_xactor_f_wr_addr.$procmux$6152_Y, Q = \soc_inst.err_slave_s_xactor_f_wr_addr.full_reg).
Adding SRST signal on $flatten\soc_inst.\err_slave_s_xactor_f_wr_addr.$procdff$7436 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\err_slave_s_xactor_f_wr_addr.$procmux$6163_Y, Q = \soc_inst.err_slave_s_xactor_f_wr_addr.empty_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$9517 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\err_slave_s_xactor_f_wr_addr.$procmux$6163_Y, Q = \soc_inst.err_slave_s_xactor_f_wr_addr.empty_reg).
Adding SRST signal on $flatten\soc_inst.\err_slave_s_xactor_f_rd_data.$procdff$7429 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\err_slave_s_xactor_f_rd_data.$procmux$6108_Y, Q = \soc_inst.err_slave_s_xactor_f_rd_data.full_reg, rval = 1'1).
Adding EN signal on $auto$ff.cc:266:slice$9521 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\err_slave_s_xactor_f_rd_data.$procmux$6108_Y, Q = \soc_inst.err_slave_s_xactor_f_rd_data.full_reg).
Adding SRST signal on $flatten\soc_inst.\err_slave_s_xactor_f_rd_data.$procdff$7428 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\err_slave_s_xactor_f_rd_data.$procmux$6119_Y, Q = \soc_inst.err_slave_s_xactor_f_rd_data.empty_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$9525 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\err_slave_s_xactor_f_rd_data.$procmux$6119_Y, Q = \soc_inst.err_slave_s_xactor_f_rd_data.empty_reg).
Adding EN signal on $flatten\soc_inst.\err_slave_s_xactor_f_rd_data.$procdff$7427 ($dff) from module mkeclass_axi4 (D = { 34'1100000000000000000000000000000000 \soc_inst.err_slave_rg_readburst_counter_940_EQ_err_slav_ETC___d2942 \soc_inst.err_slave_rg_rd_id }, Q = \soc_inst.err_slave_s_xactor_f_rd_data.data1_reg).
Adding SRST signal on $flatten\soc_inst.\err_slave_s_xactor_f_rd_addr.$procdff$7437 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\err_slave_s_xactor_f_rd_addr.$procmux$6152_Y, Q = \soc_inst.err_slave_s_xactor_f_rd_addr.full_reg, rval = 1'1).
Adding EN signal on $auto$ff.cc:266:slice$9530 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\err_slave_s_xactor_f_rd_addr.$procmux$6152_Y, Q = \soc_inst.err_slave_s_xactor_f_rd_addr.full_reg).
Adding SRST signal on $flatten\soc_inst.\err_slave_s_xactor_f_rd_addr.$procdff$7436 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\err_slave_s_xactor_f_rd_addr.$procmux$6163_Y, Q = \soc_inst.err_slave_s_xactor_f_rd_addr.empty_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$9534 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\err_slave_s_xactor_f_rd_addr.$procmux$6163_Y, Q = \soc_inst.err_slave_s_xactor_f_rd_addr.empty_reg).
Adding EN signal on $flatten\soc_inst.\err_slave_s_xactor_f_rd_addr.$procdff$7435 ($dff) from module mkeclass_axi4 (D = \soc_inst.fabric_xactors_to_slaves_5_f_rd_addr.data0_reg, Q = \soc_inst.err_slave_s_xactor_f_rd_addr.data1_reg).
Adding SRST signal on $flatten\soc_inst.\eclass.\riscv.\stage3.\dump_ff.$procdff$7454 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\eclass.\riscv.\stage3.\dump_ff.$procmux$6274_Y, Q = \soc_inst.eclass.riscv.stage3.dump_ff.empty_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$9539 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\eclass.\riscv.\stage3.\dump_ff.$procmux$6274_Y, Q = \soc_inst.eclass.riscv.stage3.dump_ff.empty_reg).
Adding EN signal on $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$procdff$7572 ($adff) from module mkeclass_axi4 (D = \soc_inst.eclass.riscv.stage3.csr.csrfile.write_csr_word [25], Q = \soc_inst.eclass.riscv.stage3.csr.csrfile.v_trig_tdata3_1).
Adding EN signal on $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$procdff$7571 ($adff) from module mkeclass_axi4 (D = \soc_inst.eclass.riscv.stage3.csr.csrfile.write_csr_word [25], Q = \soc_inst.eclass.riscv.stage3.csr.csrfile.v_trig_tdata3_0).
Adding EN signal on $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$procdff$7570 ($adff) from module mkeclass_axi4 (D = \soc_inst.eclass.riscv.stage3.csr.csrfile.write_csr_word, Q = \soc_inst.eclass.riscv.stage3.csr.csrfile.v_trig_tdata2_1).
Adding EN signal on $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$procdff$7569 ($adff) from module mkeclass_axi4 (D = \soc_inst.eclass.riscv.stage3.csr.csrfile.write_csr_word, Q = \soc_inst.eclass.riscv.stage3.csr.csrfile.v_trig_tdata2_0).
Adding EN signal on $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$procdff$7568 ($adff) from module mkeclass_axi4 (D = \soc_inst.eclass.riscv.stage3.csr.csrfile.v_trig_tdata1_0_D_IN, Q = \soc_inst.eclass.riscv.stage3.csr.csrfile.v_trig_tdata1_1).
Adding EN signal on $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$procdff$7567 ($adff) from module mkeclass_axi4 (D = \soc_inst.eclass.riscv.stage3.csr.csrfile.v_trig_tdata1_0_D_IN, Q = \soc_inst.eclass.riscv.stage3.csr.csrfile.v_trig_tdata1_0).
Adding EN signal on $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$procdff$7564 ($adff) from module mkeclass_axi4 (D = \soc_inst.eclass.riscv.stage3.csr.csrfile.write_csr_word [31:24], Q = \soc_inst.eclass.riscv.stage3.csr.csrfile.v_pmp_cfg_3).
Adding EN signal on $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$procdff$7563 ($adff) from module mkeclass_axi4 (D = \soc_inst.eclass.riscv.stage3.csr.csrfile.write_csr_word [23:16], Q = \soc_inst.eclass.riscv.stage3.csr.csrfile.v_pmp_cfg_2).
Adding EN signal on $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$procdff$7562 ($adff) from module mkeclass_axi4 (D = \soc_inst.eclass.riscv.stage3.csr.csrfile.write_csr_word [15:8], Q = \soc_inst.eclass.riscv.stage3.csr.csrfile.v_pmp_cfg_1).
Adding EN signal on $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$procdff$7561 ($adff) from module mkeclass_axi4 (D = \soc_inst.eclass.riscv.stage3.csr.csrfile.write_csr_word [7:0], Q = \soc_inst.eclass.riscv.stage3.csr.csrfile.v_pmp_cfg_0).
Adding EN signal on $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$procdff$7560 ($adff) from module mkeclass_axi4 (D = \soc_inst.eclass.riscv.stage3.csr.csrfile.write_csr_word [29:0], Q = \soc_inst.eclass.riscv.stage3.csr.csrfile.v_pmp_addr_3).
Adding EN signal on $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$procdff$7559 ($adff) from module mkeclass_axi4 (D = \soc_inst.eclass.riscv.stage3.csr.csrfile.write_csr_word [29:0], Q = \soc_inst.eclass.riscv.stage3.csr.csrfile.v_pmp_addr_2).
Adding EN signal on $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$procdff$7558 ($adff) from module mkeclass_axi4 (D = \soc_inst.eclass.riscv.stage3.csr.csrfile.write_csr_word [29:0], Q = \soc_inst.eclass.riscv.stage3.csr.csrfile.v_pmp_addr_1).
Adding EN signal on $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$procdff$7557 ($adff) from module mkeclass_axi4 (D = \soc_inst.eclass.riscv.stage3.csr.csrfile.write_csr_word [29:0], Q = \soc_inst.eclass.riscv.stage3.csr.csrfile.v_pmp_addr_0).
Adding EN signal on $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$procdff$7556 ($adff) from module mkeclass_axi4 (D = \soc_inst.eclass.riscv.stage3.csr.csrfile.write_csr_word [0], Q = \soc_inst.eclass.riscv.stage3.csr.csrfile.trigger_index).
Adding EN signal on $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$procdff$7555 ($adff) from module mkeclass_axi4 (D = \soc_inst.eclass.riscv.stage3.csr.csrfile.write_csr_word [8], Q = \soc_inst.eclass.riscv.stage3.csr.csrfile.soft_ueip).
Adding EN signal on $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$procdff$7554 ($adff) from module mkeclass_axi4 (D = \soc_inst.eclass.riscv.stage3.csr.csrfile.write_csr_word [31:2], Q = \soc_inst.eclass.riscv.stage3.csr.csrfile.rg_utvec).
Adding EN signal on $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$procdff$7553 ($adff) from module mkeclass_axi4 (D = \soc_inst.eclass.riscv.stage3.csr.csrfile.rg_utval_D_IN, Q = \soc_inst.eclass.riscv.stage3.csr.csrfile.rg_utval).
Adding EN signal on $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$procdff$7552 ($adff) from module mkeclass_axi4 (D = \soc_inst.eclass.riscv.stage3.csr.csrfile.write_csr_word [4], Q = \soc_inst.eclass.riscv.stage3.csr.csrfile.rg_utip).
Adding EN signal on $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$procdff$7551 ($adff) from module mkeclass_axi4 (D = \soc_inst.eclass.riscv.stage3.csr.csrfile.write_csr_word [4], Q = \soc_inst.eclass.riscv.stage3.csr.csrfile.rg_utie).
Adding EN signal on $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$procdff$7550 ($adff) from module mkeclass_axi4 (D = \soc_inst.eclass.riscv.stage3.csr.csrfile.write_csr_word [0], Q = \soc_inst.eclass.riscv.stage3.csr.csrfile.rg_usip).
Adding EN signal on $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$procdff$7549 ($adff) from module mkeclass_axi4 (D = \soc_inst.eclass.riscv.stage3.csr.csrfile.write_csr_word [0], Q = \soc_inst.eclass.riscv.stage3.csr.csrfile.rg_usie).
Adding EN signal on $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$procdff$7548 ($adff) from module mkeclass_axi4 (D = \soc_inst.eclass.riscv.stage3.csr.csrfile.write_csr_word, Q = \soc_inst.eclass.riscv.stage3.csr.csrfile.rg_uscratch).
Adding EN signal on $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$procdff$7547 ($adff) from module mkeclass_axi4 (D = \soc_inst.eclass.riscv.stage3.csr.csrfile.rg_upie_D_IN, Q = \soc_inst.eclass.riscv.stage3.csr.csrfile.rg_upie).
Adding EN signal on $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$procdff$7546 ($adff) from module mkeclass_axi4 (D = \soc_inst.eclass.riscv.stage3.csr.csrfile.write_csr_word [1:0], Q = \soc_inst.eclass.riscv.stage3.csr.csrfile.rg_umode).
Adding EN signal on $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$procdff$7545 ($adff) from module mkeclass_axi4 (D = \soc_inst.eclass.riscv.stage3.csr.csrfile.rg_uinterrupt_D_IN, Q = \soc_inst.eclass.riscv.stage3.csr.csrfile.rg_uinterrupt).
Adding EN signal on $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$procdff$7544 ($adff) from module mkeclass_axi4 (D = \soc_inst.eclass.riscv.stage3.csr.csrfile.rg_uie_D_IN, Q = \soc_inst.eclass.riscv.stage3.csr.csrfile.rg_uie).
Adding EN signal on $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$procdff$7543 ($adff) from module mkeclass_axi4 (D = \soc_inst.eclass.riscv.stage3.csr.csrfile.rg_uepc_D_IN, Q = \soc_inst.eclass.riscv.stage3.csr.csrfile.rg_uepc).
Adding EN signal on $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$procdff$7542 ($adff) from module mkeclass_axi4 (D = \soc_inst.eclass.riscv.stage3.csr.csrfile.write_csr_word [8], Q = \soc_inst.eclass.riscv.stage3.csr.csrfile.rg_ueie).
Adding EN signal on $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$procdff$7541 ($adff) from module mkeclass_axi4 (D = \soc_inst.eclass.riscv.stage3.csr.csrfile.rg_ucause_D_IN, Q = \soc_inst.eclass.riscv.stage3.csr.csrfile.rg_ucause).
Adding EN signal on $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$procdff$7540 ($adff) from module mkeclass_axi4 (D = \soc_inst.eclass.riscv.stage3.csr.csrfile.rg_prv_D_IN, Q = \soc_inst.eclass.riscv.stage3.csr.csrfile.rg_prv).
Adding EN signal on $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$procdff$7539 ($adff) from module mkeclass_axi4 (D = \soc_inst.eclass.riscv.stage3.csr.csrfile.write_csr_word [31:2], Q = \soc_inst.eclass.riscv.stage3.csr.csrfile.rg_mtvec).
Adding EN signal on $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$procdff$7538 ($adff) from module mkeclass_axi4 (D = \soc_inst.eclass.riscv.stage3.csr.csrfile.rg_mtval_D_IN, Q = \soc_inst.eclass.riscv.stage3.csr.csrfile.rg_mtval).
Adding EN signal on $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$procdff$7536 ($adff) from module mkeclass_axi4 (D = \soc_inst.eclass.riscv.stage3.csr.csrfile.write_csr_word [7], Q = \soc_inst.eclass.riscv.stage3.csr.csrfile.rg_mtie).
Adding EN signal on $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$procdff$7534 ($adff) from module mkeclass_axi4 (D = \soc_inst.eclass.riscv.stage3.csr.csrfile.write_csr_word [3], Q = \soc_inst.eclass.riscv.stage3.csr.csrfile.rg_msie).
Adding EN signal on $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$procdff$7533 ($adff) from module mkeclass_axi4 (D = \soc_inst.eclass.riscv.stage3.csr.csrfile.write_csr_word, Q = \soc_inst.eclass.riscv.stage3.csr.csrfile.rg_mscratch).
Adding EN signal on $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$procdff$7532 ($adff) from module mkeclass_axi4 (D = \soc_inst.eclass.riscv.stage3.csr.csrfile.write_csr_word [17], Q = \soc_inst.eclass.riscv.stage3.csr.csrfile.rg_mprv).
Adding EN signal on $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$procdff$7531 ($adff) from module mkeclass_axi4 (D = \soc_inst.eclass.riscv.stage3.csr.csrfile.rg_mpp_D_IN, Q = \soc_inst.eclass.riscv.stage3.csr.csrfile.rg_mpp).
Adding EN signal on $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$procdff$7530 ($adff) from module mkeclass_axi4 (D = \soc_inst.eclass.riscv.stage3.csr.csrfile.rg_mpie_D_IN, Q = \soc_inst.eclass.riscv.stage3.csr.csrfile.rg_mpie).
Adding EN signal on $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$procdff$7529 ($adff) from module mkeclass_axi4 (D = \soc_inst.eclass.riscv.stage3.csr.csrfile.write_csr_word [1:0], Q = \soc_inst.eclass.riscv.stage3.csr.csrfile.rg_mode).
Adding EN signal on $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$procdff$7528 ($adff) from module mkeclass_axi4 (D = \soc_inst.eclass.riscv.stage3.csr.csrfile.rg_minterrupt_D_IN, Q = \soc_inst.eclass.riscv.stage3.csr.csrfile.rg_minterrupt).
Adding EN signal on $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$procdff$7527 ($adff) from module mkeclass_axi4 (D = \soc_inst.eclass.riscv.stage3.csr.csrfile.rg_mie_D_IN, Q = \soc_inst.eclass.riscv.stage3.csr.csrfile.rg_mie).
Adding EN signal on $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$procdff$7526 ($adff) from module mkeclass_axi4 (D = \soc_inst.eclass.riscv.stage3.csr.csrfile.write_csr_word [11:0], Q = \soc_inst.eclass.riscv.stage3.csr.csrfile.rg_mideleg).
Adding EN signal on $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$procdff$7525 ($adff) from module mkeclass_axi4 (D = \soc_inst.eclass.riscv.stage3.csr.csrfile.rg_mepc_D_IN, Q = \soc_inst.eclass.riscv.stage3.csr.csrfile.rg_mepc).
Adding EN signal on $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$procdff$7523 ($adff) from module mkeclass_axi4 (D = \soc_inst.eclass.riscv.stage3.csr.csrfile.write_csr_word [11], Q = \soc_inst.eclass.riscv.stage3.csr.csrfile.rg_meie).
Adding EN signal on $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$procdff$7522 ($adff) from module mkeclass_axi4 (D = \soc_inst.eclass.riscv.stage3.csr.csrfile.write_csr_word [15], Q = \soc_inst.eclass.riscv.stage3.csr.csrfile.rg_medeleg_u1).
Adding EN signal on $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$procdff$7521 ($adff) from module mkeclass_axi4 (D = \soc_inst.eclass.riscv.stage3.csr.csrfile.write_csr_word [13:12], Q = \soc_inst.eclass.riscv.stage3.csr.csrfile.rg_medeleg_m2).
Adding EN signal on $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$procdff$7520 ($adff) from module mkeclass_axi4 (D = \soc_inst.eclass.riscv.stage3.csr.csrfile.write_csr_word [9:0], Q = \soc_inst.eclass.riscv.stage3.csr.csrfile.rg_medeleg_l10).
Adding EN signal on $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$procdff$7519 ($adff) from module mkeclass_axi4 (D = \soc_inst.eclass.riscv.stage3.csr.csrfile.write_csr_word [2:0], Q = \soc_inst.eclass.riscv.stage3.csr.csrfile.rg_mcounteren).
Adding EN signal on $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$procdff$7518 ($adff) from module mkeclass_axi4 (D = \soc_inst.eclass.riscv.stage3.csr.csrfile.rg_mcause_D_IN, Q = \soc_inst.eclass.riscv.stage3.csr.csrfile.rg_mcause).
Adding EN signal on $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$procdff$7516 ($adff) from module mkeclass_axi4 (D = \soc_inst.eclass.riscv.stage3.csr.csrfile.write_csr_word [20], Q = \soc_inst.eclass.riscv.stage3.csr.csrfile.misa_u).
Adding EN signal on $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$procdff$7515 ($adff) from module mkeclass_axi4 (D = \soc_inst.eclass.riscv.stage3.csr.csrfile.write_csr_word [13], Q = \soc_inst.eclass.riscv.stage3.csr.csrfile.misa_n).
Adding EN signal on $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$procdff$7514 ($adff) from module mkeclass_axi4 (D = \soc_inst.eclass.riscv.stage3.csr.csrfile.write_csr_word [8], Q = \soc_inst.eclass.riscv.stage3.csr.csrfile.misa_i).
Adding EN signal on $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$procdff$7513 ($adff) from module mkeclass_axi4 (D = \soc_inst.eclass.riscv.stage3.csr.csrfile.minstreth_D_IN, Q = \soc_inst.eclass.riscv.stage3.csr.csrfile.minstreth).
Adding EN signal on $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$procdff$7512 ($adff) from module mkeclass_axi4 (D = \soc_inst.eclass.riscv.stage3.csr.csrfile.minstret_D_IN, Q = \soc_inst.eclass.riscv.stage3.csr.csrfile.minstret).
Adding EN signal on $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$procdff$7511 ($adff) from module mkeclass_axi4 (D = \soc_inst.eclass.riscv.stage3.csr.csrfile.write_csr_word, Q = \soc_inst.eclass.riscv.stage3.csr.csrfile.mhpmevent_0).
Adding EN signal on $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$procdff$7510 ($adff) from module mkeclass_axi4 (D = \soc_inst.eclass.riscv.stage3.csr.csrfile.mhpmcounter_0_D_IN [31:0], Q = \soc_inst.eclass.riscv.stage3.csr.csrfile.mhpmcounter_0 [31:0]).
Adding EN signal on $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$procdff$7510 ($adff) from module mkeclass_axi4 (D = \soc_inst.eclass.riscv.stage3.csr.csrfile.mhpmcounter_0_D_IN [63:32], Q = \soc_inst.eclass.riscv.stage3.csr.csrfile.mhpmcounter_0 [63:32]).
Adding EN signal on $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$procdff$7509 ($adff) from module mkeclass_axi4 (D = \soc_inst.eclass.riscv.stage3.csr.csrfile.mcycleh_D_IN, Q = \soc_inst.eclass.riscv.stage3.csr.csrfile.mcycleh).
Adding EN signal on $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$procdff$7508 ($adff) from module mkeclass_axi4 (D = \soc_inst.eclass.riscv.stage3.csr.csrfile.mcycle_D_IN, Q = \soc_inst.eclass.riscv.stage3.csr.csrfile.mcycle).
Adding EN signal on $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$procdff$7507 ($adff) from module mkeclass_axi4 (D = \soc_inst.eclass.riscv.stage3.csr.csrfile.fs_D_IN, Q = \soc_inst.eclass.riscv.stage3.csr.csrfile.fs).
Adding EN signal on $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$procdff$7506 ($adff) from module mkeclass_axi4 (D = \soc_inst.eclass.riscv.stage3.csr.csrfile.frm_D_IN, Q = \soc_inst.eclass.riscv.stage3.csr.csrfile.frm).
Adding EN signal on $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$procdff$7505 ($adff) from module mkeclass_axi4 (D = \soc_inst.eclass.riscv.stage3.csr.csrfile.write_csr_word [4:0], Q = \soc_inst.eclass.riscv.stage3.csr.csrfile.fflags).
Adding EN signal on $flatten\soc_inst.\eclass.\riscv.\stage3.$procdff$7597 ($adff) from module mkeclass_axi4 (D = \soc_inst.eclass.riscv.stage3.rg_rerun_D_IN, Q = \soc_inst.eclass.riscv.stage3.rg_rerun).
Adding EN signal on $flatten\soc_inst.\eclass.\riscv.\stage3.$procdff$7596 ($adff) from module mkeclass_axi4 (D = \soc_inst.eclass.riscv.stage3.rg_epoch_D_IN, Q = \soc_inst.eclass.riscv.stage3.rg_epoch).
Adding EN signal on $flatten\soc_inst.\eclass.\riscv.\stage2.\ff_memory_request.$procdff$7453 ($dff) from module mkeclass_axi4 (D = { \soc_inst.eclass.riscv.stage2.alu.instance_fn_alu_0._theResult____h56 \soc_inst.eclass.riscv.stage2.alu.instance_fn_alu_0.fn_alu_op2 \soc_inst.eclass.riscv.fifof_2.D_OUT [40:39] \soc_inst.eclass.riscv.fifof_2.D_OUT [2:0] \soc_inst.eclass.riscv.stage2.rg_wEpoch }, Q = \soc_inst.eclass.riscv.stage2.ff_memory_request.D_OUT).
Adding SRST signal on $flatten\soc_inst.\eclass.\riscv.\stage2.\ff_memory_request.$procdff$7452 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\eclass.\riscv.\stage2.\ff_memory_request.$procmux$6261_Y, Q = \soc_inst.eclass.riscv.stage2.ff_memory_request.empty_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$9617 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\eclass.\riscv.\stage2.\ff_memory_request.$procmux$6261_Y, Q = \soc_inst.eclass.riscv.stage2.ff_memory_request.empty_reg).
Adding EN signal on $flatten\soc_inst.\eclass.\riscv.\stage2.$procdff$7595 ($adff) from module mkeclass_axi4 (D = \soc_inst.eclass.riscv.stage2.rg_eEpoch_D_IN, Q = \soc_inst.eclass.riscv.stage2.rg_eEpoch).
Adding EN signal on $flatten\soc_inst.\eclass.\riscv.\stage2.$procdff$7594 ($adff) from module mkeclass_axi4 (D = \soc_inst.eclass.riscv.stage2.rg_wEpoch_D_IN, Q = \soc_inst.eclass.riscv.stage2.rg_wEpoch).
Adding SRST signal on $flatten\soc_inst.\eclass.\riscv.\stage1.\ff_memory_response.$procdff$7425 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\eclass.\riscv.\stage1.\ff_memory_response.$procmux$6086_Y, Q = \soc_inst.eclass.riscv.stage1.ff_memory_response.full_reg, rval = 1'1).
Adding EN signal on $auto$ff.cc:266:slice$9625 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\eclass.\riscv.\stage1.\ff_memory_response.$procmux$6086_Y, Q = \soc_inst.eclass.riscv.stage1.ff_memory_response.full_reg).
Adding SRST signal on $flatten\soc_inst.\eclass.\riscv.\stage1.\ff_memory_response.$procdff$7424 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\eclass.\riscv.\stage1.\ff_memory_response.$procmux$6097_Y, Q = \soc_inst.eclass.riscv.stage1.ff_memory_response.empty_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$9629 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\eclass.\riscv.\stage1.\ff_memory_response.$procmux$6097_Y, Q = \soc_inst.eclass.riscv.stage1.ff_memory_response.empty_reg).
Adding EN signal on $flatten\soc_inst.\eclass.\riscv.\stage1.\ff_memory_response.$procdff$7423 ($dff) from module mkeclass_axi4 (D = \soc_inst.eclass.riscv.stage1.ff_memory_response.D_IN, Q = \soc_inst.eclass.riscv.stage1.ff_memory_response.data1_reg).
Adding EN signal on $flatten\soc_inst.\eclass.\riscv.\stage1.$procdff$7593 ($adff) from module mkeclass_axi4 (D = \soc_inst.eclass.riscv.stage1.rg_wfi_D_IN, Q = \soc_inst.eclass.riscv.stage1.rg_wfi).
Adding EN signal on $flatten\soc_inst.\eclass.\riscv.\stage1.$procdff$7592 ($adff) from module mkeclass_axi4 (D = \soc_inst.eclass.riscv.stage1.rg_pc_D_IN, Q = \soc_inst.eclass.riscv.stage1.rg_pc).
Adding EN signal on $flatten\soc_inst.\eclass.\riscv.\stage1.$procdff$7591 ($adff) from module mkeclass_axi4 (D = 1'0, Q = \soc_inst.eclass.riscv.stage1.rg_initialize).
Adding EN signal on $flatten\soc_inst.\eclass.\riscv.\stage1.$procdff$7590 ($adff) from module mkeclass_axi4 (D = \soc_inst.eclass.riscv.stage1.rg_index_D_IN, Q = \soc_inst.eclass.riscv.stage1.rg_index).
Adding EN signal on $flatten\soc_inst.\eclass.\riscv.\stage1.$procdff$7589 ($adff) from module mkeclass_axi4 (D = \soc_inst.eclass.riscv.stage1.rg_fabric_request_D_IN, Q = \soc_inst.eclass.riscv.stage1.rg_fabric_request).
Adding EN signal on $flatten\soc_inst.\eclass.\riscv.\stage1.$procdff$7588 ($adff) from module mkeclass_axi4 (D = \soc_inst.eclass.riscv.stage1.rg_eEpoch_D_IN, Q = \soc_inst.eclass.riscv.stage1.rg_eEpoch).
Adding EN signal on $flatten\soc_inst.\eclass.\riscv.\stage1.$procdff$7586 ($adff) from module mkeclass_axi4 (D = \soc_inst.eclass.riscv.stage1.rg_wEpoch_D_IN, Q = \soc_inst.eclass.riscv.stage1.rg_wEpoch).
Adding SRST signal on $flatten\soc_inst.\eclass.\riscv.\fifof_6.$procdff$7450 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\eclass.\riscv.\fifof_6.$procmux$6248_Y, Q = \soc_inst.eclass.riscv.fifof_6.empty_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$9643 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\eclass.\riscv.\fifof_6.$procmux$6248_Y, Q = \soc_inst.eclass.riscv.fifof_6.empty_reg).
Adding SRST signal on $flatten\soc_inst.\eclass.\riscv.\fifof_5.$procdff$7450 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\eclass.\riscv.\fifof_5.$procmux$6248_Y, Q = \soc_inst.eclass.riscv.fifof_5.empty_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$9647 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\eclass.\riscv.\fifof_5.$procmux$6248_Y, Q = \soc_inst.eclass.riscv.fifof_5.empty_reg).
Adding EN signal on $flatten\soc_inst.\eclass.\riscv.\fifof_4.$procdff$7447 ($dff) from module mkeclass_axi4 (D = { \soc_inst.eclass.riscv.stage2.CASE_aluinputs_BITS_72_TO_71_0_aluinputs_BIT_ETC__q4 \soc_inst.eclass.riscv.stage2.IF_alu_inputs_37_BITS_72_TO_71_42_EQ_0_43_THEN_ETC___d302 }, Q = \soc_inst.eclass.riscv.fifof_4.D_OUT).
Adding SRST signal on $flatten\soc_inst.\eclass.\riscv.\fifof_4.$procdff$7446 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\eclass.\riscv.\fifof_4.$procmux$6222_Y, Q = \soc_inst.eclass.riscv.fifof_4.empty_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$9652 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\eclass.\riscv.\fifof_4.$procmux$6222_Y, Q = \soc_inst.eclass.riscv.fifof_4.empty_reg).
Adding EN signal on $flatten\soc_inst.\eclass.\riscv.\fifof_3.$procdff$7445 ($dff) from module mkeclass_axi4 (D = { \soc_inst.eclass.riscv.fifof_1.D_OUT [31:0] \soc_inst.eclass.riscv.fifof_2.D_OUT [51:47] \soc_inst.eclass.riscv.stage2.rg_wEpoch }, Q = \soc_inst.eclass.riscv.fifof_3.D_OUT).
Adding SRST signal on $flatten\soc_inst.\eclass.\riscv.\fifof_3.$procdff$7444 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\eclass.\riscv.\fifof_3.$procmux$6209_Y, Q = \soc_inst.eclass.riscv.fifof_3.empty_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$9657 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\eclass.\riscv.\fifof_3.$procmux$6209_Y, Q = \soc_inst.eclass.riscv.fifof_3.empty_reg).
Adding EN signal on $flatten\soc_inst.\eclass.\riscv.\fifof_2.$procdff$7449 ($dff) from module mkeclass_axi4 (D = { \soc_inst.eclass.riscv.stage1.integer_rf_rf.ADDR_2 \soc_inst.eclass.riscv.stage1.integer_rf_rf.ADDR_1 \soc_inst.eclass.riscv.stage1.instance_decoder_func_32_1.x__h260 \soc_inst.eclass.riscv.fifof_2.D_IN [46] \soc_inst.eclass.riscv.stage1.instance_decoder_func_32_1.CASE_decoder_func_32_inst_BITS_6_TO_2_0b0_1_0b_ETC__q11 \soc_inst.eclass.riscv.stage1.IF_IF_v_trigger_enable_1_wget__24_AND_v_trigge_ETC___d305 \soc_inst.eclass.riscv.stage1.instance_decoder_func_32_1.CASE_decoder_func_32_inst_BITS_6_TO_2_0b11_3_0_ETC__q12 \soc_inst.eclass.riscv.stage1.instance_decoder_func_32_1.instr_meta_immediate__h341 \soc_inst.eclass.riscv.stage1._theResult_____1_meta_funct__h6933 }, Q = \soc_inst.eclass.riscv.fifof_2.D_OUT).
Adding SRST signal on $auto$ff.cc:266:slice$9661 ($dffe) from module mkeclass_axi4 (D = \soc_inst.eclass.riscv.stage1.instance_decoder_func_32_1.IF_decoder_func_32_inst_BITS_6_TO_2_EQ_0b11000_ETC___d221 [3], Q = \soc_inst.eclass.riscv.fifof_2.D_OUT [6], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$9661 ($dffe) from module mkeclass_axi4 (D = \soc_inst.eclass.riscv.stage1.x1_avValue_meta_funct__h3613 [5:0], Q = \soc_inst.eclass.riscv.fifof_2.D_OUT [5:0], rval = 6'000011).
Adding SRST signal on $auto$ff.cc:266:slice$9661 ($dffe) from module mkeclass_axi4 (D = \soc_inst.eclass.riscv.stage1.instance_decoder_func_32_1.IF_NOT_decoder_func_32_inst_BITS_1_TO_0_2_EQ_0_ETC___d147, Q = \soc_inst.eclass.riscv.fifof_2.D_OUT [43:41], rval = 3'110).
Adding SRST signal on $auto$ff.cc:266:slice$9661 ($dffe) from module mkeclass_axi4 (D = \soc_inst.eclass.riscv.stage1.final_instruction__h3569 [11:7], Q = \soc_inst.eclass.riscv.fifof_2.D_OUT [51:47], rval = 5'00000).
Adding SRST signal on $auto$ff.cc:266:slice$9661 ($dffe) from module mkeclass_axi4 (D = { \soc_inst.eclass.riscv.stage1.final_instruction__h3569 [31] \soc_inst.eclass.riscv.stage1.instance_decoder_func_32_1.CASE_decoder_func_32_inst_BITS_6_TO_2_0b101_de_ETC__q9 \soc_inst.eclass.riscv.stage1.instance_decoder_func_32_1.CASE_decoder_func_32_inst_BITS_6_TO_2_0b101_de_ETC__q10 [7:5] }, Q = \soc_inst.eclass.riscv.fifof_2.D_OUT [38:24], rval = 15'000000000000000).
Adding SRST signal on $flatten\soc_inst.\eclass.\riscv.\fifof_2.$procdff$7448 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\eclass.\riscv.\fifof_2.$procmux$6235_Y, Q = \soc_inst.eclass.riscv.fifof_2.empty_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$9670 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\eclass.\riscv.\fifof_2.$procmux$6235_Y, Q = \soc_inst.eclass.riscv.fifof_2.empty_reg).
Adding EN signal on $flatten\soc_inst.\eclass.\riscv.\fifof_1.$procdff$7443 ($dff) from module mkeclass_axi4 (D = { \soc_inst.eclass.riscv.stage1.rg_eEpoch \soc_inst.eclass.riscv.stage1.rg_wEpoch \soc_inst.eclass.riscv.stage1.rg_pc }, Q = \soc_inst.eclass.riscv.fifof_1.D_OUT).
Adding SRST signal on $flatten\soc_inst.\eclass.\riscv.\fifof_1.$procdff$7442 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\eclass.\riscv.\fifof_1.$procmux$6196_Y, Q = \soc_inst.eclass.riscv.fifof_1.empty_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$9675 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\eclass.\riscv.\fifof_1.$procmux$6196_Y, Q = \soc_inst.eclass.riscv.fifof_1.empty_reg).
Adding EN signal on $flatten\soc_inst.\eclass.\riscv.\fifof.$procdff$7451 ($dff) from module mkeclass_axi4 (D = { \soc_inst.eclass.riscv.stage1.x__h6080 \soc_inst.eclass.riscv.stage1.x__h6845 }, Q = \soc_inst.eclass.riscv.fifof.D_OUT).
Adding SRST signal on $flatten\soc_inst.\eclass.\riscv.\fifof.$procdff$7450 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\eclass.\riscv.\fifof.$procmux$6248_Y, Q = \soc_inst.eclass.riscv.fifof.empty_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$9680 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\eclass.\riscv.\fifof.$procmux$6248_Y, Q = \soc_inst.eclass.riscv.fifof.empty_reg).
Adding SRST signal on $flatten\soc_inst.\eclass.\memory_xactor_f_wr_resp.$procdff$7417 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\eclass.\memory_xactor_f_wr_resp.$procmux$6042_Y, Q = \soc_inst.eclass.memory_xactor_f_wr_resp.full_reg, rval = 1'1).
Adding EN signal on $auto$ff.cc:266:slice$9684 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\eclass.\memory_xactor_f_wr_resp.$procmux$6042_Y, Q = \soc_inst.eclass.memory_xactor_f_wr_resp.full_reg).
Adding SRST signal on $flatten\soc_inst.\eclass.\memory_xactor_f_wr_resp.$procdff$7416 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\eclass.\memory_xactor_f_wr_resp.$procmux$6053_Y, Q = \soc_inst.eclass.memory_xactor_f_wr_resp.empty_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$9688 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\eclass.\memory_xactor_f_wr_resp.$procmux$6053_Y, Q = \soc_inst.eclass.memory_xactor_f_wr_resp.empty_reg).
Adding EN signal on $flatten\soc_inst.\eclass.\memory_xactor_f_wr_resp.$procdff$7415 ($dff) from module mkeclass_axi4 (D = \soc_inst.fabric_xactors_from_masters_1_f_wr_resp.data0_reg, Q = \soc_inst.eclass.memory_xactor_f_wr_resp.data1_reg).
Adding SRST signal on $flatten\soc_inst.\eclass.\memory_xactor_f_wr_data.$procdff$7433 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\eclass.\memory_xactor_f_wr_data.$procmux$6130_Y, Q = \soc_inst.eclass.memory_xactor_f_wr_data.full_reg, rval = 1'1).
Adding EN signal on $auto$ff.cc:266:slice$9693 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\eclass.\memory_xactor_f_wr_data.$procmux$6130_Y, Q = \soc_inst.eclass.memory_xactor_f_wr_data.full_reg).
Adding SRST signal on $flatten\soc_inst.\eclass.\memory_xactor_f_wr_data.$procdff$7432 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\eclass.\memory_xactor_f_wr_data.$procmux$6141_Y, Q = \soc_inst.eclass.memory_xactor_f_wr_data.empty_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$9697 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\eclass.\memory_xactor_f_wr_data.$procmux$6141_Y, Q = \soc_inst.eclass.memory_xactor_f_wr_data.empty_reg).
Adding EN signal on $flatten\soc_inst.\eclass.\memory_xactor_f_wr_data.$procdff$7431 ($dff) from module mkeclass_axi4 (D = { \soc_inst.eclass.w_wdata__h5190 \soc_inst.eclass.w_wstrb__h5191 5'00001 }, Q = \soc_inst.eclass.memory_xactor_f_wr_data.data1_reg).
Adding SRST signal on $flatten\soc_inst.\eclass.\memory_xactor_f_wr_addr.$procdff$7437 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\eclass.\memory_xactor_f_wr_addr.$procmux$6152_Y, Q = \soc_inst.eclass.memory_xactor_f_wr_addr.full_reg, rval = 1'1).
Adding EN signal on $auto$ff.cc:266:slice$9702 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\eclass.\memory_xactor_f_wr_addr.$procmux$6152_Y, Q = \soc_inst.eclass.memory_xactor_f_wr_addr.full_reg).
Adding SRST signal on $flatten\soc_inst.\eclass.\memory_xactor_f_wr_addr.$procdff$7436 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\eclass.\memory_xactor_f_wr_addr.$procmux$6163_Y, Q = \soc_inst.eclass.memory_xactor_f_wr_addr.empty_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$9706 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\eclass.\memory_xactor_f_wr_addr.$procmux$6163_Y, Q = \soc_inst.eclass.memory_xactor_f_wr_addr.empty_reg).
Adding EN signal on $flatten\soc_inst.\eclass.\memory_xactor_f_wr_addr.$procdff$7435 ($dff) from module mkeclass_axi4 (D = { \soc_inst.eclass.read_request_araddr__h4861 12'001000000000 \soc_inst.eclass.riscv.stage2.ff_memory_request.D_OUT [2:1] 6'010000 }, Q = \soc_inst.eclass.memory_xactor_f_wr_addr.data1_reg).
Adding SRST signal on $flatten\soc_inst.\eclass.\memory_xactor_f_rd_data.$procdff$7429 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\eclass.\memory_xactor_f_rd_data.$procmux$6108_Y, Q = \soc_inst.eclass.memory_xactor_f_rd_data.full_reg, rval = 1'1).
Adding EN signal on $auto$ff.cc:266:slice$9711 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\eclass.\memory_xactor_f_rd_data.$procmux$6108_Y, Q = \soc_inst.eclass.memory_xactor_f_rd_data.full_reg).
Adding SRST signal on $flatten\soc_inst.\eclass.\memory_xactor_f_rd_data.$procdff$7428 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\eclass.\memory_xactor_f_rd_data.$procmux$6119_Y, Q = \soc_inst.eclass.memory_xactor_f_rd_data.empty_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$9715 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\eclass.\memory_xactor_f_rd_data.$procmux$6119_Y, Q = \soc_inst.eclass.memory_xactor_f_rd_data.empty_reg).
Adding EN signal on $flatten\soc_inst.\eclass.\memory_xactor_f_rd_data.$procdff$7427 ($dff) from module mkeclass_axi4 (D = \soc_inst.fabric_xactors_from_masters_1_f_rd_data.data0_reg, Q = \soc_inst.eclass.memory_xactor_f_rd_data.data1_reg).
Adding SRST signal on $flatten\soc_inst.\eclass.\memory_xactor_f_rd_addr.$procdff$7437 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\eclass.\memory_xactor_f_rd_addr.$procmux$6152_Y, Q = \soc_inst.eclass.memory_xactor_f_rd_addr.full_reg, rval = 1'1).
Adding EN signal on $auto$ff.cc:266:slice$9720 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\eclass.\memory_xactor_f_rd_addr.$procmux$6152_Y, Q = \soc_inst.eclass.memory_xactor_f_rd_addr.full_reg).
Adding SRST signal on $flatten\soc_inst.\eclass.\memory_xactor_f_rd_addr.$procdff$7436 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\eclass.\memory_xactor_f_rd_addr.$procmux$6163_Y, Q = \soc_inst.eclass.memory_xactor_f_rd_addr.empty_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$9724 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\eclass.\memory_xactor_f_rd_addr.$procmux$6163_Y, Q = \soc_inst.eclass.memory_xactor_f_rd_addr.empty_reg).
Adding EN signal on $flatten\soc_inst.\eclass.\memory_xactor_f_rd_addr.$procdff$7435 ($dff) from module mkeclass_axi4 (D = { \soc_inst.eclass.read_request_araddr__h4861 4'0010 \soc_inst.eclass.riscv.stage2.ff_memory_request.D_OUT [2:1] 14'00000000010000 }, Q = \soc_inst.eclass.memory_xactor_f_rd_addr.data1_reg).
Adding SRST signal on $flatten\soc_inst.\eclass.\ff_mem_request.$procdff$7441 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\eclass.\ff_mem_request.$procmux$6174_Y, Q = \soc_inst.eclass.ff_mem_request.full_reg, rval = 1'1).
Adding EN signal on $auto$ff.cc:266:slice$9729 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\eclass.\ff_mem_request.$procmux$6174_Y, Q = \soc_inst.eclass.ff_mem_request.full_reg).
Adding SRST signal on $flatten\soc_inst.\eclass.\ff_mem_request.$procdff$7440 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\eclass.\ff_mem_request.$procmux$6185_Y, Q = \soc_inst.eclass.ff_mem_request.empty_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$9733 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\eclass.\ff_mem_request.$procmux$6185_Y, Q = \soc_inst.eclass.ff_mem_request.empty_reg).
Adding EN signal on $flatten\soc_inst.\eclass.\ff_mem_request.$procdff$7439 ($dff) from module mkeclass_axi4 (D = { \soc_inst.eclass.read_request_araddr__h4861 \soc_inst.eclass.w_wdata__h5190 \soc_inst.eclass.riscv.stage2.ff_memory_request.D_OUT [5:0] }, Q = \soc_inst.eclass.ff_mem_request.data1_reg).
Adding SRST signal on $flatten\soc_inst.\eclass.\ff_inst_request.$procdff$7421 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\eclass.\ff_inst_request.$procmux$6064_Y, Q = \soc_inst.eclass.ff_inst_request.full_reg, rval = 1'1).
Adding EN signal on $auto$ff.cc:266:slice$9738 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\eclass.\ff_inst_request.$procmux$6064_Y, Q = \soc_inst.eclass.ff_inst_request.full_reg).
Adding SRST signal on $flatten\soc_inst.\eclass.\ff_inst_request.$procdff$7420 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\eclass.\ff_inst_request.$procmux$6075_Y, Q = \soc_inst.eclass.ff_inst_request.empty_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$9742 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\eclass.\ff_inst_request.$procmux$6075_Y, Q = \soc_inst.eclass.ff_inst_request.empty_reg).
Adding EN signal on $flatten\soc_inst.\eclass.\ff_inst_request.$procdff$7419 ($dff) from module mkeclass_axi4 (D = { \soc_inst.eclass.riscv.stage1.rg_fabric_request \soc_inst.eclass.riscv.stage1.rg_eEpoch \soc_inst.eclass.riscv.stage1.rg_wEpoch }, Q = \soc_inst.eclass.ff_inst_request.data1_reg).
Adding SRST signal on $flatten\soc_inst.\eclass.\ff_inst_access_fault.$procdff$7413 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\eclass.\ff_inst_access_fault.$procmux$6020_Y, Q = \soc_inst.eclass.ff_inst_access_fault.full_reg, rval = 1'1).
Adding EN signal on $auto$ff.cc:266:slice$9747 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\eclass.\ff_inst_access_fault.$procmux$6020_Y, Q = \soc_inst.eclass.ff_inst_access_fault.full_reg).
Adding SRST signal on $flatten\soc_inst.\eclass.\ff_inst_access_fault.$procdff$7412 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\eclass.\ff_inst_access_fault.$procmux$6031_Y, Q = \soc_inst.eclass.ff_inst_access_fault.empty_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$9751 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\eclass.\ff_inst_access_fault.$procmux$6031_Y, Q = \soc_inst.eclass.ff_inst_access_fault.empty_reg).
Adding EN signal on $flatten\soc_inst.\eclass.\ff_inst_access_fault.$procdff$7411 ($dff) from module mkeclass_axi4 (D = \soc_inst.eclass.ff_inst_access_fault.D_IN, Q = \soc_inst.eclass.ff_inst_access_fault.data1_reg).
Adding SRST signal on $flatten\soc_inst.\eclass.\fetch_xactor_f_wr_resp.$procdff$7417 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\eclass.\fetch_xactor_f_wr_resp.$procmux$6042_Y, Q = \soc_inst.eclass.fetch_xactor_f_wr_resp.full_reg, rval = 1'1).
Adding EN signal on $auto$ff.cc:266:slice$9756 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\eclass.\fetch_xactor_f_wr_resp.$logic_not$FIFO2.v:63$5069_Y, Q = \soc_inst.eclass.fetch_xactor_f_wr_resp.full_reg).
Adding SRST signal on $flatten\soc_inst.\eclass.\fetch_xactor_f_wr_resp.$procdff$7416 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\eclass.\fetch_xactor_f_wr_resp.$procmux$6053_Y, Q = \soc_inst.eclass.fetch_xactor_f_wr_resp.empty_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$9758 ($sdff) from module mkeclass_axi4 (D = 1'1, Q = \soc_inst.eclass.fetch_xactor_f_wr_resp.empty_reg).
Adding SRST signal on $flatten\soc_inst.\eclass.\fetch_xactor_f_wr_data.$procdff$7433 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\eclass.\fetch_xactor_f_wr_data.$procmux$6127_Y, Q = \soc_inst.eclass.fetch_xactor_f_wr_data.full_reg, rval = 1'1).
Adding EN signal on $auto$ff.cc:266:slice$9760 ($sdff) from module mkeclass_axi4 (D = 1'1, Q = \soc_inst.eclass.fetch_xactor_f_wr_data.full_reg).
Adding SRST signal on $flatten\soc_inst.\eclass.\fetch_xactor_f_wr_data.$procdff$7432 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\eclass.\fetch_xactor_f_wr_data.$procmux$6138_Y, Q = \soc_inst.eclass.fetch_xactor_f_wr_data.empty_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$9762 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\eclass.\fetch_xactor_f_wr_data.$logic_not$FIFO2.v:103$5125_Y, Q = \soc_inst.eclass.fetch_xactor_f_wr_data.empty_reg).
Adding SRST signal on $flatten\soc_inst.\eclass.\fetch_xactor_f_wr_addr.$procdff$7437 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\eclass.\fetch_xactor_f_wr_addr.$procmux$6149_Y, Q = \soc_inst.eclass.fetch_xactor_f_wr_addr.full_reg, rval = 1'1).
Adding EN signal on $auto$ff.cc:266:slice$9764 ($sdff) from module mkeclass_axi4 (D = 1'1, Q = \soc_inst.eclass.fetch_xactor_f_wr_addr.full_reg).
Adding SRST signal on $flatten\soc_inst.\eclass.\fetch_xactor_f_wr_addr.$procdff$7436 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\eclass.\fetch_xactor_f_wr_addr.$procmux$6160_Y, Q = \soc_inst.eclass.fetch_xactor_f_wr_addr.empty_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$9766 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\eclass.\fetch_xactor_f_wr_addr.$logic_not$FIFO2.v:103$5157_Y, Q = \soc_inst.eclass.fetch_xactor_f_wr_addr.empty_reg).
Adding SRST signal on $flatten\soc_inst.\eclass.\fetch_xactor_f_rd_data.$procdff$7429 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\eclass.\fetch_xactor_f_rd_data.$procmux$6108_Y, Q = \soc_inst.eclass.fetch_xactor_f_rd_data.full_reg, rval = 1'1).
Adding EN signal on $auto$ff.cc:266:slice$9768 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\eclass.\fetch_xactor_f_rd_data.$procmux$6108_Y, Q = \soc_inst.eclass.fetch_xactor_f_rd_data.full_reg).
Adding SRST signal on $flatten\soc_inst.\eclass.\fetch_xactor_f_rd_data.$procdff$7428 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\eclass.\fetch_xactor_f_rd_data.$procmux$6119_Y, Q = \soc_inst.eclass.fetch_xactor_f_rd_data.empty_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$9772 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\eclass.\fetch_xactor_f_rd_data.$procmux$6119_Y, Q = \soc_inst.eclass.fetch_xactor_f_rd_data.empty_reg).
Adding EN signal on $flatten\soc_inst.\eclass.\fetch_xactor_f_rd_data.$procdff$7427 ($dff) from module mkeclass_axi4 (D = \soc_inst.fabric_xactors_from_masters_2_f_rd_data.data0_reg, Q = \soc_inst.eclass.fetch_xactor_f_rd_data.data1_reg).
Adding SRST signal on $flatten\soc_inst.\eclass.\fetch_xactor_f_rd_addr.$procdff$7437 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\eclass.\fetch_xactor_f_rd_addr.$procmux$6152_Y, Q = \soc_inst.eclass.fetch_xactor_f_rd_addr.full_reg, rval = 1'1).
Adding EN signal on $auto$ff.cc:266:slice$9777 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\eclass.\fetch_xactor_f_rd_addr.$procmux$6152_Y, Q = \soc_inst.eclass.fetch_xactor_f_rd_addr.full_reg).
Adding SRST signal on $flatten\soc_inst.\eclass.\fetch_xactor_f_rd_addr.$procdff$7436 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\eclass.\fetch_xactor_f_rd_addr.$procmux$6163_Y, Q = \soc_inst.eclass.fetch_xactor_f_rd_addr.empty_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$9781 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\eclass.\fetch_xactor_f_rd_addr.$procmux$6163_Y, Q = \soc_inst.eclass.fetch_xactor_f_rd_addr.empty_reg).
Adding EN signal on $flatten\soc_inst.\eclass.\fetch_xactor_f_rd_addr.$procdff$7435 ($dff) from module mkeclass_axi4 (D = { \soc_inst.eclass.riscv.stage1.rg_fabric_request 2'00 \soc_inst.eclass.riscv.stage3.csr.csrfile.rg_prv [1] 17'01000000000010000 }, Q = \soc_inst.eclass.fetch_xactor_f_rd_addr.data1_reg).
Adding SRST signal on $flatten\soc_inst.\clint_s_xactor_f_wr_resp.$procdff$7417 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\clint_s_xactor_f_wr_resp.$procmux$6042_Y, Q = \soc_inst.clint_s_xactor_f_wr_resp.full_reg, rval = 1'1).
Adding EN signal on $auto$ff.cc:266:slice$9786 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\clint_s_xactor_f_wr_resp.$procmux$6042_Y, Q = \soc_inst.clint_s_xactor_f_wr_resp.full_reg).
Adding SRST signal on $flatten\soc_inst.\clint_s_xactor_f_wr_resp.$procdff$7416 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\clint_s_xactor_f_wr_resp.$procmux$6053_Y, Q = \soc_inst.clint_s_xactor_f_wr_resp.empty_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$9790 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\clint_s_xactor_f_wr_resp.$procmux$6053_Y, Q = \soc_inst.clint_s_xactor_f_wr_resp.empty_reg).
Adding EN signal on $flatten\soc_inst.\clint_s_xactor_f_wr_resp.$procdff$7415 ($dff) from module mkeclass_axi4 (D = \soc_inst.clint_s_xactor_f_wr_resp.D_IN, Q = \soc_inst.clint_s_xactor_f_wr_resp.data1_reg).
Adding SRST signal on $flatten\soc_inst.\clint_s_xactor_f_wr_data.$procdff$7433 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\clint_s_xactor_f_wr_data.$procmux$6130_Y, Q = \soc_inst.clint_s_xactor_f_wr_data.full_reg, rval = 1'1).
Adding EN signal on $auto$ff.cc:266:slice$9795 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\clint_s_xactor_f_wr_data.$procmux$6130_Y, Q = \soc_inst.clint_s_xactor_f_wr_data.full_reg).
Adding SRST signal on $flatten\soc_inst.\clint_s_xactor_f_wr_data.$procdff$7432 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\clint_s_xactor_f_wr_data.$procmux$6141_Y, Q = \soc_inst.clint_s_xactor_f_wr_data.empty_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$9799 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\clint_s_xactor_f_wr_data.$procmux$6141_Y, Q = \soc_inst.clint_s_xactor_f_wr_data.empty_reg).
Adding EN signal on $flatten\soc_inst.\clint_s_xactor_f_wr_data.$procdff$7431 ($dff) from module mkeclass_axi4 (D = \soc_inst.fabric_xactors_to_slaves_3_f_wr_data.data0_reg, Q = \soc_inst.clint_s_xactor_f_wr_data.data1_reg).
Adding SRST signal on $flatten\soc_inst.\clint_s_xactor_f_wr_addr.$procdff$7437 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\clint_s_xactor_f_wr_addr.$procmux$6152_Y, Q = \soc_inst.clint_s_xactor_f_wr_addr.full_reg, rval = 1'1).
Adding EN signal on $auto$ff.cc:266:slice$9804 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\clint_s_xactor_f_wr_addr.$procmux$6152_Y, Q = \soc_inst.clint_s_xactor_f_wr_addr.full_reg).
Adding SRST signal on $flatten\soc_inst.\clint_s_xactor_f_wr_addr.$procdff$7436 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\clint_s_xactor_f_wr_addr.$procmux$6163_Y, Q = \soc_inst.clint_s_xactor_f_wr_addr.empty_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$9808 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\clint_s_xactor_f_wr_addr.$procmux$6163_Y, Q = \soc_inst.clint_s_xactor_f_wr_addr.empty_reg).
Adding EN signal on $flatten\soc_inst.\clint_s_xactor_f_wr_addr.$procdff$7435 ($dff) from module mkeclass_axi4 (D = \soc_inst.fabric_xactors_to_slaves_3_f_wr_addr.data0_reg, Q = \soc_inst.clint_s_xactor_f_wr_addr.data1_reg).
Adding SRST signal on $flatten\soc_inst.\clint_s_xactor_f_rd_data.$procdff$7429 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\clint_s_xactor_f_rd_data.$procmux$6108_Y, Q = \soc_inst.clint_s_xactor_f_rd_data.full_reg, rval = 1'1).
Adding EN signal on $auto$ff.cc:266:slice$9813 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\clint_s_xactor_f_rd_data.$procmux$6108_Y, Q = \soc_inst.clint_s_xactor_f_rd_data.full_reg).
Adding SRST signal on $flatten\soc_inst.\clint_s_xactor_f_rd_data.$procdff$7428 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\clint_s_xactor_f_rd_data.$procmux$6119_Y, Q = \soc_inst.clint_s_xactor_f_rd_data.empty_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$9817 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\clint_s_xactor_f_rd_data.$procmux$6119_Y, Q = \soc_inst.clint_s_xactor_f_rd_data.empty_reg).
Adding EN signal on $flatten\soc_inst.\clint_s_xactor_f_rd_data.$procdff$7427 ($dff) from module mkeclass_axi4 (D = \soc_inst.clint_s_xactor_f_rd_data.D_IN, Q = \soc_inst.clint_s_xactor_f_rd_data.data1_reg).
Adding SRST signal on $flatten\soc_inst.\clint_s_xactor_f_rd_addr.$procdff$7437 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\clint_s_xactor_f_rd_addr.$procmux$6152_Y, Q = \soc_inst.clint_s_xactor_f_rd_addr.full_reg, rval = 1'1).
Adding EN signal on $auto$ff.cc:266:slice$9822 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\clint_s_xactor_f_rd_addr.$procmux$6152_Y, Q = \soc_inst.clint_s_xactor_f_rd_addr.full_reg).
Adding SRST signal on $flatten\soc_inst.\clint_s_xactor_f_rd_addr.$procdff$7436 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.\clint_s_xactor_f_rd_addr.$procmux$6163_Y, Q = \soc_inst.clint_s_xactor_f_rd_addr.empty_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$9826 ($sdff) from module mkeclass_axi4 (D = $flatten\soc_inst.\clint_s_xactor_f_rd_addr.$procmux$6163_Y, Q = \soc_inst.clint_s_xactor_f_rd_addr.empty_reg).
Adding EN signal on $flatten\soc_inst.\clint_s_xactor_f_rd_addr.$procdff$7435 ($dff) from module mkeclass_axi4 (D = \soc_inst.fabric_xactors_to_slaves_3_f_rd_addr.data0_reg, Q = \soc_inst.clint_s_xactor_f_rd_addr.data1_reg).
Adding EN signal on $flatten\soc_inst.$procdff$7501 ($adff) from module mkeclass_axi4 (D = \soc_inst.uart_user_ifc_uart_rXmitDataOut_D_IN, Q = \soc_inst.uart_user_ifc_uart_rXmitDataOut).
Adding EN signal on $flatten\soc_inst.$procdff$7500 ($adff) from module mkeclass_axi4 (D = \soc_inst.uart_user_ifc_uart_rXmitCellCount_D_IN, Q = \soc_inst.uart_user_ifc_uart_rXmitCellCount).
Adding EN signal on $flatten\soc_inst.$procdff$7499 ($adff) from module mkeclass_axi4 (D = \soc_inst.uart_user_ifc_uart_rXmitBitCount_D_IN, Q = \soc_inst.uart_user_ifc_uart_rXmitBitCount).
Adding EN signal on $flatten\soc_inst.$procdff$7496 ($adff) from module mkeclass_axi4 (D = \soc_inst.uart_user_ifc_uart_rRecvCellCount_D_IN, Q = \soc_inst.uart_user_ifc_uart_rRecvCellCount).
Adding EN signal on $flatten\soc_inst.$procdff$7495 ($adff) from module mkeclass_axi4 (D = \soc_inst.uart_user_ifc_uart_rRecvBitCount_D_IN, Q = \soc_inst.uart_user_ifc_uart_rRecvBitCount).
Adding EN signal on $flatten\soc_inst.$procdff$7494 ($dff) from module mkeclass_axi4 (D = \soc_inst.uart_user_ifc_uart_vrXmitBuffer_7_D_IN, Q = \soc_inst.uart_user_ifc_uart_vrXmitBuffer_7).
Adding EN signal on $flatten\soc_inst.$procdff$7493 ($dff) from module mkeclass_axi4 (D = \soc_inst.uart_user_ifc_uart_vrXmitBuffer_6_D_IN, Q = \soc_inst.uart_user_ifc_uart_vrXmitBuffer_6).
Adding EN signal on $flatten\soc_inst.$procdff$7492 ($dff) from module mkeclass_axi4 (D = \soc_inst.uart_user_ifc_uart_vrXmitBuffer_5_D_IN, Q = \soc_inst.uart_user_ifc_uart_vrXmitBuffer_5).
Adding EN signal on $flatten\soc_inst.$procdff$7491 ($dff) from module mkeclass_axi4 (D = \soc_inst.uart_user_ifc_uart_vrXmitBuffer_4_D_IN, Q = \soc_inst.uart_user_ifc_uart_vrXmitBuffer_4).
Adding EN signal on $flatten\soc_inst.$procdff$7490 ($dff) from module mkeclass_axi4 (D = \soc_inst.uart_user_ifc_uart_vrXmitBuffer_3_D_IN, Q = \soc_inst.uart_user_ifc_uart_vrXmitBuffer_3).
Adding EN signal on $flatten\soc_inst.$procdff$7489 ($dff) from module mkeclass_axi4 (D = \soc_inst.uart_user_ifc_uart_vrXmitBuffer_2_D_IN, Q = \soc_inst.uart_user_ifc_uart_vrXmitBuffer_2).
Adding EN signal on $flatten\soc_inst.$procdff$7488 ($dff) from module mkeclass_axi4 (D = \soc_inst.uart_user_ifc_uart_vrXmitBuffer_1_D_IN, Q = \soc_inst.uart_user_ifc_uart_vrXmitBuffer_1).
Adding EN signal on $flatten\soc_inst.$procdff$7487 ($dff) from module mkeclass_axi4 (D = \soc_inst.uart_user_ifc_uart_vrXmitBuffer_0_D_IN, Q = \soc_inst.uart_user_ifc_uart_vrXmitBuffer_0).
Adding EN signal on $flatten\soc_inst.$procdff$7486 ($dff) from module mkeclass_axi4 (D = \soc_inst.uart_user_ifc_uart_rRecvData, Q = \soc_inst.uart_user_ifc_uart_vrRecvBuffer_7).
Adding EN signal on $flatten\soc_inst.$procdff$7485 ($dff) from module mkeclass_axi4 (D = \soc_inst.uart_user_ifc_uart_vrRecvBuffer_7, Q = \soc_inst.uart_user_ifc_uart_vrRecvBuffer_6).
Adding EN signal on $flatten\soc_inst.$procdff$7484 ($dff) from module mkeclass_axi4 (D = \soc_inst.uart_user_ifc_uart_vrRecvBuffer_6, Q = \soc_inst.uart_user_ifc_uart_vrRecvBuffer_5).
Adding EN signal on $flatten\soc_inst.$procdff$7483 ($dff) from module mkeclass_axi4 (D = \soc_inst.uart_user_ifc_uart_vrRecvBuffer_5, Q = \soc_inst.uart_user_ifc_uart_vrRecvBuffer_4).
Adding EN signal on $flatten\soc_inst.$procdff$7482 ($dff) from module mkeclass_axi4 (D = \soc_inst.uart_user_ifc_uart_vrRecvBuffer_4, Q = \soc_inst.uart_user_ifc_uart_vrRecvBuffer_3).
Adding EN signal on $flatten\soc_inst.$procdff$7481 ($dff) from module mkeclass_axi4 (D = \soc_inst.uart_user_ifc_uart_vrRecvBuffer_3, Q = \soc_inst.uart_user_ifc_uart_vrRecvBuffer_2).
Adding EN signal on $flatten\soc_inst.$procdff$7480 ($dff) from module mkeclass_axi4 (D = \soc_inst.uart_user_ifc_uart_vrRecvBuffer_2, Q = \soc_inst.uart_user_ifc_uart_vrRecvBuffer_1).
Adding EN signal on $flatten\soc_inst.$procdff$7479 ($dff) from module mkeclass_axi4 (D = \soc_inst.uart_user_ifc_uart_vrRecvBuffer_1, Q = \soc_inst.uart_user_ifc_uart_vrRecvBuffer_0).
Adding SRST signal on $flatten\soc_inst.$procdff$7478 ($dff) from module mkeclass_axi4 (D = \uart_rx, Q = \soc_inst.uart_user_ifc_uart_rRecvData, rval = 1'1).
Adding SRST signal on $flatten\soc_inst.$procdff$7475 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.$procmux$6368_Y, Q = \soc_inst.uart_user_ifc_baud_value, rval = 16'0000000000000101).
Adding EN signal on $auto$ff.cc:266:slice$9853 ($sdff) from module mkeclass_axi4 (D = \soc_inst.uart_s_xactor_f_wr_data.data0_reg [24:9], Q = \soc_inst.uart_user_ifc_baud_value).
Adding SRST signal on $flatten\soc_inst.$procdff$7474 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.$procmux$6373_Y, Q = \soc_inst.uart_rg_wrpacket, rval = 52'1010101010101010101010101010101010101010101010101010).
Adding EN signal on $auto$ff.cc:266:slice$9855 ($sdff) from module mkeclass_axi4 (D = \soc_inst.uart_s_xactor_f_wr_addr.data0_reg, Q = \soc_inst.uart_rg_wrpacket).
Adding SRST signal on $flatten\soc_inst.$procdff$7473 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.$procmux$6378_Y, Q = \soc_inst.uart_rg_wrburst_count, rval = 8'00000000).
Adding EN signal on $auto$ff.cc:266:slice$9857 ($sdff) from module mkeclass_axi4 (D = \soc_inst.uart_rg_wrburst_count_D_IN, Q = \soc_inst.uart_rg_wrburst_count).
Adding SRST signal on $flatten\soc_inst.$procdff$7472 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.$procmux$6383_Y, Q = \soc_inst.uart_rg_rdpacket, rval = 52'1010101010101010101010101010101010101010101010101010).
Adding EN signal on $auto$ff.cc:266:slice$9859 ($sdff) from module mkeclass_axi4 (D = \soc_inst.uart_s_xactor_f_rd_addr.data0_reg, Q = \soc_inst.uart_rg_rdpacket).
Adding SRST signal on $flatten\soc_inst.$procdff$7471 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.$procmux$6388_Y, Q = \soc_inst.uart_rg_rdburst_count, rval = 8'00000000).
Adding EN signal on $auto$ff.cc:266:slice$9861 ($sdff) from module mkeclass_axi4 (D = \soc_inst.uart_rg_rdburst_count_D_IN, Q = \soc_inst.uart_rg_rdburst_count).
Adding SRST signal on $flatten\soc_inst.$procdff$7470 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.$procmux$6393_Y, Q = \soc_inst.err_slave_write_state, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$9863 ($sdff) from module mkeclass_axi4 (D = \soc_inst.err_slave_write_state_D_IN, Q = \soc_inst.err_slave_write_state).
Adding SRST signal on $flatten\soc_inst.$procdff$7469 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.$procmux$6398_Y, Q = \soc_inst.err_slave_rg_write_response, rval = 6'101010).
Adding EN signal on $auto$ff.cc:266:slice$9865 ($sdff) from module mkeclass_axi4 (D = { 2'11 \soc_inst.err_slave_s_xactor_f_wr_data.data0_reg [4:1] }, Q = \soc_inst.err_slave_rg_write_response).
Adding SRST signal on $flatten\soc_inst.$procdff$7468 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.$procmux$6403_Y, Q = \soc_inst.err_slave_rg_readburst_counter, rval = 8'00000000).
Adding EN signal on $auto$ff.cc:266:slice$9867 ($sdff) from module mkeclass_axi4 (D = \soc_inst.err_slave_rg_readburst_counter_D_IN, Q = \soc_inst.err_slave_rg_readburst_counter).
Adding SRST signal on $flatten\soc_inst.$procdff$7467 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.$procmux$6408_Y, Q = \soc_inst.err_slave_rg_read_length, rval = 8'00000000).
Adding EN signal on $auto$ff.cc:266:slice$9869 ($sdff) from module mkeclass_axi4 (D = \soc_inst.err_slave_s_xactor_f_rd_addr.data0_reg [13:6], Q = \soc_inst.err_slave_rg_read_length).
Adding SRST signal on $flatten\soc_inst.$procdff$7466 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.$procmux$6413_Y, Q = \soc_inst.err_slave_rg_rd_id, rval = 4'0000).
Adding EN signal on $auto$ff.cc:266:slice$9871 ($sdff) from module mkeclass_axi4 (D = \soc_inst.err_slave_s_xactor_f_rd_addr.data0_reg [3:0], Q = \soc_inst.err_slave_rg_rd_id).
Adding SRST signal on $flatten\soc_inst.$procdff$7465 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.$procmux$6418_Y, Q = \soc_inst.err_slave_read_state, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$9873 ($sdff) from module mkeclass_axi4 (D = \soc_inst.err_slave_read_state_D_IN, Q = \soc_inst.err_slave_read_state).
Adding SRST signal on $flatten\soc_inst.$procdff$7464 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.$procmux$6423_Y, Q = \soc_inst.clint_rg_wrpacket, rval = 52'1010101010101010101010101010101010101010101010101010).
Adding EN signal on $auto$ff.cc:266:slice$9875 ($sdff) from module mkeclass_axi4 (D = \soc_inst.clint_s_xactor_f_wr_addr.data0_reg, Q = \soc_inst.clint_rg_wrpacket).
Adding SRST signal on $flatten\soc_inst.$procdff$7463 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.$procmux$6428_Y, Q = \soc_inst.clint_rg_wrburst_count, rval = 8'00000000).
Adding EN signal on $auto$ff.cc:266:slice$9877 ($sdff) from module mkeclass_axi4 (D = \soc_inst.clint_rg_wrburst_count_D_IN, Q = \soc_inst.clint_rg_wrburst_count).
Adding SRST signal on $flatten\soc_inst.$procdff$7462 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.$procmux$6433_Y, Q = \soc_inst.clint_rg_rdpacket, rval = 52'1010101010101010101010101010101010101010101010101010).
Adding EN signal on $auto$ff.cc:266:slice$9879 ($sdff) from module mkeclass_axi4 (D = \soc_inst.clint_s_xactor_f_rd_addr.data0_reg, Q = \soc_inst.clint_rg_rdpacket).
Adding SRST signal on $flatten\soc_inst.$procdff$7461 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.$procmux$6438_Y, Q = \soc_inst.clint_rg_rdburst_count, rval = 8'00000000).
Adding EN signal on $auto$ff.cc:266:slice$9881 ($sdff) from module mkeclass_axi4 (D = \soc_inst.clint_rg_rdburst_count_D_IN, Q = \soc_inst.clint_rg_rdburst_count).
Adding SRST signal on $flatten\soc_inst.$procdff$7460 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.$procmux$6443_Y, Q = \soc_inst.clint_clint_rgmtimecmp, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:266:slice$9883 ($sdff) from module mkeclass_axi4 (D = \soc_inst.clint_clint_rgmtimecmp_D_IN, Q = \soc_inst.clint_clint_rgmtimecmp).
Adding SRST signal on $flatten\soc_inst.$procdff$7459 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.$procmux$6448_Y, Q = \soc_inst.clint_clint_rgmtime, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:266:slice$9885 ($sdff) from module mkeclass_axi4 (D = \soc_inst.clint_clint_rgmtime_D_IN, Q = \soc_inst.clint_clint_rgmtime).
Adding SRST signal on $flatten\soc_inst.$procdff$7458 ($dff) from module mkeclass_axi4 (D = \soc_inst.clint_clint_rg_tick_D_IN, Q = \soc_inst.clint_clint_rg_tick, rval = 4'0000).
Adding SRST signal on $flatten\soc_inst.$procdff$7457 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.$procmux$6458_Y, Q = \soc_inst.clint_clint_mtip, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$9888 ($sdff) from module mkeclass_axi4 (D = \soc_inst.clint_clint_mtip_D_IN, Q = \soc_inst.clint_clint_mtip).
Adding SRST signal on $flatten\soc_inst.$procdff$7456 ($dff) from module mkeclass_axi4 (D = $flatten\soc_inst.$procmux$6463_Y, Q = \soc_inst.clint_clint_msip, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$9890 ($sdff) from module mkeclass_axi4 (D = \soc_inst.data__h97341 [0], Q = \soc_inst.clint_clint_msip).
Setting constant 1-bit at position 5 on $auto$ff.cc:266:slice$9866 ($sdffe) from module mkeclass_axi4.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$9785 ($dffe) from module mkeclass_axi4.
Setting constant 0-bit at position 1 on $auto$ff.cc:266:slice$9785 ($dffe) from module mkeclass_axi4.
Setting constant 0-bit at position 2 on $auto$ff.cc:266:slice$9785 ($dffe) from module mkeclass_axi4.
Setting constant 0-bit at position 3 on $auto$ff.cc:266:slice$9785 ($dffe) from module mkeclass_axi4.
Setting constant 1-bit at position 4 on $auto$ff.cc:266:slice$9785 ($dffe) from module mkeclass_axi4.
Setting constant 0-bit at position 5 on $auto$ff.cc:266:slice$9785 ($dffe) from module mkeclass_axi4.
Setting constant 0-bit at position 6 on $auto$ff.cc:266:slice$9785 ($dffe) from module mkeclass_axi4.
Setting constant 0-bit at position 7 on $auto$ff.cc:266:slice$9785 ($dffe) from module mkeclass_axi4.
Setting constant 0-bit at position 8 on $auto$ff.cc:266:slice$9785 ($dffe) from module mkeclass_axi4.
Setting constant 0-bit at position 9 on $auto$ff.cc:266:slice$9785 ($dffe) from module mkeclass_axi4.
Setting constant 0-bit at position 10 on $auto$ff.cc:266:slice$9785 ($dffe) from module mkeclass_axi4.
Setting constant 0-bit at position 11 on $auto$ff.cc:266:slice$9785 ($dffe) from module mkeclass_axi4.
Setting constant 0-bit at position 12 on $auto$ff.cc:266:slice$9785 ($dffe) from module mkeclass_axi4.
Setting constant 0-bit at position 13 on $auto$ff.cc:266:slice$9785 ($dffe) from module mkeclass_axi4.
Setting constant 0-bit at position 14 on $auto$ff.cc:266:slice$9785 ($dffe) from module mkeclass_axi4.
Setting constant 1-bit at position 15 on $auto$ff.cc:266:slice$9785 ($dffe) from module mkeclass_axi4.
Setting constant 0-bit at position 16 on $auto$ff.cc:266:slice$9785 ($dffe) from module mkeclass_axi4.
Setting constant 0-bit at position 18 on $auto$ff.cc:266:slice$9785 ($dffe) from module mkeclass_axi4.
Setting constant 0-bit at position 19 on $auto$ff.cc:266:slice$9785 ($dffe) from module mkeclass_axi4.
Setting constant 1-bit at position 0 on $auto$ff.cc:266:slice$9765 ($sdffe) from module mkeclass_axi4.
Setting constant 1-bit at position 0 on $auto$ff.cc:266:slice$9761 ($sdffe) from module mkeclass_axi4.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$9728 ($dffe) from module mkeclass_axi4.
Setting constant 0-bit at position 1 on $auto$ff.cc:266:slice$9728 ($dffe) from module mkeclass_axi4.
Setting constant 0-bit at position 2 on $auto$ff.cc:266:slice$9728 ($dffe) from module mkeclass_axi4.
Setting constant 0-bit at position 3 on $auto$ff.cc:266:slice$9728 ($dffe) from module mkeclass_axi4.
Setting constant 1-bit at position 4 on $auto$ff.cc:266:slice$9728 ($dffe) from module mkeclass_axi4.
Setting constant 0-bit at position 5 on $auto$ff.cc:266:slice$9728 ($dffe) from module mkeclass_axi4.
Setting constant 0-bit at position 6 on $auto$ff.cc:266:slice$9728 ($dffe) from module mkeclass_axi4.
Setting constant 0-bit at position 7 on $auto$ff.cc:266:slice$9728 ($dffe) from module mkeclass_axi4.
Setting constant 0-bit at position 8 on $auto$ff.cc:266:slice$9728 ($dffe) from module mkeclass_axi4.
Setting constant 0-bit at position 9 on $auto$ff.cc:266:slice$9728 ($dffe) from module mkeclass_axi4.
Setting constant 0-bit at position 10 on $auto$ff.cc:266:slice$9728 ($dffe) from module mkeclass_axi4.
Setting constant 0-bit at position 11 on $auto$ff.cc:266:slice$9728 ($dffe) from module mkeclass_axi4.
Setting constant 0-bit at position 12 on $auto$ff.cc:266:slice$9728 ($dffe) from module mkeclass_axi4.
Setting constant 0-bit at position 13 on $auto$ff.cc:266:slice$9728 ($dffe) from module mkeclass_axi4.
Setting constant 0-bit at position 16 on $auto$ff.cc:266:slice$9728 ($dffe) from module mkeclass_axi4.
Setting constant 1-bit at position 17 on $auto$ff.cc:266:slice$9728 ($dffe) from module mkeclass_axi4.
Setting constant 0-bit at position 18 on $auto$ff.cc:266:slice$9728 ($dffe) from module mkeclass_axi4.
Setting constant 0-bit at position 19 on $auto$ff.cc:266:slice$9728 ($dffe) from module mkeclass_axi4.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$9710 ($dffe) from module mkeclass_axi4.
Setting constant 0-bit at position 1 on $auto$ff.cc:266:slice$9710 ($dffe) from module mkeclass_axi4.
Setting constant 0-bit at position 2 on $auto$ff.cc:266:slice$9710 ($dffe) from module mkeclass_axi4.
Setting constant 0-bit at position 3 on $auto$ff.cc:266:slice$9710 ($dffe) from module mkeclass_axi4.
Setting constant 1-bit at position 4 on $auto$ff.cc:266:slice$9710 ($dffe) from module mkeclass_axi4.
Setting constant 0-bit at position 5 on $auto$ff.cc:266:slice$9710 ($dffe) from module mkeclass_axi4.
Setting constant 0-bit at position 8 on $auto$ff.cc:266:slice$9710 ($dffe) from module mkeclass_axi4.
Setting constant 0-bit at position 9 on $auto$ff.cc:266:slice$9710 ($dffe) from module mkeclass_axi4.
Setting constant 0-bit at position 10 on $auto$ff.cc:266:slice$9710 ($dffe) from module mkeclass_axi4.
Setting constant 0-bit at position 11 on $auto$ff.cc:266:slice$9710 ($dffe) from module mkeclass_axi4.
Setting constant 0-bit at position 12 on $auto$ff.cc:266:slice$9710 ($dffe) from module mkeclass_axi4.
Setting constant 0-bit at position 13 on $auto$ff.cc:266:slice$9710 ($dffe) from module mkeclass_axi4.
Setting constant 0-bit at position 14 on $auto$ff.cc:266:slice$9710 ($dffe) from module mkeclass_axi4.
Setting constant 0-bit at position 15 on $auto$ff.cc:266:slice$9710 ($dffe) from module mkeclass_axi4.
Setting constant 0-bit at position 16 on $auto$ff.cc:266:slice$9710 ($dffe) from module mkeclass_axi4.
Setting constant 1-bit at position 17 on $auto$ff.cc:266:slice$9710 ($dffe) from module mkeclass_axi4.
Setting constant 0-bit at position 18 on $auto$ff.cc:266:slice$9710 ($dffe) from module mkeclass_axi4.
Setting constant 0-bit at position 19 on $auto$ff.cc:266:slice$9710 ($dffe) from module mkeclass_axi4.
Setting constant 1-bit at position 0 on $auto$ff.cc:266:slice$9701 ($dffe) from module mkeclass_axi4.
Setting constant 0-bit at position 1 on $auto$ff.cc:266:slice$9701 ($dffe) from module mkeclass_axi4.
Setting constant 0-bit at position 2 on $auto$ff.cc:266:slice$9701 ($dffe) from module mkeclass_axi4.
Setting constant 0-bit at position 3 on $auto$ff.cc:266:slice$9701 ($dffe) from module mkeclass_axi4.
Setting constant 0-bit at position 4 on $auto$ff.cc:266:slice$9701 ($dffe) from module mkeclass_axi4.
Setting constant 0-bit at position 5 on $auto$ff.cc:266:slice$9529 ($dffe) from module mkeclass_axi4.
Setting constant 0-bit at position 6 on $auto$ff.cc:266:slice$9529 ($dffe) from module mkeclass_axi4.
Setting constant 0-bit at position 7 on $auto$ff.cc:266:slice$9529 ($dffe) from module mkeclass_axi4.
Setting constant 0-bit at position 8 on $auto$ff.cc:266:slice$9529 ($dffe) from module mkeclass_axi4.
Setting constant 0-bit at position 9 on $auto$ff.cc:266:slice$9529 ($dffe) from module mkeclass_axi4.
Setting constant 0-bit at position 10 on $auto$ff.cc:266:slice$9529 ($dffe) from module mkeclass_axi4.
Setting constant 0-bit at position 11 on $auto$ff.cc:266:slice$9529 ($dffe) from module mkeclass_axi4.
Setting constant 0-bit at position 12 on $auto$ff.cc:266:slice$9529 ($dffe) from module mkeclass_axi4.
Setting constant 0-bit at position 13 on $auto$ff.cc:266:slice$9529 ($dffe) from module mkeclass_axi4.
Setting constant 0-bit at position 14 on $auto$ff.cc:266:slice$9529 ($dffe) from module mkeclass_axi4.
Setting constant 0-bit at position 15 on $auto$ff.cc:266:slice$9529 ($dffe) from module mkeclass_axi4.
Setting constant 0-bit at position 16 on $auto$ff.cc:266:slice$9529 ($dffe) from module mkeclass_axi4.
Setting constant 0-bit at position 17 on $auto$ff.cc:266:slice$9529 ($dffe) from module mkeclass_axi4.
Setting constant 0-bit at position 18 on $auto$ff.cc:266:slice$9529 ($dffe) from module mkeclass_axi4.
Setting constant 0-bit at position 19 on $auto$ff.cc:266:slice$9529 ($dffe) from module mkeclass_axi4.
Setting constant 0-bit at position 20 on $auto$ff.cc:266:slice$9529 ($dffe) from module mkeclass_axi4.
Setting constant 0-bit at position 21 on $auto$ff.cc:266:slice$9529 ($dffe) from module mkeclass_axi4.
Setting constant 0-bit at position 22 on $auto$ff.cc:266:slice$9529 ($dffe) from module mkeclass_axi4.
Setting constant 0-bit at position 23 on $auto$ff.cc:266:slice$9529 ($dffe) from module mkeclass_axi4.
Setting constant 0-bit at position 24 on $auto$ff.cc:266:slice$9529 ($dffe) from module mkeclass_axi4.
Setting constant 0-bit at position 25 on $auto$ff.cc:266:slice$9529 ($dffe) from module mkeclass_axi4.
Setting constant 0-bit at position 26 on $auto$ff.cc:266:slice$9529 ($dffe) from module mkeclass_axi4.
Setting constant 0-bit at position 27 on $auto$ff.cc:266:slice$9529 ($dffe) from module mkeclass_axi4.
Setting constant 0-bit at position 28 on $auto$ff.cc:266:slice$9529 ($dffe) from module mkeclass_axi4.
Setting constant 0-bit at position 29 on $auto$ff.cc:266:slice$9529 ($dffe) from module mkeclass_axi4.
Setting constant 0-bit at position 30 on $auto$ff.cc:266:slice$9529 ($dffe) from module mkeclass_axi4.
Setting constant 0-bit at position 31 on $auto$ff.cc:266:slice$9529 ($dffe) from module mkeclass_axi4.
Setting constant 0-bit at position 32 on $auto$ff.cc:266:slice$9529 ($dffe) from module mkeclass_axi4.
Setting constant 0-bit at position 33 on $auto$ff.cc:266:slice$9529 ($dffe) from module mkeclass_axi4.
Setting constant 0-bit at position 34 on $auto$ff.cc:266:slice$9529 ($dffe) from module mkeclass_axi4.
Setting constant 0-bit at position 35 on $auto$ff.cc:266:slice$9529 ($dffe) from module mkeclass_axi4.
Setting constant 0-bit at position 36 on $auto$ff.cc:266:slice$9529 ($dffe) from module mkeclass_axi4.
Setting constant 1-bit at position 37 on $auto$ff.cc:266:slice$9529 ($dffe) from module mkeclass_axi4.
Setting constant 1-bit at position 38 on $auto$ff.cc:266:slice$9529 ($dffe) from module mkeclass_axi4.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$8961 ($dffe) from module mkeclass_axi4.
Setting constant 1-bit at position 1 on $auto$ff.cc:266:slice$8961 ($dffe) from module mkeclass_axi4.
Setting constant 0-bit at position 2 on $auto$ff.cc:266:slice$8961 ($dffe) from module mkeclass_axi4.
Setting constant 0-bit at position 3 on $auto$ff.cc:266:slice$8961 ($dffe) from module mkeclass_axi4.
Setting constant 1-bit at position 4 on $auto$ff.cc:266:slice$8961 ($dffe) from module mkeclass_axi4.
Setting constant 0-bit at position 5 on $auto$ff.cc:266:slice$8961 ($dffe) from module mkeclass_axi4.
Setting constant 0-bit at position 6 on $auto$ff.cc:266:slice$8961 ($dffe) from module mkeclass_axi4.
Setting constant 0-bit at position 7 on $auto$ff.cc:266:slice$8961 ($dffe) from module mkeclass_axi4.
Setting constant 0-bit at position 8 on $auto$ff.cc:266:slice$8961 ($dffe) from module mkeclass_axi4.
Setting constant 0-bit at position 9 on $auto$ff.cc:266:slice$8961 ($dffe) from module mkeclass_axi4.
Setting constant 0-bit at position 10 on $auto$ff.cc:266:slice$8961 ($dffe) from module mkeclass_axi4.
Setting constant 0-bit at position 11 on $auto$ff.cc:266:slice$8961 ($dffe) from module mkeclass_axi4.
Setting constant 0-bit at position 12 on $auto$ff.cc:266:slice$8961 ($dffe) from module mkeclass_axi4.
Setting constant 0-bit at position 13 on $auto$ff.cc:266:slice$8961 ($dffe) from module mkeclass_axi4.
Setting constant 0-bit at position 14 on $auto$ff.cc:266:slice$8961 ($dffe) from module mkeclass_axi4.
Setting constant 1-bit at position 15 on $auto$ff.cc:266:slice$8961 ($dffe) from module mkeclass_axi4.
Setting constant 0-bit at position 16 on $auto$ff.cc:266:slice$8961 ($dffe) from module mkeclass_axi4.
Setting constant 1-bit at position 17 on $auto$ff.cc:266:slice$8961 ($dffe) from module mkeclass_axi4.
Setting constant 0-bit at position 18 on $auto$ff.cc:266:slice$8961 ($dffe) from module mkeclass_axi4.
Setting constant 0-bit at position 19 on $auto$ff.cc:266:slice$8961 ($dffe) from module mkeclass_axi4.
Setting constant 1-bit at position 0 on $auto$ff.cc:266:slice$8942 ($sdffe) from module mkeclass_axi4.
Setting constant 1-bit at position 0 on $auto$ff.cc:266:slice$8938 ($sdffe) from module mkeclass_axi4.
Setting constant 1-bit at position 0 on $auto$ff.cc:266:slice$8926 ($sdffe) from module mkeclass_axi4.

52.12.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mkeclass_axi4..
Removed 451 unused cells and 755 unused wires.
<suppressed ~452 debug messages>

52.12.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module mkeclass_axi4.
<suppressed ~220 debug messages>

52.12.9. Rerunning OPT passes. (Maybe there is more to do..)

52.12.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mkeclass_axi4..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~396 debug messages>

52.12.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mkeclass_axi4.
    New input vector for $reduce_or cell $auto$fsm_map.cc:144:implement_pattern_cache$8690: { $auto$fsm_map.cc:74:implement_pattern_cache$8682 $auto$fsm_map.cc:118:implement_pattern_cache$8688 $auto$fsm_map.cc:74:implement_pattern_cache$8680 }
    New input vector for $reduce_or cell $auto$fsm_map.cc:144:implement_pattern_cache$8679: { $auto$fsm_map.cc:118:implement_pattern_cache$8677 $auto$fsm_map.cc:74:implement_pattern_cache$8673 $auto$fsm_map.cc:74:implement_pattern_cache$8671 $auto$fsm_map.cc:74:implement_pattern_cache$8667 }
  Optimizing cells in module \mkeclass_axi4.
Performed a total of 2 changes.

52.12.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mkeclass_axi4'.
<suppressed ~252 debug messages>
Removed a total of 84 cells.

52.12.13. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$9763 ($sdffe) from module mkeclass_axi4.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$9767 ($sdffe) from module mkeclass_axi4.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$8928 ($sdffe) from module mkeclass_axi4.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$8940 ($sdffe) from module mkeclass_axi4.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$8944 ($sdffe) from module mkeclass_axi4.

52.12.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mkeclass_axi4..
Removed 10 unused cells and 106 unused wires.
<suppressed ~11 debug messages>

52.12.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module mkeclass_axi4.
<suppressed ~80 debug messages>

52.12.16. Rerunning OPT passes. (Maybe there is more to do..)

52.12.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mkeclass_axi4..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~397 debug messages>

52.12.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mkeclass_axi4.
Performed a total of 0 changes.

52.12.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mkeclass_axi4'.
Removed a total of 0 cells.

52.12.20. Executing OPT_DFF pass (perform DFF optimizations).
Handling D = Q on $flatten\soc_inst.\signature.\s_xactor_f_rd_data.$procdff$7426 ($dff) from module mkeclass_axi4 (removing D path).
Handling D = Q on $flatten\soc_inst.\signature.\m_xactor_f_wr_data.$procdff$7430 ($dff) from module mkeclass_axi4 (removing D path).
Handling D = Q on $flatten\soc_inst.\signature.\m_xactor_f_wr_addr.$procdff$7434 ($dff) from module mkeclass_axi4 (removing D path).
Handling D = Q on $flatten\soc_inst.\eclass.\fetch_xactor_f_wr_data.$procdff$7430 ($dff) from module mkeclass_axi4 (removing D path).
Handling D = Q on $flatten\soc_inst.\eclass.\fetch_xactor_f_wr_addr.$procdff$7434 ($dff) from module mkeclass_axi4 (removing D path).
Handling never-active EN on $auto$ff.cc:266:slice$9369 ($dffe) from module mkeclass_axi4 (removing D path).
Handling never-active EN on $auto$ff.cc:266:slice$9360 ($dffe) from module mkeclass_axi4 (removing D path).
Handling never-active EN on $auto$ff.cc:266:slice$9280 ($dffe) from module mkeclass_axi4 (removing D path).
Handling never-active EN on $auto$ff.cc:266:slice$9271 ($dffe) from module mkeclass_axi4 (removing D path).
Handling never-active EN on $auto$ff.cc:266:slice$9072 ($dffe) from module mkeclass_axi4 (removing D path).

52.12.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mkeclass_axi4..
Removed 5 unused cells and 70 unused wires.
<suppressed ~6 debug messages>

52.12.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module mkeclass_axi4.
<suppressed ~10 debug messages>

52.12.23. Rerunning OPT passes. (Maybe there is more to do..)

52.12.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mkeclass_axi4..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~397 debug messages>

52.12.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mkeclass_axi4.
Performed a total of 0 changes.

52.12.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mkeclass_axi4'.
Removed a total of 0 cells.

52.12.27. Executing OPT_DFF pass (perform DFF optimizations).

52.12.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mkeclass_axi4..
Removed 5 unused cells and 15 unused wires.
<suppressed ~11 debug messages>

52.12.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module mkeclass_axi4.

52.12.30. Rerunning OPT passes. (Maybe there is more to do..)

52.12.31. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mkeclass_axi4..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~397 debug messages>

52.12.32. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mkeclass_axi4.
Performed a total of 0 changes.

52.12.33. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mkeclass_axi4'.
Removed a total of 0 cells.

52.12.34. Executing OPT_DFF pass (perform DFF optimizations).

52.12.35. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mkeclass_axi4..

52.12.36. Executing OPT_EXPR pass (perform const folding).
Optimizing module mkeclass_axi4.

52.12.37. Finished OPT passes. (There is nothing left to do.)

52.13. Executing WREDUCE pass (reducing word size of cells).
Removed top 2 bits (of 3) from port B of cell mkeclass_axi4.$auto$fsm_map.cc:77:implement_pattern_cache$8416 ($eq).
Removed top 2 bits (of 3) from port B of cell mkeclass_axi4.$auto$fsm_map.cc:77:implement_pattern_cache$8441 ($eq).
Removed top 2 bits (of 3) from port B of cell mkeclass_axi4.$auto$fsm_map.cc:77:implement_pattern_cache$8466 ($eq).
Removed top 2 bits (of 3) from port B of cell mkeclass_axi4.$auto$fsm_map.cc:77:implement_pattern_cache$8491 ($eq).
Removed top 2 bits (of 3) from port B of cell mkeclass_axi4.$auto$fsm_map.cc:77:implement_pattern_cache$8516 ($eq).
Removed top 2 bits (of 3) from port B of cell mkeclass_axi4.$auto$fsm_map.cc:77:implement_pattern_cache$7940 ($eq).
Removed top 5 bits (of 6) from port B of cell mkeclass_axi4.$auto$fsm_map.cc:77:implement_pattern_cache$8018 ($eq).
Removed top 2 bits (of 3) from port B of cell mkeclass_axi4.$auto$fsm_map.cc:77:implement_pattern_cache$8391 ($eq).
Removed top 2 bits (of 3) from port B of cell mkeclass_axi4.$auto$fsm_map.cc:77:implement_pattern_cache$7865 ($eq).
Removed top 2 bits (of 3) from port B of cell mkeclass_axi4.$auto$fsm_map.cc:77:implement_pattern_cache$7840 ($eq).
Removed top 5 bits (of 6) from port B of cell mkeclass_axi4.$auto$fsm_map.cc:77:implement_pattern_cache$8306 ($eq).
Removed top 5 bits (of 6) from port B of cell mkeclass_axi4.$auto$fsm_map.cc:77:implement_pattern_cache$8352 ($eq).
Removed top 5 bits (of 6) from port B of cell mkeclass_axi4.$auto$fsm_map.cc:77:implement_pattern_cache$7972 ($eq).
Removed top 2 bits (of 3) from port B of cell mkeclass_axi4.$auto$fsm_map.cc:77:implement_pattern_cache$7915 ($eq).
Removed top 5 bits (of 6) from port B of cell mkeclass_axi4.$auto$fsm_map.cc:77:implement_pattern_cache$8548 ($eq).
Removed top 5 bits (of 6) from port B of cell mkeclass_axi4.$auto$fsm_map.cc:77:implement_pattern_cache$8594 ($eq).
Removed top 2 bits (of 3) from port B of cell mkeclass_axi4.$auto$fsm_map.cc:77:implement_pattern_cache$7815 ($eq).
Removed top 5 bits (of 6) from port B of cell mkeclass_axi4.$auto$fsm_map.cc:77:implement_pattern_cache$8064 ($eq).
Removed top 3 bits (of 5) from mux cell mkeclass_axi4.$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:461$4921 ($mux).
Removed top 1 bits (of 2) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.$ne$mkeclass.v:1440$3705 ($ne).
Removed top 1 bits (of 2) from port B of cell mkeclass_axi4.$auto$opt_dff.cc:195:make_patterns_logic$9601 ($ne).
Removed top 1 bits (of 3) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.$eq$mkeclass.v:1497$3722 ($eq).
Removed top 1 bits (of 2) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.$eq$mkeclass.v:1444$3708 ($eq).
Removed top 1 bits (of 2) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.$eq$mkeclass.v:1253$3668 ($eq).
Removed top 1 bits (of 2) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.$procmux$7089_CMP0 ($eq).
Removed top 2 bits (of 3) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.$procmux$7093_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.$procmux$7097_CMP0 ($eq).
Removed top 1 bits (of 7) from mux cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage1.$ternary$mkstage1.v:948$4018 ($mux).
Removed top 1 bits (of 7) from mux cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage1.$ternary$mkstage1.v:914$3992 ($mux).
Removed top 2 bits (of 4) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage1.$eq$mkstage1.v:852$3946 ($eq).
Removed top 4 bits (of 5) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage1.$add$mkstage1.v:782$3928 ($add).
Removed top 29 bits (of 32) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage1.$add$mkstage1.v:743$3915 ($add).
Removed top 2 bits (of 4) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage1.$procmux$7130_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage1.$procmux$7131_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage1.$procmux$7158_CMP0 ($eq).
Removed top 3 bits (of 4) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage1.\instance_decoder_func_32_1.\instance_address_valid_0.$ne$module_address_valid.v:153$4335 ($ne).
Removed top 1 bits (of 4) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage1.\instance_decoder_func_32_1.\instance_address_valid_0.$lt$module_address_valid.v:148$4330 ($lt).
Removed top 2 bits (of 4) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage1.\instance_decoder_func_32_1.\instance_address_valid_0.$le$module_address_valid.v:118$4320 ($le).
Removed top 2 bits (of 4) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage1.\instance_decoder_func_32_1.\instance_address_valid_0.$gt$module_address_valid.v:131$4323 ($gt).
Removed top 6 bits (of 8) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage1.\instance_decoder_func_32_1.\instance_address_valid_0.$eq$module_address_valid.v:81$4293 ($eq).
Removed top 6 bits (of 8) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage1.\instance_decoder_func_32_1.\instance_address_valid_0.$eq$module_address_valid.v:80$4291 ($eq).
Removed top 7 bits (of 8) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage1.\instance_decoder_func_32_1.\instance_address_valid_0.$eq$module_address_valid.v:79$4290 ($eq).
Removed top 1 bits (of 4) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage1.\instance_decoder_func_32_1.\instance_address_valid_0.$eq$module_address_valid.v:64$4280 ($eq).
Removed top 1 bits (of 4) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage1.\instance_decoder_func_32_1.\instance_address_valid_0.$eq$module_address_valid.v:63$4278 ($eq).
Removed top 1 bits (of 4) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage1.\instance_decoder_func_32_1.\instance_address_valid_0.$eq$module_address_valid.v:160$4343 ($eq).
Removed top 2 bits (of 4) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage1.\instance_decoder_func_32_1.\instance_address_valid_0.$eq$module_address_valid.v:159$4341 ($eq).
Removed top 2 bits (of 4) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage1.\instance_decoder_func_32_1.\instance_address_valid_0.$eq$module_address_valid.v:158$4339 ($eq).
Removed top 3 bits (of 4) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage1.\instance_decoder_func_32_1.\instance_address_valid_0.$eq$module_address_valid.v:157$4338 ($eq).
Removed top 3 bits (of 4) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage1.\instance_decoder_func_32_1.\instance_address_valid_0.$eq$module_address_valid.v:156$4337 ($eq).
Removed top 1 bits (of 2) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage1.\instance_decoder_func_32_1.\instance_address_valid_0.$eq$module_address_valid.v:146$4327 ($eq).
Removed top 2 bits (of 4) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage1.\instance_decoder_func_32_1.\instance_address_valid_0.$eq$module_address_valid.v:133$4324 ($eq).
Removed top 1 bits (of 4) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage1.\instance_decoder_func_32_1.\instance_address_valid_0.$procmux$7198_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage1.\instance_decoder_func_32_1.\instance_address_valid_0.$procmux$7201_CMP0 ($eq).
Removed top 5 bits (of 8) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage1.\instance_decoder_func_32_1.\instance_address_valid_0.$procmux$7210_CMP1 ($eq).
Removed top 5 bits (of 8) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage1.\instance_decoder_func_32_1.\instance_address_valid_0.$procmux$7210_CMP2 ($eq).
Removed top 1 bits (of 8) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage1.\instance_decoder_func_32_1.\instance_address_valid_0.$procmux$7210_CMP3 ($eq).
Removed top 1 bits (of 8) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage1.\instance_decoder_func_32_1.\instance_address_valid_0.$procmux$7210_CMP4 ($eq).
Removed top 1 bits (of 8) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage1.\instance_decoder_func_32_1.\instance_address_valid_0.$procmux$7210_CMP5 ($eq).
Removed top 1 bits (of 8) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage1.\instance_decoder_func_32_1.\instance_address_valid_0.$procmux$7210_CMP6 ($eq).
Removed top 1 bits (of 8) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage1.\instance_decoder_func_32_1.\instance_address_valid_0.$procmux$7210_CMP7 ($eq).
Removed top 3 bits (of 5) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage1.\instance_decoder_func_32_1.$procmux$7287_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage1.\instance_decoder_func_32_1.$procmux$7283_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage1.\instance_decoder_func_32_1.$procmux$7273_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage1.\instance_decoder_func_32_1.$procmux$7272_CMP0 ($eq).
Removed top 2 bits (of 3) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage1.\instance_decoder_func_32_1.$procmux$7249_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage1.\instance_decoder_func_32_1.$procmux$7235_CMP0 ($eq).
Removed top 11 bits (of 25) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage1.\instance_decoder_func_32_1.$procmux$7220_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage1.\instance_decoder_func_32_1.$eq$module_decoder_func_32.v:124$4394 ($eq).
Removed top 2 bits (of 5) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage1.\instance_decoder_func_32_1.$eq$module_decoder_func_32.v:174$4422 ($eq).
Removed top 1 bits (of 5) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage1.\instance_decoder_func_32_1.$eq$module_decoder_func_32.v:184$4436 ($eq).
Removed top 2 bits (of 5) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage1.\instance_decoder_func_32_1.$eq$module_decoder_func_32.v:185$4437 ($eq).
Removed top 1 bits (of 2) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage1.\instance_decoder_func_32_1.$eq$module_decoder_func_32.v:196$4450 ($eq).
Removed top 10 bits (of 12) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage1.\instance_decoder_func_32_1.$eq$module_decoder_func_32.v:230$4459 ($eq).
Removed top 2 bits (of 12) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage1.\instance_decoder_func_32_1.$eq$module_decoder_func_32.v:234$4465 ($eq).
Removed top 3 bits (of 12) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage1.\instance_decoder_func_32_1.$eq$module_decoder_func_32.v:239$4473 ($eq).
Removed top 2 bits (of 3) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage1.\instance_decoder_func_32_1.$eq$module_decoder_func_32.v:270$4488 ($eq).
Removed top 1 bits (of 7) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage1.\instance_decoder_func_32_1.$eq$module_decoder_func_32.v:287$4499 ($eq).
Removed top 1 bits (of 3) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage1.\instance_decoder_func_32_1.$lt$module_decoder_func_32.v:298$4503 ($lt).
Removed top 1 bits (of 2) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage1.\instance_decoder_func_32_1.$ne$module_decoder_func_32.v:109$4386 ($ne).
Removed top 1 bits (of 5) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage1.\instance_decoder_func_32_1.$ne$module_decoder_func_32.v:117$4405 ($ne).
Removed top 2 bits (of 5) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage1.\instance_decoder_func_32_1.$ne$module_decoder_func_32.v:118$4406 ($ne).
Removed top 1 bits (of 3) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage1.\instance_decoder_func_32_1.$ne$module_decoder_func_32.v:314$4507 ($ne).
Removed top 1 bits (of 3) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage1.\instance_decoder_func_32_1.$ne$module_decoder_func_32.v:315$4508 ($ne).
Removed top 1 bits (of 3) from mux cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:105$4392 ($mux).
Removed top 1 bits (of 7) from mux cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:155$4416 ($mux).
Removed top 15 bits (of 32) from mux cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:160$4418 ($mux).
Removed top 4 bits (of 6) from mux cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:169$4421 ($mux).
Removed top 2 bits (of 3) from mux cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:239$4480 ($mux).
Removed top 1 bits (of 3) from mux cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:320$4512 ($mux).
Removed top 3 bits (of 12) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage1.\instance_chk_interrupt_0.$and$module_chk_interrupt.v:108$4366 ($and).
Removed top 3 bits (of 12) from port A of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage1.\instance_chk_interrupt_0.$and$module_chk_interrupt.v:92$4359 ($and).
Removed top 3 bits (of 12) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage1.\instance_chk_interrupt_0.$and$module_chk_interrupt.v:92$4359 ($and).
Removed top 3 bits (of 12) from port Y of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage1.\instance_chk_interrupt_0.$and$module_chk_interrupt.v:92$4359 ($and).
Removed top 2 bits (of 14) from mux cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage1.\instance_chk_interrupt_0.$ternary$module_chk_interrupt.v:83$4351 ($mux).
Removed top 2 bits (of 14) from mux cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage1.\instance_chk_interrupt_0.$ternary$module_chk_interrupt.v:86$4354 ($mux).
Removed top 1 bits (of 3) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage2.$eq$mkstage2.v:1156$4107 ($eq).
Removed top 1 bits (of 3) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage2.$eq$mkstage2.v:1152$4103 ($eq).
Removed top 2 bits (of 3) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage2.$procmux$7170_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage2.$procmux$7174_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage2.$procmux$7179_CMP0 ($eq).
Removed top 31 bits (of 32) from mux cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$ternary$module_fn_alu.v:196$4598 ($mux).
Removed top 1 bits (of 33) from port Y of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$or$module_fn_alu.v:211$4612 ($or).
Removed top 1 bits (of 33) from port A of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$or$module_fn_alu.v:211$4612 ($or).
Removed top 1 bits (of 33) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$or$module_fn_alu.v:211$4612 ($or).
Removed top 1 bits (of 2) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$ne$module_fn_alu.v:174$4572 ($ne).
Removed top 1 bits (of 2) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$ne$module_fn_alu.v:173$4567 ($ne).
Removed top 1 bits (of 2) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$ne$module_fn_alu.v:171$4563 ($ne).
Removed top 1 bits (of 2) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$eq$module_fn_alu.v:243$4660 ($eq).
Removed top 1 bits (of 2) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$eq$module_fn_alu.v:242$4655 ($eq).
Removed top 1 bits (of 2) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$eq$module_fn_alu.v:240$4651 ($eq).
Removed top 1 bits (of 2) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$eq$module_fn_alu.v:234$4634 ($eq).
Removed top 1 bits (of 33) from port Y of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$and$module_fn_alu.v:212$4611 ($and).
Removed top 1 bits (of 33) from port A of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$and$module_fn_alu.v:212$4611 ($and).
Removed top 1 bits (of 33) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$and$module_fn_alu.v:212$4611 ($and).
Removed top 1 bits (of 4) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$procmux$7295_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$procmux$7311_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$procmux$7312_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$procmux$7321_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$procmux$7322_CMP0 ($eq).
Removed top 3 bits (of 4) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$procmux$7324_CMP0 ($eq).
Removed top 5 bits (of 38) from mux cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage3.$ternary$mkstage3.v:908$4132 ($mux).
Removed top 4 bits (of 6) from mux cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage3.$ternary$mkstage3.v:1118$4261 ($mux).
Removed top 1 bits (of 38) from mux cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage3.$ternary$mkstage3.v:1012$4173 ($mux).
Removed top 1 bits (of 38) from mux cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage3.$ternary$mkstage3.v:1010$4174 ($mux).
Removed top 1 bits (of 2) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage3.$eq$mkstage3.v:1109$4252 ($eq).
Removed top 1 bits (of 32) from mux cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$ternary$mkcsrfile.v:1652$3534 ($mux).
Removed top 11 bits (of 12) from port Y of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$shr$mkcsrfile.v:1828$3578 ($shr).
Removed top 15 bits (of 16) from port Y of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$shr$mkcsrfile.v:1817$3572 ($shr).
Removed top 11 bits (of 12) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$ne$mkcsrfile.v:1835$3584 ($ne).
Removed top 5 bits (of 12) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$ne$mkcsrfile.v:1171$3296 ($ne).
Removed top 2 bits (of 12) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$ne$mkcsrfile.v:1170$3294 ($ne).
Removed top 2 bits (of 12) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$ne$mkcsrfile.v:1169$3292 ($ne).
Removed top 2 bits (of 12) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$ne$mkcsrfile.v:1168$3290 ($ne).
Removed top 2 bits (of 12) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$ne$mkcsrfile.v:1167$3288 ($ne).
Removed top 2 bits (of 12) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$ne$mkcsrfile.v:1166$3286 ($ne).
Removed top 2 bits (of 12) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$ne$mkcsrfile.v:1165$3284 ($ne).
Removed top 2 bits (of 12) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$ne$mkcsrfile.v:1164$3282 ($ne).
Removed top 2 bits (of 12) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$ne$mkcsrfile.v:1163$3280 ($ne).
Removed top 2 bits (of 12) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$ne$mkcsrfile.v:1162$3278 ($ne).
Removed top 2 bits (of 12) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$ne$mkcsrfile.v:1161$3276 ($ne).
Removed top 2 bits (of 12) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$ne$mkcsrfile.v:1160$3274 ($ne).
Removed top 2 bits (of 12) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$ne$mkcsrfile.v:1159$3272 ($ne).
Removed top 2 bits (of 12) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$ne$mkcsrfile.v:1158$3270 ($ne).
Removed top 2 bits (of 12) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$ne$mkcsrfile.v:1157$3268 ($ne).
Removed top 2 bits (of 12) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$ne$mkcsrfile.v:1156$3266 ($ne).
Removed top 2 bits (of 12) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$ne$mkcsrfile.v:1155$3264 ($ne).
Removed top 2 bits (of 12) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$ne$mkcsrfile.v:1154$3262 ($ne).
Removed top 2 bits (of 12) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$ne$mkcsrfile.v:1153$3260 ($ne).
Removed top 2 bits (of 12) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$ne$mkcsrfile.v:1152$3258 ($ne).
Removed top 2 bits (of 12) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$ne$mkcsrfile.v:1151$3256 ($ne).
Removed top 2 bits (of 12) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$ne$mkcsrfile.v:1149$3252 ($ne).
Removed top 2 bits (of 12) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$ne$mkcsrfile.v:1148$3250 ($ne).
Removed top 2 bits (of 12) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$ne$mkcsrfile.v:1147$3248 ($ne).
Removed top 2 bits (of 12) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$ne$mkcsrfile.v:1146$3246 ($ne).
Removed top 2 bits (of 12) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$ne$mkcsrfile.v:1145$3244 ($ne).
Removed top 2 bits (of 12) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$ne$mkcsrfile.v:1140$3234 ($ne).
Removed top 2 bits (of 12) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$ne$mkcsrfile.v:1139$3232 ($ne).
Removed top 2 bits (of 12) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$ne$mkcsrfile.v:1138$3230 ($ne).
Removed top 2 bits (of 12) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$ne$mkcsrfile.v:1138$3229 ($ne).
Removed top 2 bits (of 12) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$ne$mkcsrfile.v:1136$3226 ($ne).
Removed top 2 bits (of 12) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$ne$mkcsrfile.v:1135$3224 ($ne).
Removed top 1 bits (of 2) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$eq$mkcsrfile.v:2111$3642 ($eq).
Removed top 1 bits (of 2) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$eq$mkcsrfile.v:2108$3641 ($eq).
Removed top 2 bits (of 4) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$eq$mkcsrfile.v:1845$3599 ($eq).
Removed top 2 bits (of 4) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$eq$mkcsrfile.v:1844$3597 ($eq).
Removed top 10 bits (of 12) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$eq$mkcsrfile.v:1839$3590 ($eq).
Removed top 10 bits (of 12) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$eq$mkcsrfile.v:1838$3587 ($eq).
Removed top 11 bits (of 12) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$eq$mkcsrfile.v:1834$3581 ($eq).
Removed top 1 bits (of 2) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$eq$mkcsrfile.v:1668$3540 ($eq).
Removed top 1 bits (of 2) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$eq$mkcsrfile.v:1664$3536 ($eq).
Removed top 1 bits (of 12) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$eq$mkcsrfile.v:1648$3532 ($eq).
Removed top 1 bits (of 12) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$eq$mkcsrfile.v:1636$3524 ($eq).
Removed top 1 bits (of 12) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$eq$mkcsrfile.v:1624$3516 ($eq).
Removed top 2 bits (of 4) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$eq$mkcsrfile.v:1605$3512 ($eq).
Removed top 2 bits (of 12) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$eq$mkcsrfile.v:1570$3502 ($eq).
Removed top 2 bits (of 12) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$eq$mkcsrfile.v:1550$3486 ($eq).
Removed top 2 bits (of 12) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$eq$mkcsrfile.v:1545$3482 ($eq).
Removed top 2 bits (of 12) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$eq$mkcsrfile.v:1540$3478 ($eq).
Removed top 2 bits (of 12) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$eq$mkcsrfile.v:1535$3474 ($eq).
Removed top 1 bits (of 12) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$eq$mkcsrfile.v:1530$3472 ($eq).
Removed top 5 bits (of 12) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$eq$mkcsrfile.v:1525$3468 ($eq).
Removed top 2 bits (of 12) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$eq$mkcsrfile.v:1525$3467 ($eq).
Removed top 9 bits (of 12) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$eq$mkcsrfile.v:1519$3465 ($eq).
Removed top 5 bits (of 12) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$eq$mkcsrfile.v:1513$3461 ($eq).
Removed top 9 bits (of 12) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$eq$mkcsrfile.v:1503$3454 ($eq).
Removed top 2 bits (of 12) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$eq$mkcsrfile.v:1503$3453 ($eq).
Removed top 5 bits (of 12) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$eq$mkcsrfile.v:1484$3442 ($eq).
Removed top 2 bits (of 12) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$eq$mkcsrfile.v:1480$3437 ($eq).
Removed top 5 bits (of 12) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$eq$mkcsrfile.v:1453$3425 ($eq).
Removed top 5 bits (of 12) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$eq$mkcsrfile.v:1423$3410 ($eq).
Removed top 2 bits (of 12) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$eq$mkcsrfile.v:1392$3396 ($eq).
Removed top 2 bits (of 12) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$eq$mkcsrfile.v:1386$3392 ($eq).
Removed top 2 bits (of 12) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$eq$mkcsrfile.v:1364$3385 ($eq).
Removed top 2 bits (of 12) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$eq$mkcsrfile.v:1311$3364 ($eq).
Removed top 2 bits (of 12) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$eq$mkcsrfile.v:1284$3353 ($eq).
Removed top 2 bits (of 12) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$eq$mkcsrfile.v:1278$3349 ($eq).
Removed top 2 bits (of 12) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$eq$mkcsrfile.v:1262$3342 ($eq).
Removed top 2 bits (of 12) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$eq$mkcsrfile.v:1250$3336 ($eq).
Removed top 2 bits (of 12) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$eq$mkcsrfile.v:1232$3329 ($eq).
Removed top 2 bits (of 12) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$eq$mkcsrfile.v:1204$3315 ($eq).
Removed top 1 bits (of 2) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$eq$mkcsrfile.v:1084$3183 ($eq).
Removed top 63 bits (of 64) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$add$mkcsrfile.v:1802$3562 ($add).
Removed top 63 bits (of 64) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$add$mkcsrfile.v:1801$3561 ($add).
Removed top 25 bits (of 30) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$add$mkcsrfile.v:1669$3542 ($add).
Removed top 25 bits (of 30) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$add$mkcsrfile.v:1665$3538 ($add).
Removed top 63 bits (of 64) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$add$mkcsrfile.v:1104$3206 ($add).
Removed top 1 bits (of 4) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$procmux$6903_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$procmux$6904_CMP0 ($eq).
Removed top 1 bits (of 12) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$procmux$7053_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage3.\csr.$procmux$6805_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage3.\csr.$eq$mkcsr.v:545$3134 ($eq).
Removed top 30 bits (of 32) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_1.$add$module_fn_pmp_lookup.v:210$4827 ($add).
Removed top 1 bits (of 2) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_1.$eq$module_fn_pmp_lookup.v:160$4792 ($eq).
Removed top 5 bits (of 6) from port B of cell mkeclass_axi4.$auto$fsm_map.cc:77:implement_pattern_cache$8640 ($eq).
Removed top 1 bits (of 2) from port B of cell mkeclass_axi4.$auto$opt_dff.cc:195:make_patterns_logic$8971 ($ne).
Removed top 1 bits (of 2) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$procmux$7361_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$procmux$7345_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$procmux$7341_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$procmux$7337_CMP0 ($eq).
Removed top 29 bits (of 32) from port B of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$add$module_fn_pmp_lookup.v:210$4827 ($add).
Removed top 3 bits (of 5) from mux cell mkeclass_axi4.$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:270$4828 ($mux).
Removed top 3 bits (of 5) from mux cell mkeclass_axi4.$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:332$4858 ($mux).
Removed top 3 bits (of 5) from mux cell mkeclass_axi4.$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:396$4889 ($mux).
Removed top 3 bits (of 5) from mux cell mkeclass_axi4.$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:459$4922 ($mux).
Removed top 2 bits (of 3) from port B of cell mkeclass_axi4.$auto$fsm_map.cc:77:implement_pattern_cache$7890 ($eq).
Removed top 5 bits (of 6) from port B of cell mkeclass_axi4.$auto$fsm_map.cc:77:implement_pattern_cache$8260 ($eq).
Removed top 31 bits (of 32) from port B of cell mkeclass_axi4.$flatten\soc_inst.\signature.$sub$mksign_dump_axi4.v:896$3856 ($sub).
Removed top 2 bits (of 5) from port B of cell mkeclass_axi4.$flatten\soc_inst.\signature.$lt$mksign_dump_axi4.v:1056$3887 ($lt).
Removed top 31 bits (of 32) from port B of cell mkeclass_axi4.$flatten\soc_inst.\signature.$eq$mksign_dump_axi4.v:942$3865 ($eq).
Removed top 4 bits (of 5) from port B of cell mkeclass_axi4.$flatten\soc_inst.\signature.$add$mksign_dump_axi4.v:925$3860 ($add).
Removed top 29 bits (of 32) from port B of cell mkeclass_axi4.$flatten\soc_inst.\signature.$add$mksign_dump_axi4.v:892$3855 ($add).
Removed top 1 bits (of 3) from port B of cell mkeclass_axi4.$flatten\soc_inst.\signature.\ff_lower_order_bits.$procmux$5927_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell mkeclass_axi4.$flatten\soc_inst.\signature.\ff_lower_order_bits.$procmux$5918_CMP0 ($eq).
Removed top 15 bits (of 16) from mux cell mkeclass_axi4.$flatten\soc_inst.\uart_user_ifc_uart_baudGen_rBaudCounter.$ternary$Counter.v:62$5065 ($mux).
Removed top 15 bits (of 16) from port B of cell mkeclass_axi4.$flatten\soc_inst.\uart_user_ifc_uart_baudGen_rBaudCounter.$add$Counter.v:62$5066 ($add).
Removed top 1 bits (of 3) from port B of cell mkeclass_axi4.$flatten\soc_inst.\uart_user_ifc_uart_fifoRecv.$procmux$5860_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell mkeclass_axi4.$flatten\soc_inst.\uart_user_ifc_uart_fifoRecv.$procmux$5869_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell mkeclass_axi4.$flatten\soc_inst.\uart_user_ifc_uart_fifoXmit.$procmux$5860_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell mkeclass_axi4.$flatten\soc_inst.\uart_user_ifc_uart_fifoXmit.$procmux$5869_CMP0 ($eq).
Removed top 28 bits (of 52) from FF cell mkeclass_axi4.$auto$ff.cc:266:slice$9860 ($sdffe).
Removed top 28 bits (of 52) from FF cell mkeclass_axi4.$auto$ff.cc:266:slice$9856 ($sdffe).
Removed top 2 bits (of 3) from port B of cell mkeclass_axi4.$auto$fsm_map.cc:77:implement_pattern_cache$8228 ($eq).
Removed top 48 bits (of 52) from FF cell mkeclass_axi4.$auto$ff.cc:266:slice$9876 ($sdffe).
Removed top 16 bits (of 52) from FF cell mkeclass_axi4.$auto$ff.cc:266:slice$9880 ($sdffe).
Removed top 1 bits (of 2) from port B of cell mkeclass_axi4.$flatten\soc_inst.$procmux$6313_CMP0 ($eq).
Removed top 32 bits (of 64) from mux cell mkeclass_axi4.$flatten\soc_inst.$procmux$6310 ($pmux).
Removed top 1 bits (of 2) from port B of cell mkeclass_axi4.$flatten\soc_inst.$procmux$6308_CMP0 ($eq).
Removed top 32 bits (of 64) from mux cell mkeclass_axi4.$flatten\soc_inst.$procmux$6305 ($pmux).
Removed cell mkeclass_axi4.$flatten\soc_inst.$procmux$6285 ($pmux).
Removed top 1 bits (of 2) from port B of cell mkeclass_axi4.$flatten\soc_inst.$procmux$6286_CMP0 ($eq).
Removed top 15 bits (of 16) from port B of cell mkeclass_axi4.$flatten\soc_inst.$add$mkSoc.v:10274$2757 ($add).
Removed top 3 bits (of 4) from port B of cell mkeclass_axi4.$flatten\soc_inst.$add$mkSoc.v:10276$2759 ($add).
Removed top 3 bits (of 4) from port B of cell mkeclass_axi4.$flatten\soc_inst.$add$mkSoc.v:10277$2760 ($add).
Removed top 3 bits (of 4) from port B of cell mkeclass_axi4.$flatten\soc_inst.$add$mkSoc.v:10278$2761 ($add).
Removed top 3 bits (of 4) from port B of cell mkeclass_axi4.$flatten\soc_inst.$add$mkSoc.v:10279$2762 ($add).
Removed top 7 bits (of 8) from port B of cell mkeclass_axi4.$flatten\soc_inst.$add$mkSoc.v:10280$2763 ($add).
Removed top 7 bits (of 8) from port B of cell mkeclass_axi4.$flatten\soc_inst.$add$mkSoc.v:10281$2764 ($add).
Removed top 7 bits (of 8) from port B of cell mkeclass_axi4.$flatten\soc_inst.$add$mkSoc.v:10282$2765 ($add).
Removed top 7 bits (of 8) from port B of cell mkeclass_axi4.$flatten\soc_inst.$add$mkSoc.v:6605$1536 ($add).
Removed top 3 bits (of 4) from port B of cell mkeclass_axi4.$flatten\soc_inst.$add$mkSoc.v:6736$1619 ($add).
Removed top 63 bits (of 64) from port B of cell mkeclass_axi4.$flatten\soc_inst.$add$mkSoc.v:6740$1620 ($add).
Removed top 2 bits (of 3) from port B of cell mkeclass_axi4.$auto$fsm_map.cc:77:implement_pattern_cache$8203 ($eq).
Removed top 2 bits (of 3) from port B of cell mkeclass_axi4.$auto$fsm_map.cc:77:implement_pattern_cache$8178 ($eq).
Removed top 2 bits (of 3) from port B of cell mkeclass_axi4.$auto$fsm_map.cc:77:implement_pattern_cache$8153 ($eq).
Removed top 2 bits (of 3) from port B of cell mkeclass_axi4.$auto$fsm_map.cc:77:implement_pattern_cache$8128 ($eq).
Removed top 2 bits (of 3) from port B of cell mkeclass_axi4.$auto$fsm_map.cc:77:implement_pattern_cache$8103 ($eq).
Removed top 1 bits (of 4) from port B of cell mkeclass_axi4.$flatten\soc_inst.$eq$mkSoc.v:6662$1565 ($eq).
Removed top 1 bits (of 4) from port B of cell mkeclass_axi4.$flatten\soc_inst.$eq$mkSoc.v:6687$1587 ($eq).
Removed top 1 bits (of 4) from port B of cell mkeclass_axi4.$flatten\soc_inst.$eq$mkSoc.v:6703$1598 ($eq).
Removed top 1 bits (of 4) from port B of cell mkeclass_axi4.$flatten\soc_inst.$eq$mkSoc.v:6705$1600 ($eq).
Removed top 1 bits (of 4) from port B of cell mkeclass_axi4.$flatten\soc_inst.$eq$mkSoc.v:6712$1607 ($eq).
Removed top 1 bits (of 16) from port B of cell mkeclass_axi4.$flatten\soc_inst.$ge$mkSoc.v:6676$1576 ($ge).
Removed top 1 bits (of 16) from port B of cell mkeclass_axi4.$flatten\soc_inst.$ge$mkSoc.v:9653$2300 ($ge).
Removed top 1 bits (of 16) from port B of cell mkeclass_axi4.$flatten\soc_inst.$ge$mkSoc.v:9667$2310 ($ge).
Removed top 15 bits (of 32) from port B of cell mkeclass_axi4.$flatten\soc_inst.$le$mkSoc.v:10033$2576 ($le).
Removed top 15 bits (of 32) from port B of cell mkeclass_axi4.$flatten\soc_inst.$le$mkSoc.v:10039$2578 ($le).
Removed top 6 bits (of 32) from port B of cell mkeclass_axi4.$flatten\soc_inst.$le$mkSoc.v:10052$2588 ($le).
Removed top 14 bits (of 32) from port B of cell mkeclass_axi4.$flatten\soc_inst.$le$mkSoc.v:10065$2598 ($le).
Removed top 15 bits (of 32) from port B of cell mkeclass_axi4.$flatten\soc_inst.$le$mkSoc.v:10103$2630 ($le).
Removed top 15 bits (of 32) from port B of cell mkeclass_axi4.$flatten\soc_inst.$le$mkSoc.v:10109$2632 ($le).
Removed top 6 bits (of 32) from port B of cell mkeclass_axi4.$flatten\soc_inst.$le$mkSoc.v:10122$2642 ($le).
Removed top 14 bits (of 32) from port B of cell mkeclass_axi4.$flatten\soc_inst.$le$mkSoc.v:10135$2652 ($le).
Removed top 1 bits (of 16) from port B of cell mkeclass_axi4.$flatten\soc_inst.$le$mkSoc.v:6677$1578 ($le).
Removed top 1 bits (of 16) from port B of cell mkeclass_axi4.$flatten\soc_inst.$le$mkSoc.v:9654$2301 ($le).
Removed top 1 bits (of 16) from port B of cell mkeclass_axi4.$flatten\soc_inst.$le$mkSoc.v:9668$2311 ($le).
Removed top 15 bits (of 32) from port B of cell mkeclass_axi4.$flatten\soc_inst.$le$mkSoc.v:9699$2322 ($le).
Removed top 15 bits (of 32) from port B of cell mkeclass_axi4.$flatten\soc_inst.$le$mkSoc.v:9705$2324 ($le).
Removed top 6 bits (of 32) from port B of cell mkeclass_axi4.$flatten\soc_inst.$le$mkSoc.v:9718$2334 ($le).
Removed top 14 bits (of 32) from port B of cell mkeclass_axi4.$flatten\soc_inst.$le$mkSoc.v:9731$2344 ($le).
Removed top 15 bits (of 32) from port B of cell mkeclass_axi4.$flatten\soc_inst.$le$mkSoc.v:9769$2376 ($le).
Removed top 6 bits (of 32) from port B of cell mkeclass_axi4.$flatten\soc_inst.$le$mkSoc.v:9782$2386 ($le).
Removed top 14 bits (of 32) from port B of cell mkeclass_axi4.$flatten\soc_inst.$le$mkSoc.v:9798$2397 ($le).
Removed top 15 bits (of 32) from port B of cell mkeclass_axi4.$flatten\soc_inst.$le$mkSoc.v:9833$2428 ($le).
Removed top 15 bits (of 32) from port B of cell mkeclass_axi4.$flatten\soc_inst.$le$mkSoc.v:9893$2468 ($le).
Removed top 15 bits (of 32) from port B of cell mkeclass_axi4.$flatten\soc_inst.$le$mkSoc.v:9899$2470 ($le).
Removed top 6 bits (of 32) from port B of cell mkeclass_axi4.$flatten\soc_inst.$le$mkSoc.v:9912$2480 ($le).
Removed top 14 bits (of 32) from port B of cell mkeclass_axi4.$flatten\soc_inst.$le$mkSoc.v:9925$2490 ($le).
Removed top 15 bits (of 32) from port B of cell mkeclass_axi4.$flatten\soc_inst.$le$mkSoc.v:9963$2522 ($le).
Removed top 15 bits (of 32) from port B of cell mkeclass_axi4.$flatten\soc_inst.$le$mkSoc.v:9969$2524 ($le).
Removed top 6 bits (of 32) from port B of cell mkeclass_axi4.$flatten\soc_inst.$le$mkSoc.v:9982$2534 ($le).
Removed top 14 bits (of 32) from port B of cell mkeclass_axi4.$flatten\soc_inst.$le$mkSoc.v:9995$2544 ($le).
Removed top 19 bits (of 32) from port B of cell mkeclass_axi4.$flatten\soc_inst.$lt$mkSoc.v:10030$2575 ($lt).
Removed top 15 bits (of 32) from port B of cell mkeclass_axi4.$flatten\soc_inst.$lt$mkSoc.v:10036$2577 ($lt).
Removed top 6 bits (of 32) from port B of cell mkeclass_axi4.$flatten\soc_inst.$lt$mkSoc.v:10049$2587 ($lt).
Removed top 14 bits (of 32) from port B of cell mkeclass_axi4.$flatten\soc_inst.$lt$mkSoc.v:10062$2597 ($lt).
Removed top 19 bits (of 32) from port B of cell mkeclass_axi4.$flatten\soc_inst.$lt$mkSoc.v:10100$2629 ($lt).
Removed top 15 bits (of 32) from port B of cell mkeclass_axi4.$flatten\soc_inst.$lt$mkSoc.v:10106$2631 ($lt).
Removed top 6 bits (of 32) from port B of cell mkeclass_axi4.$flatten\soc_inst.$lt$mkSoc.v:10119$2641 ($lt).
Removed top 14 bits (of 32) from port B of cell mkeclass_axi4.$flatten\soc_inst.$lt$mkSoc.v:10132$2651 ($lt).
Removed top 19 bits (of 32) from port B of cell mkeclass_axi4.$flatten\soc_inst.$lt$mkSoc.v:9696$2321 ($lt).
Removed top 15 bits (of 32) from port B of cell mkeclass_axi4.$flatten\soc_inst.$lt$mkSoc.v:9702$2323 ($lt).
Removed top 6 bits (of 32) from port B of cell mkeclass_axi4.$flatten\soc_inst.$lt$mkSoc.v:9715$2333 ($lt).
Removed top 14 bits (of 32) from port B of cell mkeclass_axi4.$flatten\soc_inst.$lt$mkSoc.v:9728$2343 ($lt).
Removed top 15 bits (of 32) from port B of cell mkeclass_axi4.$flatten\soc_inst.$lt$mkSoc.v:9766$2375 ($lt).
Removed top 6 bits (of 32) from port B of cell mkeclass_axi4.$flatten\soc_inst.$lt$mkSoc.v:9779$2385 ($lt).
Removed top 14 bits (of 32) from port B of cell mkeclass_axi4.$flatten\soc_inst.$lt$mkSoc.v:9795$2396 ($lt).
Removed top 19 bits (of 32) from port B of cell mkeclass_axi4.$flatten\soc_inst.$lt$mkSoc.v:9830$2427 ($lt).
Removed top 19 bits (of 32) from port B of cell mkeclass_axi4.$flatten\soc_inst.$lt$mkSoc.v:9890$2467 ($lt).
Removed top 15 bits (of 32) from port B of cell mkeclass_axi4.$flatten\soc_inst.$lt$mkSoc.v:9896$2469 ($lt).
Removed top 6 bits (of 32) from port B of cell mkeclass_axi4.$flatten\soc_inst.$lt$mkSoc.v:9909$2479 ($lt).
Removed top 14 bits (of 32) from port B of cell mkeclass_axi4.$flatten\soc_inst.$lt$mkSoc.v:9922$2489 ($lt).
Removed top 19 bits (of 32) from port B of cell mkeclass_axi4.$flatten\soc_inst.$lt$mkSoc.v:9960$2521 ($lt).
Removed top 15 bits (of 32) from port B of cell mkeclass_axi4.$flatten\soc_inst.$lt$mkSoc.v:9966$2523 ($lt).
Removed top 6 bits (of 32) from port B of cell mkeclass_axi4.$flatten\soc_inst.$lt$mkSoc.v:9979$2533 ($lt).
Removed top 14 bits (of 32) from port B of cell mkeclass_axi4.$flatten\soc_inst.$lt$mkSoc.v:9992$2543 ($lt).
Removed top 1 bits (of 4) from port B of cell mkeclass_axi4.$flatten\soc_inst.$ne$mkSoc.v:6716$1612 ($ne).
Removed top 32 bits (of 64) from port Y of cell mkeclass_axi4.$flatten\soc_inst.$shr$mkSoc.v:10267$2755 ($shr).
Removed top 32 bits (of 64) from port Y of cell mkeclass_axi4.$flatten\soc_inst.$shr$mkSoc.v:10270$2756 ($shr).
Removed top 7 bits (of 8) from mux cell mkeclass_axi4.$flatten\soc_inst.$ternary$mkSoc.v:6763$1627 ($mux).
Removed top 1 bits (of 6) from mux cell mkeclass_axi4.$flatten\soc_inst.$ternary$mkSoc.v:7315$1727 ($mux).
Removed top 1 bits (of 33) from port Y of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$shr$module_fn_alu.v:211$4608 ($shr).
Removed top 1 bits (of 33) from port Y of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$not$module_fn_alu.v:212$4610 ($not).
Removed top 1 bits (of 33) from port A of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$not$module_fn_alu.v:212$4610 ($not).
Removed top 1 bits (of 38) from mux cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage3.$ternary$mkstage3.v:913$4134 ($mux).
Removed top 1 bits (of 33) from port Y of cell mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$shr$module_fn_alu.v:212$4609 ($shr).
Removed top 3 bits (of 5) from wire mkeclass_axi4.$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:270$4828_Y.
Removed top 3 bits (of 5) from wire mkeclass_axi4.$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:332$4858_Y.
Removed top 3 bits (of 5) from wire mkeclass_axi4.$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:396$4889_Y.
Removed top 3 bits (of 5) from wire mkeclass_axi4.$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:459$4922_Y.
Removed top 3 bits (of 5) from wire mkeclass_axi4.$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:461$4921_Y.
Removed top 2 bits (of 14) from wire mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage1.\instance_chk_interrupt_0.$ternary$module_chk_interrupt.v:83$4351_Y.
Removed top 2 bits (of 14) from wire mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage1.\instance_chk_interrupt_0.$ternary$module_chk_interrupt.v:86$4354_Y.
Removed top 1 bits (of 3) from wire mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:105$4392_Y.
Removed top 2 bits (of 3) from wire mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:239$4480_Y.
Removed top 1 bits (of 3) from wire mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:320$4512_Y.
Removed top 1 bits (of 33) from wire mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$and$module_fn_alu.v:212$4611_Y.
Removed top 1 bits (of 33) from wire mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$not$module_fn_alu.v:212$4610_Y.
Removed top 1 bits (of 33) from wire mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$shr$module_fn_alu.v:211$4608_Y.
Removed top 1 bits (of 33) from wire mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$shr$module_fn_alu.v:212$4609_Y.
Removed top 1 bits (of 38) from wire mkeclass_axi4.$flatten\soc_inst.\eclass.\riscv.\stage3.$ternary$mkstage3.v:1012$4173_Y.
Removed top 15 bits (of 16) from wire mkeclass_axi4.$flatten\soc_inst.\uart_user_ifc_uart_baudGen_rBaudCounter.$ternary$Counter.v:62$5065_Y.

52.14. Executing PEEPOPT pass (run peephole optimizers).

52.15. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mkeclass_axi4..
Removed 0 unused cells and 16 unused wires.
<suppressed ~1 debug messages>

52.16. Executing SHARE pass (SAT-based resource sharing).
Found 14 cells in module mkeclass_axi4 that may be considered for resource sharing.
  Analyzing resource sharing options for $flatten\soc_inst.\uart_user_ifc_uart_fifoXmit.$memrd$\arr$SizedFIFO.v:182$5038 ($memrd):
    Found 1 activation_patterns using ctrl signal $auto$opt_reduce.cc:134:opt_pmux$7611.
    No candidates found.
  Analyzing resource sharing options for $flatten\soc_inst.\uart_user_ifc_uart_fifoRecv.$memrd$\arr$SizedFIFO.v:182$5038 ($memrd):
    Found 1 activation_patterns using ctrl signal $auto$opt_reduce.cc:134:opt_pmux$7605.
    No candidates found.
  Analyzing resource sharing options for $flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$shr$module_fn_alu.v:212$4609 ($shr):
    Found 4 activation_patterns using ctrl signal { $flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$procmux$7324_CMP $flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$procmux$7295_CTRL $flatten\soc_inst.\eclass.\riscv.\stage2.$procmux$7179_CMP $flatten\soc_inst.\eclass.\riscv.\stage2.$procmux$7178_CMP \soc_inst.eclass.riscv.fifof_2.D_OUT [2] }.
    Found 5 candidates: $flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$shr$module_fn_alu.v:211$4608 $flatten\soc_inst.\eclass.$shr$mkeclass.v:1465$3711 $flatten\soc_inst.\eclass.$shr$mkeclass.v:1461$3710 $flatten\soc_inst.$shr$mkSoc.v:10270$2756 $flatten\soc_inst.$shr$mkSoc.v:10267$2755
    Analyzing resource sharing with $flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$shr$module_fn_alu.v:211$4608 ($shr):
      Found 4 activation_patterns using ctrl signal { $flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$procmux$7324_CMP $flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$procmux$7295_CTRL $flatten\soc_inst.\eclass.\riscv.\stage2.$procmux$7179_CMP $flatten\soc_inst.\eclass.\riscv.\stage2.$procmux$7178_CMP \soc_inst.eclass.riscv.fifof_2.D_OUT [2] }.
      Activation pattern for cell $flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$shr$module_fn_alu.v:212$4609: { $flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$procmux$7324_CMP $flatten\soc_inst.\eclass.\riscv.\stage2.$procmux$7178_CMP } = 2'11
      Activation pattern for cell $flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$shr$module_fn_alu.v:212$4609: { $flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$procmux$7324_CMP $flatten\soc_inst.\eclass.\riscv.\stage2.$procmux$7179_CMP \soc_inst.eclass.riscv.fifof_2.D_OUT [2] } = 3'110
      Activation pattern for cell $flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$shr$module_fn_alu.v:212$4609: { $flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$procmux$7295_CTRL $flatten\soc_inst.\eclass.\riscv.\stage2.$procmux$7178_CMP } = 2'11
      Activation pattern for cell $flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$shr$module_fn_alu.v:212$4609: { $flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$procmux$7295_CTRL $flatten\soc_inst.\eclass.\riscv.\stage2.$procmux$7179_CMP \soc_inst.eclass.riscv.fifof_2.D_OUT [2] } = 3'110
      Activation pattern for cell $flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$shr$module_fn_alu.v:211$4608: { $flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$procmux$7324_CMP $flatten\soc_inst.\eclass.\riscv.\stage2.$procmux$7178_CMP } = 2'11
      Activation pattern for cell $flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$shr$module_fn_alu.v:211$4608: { $flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$procmux$7324_CMP $flatten\soc_inst.\eclass.\riscv.\stage2.$procmux$7179_CMP \soc_inst.eclass.riscv.fifof_2.D_OUT [2] } = 3'110
      Activation pattern for cell $flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$shr$module_fn_alu.v:211$4608: { $flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$procmux$7295_CTRL $flatten\soc_inst.\eclass.\riscv.\stage2.$procmux$7178_CMP } = 2'11
      Activation pattern for cell $flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$shr$module_fn_alu.v:211$4608: { $flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$procmux$7295_CTRL $flatten\soc_inst.\eclass.\riscv.\stage2.$procmux$7179_CMP \soc_inst.eclass.riscv.fifof_2.D_OUT [2] } = 3'110
      Size of SAT problem: 0 cells, 5345 variables, 13921 clauses
      According to the SAT solver this pair of cells can not be shared.
      Model from SAT solver: { $flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$procmux$7324_CMP $flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$procmux$7295_CTRL $flatten\soc_inst.\eclass.\riscv.\stage2.$procmux$7179_CMP $flatten\soc_inst.\eclass.\riscv.\stage2.$procmux$7178_CMP \soc_inst.eclass.riscv.fifof_2.D_OUT [2] } = 5'01100
    Analyzing resource sharing with $flatten\soc_inst.\eclass.$shr$mkeclass.v:1465$3711 ($shr):
      Found 3 activation_patterns using ctrl signal { \soc_inst.eclass.ff_mem_request.DEQ $flatten\soc_inst.\eclass.$procmux$7098_CMP $flatten\soc_inst.\eclass.$procmux$7097_CMP $flatten\soc_inst.\eclass.$eq$mkeclass.v:1478$3714_Y \soc_inst.eclass.WILL_FIRE_RL_handle_memoryRead_response }.
      Activation pattern for cell $flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$shr$module_fn_alu.v:212$4609: { $flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$procmux$7324_CMP $flatten\soc_inst.\eclass.\riscv.\stage2.$procmux$7178_CMP } = 2'11
      Activation pattern for cell $flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$shr$module_fn_alu.v:212$4609: { $flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$procmux$7324_CMP $flatten\soc_inst.\eclass.\riscv.\stage2.$procmux$7179_CMP \soc_inst.eclass.riscv.fifof_2.D_OUT [2] } = 3'110
      Activation pattern for cell $flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$shr$module_fn_alu.v:212$4609: { $flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$procmux$7295_CTRL $flatten\soc_inst.\eclass.\riscv.\stage2.$procmux$7178_CMP } = 2'11
      Activation pattern for cell $flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$shr$module_fn_alu.v:212$4609: { $flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$procmux$7295_CTRL $flatten\soc_inst.\eclass.\riscv.\stage2.$procmux$7179_CMP \soc_inst.eclass.riscv.fifof_2.D_OUT [2] } = 3'110
      Activation pattern for cell $flatten\soc_inst.\eclass.$shr$mkeclass.v:1465$3711: { \soc_inst.eclass.ff_mem_request.DEQ $flatten\soc_inst.\eclass.$procmux$7098_CMP $flatten\soc_inst.\eclass.$eq$mkeclass.v:1478$3714_Y \soc_inst.eclass.WILL_FIRE_RL_handle_memoryRead_response } = 4'1111
      Activation pattern for cell $flatten\soc_inst.\eclass.$shr$mkeclass.v:1465$3711: { \soc_inst.eclass.ff_mem_request.DEQ $flatten\soc_inst.\eclass.$procmux$7097_CMP $flatten\soc_inst.\eclass.$eq$mkeclass.v:1478$3714_Y \soc_inst.eclass.WILL_FIRE_RL_handle_memoryRead_response } = 4'1111
      Activation pattern for cell $flatten\soc_inst.\eclass.$shr$mkeclass.v:1465$3711: { \soc_inst.eclass.ff_mem_request.DEQ $flatten\soc_inst.\eclass.$procmux$7098_CMP $flatten\soc_inst.\eclass.$procmux$7097_CMP $flatten\soc_inst.\eclass.$eq$mkeclass.v:1478$3714_Y \soc_inst.eclass.WILL_FIRE_RL_handle_memoryRead_response } = 5'10011
      Size of SAT problem: 0 cells, 5440 variables, 14172 clauses
      According to the SAT solver this pair of cells can not be shared.
      Model from SAT solver: { \soc_inst.eclass.ff_mem_request.DEQ $flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$procmux$7324_CMP $flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$procmux$7295_CTRL $flatten\soc_inst.\eclass.\riscv.\stage2.$procmux$7179_CMP $flatten\soc_inst.\eclass.\riscv.\stage2.$procmux$7178_CMP \soc_inst.eclass.riscv.fifof_2.D_OUT [2] $flatten\soc_inst.\eclass.$procmux$7098_CMP $flatten\soc_inst.\eclass.$procmux$7097_CMP $flatten\soc_inst.\eclass.$eq$mkeclass.v:1478$3714_Y \soc_inst.eclass.WILL_FIRE_RL_handle_memoryRead_response } = 10'1011001011
    Analyzing resource sharing with $flatten\soc_inst.\eclass.$shr$mkeclass.v:1461$3710 ($shr):
      Found 1 activation_patterns using ctrl signal { $flatten\soc_inst.\eclass.$eq$mkeclass.v:1486$3718_Y \soc_inst.eclass.WILL_FIRE_RL_handle_fetch_response }.
      Activation pattern for cell $flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$shr$module_fn_alu.v:212$4609: { $flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$procmux$7324_CMP $flatten\soc_inst.\eclass.\riscv.\stage2.$procmux$7178_CMP } = 2'11
      Activation pattern for cell $flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$shr$module_fn_alu.v:212$4609: { $flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$procmux$7324_CMP $flatten\soc_inst.\eclass.\riscv.\stage2.$procmux$7179_CMP \soc_inst.eclass.riscv.fifof_2.D_OUT [2] } = 3'110
      Activation pattern for cell $flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$shr$module_fn_alu.v:212$4609: { $flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$procmux$7295_CTRL $flatten\soc_inst.\eclass.\riscv.\stage2.$procmux$7178_CMP } = 2'11
      Activation pattern for cell $flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$shr$module_fn_alu.v:212$4609: { $flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$procmux$7295_CTRL $flatten\soc_inst.\eclass.\riscv.\stage2.$procmux$7179_CMP \soc_inst.eclass.riscv.fifof_2.D_OUT [2] } = 3'110
      Activation pattern for cell $flatten\soc_inst.\eclass.$shr$mkeclass.v:1461$3710: { $flatten\soc_inst.\eclass.$eq$mkeclass.v:1486$3718_Y \soc_inst.eclass.WILL_FIRE_RL_handle_fetch_response } = 2'11
      Size of SAT problem: 0 cells, 5396 variables, 14046 clauses
      According to the SAT solver this pair of cells can not be shared.
      Model from SAT solver: { $flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$procmux$7324_CMP $flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$procmux$7295_CTRL $flatten\soc_inst.\eclass.\riscv.\stage2.$procmux$7179_CMP $flatten\soc_inst.\eclass.\riscv.\stage2.$procmux$7178_CMP \soc_inst.eclass.riscv.fifof_2.D_OUT [2] $flatten\soc_inst.\eclass.$eq$mkeclass.v:1486$3718_Y \soc_inst.eclass.WILL_FIRE_RL_handle_fetch_response } = 7'0110011
    Analyzing resource sharing with $flatten\soc_inst.$shr$mkSoc.v:10270$2756 ($shr):
      Found 4 activation_patterns using ctrl signal { \soc_inst.WILL_FIRE_RL_clint_axi_read_transaction $flatten\soc_inst.$eq$mkSoc.v:9645$2296_Y $flatten\soc_inst.$procmux$6311_CMP $flatten\soc_inst.$procmux$6312_CMP $flatten\soc_inst.$procmux$6313_CMP }.
      Activation pattern for cell $flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$shr$module_fn_alu.v:212$4609: { $flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$procmux$7324_CMP $flatten\soc_inst.\eclass.\riscv.\stage2.$procmux$7178_CMP } = 2'11
      Activation pattern for cell $flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$shr$module_fn_alu.v:212$4609: { $flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$procmux$7324_CMP $flatten\soc_inst.\eclass.\riscv.\stage2.$procmux$7179_CMP \soc_inst.eclass.riscv.fifof_2.D_OUT [2] } = 3'110
      Activation pattern for cell $flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$shr$module_fn_alu.v:212$4609: { $flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$procmux$7295_CTRL $flatten\soc_inst.\eclass.\riscv.\stage2.$procmux$7178_CMP } = 2'11
      Activation pattern for cell $flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$shr$module_fn_alu.v:212$4609: { $flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$procmux$7295_CTRL $flatten\soc_inst.\eclass.\riscv.\stage2.$procmux$7179_CMP \soc_inst.eclass.riscv.fifof_2.D_OUT [2] } = 3'110
      Activation pattern for cell $flatten\soc_inst.$shr$mkSoc.v:10270$2756: { \soc_inst.WILL_FIRE_RL_clint_axi_read_transaction $flatten\soc_inst.$procmux$6311_CMP } = 2'01
      Activation pattern for cell $flatten\soc_inst.$shr$mkSoc.v:10270$2756: { \soc_inst.WILL_FIRE_RL_clint_axi_read_transaction $flatten\soc_inst.$procmux$6312_CMP } = 2'01
      Activation pattern for cell $flatten\soc_inst.$shr$mkSoc.v:10270$2756: { \soc_inst.WILL_FIRE_RL_clint_axi_read_transaction $flatten\soc_inst.$procmux$6313_CMP } = 2'01
      Activation pattern for cell $flatten\soc_inst.$shr$mkSoc.v:10270$2756: { \soc_inst.WILL_FIRE_RL_clint_axi_read_transaction $flatten\soc_inst.$eq$mkSoc.v:9645$2296_Y } = 2'01
      Size of SAT problem: 0 cells, 5425 variables, 14124 clauses
      According to the SAT solver this pair of cells can not be shared.
      Model from SAT solver: { \soc_inst.WILL_FIRE_RL_clint_axi_read_transaction $flatten\soc_inst.$eq$mkSoc.v:9645$2296_Y $flatten\soc_inst.$procmux$6311_CMP $flatten\soc_inst.$procmux$6312_CMP $flatten\soc_inst.$procmux$6313_CMP $flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$procmux$7324_CMP $flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$procmux$7295_CTRL $flatten\soc_inst.\eclass.\riscv.\stage2.$procmux$7179_CMP $flatten\soc_inst.\eclass.\riscv.\stage2.$procmux$7178_CMP \soc_inst.eclass.riscv.fifof_2.D_OUT [2] } = 10'0100001100
    Analyzing resource sharing with $flatten\soc_inst.$shr$mkSoc.v:10267$2755 ($shr):
      Found 4 activation_patterns using ctrl signal { \soc_inst.WILL_FIRE_RL_clint_axi_read_transaction $flatten\soc_inst.$eq$mkSoc.v:9641$2294_Y $flatten\soc_inst.$procmux$6306_CMP $flatten\soc_inst.$procmux$6307_CMP $flatten\soc_inst.$procmux$6308_CMP }.
      Activation pattern for cell $flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$shr$module_fn_alu.v:212$4609: { $flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$procmux$7324_CMP $flatten\soc_inst.\eclass.\riscv.\stage2.$procmux$7178_CMP } = 2'11
      Activation pattern for cell $flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$shr$module_fn_alu.v:212$4609: { $flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$procmux$7324_CMP $flatten\soc_inst.\eclass.\riscv.\stage2.$procmux$7179_CMP \soc_inst.eclass.riscv.fifof_2.D_OUT [2] } = 3'110
      Activation pattern for cell $flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$shr$module_fn_alu.v:212$4609: { $flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$procmux$7295_CTRL $flatten\soc_inst.\eclass.\riscv.\stage2.$procmux$7178_CMP } = 2'11
      Activation pattern for cell $flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$shr$module_fn_alu.v:212$4609: { $flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$procmux$7295_CTRL $flatten\soc_inst.\eclass.\riscv.\stage2.$procmux$7179_CMP \soc_inst.eclass.riscv.fifof_2.D_OUT [2] } = 3'110
      Activation pattern for cell $flatten\soc_inst.$shr$mkSoc.v:10267$2755: { \soc_inst.WILL_FIRE_RL_clint_axi_read_transaction $flatten\soc_inst.$procmux$6306_CMP } = 2'11
      Activation pattern for cell $flatten\soc_inst.$shr$mkSoc.v:10267$2755: { \soc_inst.WILL_FIRE_RL_clint_axi_read_transaction $flatten\soc_inst.$procmux$6307_CMP } = 2'11
      Activation pattern for cell $flatten\soc_inst.$shr$mkSoc.v:10267$2755: { \soc_inst.WILL_FIRE_RL_clint_axi_read_transaction $flatten\soc_inst.$procmux$6308_CMP } = 2'11
      Activation pattern for cell $flatten\soc_inst.$shr$mkSoc.v:10267$2755: { \soc_inst.WILL_FIRE_RL_clint_axi_read_transaction $flatten\soc_inst.$eq$mkSoc.v:9641$2294_Y } = 2'11
      Size of SAT problem: 0 cells, 5425 variables, 14124 clauses
      According to the SAT solver this pair of cells can not be shared.
      Model from SAT solver: { \soc_inst.WILL_FIRE_RL_clint_axi_read_transaction $flatten\soc_inst.$eq$mkSoc.v:9641$2294_Y $flatten\soc_inst.$procmux$6306_CMP $flatten\soc_inst.$procmux$6307_CMP $flatten\soc_inst.$procmux$6308_CMP $flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$procmux$7324_CMP $flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$procmux$7295_CTRL $flatten\soc_inst.\eclass.\riscv.\stage2.$procmux$7179_CMP $flatten\soc_inst.\eclass.\riscv.\stage2.$procmux$7178_CMP \soc_inst.eclass.riscv.fifof_2.D_OUT [2] } = 10'1100001100
  Analyzing resource sharing options for $flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$shr$module_fn_alu.v:211$4608 ($shr):
    Found 4 activation_patterns using ctrl signal { $flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$procmux$7324_CMP $flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$procmux$7295_CTRL $flatten\soc_inst.\eclass.\riscv.\stage2.$procmux$7179_CMP $flatten\soc_inst.\eclass.\riscv.\stage2.$procmux$7178_CMP \soc_inst.eclass.riscv.fifof_2.D_OUT [2] }.
    Found 4 candidates: $flatten\soc_inst.\eclass.$shr$mkeclass.v:1465$3711 $flatten\soc_inst.\eclass.$shr$mkeclass.v:1461$3710 $flatten\soc_inst.$shr$mkSoc.v:10270$2756 $flatten\soc_inst.$shr$mkSoc.v:10267$2755
    Analyzing resource sharing with $flatten\soc_inst.\eclass.$shr$mkeclass.v:1465$3711 ($shr):
      Found 3 activation_patterns using ctrl signal { \soc_inst.eclass.ff_mem_request.DEQ $flatten\soc_inst.\eclass.$procmux$7098_CMP $flatten\soc_inst.\eclass.$procmux$7097_CMP $flatten\soc_inst.\eclass.$eq$mkeclass.v:1478$3714_Y \soc_inst.eclass.WILL_FIRE_RL_handle_memoryRead_response }.
      Activation pattern for cell $flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$shr$module_fn_alu.v:211$4608: { $flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$procmux$7324_CMP $flatten\soc_inst.\eclass.\riscv.\stage2.$procmux$7178_CMP } = 2'11
      Activation pattern for cell $flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$shr$module_fn_alu.v:211$4608: { $flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$procmux$7324_CMP $flatten\soc_inst.\eclass.\riscv.\stage2.$procmux$7179_CMP \soc_inst.eclass.riscv.fifof_2.D_OUT [2] } = 3'110
      Activation pattern for cell $flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$shr$module_fn_alu.v:211$4608: { $flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$procmux$7295_CTRL $flatten\soc_inst.\eclass.\riscv.\stage2.$procmux$7178_CMP } = 2'11
      Activation pattern for cell $flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$shr$module_fn_alu.v:211$4608: { $flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$procmux$7295_CTRL $flatten\soc_inst.\eclass.\riscv.\stage2.$procmux$7179_CMP \soc_inst.eclass.riscv.fifof_2.D_OUT [2] } = 3'110
      Activation pattern for cell $flatten\soc_inst.\eclass.$shr$mkeclass.v:1465$3711: { \soc_inst.eclass.ff_mem_request.DEQ $flatten\soc_inst.\eclass.$procmux$7098_CMP $flatten\soc_inst.\eclass.$eq$mkeclass.v:1478$3714_Y \soc_inst.eclass.WILL_FIRE_RL_handle_memoryRead_response } = 4'1111
      Activation pattern for cell $flatten\soc_inst.\eclass.$shr$mkeclass.v:1465$3711: { \soc_inst.eclass.ff_mem_request.DEQ $flatten\soc_inst.\eclass.$procmux$7097_CMP $flatten\soc_inst.\eclass.$eq$mkeclass.v:1478$3714_Y \soc_inst.eclass.WILL_FIRE_RL_handle_memoryRead_response } = 4'1111
      Activation pattern for cell $flatten\soc_inst.\eclass.$shr$mkeclass.v:1465$3711: { \soc_inst.eclass.ff_mem_request.DEQ $flatten\soc_inst.\eclass.$procmux$7098_CMP $flatten\soc_inst.\eclass.$procmux$7097_CMP $flatten\soc_inst.\eclass.$eq$mkeclass.v:1478$3714_Y \soc_inst.eclass.WILL_FIRE_RL_handle_memoryRead_response } = 5'10011
      Size of SAT problem: 0 cells, 5440 variables, 14172 clauses
      According to the SAT solver this pair of cells can not be shared.
      Model from SAT solver: { \soc_inst.eclass.ff_mem_request.DEQ $flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$procmux$7324_CMP $flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$procmux$7295_CTRL $flatten\soc_inst.\eclass.\riscv.\stage2.$procmux$7179_CMP $flatten\soc_inst.\eclass.\riscv.\stage2.$procmux$7178_CMP \soc_inst.eclass.riscv.fifof_2.D_OUT [2] $flatten\soc_inst.\eclass.$procmux$7098_CMP $flatten\soc_inst.\eclass.$procmux$7097_CMP $flatten\soc_inst.\eclass.$eq$mkeclass.v:1478$3714_Y \soc_inst.eclass.WILL_FIRE_RL_handle_memoryRead_response } = 10'1011001011
    Analyzing resource sharing with $flatten\soc_inst.\eclass.$shr$mkeclass.v:1461$3710 ($shr):
      Found 1 activation_patterns using ctrl signal { $flatten\soc_inst.\eclass.$eq$mkeclass.v:1486$3718_Y \soc_inst.eclass.WILL_FIRE_RL_handle_fetch_response }.
      Activation pattern for cell $flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$shr$module_fn_alu.v:211$4608: { $flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$procmux$7324_CMP $flatten\soc_inst.\eclass.\riscv.\stage2.$procmux$7178_CMP } = 2'11
      Activation pattern for cell $flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$shr$module_fn_alu.v:211$4608: { $flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$procmux$7324_CMP $flatten\soc_inst.\eclass.\riscv.\stage2.$procmux$7179_CMP \soc_inst.eclass.riscv.fifof_2.D_OUT [2] } = 3'110
      Activation pattern for cell $flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$shr$module_fn_alu.v:211$4608: { $flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$procmux$7295_CTRL $flatten\soc_inst.\eclass.\riscv.\stage2.$procmux$7178_CMP } = 2'11
      Activation pattern for cell $flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$shr$module_fn_alu.v:211$4608: { $flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$procmux$7295_CTRL $flatten\soc_inst.\eclass.\riscv.\stage2.$procmux$7179_CMP \soc_inst.eclass.riscv.fifof_2.D_OUT [2] } = 3'110
      Activation pattern for cell $flatten\soc_inst.\eclass.$shr$mkeclass.v:1461$3710: { $flatten\soc_inst.\eclass.$eq$mkeclass.v:1486$3718_Y \soc_inst.eclass.WILL_FIRE_RL_handle_fetch_response } = 2'11
      Size of SAT problem: 0 cells, 5396 variables, 14046 clauses
      According to the SAT solver this pair of cells can not be shared.
      Model from SAT solver: { $flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$procmux$7324_CMP $flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$procmux$7295_CTRL $flatten\soc_inst.\eclass.\riscv.\stage2.$procmux$7179_CMP $flatten\soc_inst.\eclass.\riscv.\stage2.$procmux$7178_CMP \soc_inst.eclass.riscv.fifof_2.D_OUT [2] $flatten\soc_inst.\eclass.$eq$mkeclass.v:1486$3718_Y \soc_inst.eclass.WILL_FIRE_RL_handle_fetch_response } = 7'0110011
    Analyzing resource sharing with $flatten\soc_inst.$shr$mkSoc.v:10270$2756 ($shr):
      Found 4 activation_patterns using ctrl signal { \soc_inst.WILL_FIRE_RL_clint_axi_read_transaction $flatten\soc_inst.$eq$mkSoc.v:9645$2296_Y $flatten\soc_inst.$procmux$6311_CMP $flatten\soc_inst.$procmux$6312_CMP $flatten\soc_inst.$procmux$6313_CMP }.
      Activation pattern for cell $flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$shr$module_fn_alu.v:211$4608: { $flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$procmux$7324_CMP $flatten\soc_inst.\eclass.\riscv.\stage2.$procmux$7178_CMP } = 2'11
      Activation pattern for cell $flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$shr$module_fn_alu.v:211$4608: { $flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$procmux$7324_CMP $flatten\soc_inst.\eclass.\riscv.\stage2.$procmux$7179_CMP \soc_inst.eclass.riscv.fifof_2.D_OUT [2] } = 3'110
      Activation pattern for cell $flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$shr$module_fn_alu.v:211$4608: { $flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$procmux$7295_CTRL $flatten\soc_inst.\eclass.\riscv.\stage2.$procmux$7178_CMP } = 2'11
      Activation pattern for cell $flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$shr$module_fn_alu.v:211$4608: { $flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$procmux$7295_CTRL $flatten\soc_inst.\eclass.\riscv.\stage2.$procmux$7179_CMP \soc_inst.eclass.riscv.fifof_2.D_OUT [2] } = 3'110
      Activation pattern for cell $flatten\soc_inst.$shr$mkSoc.v:10270$2756: { \soc_inst.WILL_FIRE_RL_clint_axi_read_transaction $flatten\soc_inst.$procmux$6311_CMP } = 2'01
      Activation pattern for cell $flatten\soc_inst.$shr$mkSoc.v:10270$2756: { \soc_inst.WILL_FIRE_RL_clint_axi_read_transaction $flatten\soc_inst.$procmux$6312_CMP } = 2'01
      Activation pattern for cell $flatten\soc_inst.$shr$mkSoc.v:10270$2756: { \soc_inst.WILL_FIRE_RL_clint_axi_read_transaction $flatten\soc_inst.$procmux$6313_CMP } = 2'01
      Activation pattern for cell $flatten\soc_inst.$shr$mkSoc.v:10270$2756: { \soc_inst.WILL_FIRE_RL_clint_axi_read_transaction $flatten\soc_inst.$eq$mkSoc.v:9645$2296_Y } = 2'01
      Size of SAT problem: 0 cells, 5425 variables, 14124 clauses
      According to the SAT solver this pair of cells can not be shared.
      Model from SAT solver: { \soc_inst.WILL_FIRE_RL_clint_axi_read_transaction $flatten\soc_inst.$eq$mkSoc.v:9645$2296_Y $flatten\soc_inst.$procmux$6311_CMP $flatten\soc_inst.$procmux$6312_CMP $flatten\soc_inst.$procmux$6313_CMP $flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$procmux$7324_CMP $flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$procmux$7295_CTRL $flatten\soc_inst.\eclass.\riscv.\stage2.$procmux$7179_CMP $flatten\soc_inst.\eclass.\riscv.\stage2.$procmux$7178_CMP \soc_inst.eclass.riscv.fifof_2.D_OUT [2] } = 10'0100001100
    Analyzing resource sharing with $flatten\soc_inst.$shr$mkSoc.v:10267$2755 ($shr):
      Found 4 activation_patterns using ctrl signal { \soc_inst.WILL_FIRE_RL_clint_axi_read_transaction $flatten\soc_inst.$eq$mkSoc.v:9641$2294_Y $flatten\soc_inst.$procmux$6306_CMP $flatten\soc_inst.$procmux$6307_CMP $flatten\soc_inst.$procmux$6308_CMP }.
      Activation pattern for cell $flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$shr$module_fn_alu.v:211$4608: { $flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$procmux$7324_CMP $flatten\soc_inst.\eclass.\riscv.\stage2.$procmux$7178_CMP } = 2'11
      Activation pattern for cell $flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$shr$module_fn_alu.v:211$4608: { $flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$procmux$7324_CMP $flatten\soc_inst.\eclass.\riscv.\stage2.$procmux$7179_CMP \soc_inst.eclass.riscv.fifof_2.D_OUT [2] } = 3'110
      Activation pattern for cell $flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$shr$module_fn_alu.v:211$4608: { $flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$procmux$7295_CTRL $flatten\soc_inst.\eclass.\riscv.\stage2.$procmux$7178_CMP } = 2'11
      Activation pattern for cell $flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$shr$module_fn_alu.v:211$4608: { $flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$procmux$7295_CTRL $flatten\soc_inst.\eclass.\riscv.\stage2.$procmux$7179_CMP \soc_inst.eclass.riscv.fifof_2.D_OUT [2] } = 3'110
      Activation pattern for cell $flatten\soc_inst.$shr$mkSoc.v:10267$2755: { \soc_inst.WILL_FIRE_RL_clint_axi_read_transaction $flatten\soc_inst.$procmux$6306_CMP } = 2'11
      Activation pattern for cell $flatten\soc_inst.$shr$mkSoc.v:10267$2755: { \soc_inst.WILL_FIRE_RL_clint_axi_read_transaction $flatten\soc_inst.$procmux$6307_CMP } = 2'11
      Activation pattern for cell $flatten\soc_inst.$shr$mkSoc.v:10267$2755: { \soc_inst.WILL_FIRE_RL_clint_axi_read_transaction $flatten\soc_inst.$procmux$6308_CMP } = 2'11
      Activation pattern for cell $flatten\soc_inst.$shr$mkSoc.v:10267$2755: { \soc_inst.WILL_FIRE_RL_clint_axi_read_transaction $flatten\soc_inst.$eq$mkSoc.v:9641$2294_Y } = 2'11
      Size of SAT problem: 0 cells, 5425 variables, 14124 clauses
      According to the SAT solver this pair of cells can not be shared.
      Model from SAT solver: { \soc_inst.WILL_FIRE_RL_clint_axi_read_transaction $flatten\soc_inst.$eq$mkSoc.v:9641$2294_Y $flatten\soc_inst.$procmux$6306_CMP $flatten\soc_inst.$procmux$6307_CMP $flatten\soc_inst.$procmux$6308_CMP $flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$procmux$7324_CMP $flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$procmux$7295_CTRL $flatten\soc_inst.\eclass.\riscv.\stage2.$procmux$7179_CMP $flatten\soc_inst.\eclass.\riscv.\stage2.$procmux$7178_CMP \soc_inst.eclass.riscv.fifof_2.D_OUT [2] } = 10'1100001100
  Analyzing resource sharing options for $flatten\soc_inst.\eclass.\riscv.\stage1.\integer_rf_rf.$memrd$\arr$RegFile.v:72$5369 ($memrd):
    Found 1 activation_patterns using ctrl signal $flatten\soc_inst.\eclass.\riscv.\stage1.$eq$mkstage1.v:953$4019_Y.
    Found 1 candidates: $flatten\soc_inst.\eclass.\riscv.\stage1.\integer_rf_rf.$memrd$\arr$RegFile.v:71$5368
    Analyzing resource sharing with $flatten\soc_inst.\eclass.\riscv.\stage1.\integer_rf_rf.$memrd$\arr$RegFile.v:71$5368 ($memrd):
      Found 1 activation_patterns using ctrl signal $flatten\soc_inst.\eclass.\riscv.\stage1.$eq$mkstage1.v:957$4021_Y.
      Activation pattern for cell $flatten\soc_inst.\eclass.\riscv.\stage1.\integer_rf_rf.$memrd$\arr$RegFile.v:72$5369: $flatten\soc_inst.\eclass.\riscv.\stage1.$eq$mkstage1.v:953$4019_Y = 1'0
      Activation pattern for cell $flatten\soc_inst.\eclass.\riscv.\stage1.\integer_rf_rf.$memrd$\arr$RegFile.v:71$5368: $flatten\soc_inst.\eclass.\riscv.\stage1.$eq$mkstage1.v:957$4021_Y = 1'0
      Size of SAT problem: 0 cells, 9148 variables, 23481 clauses
      According to the SAT solver this pair of cells can not be shared.
      Model from SAT solver: { $flatten\soc_inst.\eclass.\riscv.\stage1.$eq$mkstage1.v:953$4019_Y $flatten\soc_inst.\eclass.\riscv.\stage1.$eq$mkstage1.v:957$4021_Y } = 2'00
  Analyzing resource sharing options for $flatten\soc_inst.\eclass.\riscv.\stage1.\integer_rf_rf.$memrd$\arr$RegFile.v:71$5368 ($memrd):
    Found 1 activation_patterns using ctrl signal $flatten\soc_inst.\eclass.\riscv.\stage1.$eq$mkstage1.v:957$4021_Y.
    No candidates found.
  Analyzing resource sharing options for $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$shl$module_fn_pmp_lookup.v:208$4826 ($shl):
    Found 1 activation_patterns using ctrl signal { $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$procmux$7360_CMP $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$procmux$7361_CMP }.
    Found 3 candidates: $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$shl$module_fn_pmp_lookup.v:207$4825 $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$shl$module_fn_pmp_lookup.v:206$4824 $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$shl$module_fn_pmp_lookup.v:205$4823
    Analyzing resource sharing with $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$shl$module_fn_pmp_lookup.v:207$4825 ($shl):
      Found 1 activation_patterns using ctrl signal { $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$procmux$7344_CMP $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$procmux$7345_CMP }.
      Forbidden control signals for this pair of cells: { $flatten\soc_inst.\eclass.\fetch_xactor_f_rd_addr.$logic_and$FIFO2.v:95$5153_Y $flatten\soc_inst.\eclass.\fetch_xactor_f_rd_addr.$logic_and$FIFO2.v:100$5156_Y $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$logic_and$module_fn_pmp_lookup.v:127$4738_Y $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_1.$logic_and$module_fn_pmp_lookup.v:127$4738_Y \soc_inst.eclass.fn_pmp_lookup___d114 [6] }
      Activation pattern for cell $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$shl$module_fn_pmp_lookup.v:208$4826: { $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$procmux$7360_CMP $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$procmux$7361_CMP } = 2'00
      Activation pattern for cell $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$shl$module_fn_pmp_lookup.v:207$4825: { $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$procmux$7344_CMP $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$procmux$7345_CMP } = 2'00
      Size of SAT problem: 0 cells, 55 variables, 143 clauses
      According to the SAT solver this pair of cells can not be shared.
      Model from SAT solver: { $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$procmux$7344_CMP $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$procmux$7345_CMP $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$procmux$7360_CMP $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$procmux$7361_CMP } = 4'0000
    Analyzing resource sharing with $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$shl$module_fn_pmp_lookup.v:206$4824 ($shl):
      Found 1 activation_patterns using ctrl signal { $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$procmux$7336_CMP $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$procmux$7337_CMP }.
      Forbidden control signals for this pair of cells: { $flatten\soc_inst.\eclass.\fetch_xactor_f_rd_addr.$logic_and$FIFO2.v:95$5153_Y $flatten\soc_inst.\eclass.\fetch_xactor_f_rd_addr.$logic_and$FIFO2.v:100$5156_Y \soc_inst.eclass.instance_fn_pmp_lookup_0.IF_fn_pmp_lookup_pmpcfg_BITS_4_TO_3_EQ_1_THEN__ETC___d348 $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$logic_and$module_fn_pmp_lookup.v:127$4738_Y $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$logic_and$module_fn_pmp_lookup.v:120$4734_Y \soc_inst.eclass.instance_fn_pmp_lookup_1.IF_fn_pmp_lookup_pmpcfg_BITS_4_TO_3_EQ_1_THEN__ETC___d348 $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_1.$logic_and$module_fn_pmp_lookup.v:127$4738_Y $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_1.$logic_and$module_fn_pmp_lookup.v:120$4734_Y \soc_inst.eclass.fn_pmp_lookup___d114 [6] }
      Activation pattern for cell $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$shl$module_fn_pmp_lookup.v:208$4826: { $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$procmux$7360_CMP $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$procmux$7361_CMP } = 2'00
      Activation pattern for cell $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$shl$module_fn_pmp_lookup.v:206$4824: { $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$procmux$7336_CMP $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$procmux$7337_CMP } = 2'00
      Size of SAT problem: 0 cells, 55 variables, 143 clauses
      According to the SAT solver this pair of cells can not be shared.
      Model from SAT solver: { $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$procmux$7336_CMP $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$procmux$7337_CMP $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$procmux$7360_CMP $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$procmux$7361_CMP } = 4'0000
    Analyzing resource sharing with $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$shl$module_fn_pmp_lookup.v:205$4823 ($shl):
      Found 1 activation_patterns using ctrl signal { $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$procmux$7340_CMP $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$procmux$7341_CMP }.
      Forbidden control signals for this pair of cells: { $flatten\soc_inst.\eclass.\fetch_xactor_f_rd_addr.$logic_and$FIFO2.v:95$5153_Y $flatten\soc_inst.\eclass.\fetch_xactor_f_rd_addr.$logic_and$FIFO2.v:100$5156_Y $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$logic_and$module_fn_pmp_lookup.v:127$4738_Y $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$logic_and$module_fn_pmp_lookup.v:120$4734_Y $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_1.$logic_and$module_fn_pmp_lookup.v:127$4738_Y $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_1.$logic_and$module_fn_pmp_lookup.v:120$4734_Y \soc_inst.eclass.fn_pmp_lookup___d114 [6] }
      Activation pattern for cell $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$shl$module_fn_pmp_lookup.v:208$4826: { $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$procmux$7360_CMP $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$procmux$7361_CMP } = 2'00
      Activation pattern for cell $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$shl$module_fn_pmp_lookup.v:205$4823: { $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$procmux$7340_CMP $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$procmux$7341_CMP } = 2'00
      Size of SAT problem: 0 cells, 55 variables, 143 clauses
      According to the SAT solver this pair of cells can not be shared.
      Model from SAT solver: { $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$procmux$7340_CMP $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$procmux$7341_CMP $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$procmux$7360_CMP $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$procmux$7361_CMP } = 4'0000
  Analyzing resource sharing options for $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$shl$module_fn_pmp_lookup.v:207$4825 ($shl):
    Found 1 activation_patterns using ctrl signal { $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$procmux$7344_CMP $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$procmux$7345_CMP }.
    Found 2 candidates: $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$shl$module_fn_pmp_lookup.v:206$4824 $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$shl$module_fn_pmp_lookup.v:205$4823
    Analyzing resource sharing with $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$shl$module_fn_pmp_lookup.v:206$4824 ($shl):
      Found 1 activation_patterns using ctrl signal { $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$procmux$7336_CMP $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$procmux$7337_CMP }.
      Forbidden control signals for this pair of cells: { $flatten\soc_inst.\eclass.\fetch_xactor_f_rd_addr.$logic_and$FIFO2.v:95$5153_Y $flatten\soc_inst.\eclass.\fetch_xactor_f_rd_addr.$logic_and$FIFO2.v:100$5156_Y \soc_inst.eclass.instance_fn_pmp_lookup_0.IF_fn_pmp_lookup_pmpcfg_BITS_4_TO_3_EQ_1_THEN__ETC___d348 $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$logic_and$module_fn_pmp_lookup.v:127$4738_Y $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$logic_and$module_fn_pmp_lookup.v:120$4734_Y \soc_inst.eclass.instance_fn_pmp_lookup_1.IF_fn_pmp_lookup_pmpcfg_BITS_4_TO_3_EQ_1_THEN__ETC___d348 $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_1.$logic_and$module_fn_pmp_lookup.v:127$4738_Y $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_1.$logic_and$module_fn_pmp_lookup.v:120$4734_Y \soc_inst.eclass.fn_pmp_lookup___d114 [6] }
      Activation pattern for cell $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$shl$module_fn_pmp_lookup.v:207$4825: { $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$procmux$7344_CMP $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$procmux$7345_CMP } = 2'00
      Activation pattern for cell $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$shl$module_fn_pmp_lookup.v:206$4824: { $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$procmux$7336_CMP $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$procmux$7337_CMP } = 2'00
      Size of SAT problem: 0 cells, 55 variables, 143 clauses
      According to the SAT solver this pair of cells can not be shared.
      Model from SAT solver: { $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$procmux$7336_CMP $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$procmux$7337_CMP $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$procmux$7344_CMP $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$procmux$7345_CMP } = 4'0000
    Analyzing resource sharing with $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$shl$module_fn_pmp_lookup.v:205$4823 ($shl):
      Found 1 activation_patterns using ctrl signal { $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$procmux$7340_CMP $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$procmux$7341_CMP }.
      Forbidden control signals for this pair of cells: { $flatten\soc_inst.\eclass.\fetch_xactor_f_rd_addr.$logic_and$FIFO2.v:95$5153_Y $flatten\soc_inst.\eclass.\fetch_xactor_f_rd_addr.$logic_and$FIFO2.v:100$5156_Y $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$logic_and$module_fn_pmp_lookup.v:127$4738_Y $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$logic_and$module_fn_pmp_lookup.v:120$4734_Y $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_1.$logic_and$module_fn_pmp_lookup.v:127$4738_Y $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_1.$logic_and$module_fn_pmp_lookup.v:120$4734_Y \soc_inst.eclass.fn_pmp_lookup___d114 [6] }
      Activation pattern for cell $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$shl$module_fn_pmp_lookup.v:207$4825: { $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$procmux$7344_CMP $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$procmux$7345_CMP } = 2'00
      Activation pattern for cell $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$shl$module_fn_pmp_lookup.v:205$4823: { $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$procmux$7340_CMP $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$procmux$7341_CMP } = 2'00
      Size of SAT problem: 0 cells, 55 variables, 143 clauses
      According to the SAT solver this pair of cells can not be shared.
      Model from SAT solver: { $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$procmux$7340_CMP $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$procmux$7341_CMP $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$procmux$7344_CMP $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$procmux$7345_CMP } = 4'0000
  Analyzing resource sharing options for $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$shl$module_fn_pmp_lookup.v:206$4824 ($shl):
    Found 1 activation_patterns using ctrl signal { $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$procmux$7336_CMP $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$procmux$7337_CMP }.
    Found 1 candidates: $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$shl$module_fn_pmp_lookup.v:205$4823
    Analyzing resource sharing with $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$shl$module_fn_pmp_lookup.v:205$4823 ($shl):
      Found 1 activation_patterns using ctrl signal { $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$procmux$7340_CMP $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$procmux$7341_CMP }.
      Forbidden control signals for this pair of cells: { $flatten\soc_inst.\eclass.\fetch_xactor_f_rd_addr.$logic_and$FIFO2.v:95$5153_Y $flatten\soc_inst.\eclass.\fetch_xactor_f_rd_addr.$logic_and$FIFO2.v:100$5156_Y \soc_inst.eclass.instance_fn_pmp_lookup_0.IF_fn_pmp_lookup_pmpcfg_BITS_4_TO_3_EQ_1_THEN__ETC___d348 $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$logic_and$module_fn_pmp_lookup.v:127$4738_Y $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$logic_and$module_fn_pmp_lookup.v:120$4734_Y \soc_inst.eclass.instance_fn_pmp_lookup_1.IF_fn_pmp_lookup_pmpcfg_BITS_4_TO_3_EQ_1_THEN__ETC___d348 $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_1.$logic_and$module_fn_pmp_lookup.v:127$4738_Y $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_1.$logic_and$module_fn_pmp_lookup.v:120$4734_Y \soc_inst.eclass.fn_pmp_lookup___d114 [6] }
      Activation pattern for cell $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$shl$module_fn_pmp_lookup.v:206$4824: { $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$procmux$7336_CMP $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$procmux$7337_CMP } = 2'00
      Activation pattern for cell $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$shl$module_fn_pmp_lookup.v:205$4823: { $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$procmux$7340_CMP $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$procmux$7341_CMP } = 2'00
      Size of SAT problem: 0 cells, 55 variables, 143 clauses
      According to the SAT solver this pair of cells can not be shared.
      Model from SAT solver: { $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$procmux$7336_CMP $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$procmux$7337_CMP $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$procmux$7340_CMP $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$procmux$7341_CMP } = 4'0000
  Analyzing resource sharing options for $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$shl$module_fn_pmp_lookup.v:205$4823 ($shl):
    Found 1 activation_patterns using ctrl signal { $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$procmux$7340_CMP $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$procmux$7341_CMP }.
    No candidates found.
  Analyzing resource sharing options for $flatten\soc_inst.\eclass.$shr$mkeclass.v:1465$3711 ($shr):
    Found 3 activation_patterns using ctrl signal { \soc_inst.eclass.ff_mem_request.DEQ $flatten\soc_inst.\eclass.$procmux$7098_CMP $flatten\soc_inst.\eclass.$procmux$7097_CMP $flatten\soc_inst.\eclass.$eq$mkeclass.v:1478$3714_Y \soc_inst.eclass.WILL_FIRE_RL_handle_memoryRead_response }.
    Found 3 candidates: $flatten\soc_inst.\eclass.$shr$mkeclass.v:1461$3710 $flatten\soc_inst.$shr$mkSoc.v:10270$2756 $flatten\soc_inst.$shr$mkSoc.v:10267$2755
    Analyzing resource sharing with $flatten\soc_inst.\eclass.$shr$mkeclass.v:1461$3710 ($shr):
      Found 1 activation_patterns using ctrl signal { $flatten\soc_inst.\eclass.$eq$mkeclass.v:1486$3718_Y \soc_inst.eclass.WILL_FIRE_RL_handle_fetch_response }.
      Activation pattern for cell $flatten\soc_inst.\eclass.$shr$mkeclass.v:1465$3711: { \soc_inst.eclass.ff_mem_request.DEQ $flatten\soc_inst.\eclass.$procmux$7098_CMP $flatten\soc_inst.\eclass.$eq$mkeclass.v:1478$3714_Y \soc_inst.eclass.WILL_FIRE_RL_handle_memoryRead_response } = 4'1111
      Activation pattern for cell $flatten\soc_inst.\eclass.$shr$mkeclass.v:1465$3711: { \soc_inst.eclass.ff_mem_request.DEQ $flatten\soc_inst.\eclass.$procmux$7097_CMP $flatten\soc_inst.\eclass.$eq$mkeclass.v:1478$3714_Y \soc_inst.eclass.WILL_FIRE_RL_handle_memoryRead_response } = 4'1111
      Activation pattern for cell $flatten\soc_inst.\eclass.$shr$mkeclass.v:1465$3711: { \soc_inst.eclass.ff_mem_request.DEQ $flatten\soc_inst.\eclass.$procmux$7098_CMP $flatten\soc_inst.\eclass.$procmux$7097_CMP $flatten\soc_inst.\eclass.$eq$mkeclass.v:1478$3714_Y \soc_inst.eclass.WILL_FIRE_RL_handle_memoryRead_response } = 5'10011
      Activation pattern for cell $flatten\soc_inst.\eclass.$shr$mkeclass.v:1461$3710: { $flatten\soc_inst.\eclass.$eq$mkeclass.v:1486$3718_Y \soc_inst.eclass.WILL_FIRE_RL_handle_fetch_response } = 2'11
      Size of SAT problem: 0 cells, 139 variables, 351 clauses
      According to the SAT solver this pair of cells can not be shared.
      Model from SAT solver: { \soc_inst.eclass.ff_mem_request.DEQ $flatten\soc_inst.\eclass.$procmux$7098_CMP $flatten\soc_inst.\eclass.$procmux$7097_CMP $flatten\soc_inst.\eclass.$eq$mkeclass.v:1478$3714_Y $flatten\soc_inst.\eclass.$eq$mkeclass.v:1486$3718_Y \soc_inst.eclass.WILL_FIRE_RL_handle_fetch_response \soc_inst.eclass.WILL_FIRE_RL_handle_memoryRead_response } = 7'1101111
    Analyzing resource sharing with $flatten\soc_inst.$shr$mkSoc.v:10270$2756 ($shr):
      Found 4 activation_patterns using ctrl signal { \soc_inst.WILL_FIRE_RL_clint_axi_read_transaction $flatten\soc_inst.$eq$mkSoc.v:9645$2296_Y $flatten\soc_inst.$procmux$6311_CMP $flatten\soc_inst.$procmux$6312_CMP $flatten\soc_inst.$procmux$6313_CMP }.
      Activation pattern for cell $flatten\soc_inst.\eclass.$shr$mkeclass.v:1465$3711: { \soc_inst.eclass.ff_mem_request.DEQ $flatten\soc_inst.\eclass.$procmux$7098_CMP $flatten\soc_inst.\eclass.$eq$mkeclass.v:1478$3714_Y \soc_inst.eclass.WILL_FIRE_RL_handle_memoryRead_response } = 4'1111
      Activation pattern for cell $flatten\soc_inst.\eclass.$shr$mkeclass.v:1465$3711: { \soc_inst.eclass.ff_mem_request.DEQ $flatten\soc_inst.\eclass.$procmux$7097_CMP $flatten\soc_inst.\eclass.$eq$mkeclass.v:1478$3714_Y \soc_inst.eclass.WILL_FIRE_RL_handle_memoryRead_response } = 4'1111
      Activation pattern for cell $flatten\soc_inst.\eclass.$shr$mkeclass.v:1465$3711: { \soc_inst.eclass.ff_mem_request.DEQ $flatten\soc_inst.\eclass.$procmux$7098_CMP $flatten\soc_inst.\eclass.$procmux$7097_CMP $flatten\soc_inst.\eclass.$eq$mkeclass.v:1478$3714_Y \soc_inst.eclass.WILL_FIRE_RL_handle_memoryRead_response } = 5'10011
      Activation pattern for cell $flatten\soc_inst.$shr$mkSoc.v:10270$2756: { \soc_inst.WILL_FIRE_RL_clint_axi_read_transaction $flatten\soc_inst.$procmux$6311_CMP } = 2'01
      Activation pattern for cell $flatten\soc_inst.$shr$mkSoc.v:10270$2756: { \soc_inst.WILL_FIRE_RL_clint_axi_read_transaction $flatten\soc_inst.$procmux$6312_CMP } = 2'01
      Activation pattern for cell $flatten\soc_inst.$shr$mkSoc.v:10270$2756: { \soc_inst.WILL_FIRE_RL_clint_axi_read_transaction $flatten\soc_inst.$procmux$6313_CMP } = 2'01
      Activation pattern for cell $flatten\soc_inst.$shr$mkSoc.v:10270$2756: { \soc_inst.WILL_FIRE_RL_clint_axi_read_transaction $flatten\soc_inst.$eq$mkSoc.v:9645$2296_Y } = 2'01
      Size of SAT problem: 0 cells, 168 variables, 429 clauses
      According to the SAT solver this pair of cells can not be shared.
      Model from SAT solver: { \soc_inst.WILL_FIRE_RL_clint_axi_read_transaction $flatten\soc_inst.$eq$mkSoc.v:9645$2296_Y $flatten\soc_inst.$procmux$6311_CMP $flatten\soc_inst.$procmux$6312_CMP $flatten\soc_inst.$procmux$6313_CMP \soc_inst.eclass.ff_mem_request.DEQ $flatten\soc_inst.\eclass.$procmux$7098_CMP $flatten\soc_inst.\eclass.$procmux$7097_CMP $flatten\soc_inst.\eclass.$eq$mkeclass.v:1478$3714_Y \soc_inst.eclass.WILL_FIRE_RL_handle_memoryRead_response } = 10'0100011011
    Analyzing resource sharing with $flatten\soc_inst.$shr$mkSoc.v:10267$2755 ($shr):
      Found 4 activation_patterns using ctrl signal { \soc_inst.WILL_FIRE_RL_clint_axi_read_transaction $flatten\soc_inst.$eq$mkSoc.v:9641$2294_Y $flatten\soc_inst.$procmux$6306_CMP $flatten\soc_inst.$procmux$6307_CMP $flatten\soc_inst.$procmux$6308_CMP }.
      Activation pattern for cell $flatten\soc_inst.\eclass.$shr$mkeclass.v:1465$3711: { \soc_inst.eclass.ff_mem_request.DEQ $flatten\soc_inst.\eclass.$procmux$7098_CMP $flatten\soc_inst.\eclass.$eq$mkeclass.v:1478$3714_Y \soc_inst.eclass.WILL_FIRE_RL_handle_memoryRead_response } = 4'1111
      Activation pattern for cell $flatten\soc_inst.\eclass.$shr$mkeclass.v:1465$3711: { \soc_inst.eclass.ff_mem_request.DEQ $flatten\soc_inst.\eclass.$procmux$7097_CMP $flatten\soc_inst.\eclass.$eq$mkeclass.v:1478$3714_Y \soc_inst.eclass.WILL_FIRE_RL_handle_memoryRead_response } = 4'1111
      Activation pattern for cell $flatten\soc_inst.\eclass.$shr$mkeclass.v:1465$3711: { \soc_inst.eclass.ff_mem_request.DEQ $flatten\soc_inst.\eclass.$procmux$7098_CMP $flatten\soc_inst.\eclass.$procmux$7097_CMP $flatten\soc_inst.\eclass.$eq$mkeclass.v:1478$3714_Y \soc_inst.eclass.WILL_FIRE_RL_handle_memoryRead_response } = 5'10011
      Activation pattern for cell $flatten\soc_inst.$shr$mkSoc.v:10267$2755: { \soc_inst.WILL_FIRE_RL_clint_axi_read_transaction $flatten\soc_inst.$procmux$6306_CMP } = 2'11
      Activation pattern for cell $flatten\soc_inst.$shr$mkSoc.v:10267$2755: { \soc_inst.WILL_FIRE_RL_clint_axi_read_transaction $flatten\soc_inst.$procmux$6307_CMP } = 2'11
      Activation pattern for cell $flatten\soc_inst.$shr$mkSoc.v:10267$2755: { \soc_inst.WILL_FIRE_RL_clint_axi_read_transaction $flatten\soc_inst.$procmux$6308_CMP } = 2'11
      Activation pattern for cell $flatten\soc_inst.$shr$mkSoc.v:10267$2755: { \soc_inst.WILL_FIRE_RL_clint_axi_read_transaction $flatten\soc_inst.$eq$mkSoc.v:9641$2294_Y } = 2'11
      Size of SAT problem: 0 cells, 168 variables, 429 clauses
      According to the SAT solver this pair of cells can not be shared.
      Model from SAT solver: { \soc_inst.WILL_FIRE_RL_clint_axi_read_transaction $flatten\soc_inst.$eq$mkSoc.v:9641$2294_Y $flatten\soc_inst.$procmux$6306_CMP $flatten\soc_inst.$procmux$6307_CMP $flatten\soc_inst.$procmux$6308_CMP \soc_inst.eclass.ff_mem_request.DEQ $flatten\soc_inst.\eclass.$procmux$7098_CMP $flatten\soc_inst.\eclass.$procmux$7097_CMP $flatten\soc_inst.\eclass.$eq$mkeclass.v:1478$3714_Y \soc_inst.eclass.WILL_FIRE_RL_handle_memoryRead_response } = 10'1100011011
  Analyzing resource sharing options for $flatten\soc_inst.\eclass.$shr$mkeclass.v:1461$3710 ($shr):
    Found 1 activation_patterns using ctrl signal { $flatten\soc_inst.\eclass.$eq$mkeclass.v:1486$3718_Y \soc_inst.eclass.WILL_FIRE_RL_handle_fetch_response }.
    Found 2 candidates: $flatten\soc_inst.$shr$mkSoc.v:10270$2756 $flatten\soc_inst.$shr$mkSoc.v:10267$2755
    Analyzing resource sharing with $flatten\soc_inst.$shr$mkSoc.v:10270$2756 ($shr):
      Found 4 activation_patterns using ctrl signal { \soc_inst.WILL_FIRE_RL_clint_axi_read_transaction $flatten\soc_inst.$eq$mkSoc.v:9645$2296_Y $flatten\soc_inst.$procmux$6311_CMP $flatten\soc_inst.$procmux$6312_CMP $flatten\soc_inst.$procmux$6313_CMP }.
      Activation pattern for cell $flatten\soc_inst.\eclass.$shr$mkeclass.v:1461$3710: { $flatten\soc_inst.\eclass.$eq$mkeclass.v:1486$3718_Y \soc_inst.eclass.WILL_FIRE_RL_handle_fetch_response } = 2'11
      Activation pattern for cell $flatten\soc_inst.$shr$mkSoc.v:10270$2756: { \soc_inst.WILL_FIRE_RL_clint_axi_read_transaction $flatten\soc_inst.$procmux$6311_CMP } = 2'01
      Activation pattern for cell $flatten\soc_inst.$shr$mkSoc.v:10270$2756: { \soc_inst.WILL_FIRE_RL_clint_axi_read_transaction $flatten\soc_inst.$procmux$6312_CMP } = 2'01
      Activation pattern for cell $flatten\soc_inst.$shr$mkSoc.v:10270$2756: { \soc_inst.WILL_FIRE_RL_clint_axi_read_transaction $flatten\soc_inst.$procmux$6313_CMP } = 2'01
      Activation pattern for cell $flatten\soc_inst.$shr$mkSoc.v:10270$2756: { \soc_inst.WILL_FIRE_RL_clint_axi_read_transaction $flatten\soc_inst.$eq$mkSoc.v:9645$2296_Y } = 2'01
      Size of SAT problem: 0 cells, 116 variables, 271 clauses
      According to the SAT solver this pair of cells can not be shared.
      Model from SAT solver: { \soc_inst.WILL_FIRE_RL_clint_axi_read_transaction $flatten\soc_inst.$eq$mkSoc.v:9645$2296_Y $flatten\soc_inst.$procmux$6311_CMP $flatten\soc_inst.$procmux$6312_CMP $flatten\soc_inst.$procmux$6313_CMP $flatten\soc_inst.\eclass.$eq$mkeclass.v:1486$3718_Y \soc_inst.eclass.WILL_FIRE_RL_handle_fetch_response } = 7'0100011
    Analyzing resource sharing with $flatten\soc_inst.$shr$mkSoc.v:10267$2755 ($shr):
      Found 4 activation_patterns using ctrl signal { \soc_inst.WILL_FIRE_RL_clint_axi_read_transaction $flatten\soc_inst.$eq$mkSoc.v:9641$2294_Y $flatten\soc_inst.$procmux$6306_CMP $flatten\soc_inst.$procmux$6307_CMP $flatten\soc_inst.$procmux$6308_CMP }.
      Activation pattern for cell $flatten\soc_inst.\eclass.$shr$mkeclass.v:1461$3710: { $flatten\soc_inst.\eclass.$eq$mkeclass.v:1486$3718_Y \soc_inst.eclass.WILL_FIRE_RL_handle_fetch_response } = 2'11
      Activation pattern for cell $flatten\soc_inst.$shr$mkSoc.v:10267$2755: { \soc_inst.WILL_FIRE_RL_clint_axi_read_transaction $flatten\soc_inst.$procmux$6306_CMP } = 2'11
      Activation pattern for cell $flatten\soc_inst.$shr$mkSoc.v:10267$2755: { \soc_inst.WILL_FIRE_RL_clint_axi_read_transaction $flatten\soc_inst.$procmux$6307_CMP } = 2'11
      Activation pattern for cell $flatten\soc_inst.$shr$mkSoc.v:10267$2755: { \soc_inst.WILL_FIRE_RL_clint_axi_read_transaction $flatten\soc_inst.$procmux$6308_CMP } = 2'11
      Activation pattern for cell $flatten\soc_inst.$shr$mkSoc.v:10267$2755: { \soc_inst.WILL_FIRE_RL_clint_axi_read_transaction $flatten\soc_inst.$eq$mkSoc.v:9641$2294_Y } = 2'11
      Size of SAT problem: 0 cells, 116 variables, 271 clauses
      According to the SAT solver this pair of cells can not be shared.
      Model from SAT solver: { \soc_inst.WILL_FIRE_RL_clint_axi_read_transaction $flatten\soc_inst.$eq$mkSoc.v:9641$2294_Y $flatten\soc_inst.$procmux$6306_CMP $flatten\soc_inst.$procmux$6307_CMP $flatten\soc_inst.$procmux$6308_CMP $flatten\soc_inst.\eclass.$eq$mkeclass.v:1486$3718_Y \soc_inst.eclass.WILL_FIRE_RL_handle_fetch_response } = 7'1100011
  Analyzing resource sharing options for $flatten\soc_inst.$shr$mkSoc.v:10270$2756 ($shr):
    Found 4 activation_patterns using ctrl signal { \soc_inst.WILL_FIRE_RL_clint_axi_read_transaction $flatten\soc_inst.$eq$mkSoc.v:9645$2296_Y $flatten\soc_inst.$procmux$6311_CMP $flatten\soc_inst.$procmux$6312_CMP $flatten\soc_inst.$procmux$6313_CMP }.
    Found 1 candidates: $flatten\soc_inst.$shr$mkSoc.v:10267$2755
    Analyzing resource sharing with $flatten\soc_inst.$shr$mkSoc.v:10267$2755 ($shr):
      Found 4 activation_patterns using ctrl signal { \soc_inst.WILL_FIRE_RL_clint_axi_read_transaction $flatten\soc_inst.$eq$mkSoc.v:9641$2294_Y $flatten\soc_inst.$procmux$6306_CMP $flatten\soc_inst.$procmux$6307_CMP $flatten\soc_inst.$procmux$6308_CMP }.
      Activation pattern for cell $flatten\soc_inst.$shr$mkSoc.v:10270$2756: { \soc_inst.WILL_FIRE_RL_clint_axi_read_transaction $flatten\soc_inst.$procmux$6311_CMP } = 2'01
      Activation pattern for cell $flatten\soc_inst.$shr$mkSoc.v:10270$2756: { \soc_inst.WILL_FIRE_RL_clint_axi_read_transaction $flatten\soc_inst.$procmux$6312_CMP } = 2'01
      Activation pattern for cell $flatten\soc_inst.$shr$mkSoc.v:10270$2756: { \soc_inst.WILL_FIRE_RL_clint_axi_read_transaction $flatten\soc_inst.$procmux$6313_CMP } = 2'01
      Activation pattern for cell $flatten\soc_inst.$shr$mkSoc.v:10270$2756: { \soc_inst.WILL_FIRE_RL_clint_axi_read_transaction $flatten\soc_inst.$eq$mkSoc.v:9645$2296_Y } = 2'01
      Activation pattern for cell $flatten\soc_inst.$shr$mkSoc.v:10267$2755: { \soc_inst.WILL_FIRE_RL_clint_axi_read_transaction $flatten\soc_inst.$procmux$6306_CMP } = 2'11
      Activation pattern for cell $flatten\soc_inst.$shr$mkSoc.v:10267$2755: { \soc_inst.WILL_FIRE_RL_clint_axi_read_transaction $flatten\soc_inst.$procmux$6307_CMP } = 2'11
      Activation pattern for cell $flatten\soc_inst.$shr$mkSoc.v:10267$2755: { \soc_inst.WILL_FIRE_RL_clint_axi_read_transaction $flatten\soc_inst.$procmux$6308_CMP } = 2'11
      Activation pattern for cell $flatten\soc_inst.$shr$mkSoc.v:10267$2755: { \soc_inst.WILL_FIRE_RL_clint_axi_read_transaction $flatten\soc_inst.$eq$mkSoc.v:9641$2294_Y } = 2'11
      Size of SAT problem: 0 cells, 127 variables, 327 clauses
      According to the SAT solver this pair of cells can be shared.
      Activation signal for $flatten\soc_inst.$shr$mkSoc.v:10270$2756: $auto$share.cc:987:make_cell_activation_logic$9920
      New cell: $auto$share.cc:667:make_supercell$9927 ($shr)
  Analyzing resource sharing options for $auto$share.cc:667:make_supercell$9927 ($shr):
    Found 8 activation_patterns using ctrl signal { \soc_inst.WILL_FIRE_RL_clint_axi_read_transaction $flatten\soc_inst.$eq$mkSoc.v:9645$2296_Y $flatten\soc_inst.$eq$mkSoc.v:9641$2294_Y $flatten\soc_inst.$procmux$6306_CMP $flatten\soc_inst.$procmux$6307_CMP $flatten\soc_inst.$procmux$6308_CMP $flatten\soc_inst.$procmux$6311_CMP $flatten\soc_inst.$procmux$6312_CMP $flatten\soc_inst.$procmux$6313_CMP }.
    No candidates found.
Removing 2 cells in module mkeclass_axi4:
  Removing cell $flatten\soc_inst.$shr$mkSoc.v:10267$2755 ($shr).
  Removing cell $flatten\soc_inst.$shr$mkSoc.v:10270$2756 ($shr).

52.17. Executing TECHMAP pass (map to technology primitives).

52.17.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/cmp2lut.v
Parsing Verilog input from `/usr/bin/../share/yosys/cmp2lut.v' to AST representation.
Generating RTLIL representation for module `\_90_lut_cmp_'.
Successfully finished Verilog frontend.

52.17.2. Continuing TECHMAP pass.
Using template $paramod$660678594e37ad19d3e37129102c1c7b69ba3182\_90_lut_cmp_ for cells of type $lt.
Using template $paramod$59f28c2fa873f653a9a5beb1f1e8f68cad2b77cd\_90_lut_cmp_ for cells of type $le.
Using template $paramod$b572544677d963e14c0b065ea224e532734f7bc9\_90_lut_cmp_ for cells of type $gt.
Using template $paramod$70ab994d9d7a6411c02d086fdaeb40976ec13d82\_90_lut_cmp_ for cells of type $lt.
Using template $paramod$95cc903f66ace9a14a4cfd768767dedcebc73225\_90_lut_cmp_ for cells of type $lt.
No more expansions possible.
<suppressed ~732 debug messages>

52.18. Executing OPT_EXPR pass (perform const folding).
Optimizing module mkeclass_axi4.
<suppressed ~1 debug messages>

52.19. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mkeclass_axi4..
Removed 0 unused cells and 16 unused wires.
<suppressed ~3 debug messages>

52.20. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module mkeclass_axi4:
  creating $macc model for $flatten\soc_inst.$add$mkSoc.v:10274$2757 ($add).
  creating $macc model for $flatten\soc_inst.$add$mkSoc.v:10276$2759 ($add).
  creating $macc model for $flatten\soc_inst.$add$mkSoc.v:10277$2760 ($add).
  creating $macc model for $flatten\soc_inst.$add$mkSoc.v:10278$2761 ($add).
  creating $macc model for $flatten\soc_inst.$add$mkSoc.v:10279$2762 ($add).
  creating $macc model for $flatten\soc_inst.$add$mkSoc.v:10280$2763 ($add).
  creating $macc model for $flatten\soc_inst.$add$mkSoc.v:10281$2764 ($add).
  creating $macc model for $flatten\soc_inst.$add$mkSoc.v:10282$2765 ($add).
  creating $macc model for $flatten\soc_inst.$add$mkSoc.v:6605$1536 ($add).
  creating $macc model for $flatten\soc_inst.$add$mkSoc.v:6736$1619 ($add).
  creating $macc model for $flatten\soc_inst.$add$mkSoc.v:6740$1620 ($add).
  creating $macc model for $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$add$module_fn_pmp_lookup.v:210$4827 ($add).
  creating $macc model for $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_1.$add$module_fn_pmp_lookup.v:210$4827 ($add).
  creating $macc model for $flatten\soc_inst.\eclass.\riscv.\stage1.$add$mkstage1.v:743$3915 ($add).
  creating $macc model for $flatten\soc_inst.\eclass.\riscv.\stage1.$add$mkstage1.v:782$3928 ($add).
  creating $macc model for $flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$add$module_fn_alu.v:209$4606 ($add).
  creating $macc model for $flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$add$module_fn_alu.v:304$4697 ($add).
  creating $macc model for $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$add$mkcsrfile.v:1104$3206 ($add).
  creating $macc model for $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$add$mkcsrfile.v:1665$3538 ($add).
  creating $macc model for $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$add$mkcsrfile.v:1669$3542 ($add).
  creating $macc model for $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$add$mkcsrfile.v:1801$3561 ($add).
  creating $macc model for $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$add$mkcsrfile.v:1802$3562 ($add).
  creating $macc model for $flatten\soc_inst.\signature.$add$mksign_dump_axi4.v:892$3855 ($add).
  creating $macc model for $flatten\soc_inst.\signature.$add$mksign_dump_axi4.v:925$3860 ($add).
  creating $macc model for $flatten\soc_inst.\signature.$sub$mksign_dump_axi4.v:1060$3889 ($sub).
  creating $macc model for $flatten\soc_inst.\signature.$sub$mksign_dump_axi4.v:896$3856 ($sub).
  creating $macc model for $flatten\soc_inst.\signature.\ff_lower_order_bits.$add$SizedFIFO.v:75$5305 ($add).
  creating $macc model for $flatten\soc_inst.\signature.\ff_lower_order_bits.$add$SizedFIFO.v:76$5306 ($add).
  creating $macc model for $flatten\soc_inst.\uart_user_ifc_uart_baudGen_rBaudCounter.$add$Counter.v:62$5066 ($add).
  creating $macc model for $flatten\soc_inst.\uart_user_ifc_uart_fifoRecv.$add$SizedFIFO.v:75$5025 ($add).
  creating $macc model for $flatten\soc_inst.\uart_user_ifc_uart_fifoRecv.$add$SizedFIFO.v:76$5026 ($add).
  creating $macc model for $flatten\soc_inst.\uart_user_ifc_uart_fifoXmit.$add$SizedFIFO.v:75$5025 ($add).
  creating $macc model for $flatten\soc_inst.\uart_user_ifc_uart_fifoXmit.$add$SizedFIFO.v:76$5026 ($add).
  creating $alu model for $macc $flatten\soc_inst.\uart_user_ifc_uart_fifoXmit.$add$SizedFIFO.v:76$5026.
  creating $alu model for $macc $flatten\soc_inst.\uart_user_ifc_uart_fifoXmit.$add$SizedFIFO.v:75$5025.
  creating $alu model for $macc $flatten\soc_inst.\uart_user_ifc_uart_fifoRecv.$add$SizedFIFO.v:76$5026.
  creating $alu model for $macc $flatten\soc_inst.\uart_user_ifc_uart_fifoRecv.$add$SizedFIFO.v:75$5025.
  creating $alu model for $macc $flatten\soc_inst.\uart_user_ifc_uart_baudGen_rBaudCounter.$add$Counter.v:62$5066.
  creating $alu model for $macc $flatten\soc_inst.\signature.\ff_lower_order_bits.$add$SizedFIFO.v:76$5306.
  creating $alu model for $macc $flatten\soc_inst.\signature.\ff_lower_order_bits.$add$SizedFIFO.v:75$5305.
  creating $alu model for $macc $flatten\soc_inst.\signature.$sub$mksign_dump_axi4.v:896$3856.
  creating $alu model for $macc $flatten\soc_inst.\signature.$sub$mksign_dump_axi4.v:1060$3889.
  creating $alu model for $macc $flatten\soc_inst.\signature.$add$mksign_dump_axi4.v:925$3860.
  creating $alu model for $macc $flatten\soc_inst.\signature.$add$mksign_dump_axi4.v:892$3855.
  creating $alu model for $macc $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$add$mkcsrfile.v:1802$3562.
  creating $alu model for $macc $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$add$mkcsrfile.v:1801$3561.
  creating $alu model for $macc $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$add$mkcsrfile.v:1669$3542.
  creating $alu model for $macc $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$add$mkcsrfile.v:1665$3538.
  creating $alu model for $macc $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$add$mkcsrfile.v:1104$3206.
  creating $alu model for $macc $flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$add$module_fn_alu.v:304$4697.
  creating $alu model for $macc $flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$add$module_fn_alu.v:209$4606.
  creating $alu model for $macc $flatten\soc_inst.\eclass.\riscv.\stage1.$add$mkstage1.v:782$3928.
  creating $alu model for $macc $flatten\soc_inst.\eclass.\riscv.\stage1.$add$mkstage1.v:743$3915.
  creating $alu model for $macc $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_1.$add$module_fn_pmp_lookup.v:210$4827.
  creating $alu model for $macc $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$add$module_fn_pmp_lookup.v:210$4827.
  creating $alu model for $macc $flatten\soc_inst.$add$mkSoc.v:6740$1620.
  creating $alu model for $macc $flatten\soc_inst.$add$mkSoc.v:6736$1619.
  creating $alu model for $macc $flatten\soc_inst.$add$mkSoc.v:6605$1536.
  creating $alu model for $macc $flatten\soc_inst.$add$mkSoc.v:10282$2765.
  creating $alu model for $macc $flatten\soc_inst.$add$mkSoc.v:10281$2764.
  creating $alu model for $macc $flatten\soc_inst.$add$mkSoc.v:10280$2763.
  creating $alu model for $macc $flatten\soc_inst.$add$mkSoc.v:10279$2762.
  creating $alu model for $macc $flatten\soc_inst.$add$mkSoc.v:10278$2761.
  creating $alu model for $macc $flatten\soc_inst.$add$mkSoc.v:10277$2760.
  creating $alu model for $macc $flatten\soc_inst.$add$mkSoc.v:10276$2759.
  creating $alu model for $macc $flatten\soc_inst.$add$mkSoc.v:10274$2757.
  creating $alu model for $flatten\soc_inst.$ge$mkSoc.v:6574$1515 ($ge): new $alu
  creating $alu model for $flatten\soc_inst.$ge$mkSoc.v:6676$1576 ($ge): new $alu
  creating $alu model for $flatten\soc_inst.$ge$mkSoc.v:9653$2300 ($ge): new $alu
  creating $alu model for $flatten\soc_inst.$ge$mkSoc.v:9658$2304 ($ge): new $alu
  creating $alu model for $flatten\soc_inst.$ge$mkSoc.v:9667$2310 ($ge): new $alu
  creating $alu model for $flatten\soc_inst.$ge$mkSoc.v:9672$2314 ($ge): new $alu
  creating $alu model for $flatten\soc_inst.$le$mkSoc.v:10027$2574 ($le): new $alu
  creating $alu model for $flatten\soc_inst.$le$mkSoc.v:10033$2576 ($le): new $alu
  creating $alu model for $flatten\soc_inst.$le$mkSoc.v:10039$2578 ($le): new $alu
  creating $alu model for $flatten\soc_inst.$le$mkSoc.v:10052$2588 ($le): new $alu
  creating $alu model for $flatten\soc_inst.$le$mkSoc.v:10065$2598 ($le): new $alu
  creating $alu model for $flatten\soc_inst.$le$mkSoc.v:10097$2628 ($le): new $alu
  creating $alu model for $flatten\soc_inst.$le$mkSoc.v:10103$2630 ($le): new $alu
  creating $alu model for $flatten\soc_inst.$le$mkSoc.v:10109$2632 ($le): new $alu
  creating $alu model for $flatten\soc_inst.$le$mkSoc.v:10122$2642 ($le): new $alu
  creating $alu model for $flatten\soc_inst.$le$mkSoc.v:10135$2652 ($le): new $alu
  creating $alu model for $flatten\soc_inst.$le$mkSoc.v:6677$1578 ($le): new $alu
  creating $alu model for $flatten\soc_inst.$le$mkSoc.v:9654$2301 ($le): new $alu
  creating $alu model for $flatten\soc_inst.$le$mkSoc.v:9659$2305 ($le): new $alu
  creating $alu model for $flatten\soc_inst.$le$mkSoc.v:9668$2311 ($le): new $alu
  creating $alu model for $flatten\soc_inst.$le$mkSoc.v:9673$2315 ($le): new $alu
  creating $alu model for $flatten\soc_inst.$le$mkSoc.v:9699$2322 ($le): new $alu
  creating $alu model for $flatten\soc_inst.$le$mkSoc.v:9705$2324 ($le): new $alu
  creating $alu model for $flatten\soc_inst.$le$mkSoc.v:9718$2334 ($le): new $alu
  creating $alu model for $flatten\soc_inst.$le$mkSoc.v:9731$2344 ($le): new $alu
  creating $alu model for $flatten\soc_inst.$le$mkSoc.v:9763$2374 ($le): new $alu
  creating $alu model for $flatten\soc_inst.$le$mkSoc.v:9769$2376 ($le): new $alu
  creating $alu model for $flatten\soc_inst.$le$mkSoc.v:9782$2386 ($le): new $alu
  creating $alu model for $flatten\soc_inst.$le$mkSoc.v:9798$2397 ($le): new $alu
  creating $alu model for $flatten\soc_inst.$le$mkSoc.v:9814$2412 ($le): new $alu
  creating $alu model for $flatten\soc_inst.$le$mkSoc.v:9833$2428 ($le): new $alu
  creating $alu model for $flatten\soc_inst.$le$mkSoc.v:9887$2466 ($le): new $alu
  creating $alu model for $flatten\soc_inst.$le$mkSoc.v:9893$2468 ($le): new $alu
  creating $alu model for $flatten\soc_inst.$le$mkSoc.v:9899$2470 ($le): new $alu
  creating $alu model for $flatten\soc_inst.$le$mkSoc.v:9912$2480 ($le): new $alu
  creating $alu model for $flatten\soc_inst.$le$mkSoc.v:9925$2490 ($le): new $alu
  creating $alu model for $flatten\soc_inst.$le$mkSoc.v:9957$2520 ($le): new $alu
  creating $alu model for $flatten\soc_inst.$le$mkSoc.v:9963$2522 ($le): new $alu
  creating $alu model for $flatten\soc_inst.$le$mkSoc.v:9969$2524 ($le): new $alu
  creating $alu model for $flatten\soc_inst.$le$mkSoc.v:9982$2534 ($le): new $alu
  creating $alu model for $flatten\soc_inst.$le$mkSoc.v:9995$2544 ($le): new $alu
  creating $alu model for $flatten\soc_inst.$lt$mkSoc.v:10024$2573 ($lt): new $alu
  creating $alu model for $flatten\soc_inst.$lt$mkSoc.v:10030$2575 ($lt): new $alu
  creating $alu model for $flatten\soc_inst.$lt$mkSoc.v:10036$2577 ($lt): new $alu
  creating $alu model for $flatten\soc_inst.$lt$mkSoc.v:10049$2587 ($lt): new $alu
  creating $alu model for $flatten\soc_inst.$lt$mkSoc.v:10062$2597 ($lt): new $alu
  creating $alu model for $flatten\soc_inst.$lt$mkSoc.v:10094$2627 ($lt): new $alu
  creating $alu model for $flatten\soc_inst.$lt$mkSoc.v:10100$2629 ($lt): new $alu
  creating $alu model for $flatten\soc_inst.$lt$mkSoc.v:10106$2631 ($lt): new $alu
  creating $alu model for $flatten\soc_inst.$lt$mkSoc.v:10119$2641 ($lt): new $alu
  creating $alu model for $flatten\soc_inst.$lt$mkSoc.v:10132$2651 ($lt): new $alu
  creating $alu model for $flatten\soc_inst.$lt$mkSoc.v:10274$2758 ($lt): new $alu
  creating $alu model for $flatten\soc_inst.$lt$mkSoc.v:9696$2321 ($lt): new $alu
  creating $alu model for $flatten\soc_inst.$lt$mkSoc.v:9702$2323 ($lt): new $alu
  creating $alu model for $flatten\soc_inst.$lt$mkSoc.v:9715$2333 ($lt): new $alu
  creating $alu model for $flatten\soc_inst.$lt$mkSoc.v:9728$2343 ($lt): new $alu
  creating $alu model for $flatten\soc_inst.$lt$mkSoc.v:9760$2373 ($lt): new $alu
  creating $alu model for $flatten\soc_inst.$lt$mkSoc.v:9766$2375 ($lt): new $alu
  creating $alu model for $flatten\soc_inst.$lt$mkSoc.v:9779$2385 ($lt): new $alu
  creating $alu model for $flatten\soc_inst.$lt$mkSoc.v:9792$2395 ($lt): new $alu
  creating $alu model for $flatten\soc_inst.$lt$mkSoc.v:9795$2396 ($lt): new $alu
  creating $alu model for $flatten\soc_inst.$lt$mkSoc.v:9830$2427 ($lt): new $alu
  creating $alu model for $flatten\soc_inst.$lt$mkSoc.v:9884$2465 ($lt): new $alu
  creating $alu model for $flatten\soc_inst.$lt$mkSoc.v:9890$2467 ($lt): new $alu
  creating $alu model for $flatten\soc_inst.$lt$mkSoc.v:9896$2469 ($lt): new $alu
  creating $alu model for $flatten\soc_inst.$lt$mkSoc.v:9909$2479 ($lt): new $alu
  creating $alu model for $flatten\soc_inst.$lt$mkSoc.v:9922$2489 ($lt): new $alu
  creating $alu model for $flatten\soc_inst.$lt$mkSoc.v:9954$2519 ($lt): new $alu
  creating $alu model for $flatten\soc_inst.$lt$mkSoc.v:9960$2521 ($lt): new $alu
  creating $alu model for $flatten\soc_inst.$lt$mkSoc.v:9966$2523 ($lt): new $alu
  creating $alu model for $flatten\soc_inst.$lt$mkSoc.v:9979$2533 ($lt): new $alu
  creating $alu model for $flatten\soc_inst.$lt$mkSoc.v:9992$2543 ($lt): new $alu
  creating $alu model for $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$le$module_fn_pmp_lookup.v:178$4809 ($le): new $alu
  creating $alu model for $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$le$module_fn_pmp_lookup.v:184$4812 ($le): new $alu
  creating $alu model for $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$le$module_fn_pmp_lookup.v:196$4818 ($le): new $alu
  creating $alu model for $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$le$module_fn_pmp_lookup.v:200$4820 ($le): new $alu
  creating $alu model for $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$le$module_fn_pmp_lookup.v:202$4821 ($le): new $alu
  creating $alu model for $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$le$module_fn_pmp_lookup.v:626$5013 ($le): new $alu
  creating $alu model for $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$le$module_fn_pmp_lookup.v:626$5014 ($le): new $alu
  creating $alu model for $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_1.$le$module_fn_pmp_lookup.v:178$4809 ($le): new $alu
  creating $alu model for $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_1.$le$module_fn_pmp_lookup.v:184$4812 ($le): new $alu
  creating $alu model for $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_1.$le$module_fn_pmp_lookup.v:196$4818 ($le): new $alu
  creating $alu model for $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_1.$le$module_fn_pmp_lookup.v:200$4820 ($le): new $alu
  creating $alu model for $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_1.$le$module_fn_pmp_lookup.v:202$4821 ($le): new $alu
  creating $alu model for $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_1.$le$module_fn_pmp_lookup.v:626$5013 ($le): new $alu
  creating $alu model for $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_1.$le$module_fn_pmp_lookup.v:626$5014 ($le): new $alu
  creating $alu model for $flatten\soc_inst.\eclass.\riscv.\stage1.$lt$mkstage1.v:849$3945 ($lt): new $alu
  creating $alu model for $flatten\soc_inst.\eclass.\riscv.\stage1.$lt$mkstage1.v:857$3952 ($lt): new $alu
  creating $alu model for $flatten\soc_inst.\eclass.\riscv.\stage1.\instance_decoder_func_32_1.$ge$module_decoder_func_32.v:106$4383 ($ge): new $alu
  creating $alu model for $flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$lt$module_fn_alu.v:145$4530 ($lt): new $alu
  creating $alu model for $flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$lt$module_fn_alu.v:153$4537 ($lt): new $alu
  creating $alu model for $flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$lt$module_fn_alu.v:162$4547 ($lt): new $alu
  creating $alu model for $flatten\soc_inst.\signature.$lt$mksign_dump_axi4.v:1056$3887 ($lt): new $alu
  creating $alu model for $flatten\soc_inst.\signature.$lt$mksign_dump_axi4.v:1058$3888 ($lt): new $alu
  creating $alu model for $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$eq$module_fn_pmp_lookup.v:172$4806 ($eq): merged with $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$le$module_fn_pmp_lookup.v:178$4809.
  creating $alu model for $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$eq$module_fn_pmp_lookup.v:186$4813 ($eq): merged with $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$le$module_fn_pmp_lookup.v:184$4812.
  creating $alu model for $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$eq$module_fn_pmp_lookup.v:188$4814 ($eq): merged with $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$le$module_fn_pmp_lookup.v:626$5013.
  creating $alu model for $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$eq$module_fn_pmp_lookup.v:194$4817 ($eq): merged with $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$le$module_fn_pmp_lookup.v:200$4820.
  creating $alu model for $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$eq$module_fn_pmp_lookup.v:198$4819 ($eq): merged with $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$le$module_fn_pmp_lookup.v:196$4818.
  creating $alu model for $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$eq$module_fn_pmp_lookup.v:204$4822 ($eq): merged with $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$le$module_fn_pmp_lookup.v:202$4821.
  creating $alu model for $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$eq$module_fn_pmp_lookup.v:629$5017 ($eq): merged with $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$le$module_fn_pmp_lookup.v:626$5014.
  creating $alu model for $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_1.$eq$module_fn_pmp_lookup.v:172$4806 ($eq): merged with $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_1.$le$module_fn_pmp_lookup.v:178$4809.
  creating $alu model for $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_1.$eq$module_fn_pmp_lookup.v:186$4813 ($eq): merged with $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_1.$le$module_fn_pmp_lookup.v:184$4812.
  creating $alu model for $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_1.$eq$module_fn_pmp_lookup.v:188$4814 ($eq): merged with $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_1.$le$module_fn_pmp_lookup.v:626$5013.
  creating $alu model for $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_1.$eq$module_fn_pmp_lookup.v:194$4817 ($eq): merged with $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_1.$le$module_fn_pmp_lookup.v:200$4820.
  creating $alu model for $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_1.$eq$module_fn_pmp_lookup.v:198$4819 ($eq): merged with $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_1.$le$module_fn_pmp_lookup.v:196$4818.
  creating $alu model for $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_1.$eq$module_fn_pmp_lookup.v:204$4822 ($eq): merged with $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_1.$le$module_fn_pmp_lookup.v:202$4821.
  creating $alu model for $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_1.$eq$module_fn_pmp_lookup.v:629$5017 ($eq): merged with $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_1.$le$module_fn_pmp_lookup.v:626$5014.
  creating $alu model for $flatten\soc_inst.\eclass.\riscv.\stage1.$eq$mkstage1.v:871$3960 ($eq): merged with $flatten\soc_inst.\eclass.\riscv.\stage1.$lt$mkstage1.v:849$3945.
  creating $alu model for $flatten\soc_inst.\eclass.\riscv.\stage1.$eq$mkstage1.v:873$3961 ($eq): merged with $flatten\soc_inst.\eclass.\riscv.\stage1.$lt$mkstage1.v:857$3952.
  creating $alu model for $flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$eq$module_fn_alu.v:246$4668 ($eq): merged with $flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$lt$module_fn_alu.v:145$4530.
  creating $alu model for $flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$eq$module_fn_alu.v:248$4669 ($eq): merged with $flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$lt$module_fn_alu.v:153$4537.
  creating $alu model for $flatten\soc_inst.\signature.$ne$mksign_dump_axi4.v:941$3863 ($ne): merged with $flatten\soc_inst.\signature.$sub$mksign_dump_axi4.v:1060$3889.
  creating $alu cell for $flatten\soc_inst.\signature.$lt$mksign_dump_axi4.v:1058$3888: $auto$alumacc.cc:485:replace_alu$10035
  creating $alu cell for $flatten\soc_inst.\signature.$lt$mksign_dump_axi4.v:1056$3887: $auto$alumacc.cc:485:replace_alu$10040
  creating $alu cell for $flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$lt$module_fn_alu.v:162$4547: $auto$alumacc.cc:485:replace_alu$10051
  creating $alu cell for $flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$lt$module_fn_alu.v:153$4537, $flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$eq$module_fn_alu.v:248$4669: $auto$alumacc.cc:485:replace_alu$10062
  creating $alu cell for $flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$lt$module_fn_alu.v:145$4530, $flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$eq$module_fn_alu.v:246$4668: $auto$alumacc.cc:485:replace_alu$10073
  creating $alu cell for $flatten\soc_inst.\eclass.\riscv.\stage1.\instance_decoder_func_32_1.$ge$module_decoder_func_32.v:106$4383: $auto$alumacc.cc:485:replace_alu$10084
  creating $alu cell for $flatten\soc_inst.\eclass.\riscv.\stage1.$lt$mkstage1.v:857$3952, $flatten\soc_inst.\eclass.\riscv.\stage1.$eq$mkstage1.v:873$3961: $auto$alumacc.cc:485:replace_alu$10093
  creating $alu cell for $flatten\soc_inst.\eclass.\riscv.\stage1.$lt$mkstage1.v:849$3945, $flatten\soc_inst.\eclass.\riscv.\stage1.$eq$mkstage1.v:871$3960: $auto$alumacc.cc:485:replace_alu$10100
  creating $alu cell for $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_1.$le$module_fn_pmp_lookup.v:626$5014, $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_1.$eq$module_fn_pmp_lookup.v:629$5017: $auto$alumacc.cc:485:replace_alu$10107
  creating $alu cell for $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_1.$le$module_fn_pmp_lookup.v:626$5013, $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_1.$eq$module_fn_pmp_lookup.v:188$4814: $auto$alumacc.cc:485:replace_alu$10116
  creating $alu cell for $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_1.$le$module_fn_pmp_lookup.v:202$4821, $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_1.$eq$module_fn_pmp_lookup.v:204$4822: $auto$alumacc.cc:485:replace_alu$10129
  creating $alu cell for $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_1.$le$module_fn_pmp_lookup.v:200$4820, $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_1.$eq$module_fn_pmp_lookup.v:194$4817: $auto$alumacc.cc:485:replace_alu$10138
  creating $alu cell for $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_1.$le$module_fn_pmp_lookup.v:196$4818, $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_1.$eq$module_fn_pmp_lookup.v:198$4819: $auto$alumacc.cc:485:replace_alu$10147
  creating $alu cell for $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_1.$le$module_fn_pmp_lookup.v:184$4812, $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_1.$eq$module_fn_pmp_lookup.v:186$4813: $auto$alumacc.cc:485:replace_alu$10156
  creating $alu cell for $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_1.$le$module_fn_pmp_lookup.v:178$4809, $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_1.$eq$module_fn_pmp_lookup.v:172$4806: $auto$alumacc.cc:485:replace_alu$10169
  creating $alu cell for $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$le$module_fn_pmp_lookup.v:626$5014, $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$eq$module_fn_pmp_lookup.v:629$5017: $auto$alumacc.cc:485:replace_alu$10182
  creating $alu cell for $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$le$module_fn_pmp_lookup.v:626$5013, $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$eq$module_fn_pmp_lookup.v:188$4814: $auto$alumacc.cc:485:replace_alu$10191
  creating $alu cell for $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$le$module_fn_pmp_lookup.v:202$4821, $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$eq$module_fn_pmp_lookup.v:204$4822: $auto$alumacc.cc:485:replace_alu$10204
  creating $alu cell for $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$le$module_fn_pmp_lookup.v:200$4820, $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$eq$module_fn_pmp_lookup.v:194$4817: $auto$alumacc.cc:485:replace_alu$10213
  creating $alu cell for $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$le$module_fn_pmp_lookup.v:196$4818, $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$eq$module_fn_pmp_lookup.v:198$4819: $auto$alumacc.cc:485:replace_alu$10222
  creating $alu cell for $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$le$module_fn_pmp_lookup.v:184$4812, $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$eq$module_fn_pmp_lookup.v:186$4813: $auto$alumacc.cc:485:replace_alu$10231
  creating $alu cell for $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$le$module_fn_pmp_lookup.v:178$4809, $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$eq$module_fn_pmp_lookup.v:172$4806: $auto$alumacc.cc:485:replace_alu$10244
  creating $alu cell for $flatten\soc_inst.$lt$mkSoc.v:9992$2543: $auto$alumacc.cc:485:replace_alu$10257
  creating $alu cell for $flatten\soc_inst.$lt$mkSoc.v:9979$2533: $auto$alumacc.cc:485:replace_alu$10268
  creating $alu cell for $flatten\soc_inst.$lt$mkSoc.v:9966$2523: $auto$alumacc.cc:485:replace_alu$10279
  creating $alu cell for $flatten\soc_inst.$lt$mkSoc.v:9960$2521: $auto$alumacc.cc:485:replace_alu$10290
  creating $alu cell for $flatten\soc_inst.$lt$mkSoc.v:9954$2519: $auto$alumacc.cc:485:replace_alu$10301
  creating $alu cell for $flatten\soc_inst.$lt$mkSoc.v:9922$2489: $auto$alumacc.cc:485:replace_alu$10306
  creating $alu cell for $flatten\soc_inst.$lt$mkSoc.v:9909$2479: $auto$alumacc.cc:485:replace_alu$10317
  creating $alu cell for $flatten\soc_inst.$lt$mkSoc.v:9896$2469: $auto$alumacc.cc:485:replace_alu$10328
  creating $alu cell for $flatten\soc_inst.$lt$mkSoc.v:9890$2467: $auto$alumacc.cc:485:replace_alu$10339
  creating $alu cell for $flatten\soc_inst.$lt$mkSoc.v:9884$2465: $auto$alumacc.cc:485:replace_alu$10350
  creating $alu cell for $flatten\soc_inst.$lt$mkSoc.v:9830$2427: $auto$alumacc.cc:485:replace_alu$10355
  creating $alu cell for $flatten\soc_inst.$lt$mkSoc.v:9795$2396: $auto$alumacc.cc:485:replace_alu$10366
  creating $alu cell for $flatten\soc_inst.$lt$mkSoc.v:9792$2395: $auto$alumacc.cc:485:replace_alu$10377
  creating $alu cell for $flatten\soc_inst.$lt$mkSoc.v:9779$2385: $auto$alumacc.cc:485:replace_alu$10382
  creating $alu cell for $flatten\soc_inst.$lt$mkSoc.v:9766$2375: $auto$alumacc.cc:485:replace_alu$10393
  creating $alu cell for $flatten\soc_inst.$lt$mkSoc.v:9760$2373: $auto$alumacc.cc:485:replace_alu$10404
  creating $alu cell for $flatten\soc_inst.$lt$mkSoc.v:9728$2343: $auto$alumacc.cc:485:replace_alu$10409
  creating $alu cell for $flatten\soc_inst.$lt$mkSoc.v:9715$2333: $auto$alumacc.cc:485:replace_alu$10420
  creating $alu cell for $flatten\soc_inst.$lt$mkSoc.v:9702$2323: $auto$alumacc.cc:485:replace_alu$10431
  creating $alu cell for $flatten\soc_inst.$lt$mkSoc.v:9696$2321: $auto$alumacc.cc:485:replace_alu$10442
  creating $alu cell for $flatten\soc_inst.$lt$mkSoc.v:10274$2758: $auto$alumacc.cc:485:replace_alu$10453
  creating $alu cell for $flatten\soc_inst.$lt$mkSoc.v:10132$2651: $auto$alumacc.cc:485:replace_alu$10464
  creating $alu cell for $flatten\soc_inst.$lt$mkSoc.v:10119$2641: $auto$alumacc.cc:485:replace_alu$10475
  creating $alu cell for $flatten\soc_inst.$lt$mkSoc.v:10106$2631: $auto$alumacc.cc:485:replace_alu$10486
  creating $alu cell for $flatten\soc_inst.$lt$mkSoc.v:10100$2629: $auto$alumacc.cc:485:replace_alu$10497
  creating $alu cell for $flatten\soc_inst.$lt$mkSoc.v:10094$2627: $auto$alumacc.cc:485:replace_alu$10508
  creating $alu cell for $flatten\soc_inst.$lt$mkSoc.v:10062$2597: $auto$alumacc.cc:485:replace_alu$10513
  creating $alu cell for $flatten\soc_inst.$lt$mkSoc.v:10049$2587: $auto$alumacc.cc:485:replace_alu$10524
  creating $alu cell for $flatten\soc_inst.$lt$mkSoc.v:10036$2577: $auto$alumacc.cc:485:replace_alu$10535
  creating $alu cell for $flatten\soc_inst.$lt$mkSoc.v:10030$2575: $auto$alumacc.cc:485:replace_alu$10546
  creating $alu cell for $flatten\soc_inst.$lt$mkSoc.v:10024$2573: $auto$alumacc.cc:485:replace_alu$10557
  creating $alu cell for $flatten\soc_inst.$le$mkSoc.v:9995$2544: $auto$alumacc.cc:485:replace_alu$10562
  creating $alu cell for $flatten\soc_inst.$le$mkSoc.v:9982$2534: $auto$alumacc.cc:485:replace_alu$10575
  creating $alu cell for $flatten\soc_inst.$le$mkSoc.v:9969$2524: $auto$alumacc.cc:485:replace_alu$10588
  creating $alu cell for $flatten\soc_inst.$le$mkSoc.v:9963$2522: $auto$alumacc.cc:485:replace_alu$10601
  creating $alu cell for $flatten\soc_inst.$le$mkSoc.v:9957$2520: $auto$alumacc.cc:485:replace_alu$10614
  creating $alu cell for $flatten\soc_inst.$le$mkSoc.v:9925$2490: $auto$alumacc.cc:485:replace_alu$10623
  creating $alu cell for $flatten\soc_inst.$le$mkSoc.v:9912$2480: $auto$alumacc.cc:485:replace_alu$10636
  creating $alu cell for $flatten\soc_inst.$le$mkSoc.v:9899$2470: $auto$alumacc.cc:485:replace_alu$10649
  creating $alu cell for $flatten\soc_inst.$le$mkSoc.v:9893$2468: $auto$alumacc.cc:485:replace_alu$10662
  creating $alu cell for $flatten\soc_inst.$le$mkSoc.v:9887$2466: $auto$alumacc.cc:485:replace_alu$10675
  creating $alu cell for $flatten\soc_inst.$le$mkSoc.v:9833$2428: $auto$alumacc.cc:485:replace_alu$10684
  creating $alu cell for $flatten\soc_inst.$le$mkSoc.v:9814$2412: $auto$alumacc.cc:485:replace_alu$10697
  creating $alu cell for $flatten\soc_inst.$le$mkSoc.v:9798$2397: $auto$alumacc.cc:485:replace_alu$10706
  creating $alu cell for $flatten\soc_inst.$le$mkSoc.v:9782$2386: $auto$alumacc.cc:485:replace_alu$10719
  creating $alu cell for $flatten\soc_inst.$le$mkSoc.v:9769$2376: $auto$alumacc.cc:485:replace_alu$10732
  creating $alu cell for $flatten\soc_inst.$le$mkSoc.v:9763$2374: $auto$alumacc.cc:485:replace_alu$10745
  creating $alu cell for $flatten\soc_inst.$le$mkSoc.v:9731$2344: $auto$alumacc.cc:485:replace_alu$10754
  creating $alu cell for $flatten\soc_inst.$le$mkSoc.v:9718$2334: $auto$alumacc.cc:485:replace_alu$10767
  creating $alu cell for $flatten\soc_inst.$le$mkSoc.v:9705$2324: $auto$alumacc.cc:485:replace_alu$10780
  creating $alu cell for $flatten\soc_inst.$le$mkSoc.v:9699$2322: $auto$alumacc.cc:485:replace_alu$10793
  creating $alu cell for $flatten\soc_inst.$le$mkSoc.v:9673$2315: $auto$alumacc.cc:485:replace_alu$10806
  creating $alu cell for $flatten\soc_inst.$le$mkSoc.v:9668$2311: $auto$alumacc.cc:485:replace_alu$10815
  creating $alu cell for $flatten\soc_inst.$le$mkSoc.v:9659$2305: $auto$alumacc.cc:485:replace_alu$10828
  creating $alu cell for $flatten\soc_inst.$le$mkSoc.v:9654$2301: $auto$alumacc.cc:485:replace_alu$10837
  creating $alu cell for $flatten\soc_inst.$le$mkSoc.v:6677$1578: $auto$alumacc.cc:485:replace_alu$10850
  creating $alu cell for $flatten\soc_inst.$le$mkSoc.v:10135$2652: $auto$alumacc.cc:485:replace_alu$10863
  creating $alu cell for $flatten\soc_inst.$le$mkSoc.v:10122$2642: $auto$alumacc.cc:485:replace_alu$10876
  creating $alu cell for $flatten\soc_inst.$le$mkSoc.v:10109$2632: $auto$alumacc.cc:485:replace_alu$10889
  creating $alu cell for $flatten\soc_inst.$le$mkSoc.v:10103$2630: $auto$alumacc.cc:485:replace_alu$10902
  creating $alu cell for $flatten\soc_inst.$le$mkSoc.v:10097$2628: $auto$alumacc.cc:485:replace_alu$10915
  creating $alu cell for $flatten\soc_inst.$le$mkSoc.v:10065$2598: $auto$alumacc.cc:485:replace_alu$10924
  creating $alu cell for $flatten\soc_inst.$le$mkSoc.v:10052$2588: $auto$alumacc.cc:485:replace_alu$10937
  creating $alu cell for $flatten\soc_inst.$le$mkSoc.v:10039$2578: $auto$alumacc.cc:485:replace_alu$10950
  creating $alu cell for $flatten\soc_inst.$le$mkSoc.v:10033$2576: $auto$alumacc.cc:485:replace_alu$10963
  creating $alu cell for $flatten\soc_inst.$le$mkSoc.v:10027$2574: $auto$alumacc.cc:485:replace_alu$10976
  creating $alu cell for $flatten\soc_inst.$ge$mkSoc.v:9672$2314: $auto$alumacc.cc:485:replace_alu$10985
  creating $alu cell for $flatten\soc_inst.$ge$mkSoc.v:9667$2310: $auto$alumacc.cc:485:replace_alu$10998
  creating $alu cell for $flatten\soc_inst.$ge$mkSoc.v:9658$2304: $auto$alumacc.cc:485:replace_alu$11007
  creating $alu cell for $flatten\soc_inst.$ge$mkSoc.v:9653$2300: $auto$alumacc.cc:485:replace_alu$11020
  creating $alu cell for $flatten\soc_inst.$ge$mkSoc.v:6676$1576: $auto$alumacc.cc:485:replace_alu$11029
  creating $alu cell for $flatten\soc_inst.$ge$mkSoc.v:6574$1515: $auto$alumacc.cc:485:replace_alu$11038
  creating $alu cell for $flatten\soc_inst.$add$mkSoc.v:10274$2757: $auto$alumacc.cc:485:replace_alu$11047
  creating $alu cell for $flatten\soc_inst.$add$mkSoc.v:10276$2759: $auto$alumacc.cc:485:replace_alu$11050
  creating $alu cell for $flatten\soc_inst.$add$mkSoc.v:10277$2760: $auto$alumacc.cc:485:replace_alu$11053
  creating $alu cell for $flatten\soc_inst.$add$mkSoc.v:10278$2761: $auto$alumacc.cc:485:replace_alu$11056
  creating $alu cell for $flatten\soc_inst.$add$mkSoc.v:10279$2762: $auto$alumacc.cc:485:replace_alu$11059
  creating $alu cell for $flatten\soc_inst.$add$mkSoc.v:10280$2763: $auto$alumacc.cc:485:replace_alu$11062
  creating $alu cell for $flatten\soc_inst.$add$mkSoc.v:10281$2764: $auto$alumacc.cc:485:replace_alu$11065
  creating $alu cell for $flatten\soc_inst.$add$mkSoc.v:10282$2765: $auto$alumacc.cc:485:replace_alu$11068
  creating $alu cell for $flatten\soc_inst.$add$mkSoc.v:6605$1536: $auto$alumacc.cc:485:replace_alu$11071
  creating $alu cell for $flatten\soc_inst.$add$mkSoc.v:6736$1619: $auto$alumacc.cc:485:replace_alu$11074
  creating $alu cell for $flatten\soc_inst.$add$mkSoc.v:6740$1620: $auto$alumacc.cc:485:replace_alu$11077
  creating $alu cell for $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$add$module_fn_pmp_lookup.v:210$4827: $auto$alumacc.cc:485:replace_alu$11080
  creating $alu cell for $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_1.$add$module_fn_pmp_lookup.v:210$4827: $auto$alumacc.cc:485:replace_alu$11083
  creating $alu cell for $flatten\soc_inst.\eclass.\riscv.\stage1.$add$mkstage1.v:743$3915: $auto$alumacc.cc:485:replace_alu$11086
  creating $alu cell for $flatten\soc_inst.\eclass.\riscv.\stage1.$add$mkstage1.v:782$3928: $auto$alumacc.cc:485:replace_alu$11089
  creating $alu cell for $flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$add$module_fn_alu.v:209$4606: $auto$alumacc.cc:485:replace_alu$11092
  creating $alu cell for $flatten\soc_inst.\eclass.\riscv.\stage2.\alu.\instance_fn_alu_0.$add$module_fn_alu.v:304$4697: $auto$alumacc.cc:485:replace_alu$11095
  creating $alu cell for $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$add$mkcsrfile.v:1104$3206: $auto$alumacc.cc:485:replace_alu$11098
  creating $alu cell for $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$add$mkcsrfile.v:1665$3538: $auto$alumacc.cc:485:replace_alu$11101
  creating $alu cell for $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$add$mkcsrfile.v:1669$3542: $auto$alumacc.cc:485:replace_alu$11104
  creating $alu cell for $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$add$mkcsrfile.v:1801$3561: $auto$alumacc.cc:485:replace_alu$11107
  creating $alu cell for $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$add$mkcsrfile.v:1802$3562: $auto$alumacc.cc:485:replace_alu$11110
  creating $alu cell for $flatten\soc_inst.\signature.$add$mksign_dump_axi4.v:892$3855: $auto$alumacc.cc:485:replace_alu$11113
  creating $alu cell for $flatten\soc_inst.\signature.$add$mksign_dump_axi4.v:925$3860: $auto$alumacc.cc:485:replace_alu$11116
  creating $alu cell for $flatten\soc_inst.\signature.$sub$mksign_dump_axi4.v:1060$3889, $flatten\soc_inst.\signature.$ne$mksign_dump_axi4.v:941$3863: $auto$alumacc.cc:485:replace_alu$11119
  creating $alu cell for $flatten\soc_inst.\signature.$sub$mksign_dump_axi4.v:896$3856: $auto$alumacc.cc:485:replace_alu$11126
  creating $alu cell for $flatten\soc_inst.\signature.\ff_lower_order_bits.$add$SizedFIFO.v:75$5305: $auto$alumacc.cc:485:replace_alu$11129
  creating $alu cell for $flatten\soc_inst.\signature.\ff_lower_order_bits.$add$SizedFIFO.v:76$5306: $auto$alumacc.cc:485:replace_alu$11132
  creating $alu cell for $flatten\soc_inst.\uart_user_ifc_uart_baudGen_rBaudCounter.$add$Counter.v:62$5066: $auto$alumacc.cc:485:replace_alu$11135
  creating $alu cell for $flatten\soc_inst.\uart_user_ifc_uart_fifoRecv.$add$SizedFIFO.v:75$5025: $auto$alumacc.cc:485:replace_alu$11138
  creating $alu cell for $flatten\soc_inst.\uart_user_ifc_uart_fifoRecv.$add$SizedFIFO.v:76$5026: $auto$alumacc.cc:485:replace_alu$11141
  creating $alu cell for $flatten\soc_inst.\uart_user_ifc_uart_fifoXmit.$add$SizedFIFO.v:75$5025: $auto$alumacc.cc:485:replace_alu$11144
  creating $alu cell for $flatten\soc_inst.\uart_user_ifc_uart_fifoXmit.$add$SizedFIFO.v:76$5026: $auto$alumacc.cc:485:replace_alu$11147
  created 127 $alu and 0 $macc cells.

52.21. Executing OPT pass (performing simple optimizations).

52.21.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module mkeclass_axi4.
<suppressed ~42 debug messages>

52.21.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mkeclass_axi4'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

52.21.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mkeclass_axi4..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~396 debug messages>

52.21.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mkeclass_axi4.
    New ctrl vector for $pmux cell $flatten\soc_inst.$procmux$6305: { $flatten\soc_inst.$eq$mkSoc.v:9641$2294_Y $flatten\soc_inst.$procmux$6308_CMP $auto$opt_reduce.cc:134:opt_pmux$11151 }
    New ctrl vector for $pmux cell $flatten\soc_inst.$procmux$6310: { $flatten\soc_inst.$eq$mkSoc.v:9645$2296_Y $flatten\soc_inst.$procmux$6313_CMP $auto$opt_reduce.cc:134:opt_pmux$11153 }
  Optimizing cells in module \mkeclass_axi4.
Performed a total of 2 changes.

52.21.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mkeclass_axi4'.
Removed a total of 0 cells.

52.21.6. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 1-bit at position 5 on $auto$ff.cc:266:slice$9503 ($dffe) from module mkeclass_axi4.
Setting constant 0-bit at position 1 on $auto$ff.cc:266:slice$9878 ($sdffe) from module mkeclass_axi4.
Setting constant 0-bit at position 2 on $auto$ff.cc:266:slice$9878 ($sdffe) from module mkeclass_axi4.
Setting constant 0-bit at position 3 on $auto$ff.cc:266:slice$9878 ($sdffe) from module mkeclass_axi4.
Setting constant 0-bit at position 4 on $auto$ff.cc:266:slice$9878 ($sdffe) from module mkeclass_axi4.
Setting constant 0-bit at position 5 on $auto$ff.cc:266:slice$9878 ($sdffe) from module mkeclass_axi4.
Setting constant 0-bit at position 6 on $auto$ff.cc:266:slice$9878 ($sdffe) from module mkeclass_axi4.
Setting constant 0-bit at position 7 on $auto$ff.cc:266:slice$9878 ($sdffe) from module mkeclass_axi4.

52.21.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mkeclass_axi4..
Removed 2 unused cells and 160 unused wires.
<suppressed ~11 debug messages>

52.21.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module mkeclass_axi4.
<suppressed ~1 debug messages>

52.21.9. Rerunning OPT passes. (Maybe there is more to do..)

52.21.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mkeclass_axi4..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~396 debug messages>

52.21.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mkeclass_axi4.
Performed a total of 0 changes.

52.21.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mkeclass_axi4'.
Removed a total of 0 cells.

52.21.13. Executing OPT_DFF pass (perform DFF optimizations).

52.21.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mkeclass_axi4..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

52.21.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module mkeclass_axi4.

52.21.16. Rerunning OPT passes. (Maybe there is more to do..)

52.21.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mkeclass_axi4..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~396 debug messages>

52.21.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mkeclass_axi4.
Performed a total of 0 changes.

52.21.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mkeclass_axi4'.
Removed a total of 0 cells.

52.21.20. Executing OPT_DFF pass (perform DFF optimizations).

52.21.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mkeclass_axi4..

52.21.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module mkeclass_axi4.

52.21.23. Finished OPT passes. (There is nothing left to do.)

52.22. Executing MEMORY pass.

52.22.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

52.22.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

52.22.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).
  Analyzing mkeclass_axi4.soc_inst.eclass.riscv.stage1.integer_rf_rf.arr write port 0.
  Analyzing mkeclass_axi4.soc_inst.uart_user_ifc_uart_fifoRecv.arr write port 0.
  Analyzing mkeclass_axi4.soc_inst.uart_user_ifc_uart_fifoXmit.arr write port 0.

52.22.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

52.22.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).
Checking read port `\soc_inst.eclass.riscv.stage1.integer_rf_rf.arr'[0] in module `\mkeclass_axi4': FF found, but with a mux select that doesn't seem to correspond to transparency logic.
Checking read port `\soc_inst.eclass.riscv.stage1.integer_rf_rf.arr'[1] in module `\mkeclass_axi4': FF found, but with a mux select that doesn't seem to correspond to transparency logic.
Checking read port `\soc_inst.uart_user_ifc_uart_fifoRecv.arr'[0] in module `\mkeclass_axi4': no output FF found.
Checking read port `\soc_inst.uart_user_ifc_uart_fifoXmit.arr'[0] in module `\mkeclass_axi4': no output FF found.
Checking read port address `\soc_inst.eclass.riscv.stage1.integer_rf_rf.arr'[0] in module `\mkeclass_axi4': no address FF found.
Checking read port address `\soc_inst.eclass.riscv.stage1.integer_rf_rf.arr'[1] in module `\mkeclass_axi4': no address FF found.
Checking read port address `\soc_inst.uart_user_ifc_uart_fifoRecv.arr'[0] in module `\mkeclass_axi4': merged address FF to cell.
Checking read port address `\soc_inst.uart_user_ifc_uart_fifoXmit.arr'[0] in module `\mkeclass_axi4': merged address FF to cell.

52.22.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mkeclass_axi4..

52.22.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).
Consolidating read ports of memory mkeclass_axi4.soc_inst.eclass.riscv.stage1.integer_rf_rf.arr by address:

52.22.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

52.22.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mkeclass_axi4..

52.22.10. Executing MEMORY_COLLECT pass (generating $mem cells).

52.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mkeclass_axi4..

52.24. Executing MEMORY_LIBMAP pass (mapping memories to cells).
using FF mapping for memory mkeclass_axi4.soc_inst.eclass.riscv.stage1.integer_rf_rf.arr
mapping memory mkeclass_axi4.soc_inst.uart_user_ifc_uart_fifoRecv.arr via $__ICE40_RAM4K_
mapping memory mkeclass_axi4.soc_inst.uart_user_ifc_uart_fifoXmit.arr via $__ICE40_RAM4K_
<suppressed ~148 debug messages>

52.25. Executing TECHMAP pass (map to technology primitives).

52.25.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/ice40/brams_map.v
Parsing Verilog input from `/usr/bin/../share/yosys/ice40/brams_map.v' to AST representation.
Generating RTLIL representation for module `\$__ICE40_RAM4K_'.
Successfully finished Verilog frontend.

52.25.2. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/ice40/spram_map.v
Parsing Verilog input from `/usr/bin/../share/yosys/ice40/spram_map.v' to AST representation.
Generating RTLIL representation for module `\$__ICE40_SPRAM_'.
Successfully finished Verilog frontend.

52.25.3. Continuing TECHMAP pass.
Using template $paramod$13b3947419e62b7bbba1b93c77e4155efbe69a94\$__ICE40_RAM4K_ for cells of type $__ICE40_RAM4K_.
No more expansions possible.
<suppressed ~27 debug messages>

52.26. Executing ICE40_BRAMINIT pass.

52.27. Executing OPT pass (performing simple optimizations).

52.27.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module mkeclass_axi4.
<suppressed ~1128 debug messages>

52.27.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mkeclass_axi4'.
<suppressed ~630 debug messages>
Removed a total of 210 cells.

52.27.3. Executing OPT_DFF pass (perform DFF optimizations).
Removing always-active EN on $auto$mem.cc:1137:emulate_transparency$11173 ($dffe) from module mkeclass_axi4.
Removing always-active EN on $auto$mem.cc:1137:emulate_transparency$11184 ($dffe) from module mkeclass_axi4.
Adding EN signal on $auto$ff.cc:266:slice$9638 ($adffe) from module mkeclass_axi4 (D = \soc_inst.eclass.riscv.stage1.rg_fabric_request_D_IN [1:0], Q = \soc_inst.eclass.riscv.stage1.rg_fabric_request [1:0]).
Adding EN signal on $auto$ff.cc:266:slice$9635 ($adffe) from module mkeclass_axi4 (D = \soc_inst.eclass.riscv.stage1.rg_pc_D_IN [1:0], Q = \soc_inst.eclass.riscv.stage1.rg_pc [1:0]).
Removing always-active EN on $auto$ff.cc:266:slice$9540 ($sdffe) from module mkeclass_axi4.
Handling never-active EN on $auto$ff.cc:266:slice$9204 ($dffe) from module mkeclass_axi4 (removing D path).
Handling never-active EN on $auto$ff.cc:266:slice$9179 ($dffe) from module mkeclass_axi4 (removing D path).
Adding EN signal on $auto$ff.cc:266:slice$8989 ($adffe) from module mkeclass_axi4 (D = \soc_inst.signature.rg_start_address_D_IN [1:0], Q = \soc_inst.signature.rg_start_address [1:0]).
Setting constant 1-bit at position 0 on $auto$ff.cc:266:slice$9065 ($sdffe) from module mkeclass_axi4.
Setting constant 1-bit at position 0 on $auto$ff.cc:266:slice$9172 ($sdffe) from module mkeclass_axi4.
Setting constant 1-bit at position 0 on $auto$ff.cc:266:slice$9197 ($sdffe) from module mkeclass_axi4.
Setting constant 1-bit at position 0 on $auto$ff.cc:266:slice$9214 ($sdffe) from module mkeclass_axi4.
Setting constant 1-bit at position 0 on $auto$ff.cc:266:slice$9239 ($sdffe) from module mkeclass_axi4.
Setting constant 1-bit at position 0 on $auto$ff.cc:266:slice$9264 ($sdffe) from module mkeclass_axi4.
Setting constant 1-bit at position 0 on $auto$ff.cc:266:slice$9273 ($sdffe) from module mkeclass_axi4.
Setting constant 1-bit at position 0 on $auto$ff.cc:266:slice$9353 ($sdffe) from module mkeclass_axi4.
Setting constant 1-bit at position 0 on $auto$ff.cc:266:slice$9362 ($sdffe) from module mkeclass_axi4.

52.27.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mkeclass_axi4..
Removed 206 unused cells and 838 unused wires.
<suppressed ~221 debug messages>

52.27.5. Rerunning OPT passes. (Removed registers in this run.)

52.27.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module mkeclass_axi4.
<suppressed ~93 debug messages>

52.27.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mkeclass_axi4'.
Removed a total of 0 cells.

52.27.8. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$9069 ($sdffe) from module mkeclass_axi4.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$9176 ($sdffe) from module mkeclass_axi4.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$9201 ($sdffe) from module mkeclass_axi4.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$9218 ($sdffe) from module mkeclass_axi4.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$9243 ($sdffe) from module mkeclass_axi4.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$9268 ($sdffe) from module mkeclass_axi4.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$9277 ($sdffe) from module mkeclass_axi4.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$9357 ($sdffe) from module mkeclass_axi4.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$9366 ($sdffe) from module mkeclass_axi4.

52.27.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mkeclass_axi4..
Removed 49 unused cells and 120 unused wires.
<suppressed ~58 debug messages>

52.27.10. Rerunning OPT passes. (Removed registers in this run.)

52.27.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module mkeclass_axi4.
<suppressed ~731 debug messages>

52.27.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mkeclass_axi4'.
<suppressed ~30 debug messages>
Removed a total of 10 cells.

52.27.13. Executing OPT_DFF pass (perform DFF optimizations).
Handling D = Q on $flatten\soc_inst.\fabric_xactors_to_slaves_4_f_rd_data.$procdff$7426 ($dff) from module mkeclass_axi4 (removing D path).
Handling D = Q on $flatten\soc_inst.\fabric_xactors_to_slaves_1_f_wr_resp.$procdff$7414 ($dff) from module mkeclass_axi4 (removing D path).
Handling D = Q on $flatten\soc_inst.\fabric_xactors_to_slaves_1_f_rd_data.$procdff$7426 ($dff) from module mkeclass_axi4 (removing D path).
Handling D = Q on $flatten\soc_inst.\fabric_xactors_to_slaves_0_f_wr_resp.$procdff$7414 ($dff) from module mkeclass_axi4 (removing D path).
Handling D = Q on $flatten\soc_inst.\fabric_xactors_to_slaves_0_f_rd_data.$procdff$7426 ($dff) from module mkeclass_axi4 (removing D path).
Handling D = Q on $flatten\soc_inst.\fabric_xactors_from_masters_2_f_wr_data.$procdff$7430 ($dff) from module mkeclass_axi4 (removing D path).
Handling D = Q on $flatten\soc_inst.\fabric_xactors_from_masters_2_f_wr_addr.$procdff$7434 ($dff) from module mkeclass_axi4 (removing D path).
Handling D = Q on $flatten\soc_inst.\fabric_xactors_from_masters_0_f_wr_data.$procdff$7430 ($dff) from module mkeclass_axi4 (removing D path).
Handling D = Q on $flatten\soc_inst.\fabric_xactors_from_masters_0_f_wr_addr.$procdff$7434 ($dff) from module mkeclass_axi4 (removing D path).
Handling never-active EN on $auto$ff.cc:266:slice$9396 ($sdffe) from module mkeclass_axi4 (connecting SRST instead).
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$9396 ($dffe) from module mkeclass_axi4.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$9432 ($sdffe) from module mkeclass_axi4.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$9424 ($sdffe) from module mkeclass_axi4.

52.27.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mkeclass_axi4..
Removed 206 unused cells and 755 unused wires.
<suppressed ~258 debug messages>

52.27.15. Rerunning OPT passes. (Removed registers in this run.)

52.27.16. Executing OPT_EXPR pass (perform const folding).
Optimizing module mkeclass_axi4.
<suppressed ~69 debug messages>

52.27.17. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mkeclass_axi4'.
Removed a total of 0 cells.

52.27.18. Executing OPT_DFF pass (perform DFF optimizations).
Handling D = Q on $auto$fsm_map.cc:172:map_fsm$8330 ($dff) from module mkeclass_axi4 (removing D path).
Handling D = Q on $auto$fsm_map.cc:172:map_fsm$8238 ($dff) from module mkeclass_axi4 (removing D path).
Setting constant 1-bit at position 0 on $auto$ff.cc:266:slice$9256 ($sdffe) from module mkeclass_axi4.
Setting constant 1-bit at position 0 on $auto$ff.cc:266:slice$9345 ($sdffe) from module mkeclass_axi4.

52.27.19. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mkeclass_axi4..
Removed 16 unused cells and 85 unused wires.
<suppressed ~49 debug messages>

52.27.20. Rerunning OPT passes. (Removed registers in this run.)

52.27.21. Executing OPT_EXPR pass (perform const folding).
Optimizing module mkeclass_axi4.

52.27.22. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mkeclass_axi4'.
Removed a total of 0 cells.

52.27.23. Executing OPT_DFF pass (perform DFF optimizations).

52.27.24. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mkeclass_axi4..

52.27.25. Finished fast OPT passes.

52.28. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).
Mapping memory \soc_inst.eclass.riscv.stage1.integer_rf_rf.arr in module \mkeclass_axi4:
  created 32 $dff cells and 0 static cells of width 32.
  read interface: 0 $dff and 62 $mux cells.
  write interface: 32 write mux blocks.

52.29. Executing OPT pass (performing simple optimizations).

52.29.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module mkeclass_axi4.
<suppressed ~10 debug messages>

52.29.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mkeclass_axi4'.
Removed a total of 0 cells.

52.29.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mkeclass_axi4..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~357 debug messages>

52.29.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mkeclass_axi4.
    Consolidated identical input bits for $mux cell $auto$share.cc:661:make_supercell$9925:
      Old ports: A={ \soc_inst.clint_s_xactor_f_rd_addr.data0_reg [22:20] 3'000 }, B={ \soc_inst.clint_rg_rdpacket [22:20] 3'000 }, Y=$auto$share.cc:658:make_supercell$9923
      New ports: A=\soc_inst.clint_s_xactor_f_rd_addr.data0_reg [22:20], B=\soc_inst.clint_rg_rdpacket [22:20], Y=$auto$share.cc:658:make_supercell$9923 [5:3]
      New connections: $auto$share.cc:658:make_supercell$9923 [2:0] = 3'000
    Consolidated identical input bits for $pmux cell $flatten\soc_inst.$procmux$6288:
      Old ports: A=64'0000000000000000000000000000000000000000000000000000000011111111, B=192'000000000000000000000000000000000000000000000000111111111111111100000000000000000000000000000000111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111, Y=\soc_inst.mask__h97340
      New ports: A=3'000, B=9'001011111, Y={ \soc_inst.mask__h97340 [32] \soc_inst.mask__h97340 [16] \soc_inst.mask__h97340 [8] }
      New connections: { \soc_inst.mask__h97340 [63:33] \soc_inst.mask__h97340 [31:17] \soc_inst.mask__h97340 [15:9] \soc_inst.mask__h97340 [7:0] } = { \soc_inst.mask__h97340 [32] \soc_inst.mask__h97340 [32] \soc_inst.mask__h97340 [32] \soc_inst.mask__h97340 [32] \soc_inst.mask__h97340 [32] \soc_inst.mask__h97340 [32] \soc_inst.mask__h97340 [32] \soc_inst.mask__h97340 [32] \soc_inst.mask__h97340 [32] \soc_inst.mask__h97340 [32] \soc_inst.mask__h97340 [32] \soc_inst.mask__h97340 [32] \soc_inst.mask__h97340 [32] \soc_inst.mask__h97340 [32] \soc_inst.mask__h97340 [32] \soc_inst.mask__h97340 [32] \soc_inst.mask__h97340 [32] \soc_inst.mask__h97340 [32] \soc_inst.mask__h97340 [32] \soc_inst.mask__h97340 [32] \soc_inst.mask__h97340 [32] \soc_inst.mask__h97340 [32] \soc_inst.mask__h97340 [32] \soc_inst.mask__h97340 [32] \soc_inst.mask__h97340 [32] \soc_inst.mask__h97340 [32] \soc_inst.mask__h97340 [32] \soc_inst.mask__h97340 [32] \soc_inst.mask__h97340 [32] \soc_inst.mask__h97340 [32] \soc_inst.mask__h97340 [32] \soc_inst.mask__h97340 [16] \soc_inst.mask__h97340 [16] \soc_inst.mask__h97340 [16] \soc_inst.mask__h97340 [16] \soc_inst.mask__h97340 [16] \soc_inst.mask__h97340 [16] \soc_inst.mask__h97340 [16] \soc_inst.mask__h97340 [16] \soc_inst.mask__h97340 [16] \soc_inst.mask__h97340 [16] \soc_inst.mask__h97340 [16] \soc_inst.mask__h97340 [16] \soc_inst.mask__h97340 [16] \soc_inst.mask__h97340 [16] \soc_inst.mask__h97340 [16] \soc_inst.mask__h97340 [8] \soc_inst.mask__h97340 [8] \soc_inst.mask__h97340 [8] \soc_inst.mask__h97340 [8] \soc_inst.mask__h97340 [8] \soc_inst.mask__h97340 [8] \soc_inst.mask__h97340 [8] 8'11111111 }
    Consolidated identical input bits for $pmux cell $flatten\soc_inst.$procmux$6302:
      Old ports: A={ \soc_inst.clint_s_xactor_f_wr_data.data0_reg [40:9] \soc_inst.clint_s_xactor_f_wr_data.data0_reg [40:9] }, B={ \soc_inst.clint_s_xactor_f_wr_data.data0_reg [16:9] \soc_inst.clint_s_xactor_f_wr_data.data0_reg [16:9] \soc_inst.clint_s_xactor_f_wr_data.data0_reg [16:9] \soc_inst.clint_s_xactor_f_wr_data.data0_reg [16:9] \soc_inst.clint_s_xactor_f_wr_data.data0_reg [16:9] \soc_inst.clint_s_xactor_f_wr_data.data0_reg [16:9] \soc_inst.clint_s_xactor_f_wr_data.data0_reg [16:9] \soc_inst.clint_s_xactor_f_wr_data.data0_reg [16:9] \soc_inst.clint_s_xactor_f_wr_data.data0_reg [24:9] \soc_inst.clint_s_xactor_f_wr_data.data0_reg [24:9] \soc_inst.clint_s_xactor_f_wr_data.data0_reg [24:9] \soc_inst.clint_s_xactor_f_wr_data.data0_reg [24:9] }, Y=\soc_inst.CASE_clint_s_xactor_f_wr_addrD_OUT_BITS_7_TO__ETC__q1
      New ports: A=\soc_inst.clint_s_xactor_f_wr_data.data0_reg [40:17], B={ \soc_inst.clint_s_xactor_f_wr_data.data0_reg [16:9] \soc_inst.clint_s_xactor_f_wr_data.data0_reg [16:9] \soc_inst.clint_s_xactor_f_wr_data.data0_reg [16:9] \soc_inst.clint_s_xactor_f_wr_data.data0_reg [24:9] \soc_inst.clint_s_xactor_f_wr_data.data0_reg [24:17] }, Y=\soc_inst.CASE_clint_s_xactor_f_wr_addrD_OUT_BITS_7_TO__ETC__q1 [31:8]
      New connections: { \soc_inst.CASE_clint_s_xactor_f_wr_addrD_OUT_BITS_7_TO__ETC__q1 [63:32] \soc_inst.CASE_clint_s_xactor_f_wr_addrD_OUT_BITS_7_TO__ETC__q1 [7:0] } = { \soc_inst.CASE_clint_s_xactor_f_wr_addrD_OUT_BITS_7_TO__ETC__q1 [31:8] \soc_inst.clint_s_xactor_f_wr_data.data0_reg [16:9] \soc_inst.clint_s_xactor_f_wr_data.data0_reg [16:9] }
    Consolidated identical input bits for $pmux cell $flatten\soc_inst.$procmux$6305:
      Old ports: A={ \soc_inst._theResult_____2__h77231 [7:0] \soc_inst._theResult_____2__h77231 [7:0] \soc_inst._theResult_____2__h77231 [7:0] \soc_inst._theResult_____2__h77231 [7:0] }, B={ \soc_inst._theResult_____2__h77231 [15:0] \soc_inst._theResult_____2__h77231 [15:0] \soc_inst._theResult_____2__h77231 [31:0] }, Y=\soc_inst.x__h77543 [31:0]
      New ports: A={ \soc_inst._theResult_____2__h77231 [7:0] \soc_inst._theResult_____2__h77231 [7:0] \soc_inst._theResult_____2__h77231 [7:0] }, B={ \soc_inst._theResult_____2__h77231 [15:0] \soc_inst._theResult_____2__h77231 [15:8] \soc_inst._theResult_____2__h77231 [31:8] }, Y=\soc_inst.x__h77543 [31:8]
      New connections: \soc_inst.x__h77543 [7:0] = \soc_inst._theResult_____2__h77231 [7:0]
    Consolidated identical input bits for $pmux cell $flatten\soc_inst.$procmux$6310:
      Old ports: A={ \soc_inst._theResult_____2__h77231 [7:0] \soc_inst._theResult_____2__h77231 [7:0] \soc_inst._theResult_____2__h77231 [7:0] \soc_inst._theResult_____2__h77231 [7:0] }, B={ \soc_inst._theResult_____2__h77231 [15:0] \soc_inst._theResult_____2__h77231 [15:0] \soc_inst._theResult_____2__h77231 [31:0] }, Y=\soc_inst.x__h87353 [31:0]
      New ports: A={ \soc_inst._theResult_____2__h77231 [7:0] \soc_inst._theResult_____2__h77231 [7:0] \soc_inst._theResult_____2__h77231 [7:0] }, B={ \soc_inst._theResult_____2__h77231 [15:0] \soc_inst._theResult_____2__h77231 [15:8] \soc_inst._theResult_____2__h77231 [31:8] }, Y=\soc_inst.x__h87353 [31:8]
      New connections: \soc_inst.x__h87353 [7:0] = \soc_inst._theResult_____2__h77231 [7:0]
    Consolidated identical input bits for $mux cell $flatten\soc_inst.$procmux$6316:
      Old ports: A=2'10, B=2'00, Y=\soc_inst.CASE_uart_s_xactor_f_rd_addrD_OUT_BITS_23_TO__ETC__q2
      New ports: A=1'1, B=1'0, Y=\soc_inst.CASE_uart_s_xactor_f_rd_addrD_OUT_BITS_23_TO__ETC__q2 [1]
      New connections: \soc_inst.CASE_uart_s_xactor_f_rd_addrD_OUT_BITS_23_TO__ETC__q2 [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\soc_inst.$procmux$6319:
      Old ports: A=2'10, B=2'00, Y=\soc_inst.CASE_uart_s_xactor_f_wr_addrD_OUT_BITS_23_TO__ETC__q3
      New ports: A=1'1, B=1'0, Y=\soc_inst.CASE_uart_s_xactor_f_wr_addrD_OUT_BITS_23_TO__ETC__q3 [1]
      New connections: \soc_inst.CASE_uart_s_xactor_f_wr_addrD_OUT_BITS_23_TO__ETC__q3 [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\soc_inst.$ternary$mkSoc.v:6580$1528:
      Old ports: A=2'10, B=2'00, Y=\soc_inst.MUX_clint_s_xactor_f_rd_data_enq_1__VAL_1 [38:37]
      New ports: A=1'1, B=1'0, Y=\soc_inst.MUX_clint_s_xactor_f_rd_data_enq_1__VAL_1 [38]
      New connections: \soc_inst.MUX_clint_s_xactor_f_rd_data_enq_1__VAL_1 [37] = 1'0
    Consolidated identical input bits for $mux cell $flatten\soc_inst.$ternary$mkSoc.v:6596$1535:
      Old ports: A=2'10, B=2'00, Y=\soc_inst.MUX_clint_s_xactor_f_wr_resp_enq_1__VAL_1 [5:4]
      New ports: A=1'1, B=1'0, Y=\soc_inst.MUX_clint_s_xactor_f_wr_resp_enq_1__VAL_1 [5]
      New connections: \soc_inst.MUX_clint_s_xactor_f_wr_resp_enq_1__VAL_1 [4] = 1'0
    Consolidated identical input bits for $mux cell $flatten\soc_inst.$ternary$mkSoc.v:6622$1548:
      Old ports: A=2'10, B=2'00, Y=\soc_inst.MUX_uart_s_xactor_f_rd_data_enq_1__VAL_2 [38:37]
      New ports: A=1'1, B=1'0, Y=\soc_inst.MUX_uart_s_xactor_f_rd_data_enq_1__VAL_2 [38]
      New connections: \soc_inst.MUX_uart_s_xactor_f_rd_data_enq_1__VAL_2 [37] = 1'0
    Consolidated identical input bits for $mux cell $flatten\soc_inst.$ternary$mkSoc.v:6634$1554:
      Old ports: A=2'10, B=2'00, Y=\soc_inst.MUX_uart_s_xactor_f_wr_resp_enq_1__VAL_2 [5:4]
      New ports: A=1'1, B=1'0, Y=\soc_inst.MUX_uart_s_xactor_f_wr_resp_enq_1__VAL_2 [5]
      New connections: \soc_inst.MUX_uart_s_xactor_f_wr_resp_enq_1__VAL_2 [4] = 1'0
    Consolidated identical input bits for $mux cell $flatten\soc_inst.$ternary$mkSoc.v:9527$2258:
      Old ports: A={ \soc_inst.MUX_uart_s_xactor_f_wr_resp_enq_1__VAL_2 [5:4] \soc_inst.uart_s_xactor_f_wr_data.data0_reg [4:1] }, B={ \soc_inst.CASE_uart_s_xactor_f_wr_addrD_OUT_BITS_23_TO__ETC__q3 \soc_inst.uart_s_xactor_f_wr_data.data0_reg [4:1] }, Y=\soc_inst.uart_s_xactor_f_wr_resp.D_IN
      New ports: A=\soc_inst.MUX_uart_s_xactor_f_wr_resp_enq_1__VAL_2 [5:4], B=\soc_inst.CASE_uart_s_xactor_f_wr_addrD_OUT_BITS_23_TO__ETC__q3, Y=\soc_inst.uart_s_xactor_f_wr_resp.D_IN [5:4]
      New connections: \soc_inst.uart_s_xactor_f_wr_resp.D_IN [3:0] = \soc_inst.uart_s_xactor_f_wr_data.data0_reg [4:1]
    Consolidated identical input bits for $mux cell $flatten\soc_inst.$ternary$mkSoc.v:9686$2318:
      Old ports: A=0, B={ \soc_inst.uart_user_ifc_uart_fifoRecv.D_OUT \soc_inst.uart_user_ifc_uart_fifoRecv.D_OUT \soc_inst.uart_user_ifc_uart_fifoRecv.D_OUT \soc_inst.uart_user_ifc_uart_fifoRecv.D_OUT }, Y=\soc_inst.a__h71702
      New ports: A=8'00000000, B=\soc_inst.uart_user_ifc_uart_fifoRecv.D_OUT, Y=\soc_inst.a__h71702 [7:0]
      New connections: \soc_inst.a__h71702 [31:8] = { \soc_inst.a__h71702 [7:0] \soc_inst.a__h71702 [7:0] \soc_inst.a__h71702 [7:0] }
    Consolidated identical input bits for $pmux cell $flatten\soc_inst.\eclass.$procmux$7088:
      Old ports: A=\soc_inst.eclass.riscv.stage2.ff_memory_request.D_OUT [37:6], B={ \soc_inst.eclass.riscv.stage2.ff_memory_request.D_OUT [13:6] \soc_inst.eclass.riscv.stage2.ff_memory_request.D_OUT [13:6] \soc_inst.eclass.riscv.stage2.ff_memory_request.D_OUT [13:6] \soc_inst.eclass.riscv.stage2.ff_memory_request.D_OUT [13:6] \soc_inst.eclass.riscv.stage2.ff_memory_request.D_OUT [21:6] \soc_inst.eclass.riscv.stage2.ff_memory_request.D_OUT [21:6] }, Y=\soc_inst.eclass.w_wdata__h5190
      New ports: A=\soc_inst.eclass.riscv.stage2.ff_memory_request.D_OUT [37:14], B={ \soc_inst.eclass.riscv.stage2.ff_memory_request.D_OUT [13:6] \soc_inst.eclass.riscv.stage2.ff_memory_request.D_OUT [13:6] \soc_inst.eclass.riscv.stage2.ff_memory_request.D_OUT [13:6] \soc_inst.eclass.riscv.stage2.ff_memory_request.D_OUT [21:6] \soc_inst.eclass.riscv.stage2.ff_memory_request.D_OUT [21:14] }, Y=\soc_inst.eclass.w_wdata__h5190 [31:8]
      New connections: \soc_inst.eclass.w_wdata__h5190 [7:0] = \soc_inst.eclass.riscv.stage2.ff_memory_request.D_OUT [13:6]
    Consolidated identical input bits for $pmux cell $flatten\soc_inst.\eclass.$procmux$7092:
      Old ports: A=4'1111, B=8'00010011, Y=\soc_inst.eclass.write_strobe__h3924
      New ports: A=2'11, B=4'0001, Y=\soc_inst.eclass.write_strobe__h3924 [2:1]
      New connections: { \soc_inst.eclass.write_strobe__h3924 [3] \soc_inst.eclass.write_strobe__h3924 [0] } = { \soc_inst.eclass.write_strobe__h3924 [2] 1'1 }
    Consolidated identical input bits for $mux cell $flatten\soc_inst.\eclass.$ternary$mkeclass.v:1415$3700:
      Old ports: A={ \soc_inst.eclass.ff_inst_request.data0_reg 1'1 }, B={ \soc_inst.eclass.put_inst__h3495 \soc_inst.eclass.ff_inst_request.data0_reg [1:0] \soc_inst.eclass.MUX_riscv_inst_response_put_1__VAL_1 [0] }, Y=\soc_inst.eclass.riscv.stage1.ff_memory_response.D_IN
      New ports: A={ \soc_inst.eclass.ff_inst_request.data0_reg [33:2] 1'1 }, B={ \soc_inst.eclass.put_inst__h3495 \soc_inst.eclass.MUX_riscv_inst_response_put_1__VAL_1 [0] }, Y={ \soc_inst.eclass.riscv.stage1.ff_memory_response.D_IN [34:3] \soc_inst.eclass.riscv.stage1.ff_memory_response.D_IN [0] }
      New connections: \soc_inst.eclass.riscv.stage1.ff_memory_response.D_IN [2:1] = \soc_inst.eclass.ff_inst_request.data0_reg [1:0]
    Consolidated identical input bits for $mux cell $flatten\soc_inst.\eclass.$ternary$mkeclass.v:1421$3701:
      Old ports: A={ \soc_inst.eclass.put_data__h7373 \soc_inst.eclass.MUX_riscv_memory_response_put_1__VAL_2 [1] \soc_inst.eclass.ff_mem_request.data0_reg [0] }, B={ \soc_inst.eclass.put_data__h6767 \soc_inst.eclass.MUX_riscv_memory_response_put_1__VAL_1 [1] \soc_inst.eclass.ff_mem_request.data0_reg [0] }, Y=\soc_inst.eclass.riscv.memory_response_put
      New ports: A={ \soc_inst.eclass.put_data__h7373 \soc_inst.eclass.MUX_riscv_memory_response_put_1__VAL_2 [1] }, B={ \soc_inst.eclass.put_data__h6767 \soc_inst.eclass.MUX_riscv_memory_response_put_1__VAL_1 [1] }, Y=\soc_inst.eclass.riscv.memory_response_put [33:1]
      New connections: \soc_inst.eclass.riscv.memory_response_put [0] = \soc_inst.eclass.ff_mem_request.data0_reg [0]
    Consolidated identical input bits for $mux cell $flatten\soc_inst.\eclass.$ternary$mkeclass.v:1528$3728:
      Old ports: A={ \soc_inst.eclass.memory_xactor_f_rd_data_first__77_BITS_36_TO_5_ETC___d186 [7] \soc_inst.eclass.memory_xactor_f_rd_data_first__77_BITS_36_TO_5_ETC___d186 [7] \soc_inst.eclass.memory_xactor_f_rd_data_first__77_BITS_36_TO_5_ETC___d186 [7] \soc_inst.eclass.memory_xactor_f_rd_data_first__77_BITS_36_TO_5_ETC___d186 [7] \soc_inst.eclass.memory_xactor_f_rd_data_first__77_BITS_36_TO_5_ETC___d186 [7] \soc_inst.eclass.memory_xactor_f_rd_data_first__77_BITS_36_TO_5_ETC___d186 [7] \soc_inst.eclass.memory_xactor_f_rd_data_first__77_BITS_36_TO_5_ETC___d186 [7] \soc_inst.eclass.memory_xactor_f_rd_data_first__77_BITS_36_TO_5_ETC___d186 [7] \soc_inst.eclass.memory_xactor_f_rd_data_first__77_BITS_36_TO_5_ETC___d186 [7] \soc_inst.eclass.memory_xactor_f_rd_data_first__77_BITS_36_TO_5_ETC___d186 [7] \soc_inst.eclass.memory_xactor_f_rd_data_first__77_BITS_36_TO_5_ETC___d186 [7] \soc_inst.eclass.memory_xactor_f_rd_data_first__77_BITS_36_TO_5_ETC___d186 [7] \soc_inst.eclass.memory_xactor_f_rd_data_first__77_BITS_36_TO_5_ETC___d186 [7] \soc_inst.eclass.memory_xactor_f_rd_data_first__77_BITS_36_TO_5_ETC___d186 [7] \soc_inst.eclass.memory_xactor_f_rd_data_first__77_BITS_36_TO_5_ETC___d186 [7] \soc_inst.eclass.memory_xactor_f_rd_data_first__77_BITS_36_TO_5_ETC___d186 [7] \soc_inst.eclass.memory_xactor_f_rd_data_first__77_BITS_36_TO_5_ETC___d186 [7] \soc_inst.eclass.memory_xactor_f_rd_data_first__77_BITS_36_TO_5_ETC___d186 [7] \soc_inst.eclass.memory_xactor_f_rd_data_first__77_BITS_36_TO_5_ETC___d186 [7] \soc_inst.eclass.memory_xactor_f_rd_data_first__77_BITS_36_TO_5_ETC___d186 [7] \soc_inst.eclass.memory_xactor_f_rd_data_first__77_BITS_36_TO_5_ETC___d186 [7] \soc_inst.eclass.memory_xactor_f_rd_data_first__77_BITS_36_TO_5_ETC___d186 [7] \soc_inst.eclass.memory_xactor_f_rd_data_first__77_BITS_36_TO_5_ETC___d186 [7] \soc_inst.eclass.memory_xactor_f_rd_data_first__77_BITS_36_TO_5_ETC___d186 [7] \soc_inst.eclass.memory_xactor_f_rd_data_first__77_BITS_36_TO_5_ETC___d186 [7:0] }, B={ 24'000000000000000000000000 \soc_inst.eclass.memory_xactor_f_rd_data_first__77_BITS_36_TO_5_ETC___d186 [7:0] }, Y=$flatten\soc_inst.\eclass.$ternary$mkeclass.v:1528$3728_Y
      New ports: A=\soc_inst.eclass.memory_xactor_f_rd_data_first__77_BITS_36_TO_5_ETC___d186 [7], B=1'0, Y=$flatten\soc_inst.\eclass.$ternary$mkeclass.v:1528$3728_Y [8]
      New connections: { $flatten\soc_inst.\eclass.$ternary$mkeclass.v:1528$3728_Y [31:9] $flatten\soc_inst.\eclass.$ternary$mkeclass.v:1528$3728_Y [7:0] } = { $flatten\soc_inst.\eclass.$ternary$mkeclass.v:1528$3728_Y [8] $flatten\soc_inst.\eclass.$ternary$mkeclass.v:1528$3728_Y [8] $flatten\soc_inst.\eclass.$ternary$mkeclass.v:1528$3728_Y [8] $flatten\soc_inst.\eclass.$ternary$mkeclass.v:1528$3728_Y [8] $flatten\soc_inst.\eclass.$ternary$mkeclass.v:1528$3728_Y [8] $flatten\soc_inst.\eclass.$ternary$mkeclass.v:1528$3728_Y [8] $flatten\soc_inst.\eclass.$ternary$mkeclass.v:1528$3728_Y [8] $flatten\soc_inst.\eclass.$ternary$mkeclass.v:1528$3728_Y [8] $flatten\soc_inst.\eclass.$ternary$mkeclass.v:1528$3728_Y [8] $flatten\soc_inst.\eclass.$ternary$mkeclass.v:1528$3728_Y [8] $flatten\soc_inst.\eclass.$ternary$mkeclass.v:1528$3728_Y [8] $flatten\soc_inst.\eclass.$ternary$mkeclass.v:1528$3728_Y [8] $flatten\soc_inst.\eclass.$ternary$mkeclass.v:1528$3728_Y [8] $flatten\soc_inst.\eclass.$ternary$mkeclass.v:1528$3728_Y [8] $flatten\soc_inst.\eclass.$ternary$mkeclass.v:1528$3728_Y [8] $flatten\soc_inst.\eclass.$ternary$mkeclass.v:1528$3728_Y [8] $flatten\soc_inst.\eclass.$ternary$mkeclass.v:1528$3728_Y [8] $flatten\soc_inst.\eclass.$ternary$mkeclass.v:1528$3728_Y [8] $flatten\soc_inst.\eclass.$ternary$mkeclass.v:1528$3728_Y [8] $flatten\soc_inst.\eclass.$ternary$mkeclass.v:1528$3728_Y [8] $flatten\soc_inst.\eclass.$ternary$mkeclass.v:1528$3728_Y [8] $flatten\soc_inst.\eclass.$ternary$mkeclass.v:1528$3728_Y [8] $flatten\soc_inst.\eclass.$ternary$mkeclass.v:1528$3728_Y [8] \soc_inst.eclass.memory_xactor_f_rd_data_first__77_BITS_36_TO_5_ETC___d186 [7:0] }
    Consolidated identical input bits for $mux cell $flatten\soc_inst.\eclass.$ternary$mkeclass.v:1535$3729:
      Old ports: A={ \soc_inst.eclass.memory_xactor_f_rd_data_first__77_BITS_36_TO_5_ETC___d186 [15] \soc_inst.eclass.memory_xactor_f_rd_data_first__77_BITS_36_TO_5_ETC___d186 [15] \soc_inst.eclass.memory_xactor_f_rd_data_first__77_BITS_36_TO_5_ETC___d186 [15] \soc_inst.eclass.memory_xactor_f_rd_data_first__77_BITS_36_TO_5_ETC___d186 [15] \soc_inst.eclass.memory_xactor_f_rd_data_first__77_BITS_36_TO_5_ETC___d186 [15] \soc_inst.eclass.memory_xactor_f_rd_data_first__77_BITS_36_TO_5_ETC___d186 [15] \soc_inst.eclass.memory_xactor_f_rd_data_first__77_BITS_36_TO_5_ETC___d186 [15] \soc_inst.eclass.memory_xactor_f_rd_data_first__77_BITS_36_TO_5_ETC___d186 [15] \soc_inst.eclass.memory_xactor_f_rd_data_first__77_BITS_36_TO_5_ETC___d186 [15] \soc_inst.eclass.memory_xactor_f_rd_data_first__77_BITS_36_TO_5_ETC___d186 [15] \soc_inst.eclass.memory_xactor_f_rd_data_first__77_BITS_36_TO_5_ETC___d186 [15] \soc_inst.eclass.memory_xactor_f_rd_data_first__77_BITS_36_TO_5_ETC___d186 [15] \soc_inst.eclass.memory_xactor_f_rd_data_first__77_BITS_36_TO_5_ETC___d186 [15] \soc_inst.eclass.memory_xactor_f_rd_data_first__77_BITS_36_TO_5_ETC___d186 [15] \soc_inst.eclass.memory_xactor_f_rd_data_first__77_BITS_36_TO_5_ETC___d186 [15] \soc_inst.eclass.memory_xactor_f_rd_data_first__77_BITS_36_TO_5_ETC___d186 [15] \soc_inst.eclass.memory_xactor_f_rd_data_first__77_BITS_36_TO_5_ETC___d186 [15:0] }, B={ 16'0000000000000000 \soc_inst.eclass.memory_xactor_f_rd_data_first__77_BITS_36_TO_5_ETC___d186 [15:0] }, Y=$flatten\soc_inst.\eclass.$ternary$mkeclass.v:1535$3729_Y
      New ports: A=\soc_inst.eclass.memory_xactor_f_rd_data_first__77_BITS_36_TO_5_ETC___d186 [15], B=1'0, Y=$flatten\soc_inst.\eclass.$ternary$mkeclass.v:1535$3729_Y [16]
      New connections: { $flatten\soc_inst.\eclass.$ternary$mkeclass.v:1535$3729_Y [31:17] $flatten\soc_inst.\eclass.$ternary$mkeclass.v:1535$3729_Y [15:0] } = { $flatten\soc_inst.\eclass.$ternary$mkeclass.v:1535$3729_Y [16] $flatten\soc_inst.\eclass.$ternary$mkeclass.v:1535$3729_Y [16] $flatten\soc_inst.\eclass.$ternary$mkeclass.v:1535$3729_Y [16] $flatten\soc_inst.\eclass.$ternary$mkeclass.v:1535$3729_Y [16] $flatten\soc_inst.\eclass.$ternary$mkeclass.v:1535$3729_Y [16] $flatten\soc_inst.\eclass.$ternary$mkeclass.v:1535$3729_Y [16] $flatten\soc_inst.\eclass.$ternary$mkeclass.v:1535$3729_Y [16] $flatten\soc_inst.\eclass.$ternary$mkeclass.v:1535$3729_Y [16] $flatten\soc_inst.\eclass.$ternary$mkeclass.v:1535$3729_Y [16] $flatten\soc_inst.\eclass.$ternary$mkeclass.v:1535$3729_Y [16] $flatten\soc_inst.\eclass.$ternary$mkeclass.v:1535$3729_Y [16] $flatten\soc_inst.\eclass.$ternary$mkeclass.v:1535$3729_Y [16] $flatten\soc_inst.\eclass.$ternary$mkeclass.v:1535$3729_Y [16] $flatten\soc_inst.\eclass.$ternary$mkeclass.v:1535$3729_Y [16] $flatten\soc_inst.\eclass.$ternary$mkeclass.v:1535$3729_Y [16] \soc_inst.eclass.memory_xactor_f_rd_data_first__77_BITS_36_TO_5_ETC___d186 [15:0] }
    Consolidated identical input bits for $mux cell $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:268$4829:
      Old ports: A={ 3'111 $auto$wreduce.cc:461:run$9899 [1:0] }, B=5'11100, Y=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:268$4829_Y
      New ports: A=$auto$wreduce.cc:461:run$9899 [1:0], B=2'00, Y=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:268$4829_Y [1:0]
      New connections: $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:268$4829_Y [4:2] = 3'111
    Consolidated identical input bits for $mux cell $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:330$4859:
      Old ports: A={ 3'111 $auto$wreduce.cc:461:run$9900 [1:0] }, B=5'11100, Y=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:330$4859_Y
      New ports: A=$auto$wreduce.cc:461:run$9900 [1:0], B=2'00, Y=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:330$4859_Y [1:0]
      New connections: $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:330$4859_Y [4:2] = 3'111
    Consolidated identical input bits for $mux cell $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:394$4890:
      Old ports: A={ 3'111 $auto$wreduce.cc:461:run$9901 [1:0] }, B=5'11100, Y=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:394$4890_Y
      New ports: A=$auto$wreduce.cc:461:run$9901 [1:0], B=2'00, Y=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:394$4890_Y [1:0]
      New connections: $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:394$4890_Y [4:2] = 3'111
    Consolidated identical input bits for $mux cell $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:457$4923:
      Old ports: A={ 3'111 $auto$wreduce.cc:461:run$9902 [1:0] }, B=5'11011, Y=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:457$4923_Y
      New ports: A={ 1'1 $auto$wreduce.cc:461:run$9902 [1:0] }, B=3'011, Y=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:457$4923_Y [2:0]
      New connections: $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:457$4923_Y [4:3] = 2'11
    Consolidated identical input bits for $mux cell $flatten\soc_inst.\eclass.\riscv.\stage1.$ternary$mkstage1.v:759$3923:
      Old ports: A={ \soc_inst.eclass.riscv.stage1.ma_flush_newpc [31:2] 2'00 }, B=4096, Y=\soc_inst.eclass.riscv.stage1.rg_fabric_request_port1__write_1
      New ports: A=\soc_inst.eclass.riscv.stage1.ma_flush_newpc [31:2], B=30'000000000000000000010000000000, Y=\soc_inst.eclass.riscv.stage1.rg_fabric_request_port1__write_1 [31:2]
      New connections: \soc_inst.eclass.riscv.stage1.rg_fabric_request_port1__write_1 [1:0] = 2'00
    Consolidated identical input bits for $mux cell $flatten\soc_inst.\eclass.\riscv.\stage1.\instance_chk_interrupt_0.$ternary$module_chk_interrupt.v:105$4360:
      Old ports: A=5'11111, B=5'00100, Y=$flatten\soc_inst.\eclass.\riscv.\stage1.\instance_chk_interrupt_0.$ternary$module_chk_interrupt.v:105$4360_Y
      New ports: A=1'1, B=1'0, Y=$flatten\soc_inst.\eclass.\riscv.\stage1.\instance_chk_interrupt_0.$ternary$module_chk_interrupt.v:105$4360_Y [0]
      New connections: $flatten\soc_inst.\eclass.\riscv.\stage1.\instance_chk_interrupt_0.$ternary$module_chk_interrupt.v:105$4360_Y [4:1] = { $flatten\soc_inst.\eclass.\riscv.\stage1.\instance_chk_interrupt_0.$ternary$module_chk_interrupt.v:105$4360_Y [0] $flatten\soc_inst.\eclass.\riscv.\stage1.\instance_chk_interrupt_0.$ternary$module_chk_interrupt.v:105$4360_Y [0] 1'1 $flatten\soc_inst.\eclass.\riscv.\stage1.\instance_chk_interrupt_0.$ternary$module_chk_interrupt.v:105$4360_Y [0] }
    Consolidated identical input bits for $mux cell $flatten\soc_inst.\eclass.\riscv.\stage1.\instance_chk_interrupt_0.$ternary$module_chk_interrupt.v:83$4351:
      Old ports: A=12'000000000000, B={ 3'000 \soc_inst.eclass.riscv.stage1.instance_chk_interrupt_0.m_interrupts__h37 [8:7] 2'00 \soc_inst.eclass.riscv.stage1.instance_chk_interrupt_0.m_interrupts__h37 [4:3] 2'00 \soc_inst.eclass.riscv.stage1.instance_chk_interrupt_0.m_interrupts__h37 [0] }, Y=$auto$wreduce.cc:461:run$9904 [11:0]
      New ports: A=5'00000, B={ \soc_inst.eclass.riscv.stage1.instance_chk_interrupt_0.m_interrupts__h37 [8:7] \soc_inst.eclass.riscv.stage1.instance_chk_interrupt_0.m_interrupts__h37 [4:3] \soc_inst.eclass.riscv.stage1.instance_chk_interrupt_0.m_interrupts__h37 [0] }, Y={ $auto$wreduce.cc:461:run$9904 [8:7] $auto$wreduce.cc:461:run$9904 [4:3] $auto$wreduce.cc:461:run$9904 [0] }
      New connections: { $auto$wreduce.cc:461:run$9904 [11:9] $auto$wreduce.cc:461:run$9904 [6:5] $auto$wreduce.cc:461:run$9904 [2:1] } = 7'0000000
    Consolidated identical input bits for $mux cell $flatten\soc_inst.\eclass.\riscv.\stage1.\instance_chk_interrupt_0.$ternary$module_chk_interrupt.v:86$4354:
      Old ports: A=12'000000000000, B={ 3'000 \soc_inst.eclass.riscv.stage1.instance_chk_interrupt_0.u_interrupts__h38 [8] 3'000 \soc_inst.eclass.riscv.stage1.instance_chk_interrupt_0.u_interrupts__h38 [4] 3'000 \soc_inst.eclass.riscv.stage1.instance_chk_interrupt_0.u_interrupts__h38 [0] }, Y=$auto$wreduce.cc:461:run$9905 [11:0]
      New ports: A=3'000, B={ \soc_inst.eclass.riscv.stage1.instance_chk_interrupt_0.u_interrupts__h38 [8] \soc_inst.eclass.riscv.stage1.instance_chk_interrupt_0.u_interrupts__h38 [4] \soc_inst.eclass.riscv.stage1.instance_chk_interrupt_0.u_interrupts__h38 [0] }, Y={ $auto$wreduce.cc:461:run$9905 [8] $auto$wreduce.cc:461:run$9905 [4] $auto$wreduce.cc:461:run$9905 [0] }
      New connections: { $auto$wreduce.cc:461:run$9905 [11:9] $auto$wreduce.cc:461:run$9905 [7:5] $auto$wreduce.cc:461:run$9905 [3:1] } = 9'000000000
    Consolidated identical input bits for $pmux cell $flatten\soc_inst.\eclass.\riscv.\stage1.\instance_decoder_func_32_1.$procmux$7219:
      Old ports: A=6'000010, B={ 4'0010 \soc_inst.eclass.riscv.stage1.instance_decoder_func_32_1.trapcause___1__h943 [1:0] 6'000011 }, Y=\soc_inst.eclass.riscv.stage1.instance_decoder_func_32_1._theResult_____5_snd__h948
      New ports: A=3'010, B={ 1'1 \soc_inst.eclass.riscv.stage1.instance_decoder_func_32_1.trapcause___1__h943 [1:0] 3'011 }, Y={ \soc_inst.eclass.riscv.stage1.instance_decoder_func_32_1._theResult_____5_snd__h948 [3] \soc_inst.eclass.riscv.stage1.instance_decoder_func_32_1._theResult_____5_snd__h948 [1:0] }
      New connections: { \soc_inst.eclass.riscv.stage1.instance_decoder_func_32_1._theResult_____5_snd__h948 [5:4] \soc_inst.eclass.riscv.stage1.instance_decoder_func_32_1._theResult_____5_snd__h948 [2] } = 3'000
    Consolidated identical input bits for $mux cell $flatten\soc_inst.\eclass.\riscv.\stage1.\instance_decoder_func_32_1.$procmux$7229:
      Old ports: A=3'110, B=3'001, Y=\soc_inst.eclass.riscv.stage1.instance_decoder_func_32_1.CASE_decoder_func_32_inst_BITS_14_TO_12_0_1_1_1_6__q2
      New ports: A=2'10, B=2'01, Y=\soc_inst.eclass.riscv.stage1.instance_decoder_func_32_1.CASE_decoder_func_32_inst_BITS_14_TO_12_0_1_1_1_6__q2 [1:0]
      New connections: \soc_inst.eclass.riscv.stage1.instance_decoder_func_32_1.CASE_decoder_func_32_inst_BITS_14_TO_12_0_1_1_1_6__q2 [2] = \soc_inst.eclass.riscv.stage1.instance_decoder_func_32_1.CASE_decoder_func_32_inst_BITS_14_TO_12_0_1_1_1_6__q2 [1]
    Consolidated identical input bits for $mux cell $flatten\soc_inst.\eclass.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:132$4412:
      Old ports: A=4'0101, B=4'1011, Y=\soc_inst.eclass.riscv.stage1.instance_decoder_func_32_1.IF_decoder_func_32_inst_BIT_30_10_THEN_0b1011__ETC___d211
      New ports: A=2'10, B=2'01, Y=\soc_inst.eclass.riscv.stage1.instance_decoder_func_32_1.IF_decoder_func_32_inst_BIT_30_10_THEN_0b1011__ETC___d211 [2:1]
      New connections: { \soc_inst.eclass.riscv.stage1.instance_decoder_func_32_1.IF_decoder_func_32_inst_BIT_30_10_THEN_0b1011__ETC___d211 [3] \soc_inst.eclass.riscv.stage1.instance_decoder_func_32_1.IF_decoder_func_32_inst_BIT_30_10_THEN_0b1011__ETC___d211 [0] } = { \soc_inst.eclass.riscv.stage1.instance_decoder_func_32_1.IF_decoder_func_32_inst_BIT_30_10_THEN_0b1011__ETC___d211 [1] 1'1 }
    Consolidated identical input bits for $mux cell $flatten\soc_inst.\eclass.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:160$4418:
      Old ports: A={ \soc_inst.eclass.riscv.stage1.instance_decoder_func_32_1.CASE_decoder_func_32_inst_BITS_6_TO_2_0b101_de_ETC__q10 [4:0] \soc_inst.eclass.riscv.stage1.instance_decoder_func_32_1.immediate_value___1__h1473 [11] \soc_inst.eclass.riscv.stage1.instance_decoder_func_32_1.CASE_decoder_func_32_inst_BITS_6_TO_2_0b101_0__ETC__q7 \soc_inst.eclass.riscv.stage1.instance_decoder_func_32_1.CASE_decoder_func_32_inst_BITS_6_TO_2_0b101_0__ETC__q8 \soc_inst.eclass.riscv.stage1.instance_decoder_func_32_1.immediate_value___1__h1473 [0] }, B={ \soc_inst.eclass.riscv.stage1.final_instruction__h3569 [19:15] \soc_inst.eclass.riscv.stage1.instance_decoder_func_32_1.immediate_value___1__h1473 [11] \soc_inst.eclass.riscv.stage1.instance_decoder_func_32_1.CASE_decoder_func_32_inst_BITS_6_TO_2_0b101_0__ETC__q7 \soc_inst.eclass.riscv.stage1.instance_decoder_func_32_1.CASE_decoder_func_32_inst_BITS_6_TO_2_0b101_0__ETC__q8 \soc_inst.eclass.riscv.stage1.instance_decoder_func_32_1.immediate_value___1__h1473 [0] }, Y=\soc_inst.eclass.riscv.stage1.instance_decoder_func_32_1.instr_meta_immediate__h341 [16:0]
      New ports: A=\soc_inst.eclass.riscv.stage1.instance_decoder_func_32_1.CASE_decoder_func_32_inst_BITS_6_TO_2_0b101_de_ETC__q10 [4:0], B=\soc_inst.eclass.riscv.stage1.final_instruction__h3569 [19:15], Y=\soc_inst.eclass.riscv.stage1.instance_decoder_func_32_1.instr_meta_immediate__h341 [16:12]
      New connections: \soc_inst.eclass.riscv.stage1.instance_decoder_func_32_1.instr_meta_immediate__h341 [11:0] = { \soc_inst.eclass.riscv.stage1.instance_decoder_func_32_1.immediate_value___1__h1473 [11] \soc_inst.eclass.riscv.stage1.instance_decoder_func_32_1.CASE_decoder_func_32_inst_BITS_6_TO_2_0b101_0__ETC__q7 \soc_inst.eclass.riscv.stage1.instance_decoder_func_32_1.CASE_decoder_func_32_inst_BITS_6_TO_2_0b101_0__ETC__q8 \soc_inst.eclass.riscv.stage1.instance_decoder_func_32_1.immediate_value___1__h1473 [0] }
    Consolidated identical input bits for $mux cell $flatten\soc_inst.\eclass.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:169$4421:
      Old ports: A=2'11, B=2'00, Y=\soc_inst.eclass.riscv.stage1.instance_decoder_func_32_1.trapcause___1__h943 [1:0]
      New ports: A=1'1, B=1'0, Y=\soc_inst.eclass.riscv.stage1.instance_decoder_func_32_1.trapcause___1__h943 [0]
      New connections: \soc_inst.eclass.riscv.stage1.instance_decoder_func_32_1.trapcause___1__h943 [1] = \soc_inst.eclass.riscv.stage1.instance_decoder_func_32_1.trapcause___1__h943 [0]
    Consolidated identical input bits for $mux cell $flatten\soc_inst.\eclass.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:230$4481:
      Old ports: A={ 2'11 $auto$wreduce.cc:461:run$9907 [0] }, B=3'101, Y=$flatten\soc_inst.\eclass.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:230$4481_Y
      New ports: A={ 1'1 $auto$wreduce.cc:461:run$9907 [0] }, B=2'01, Y=$flatten\soc_inst.\eclass.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:230$4481_Y [1:0]
      New connections: $flatten\soc_inst.\eclass.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:230$4481_Y [2] = 1'1
    Consolidated identical input bits for $mux cell $flatten\soc_inst.\eclass.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:261$4487:
      Old ports: A=3'110, B=3'001, Y=$flatten\soc_inst.\eclass.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:261$4487_Y
      New ports: A=2'10, B=2'01, Y=$flatten\soc_inst.\eclass.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:261$4487_Y [1:0]
      New connections: $flatten\soc_inst.\eclass.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:261$4487_Y [2] = $flatten\soc_inst.\eclass.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:261$4487_Y [1]
    Consolidated identical input bits for $mux cell $flatten\soc_inst.\eclass.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:270$4496:
      Old ports: A=3'110, B=3'000, Y=$flatten\soc_inst.\eclass.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:270$4496_Y
      New ports: A=1'1, B=1'0, Y=$flatten\soc_inst.\eclass.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:270$4496_Y [1]
      New connections: { $flatten\soc_inst.\eclass.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:270$4496_Y [2] $flatten\soc_inst.\eclass.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:270$4496_Y [0] } = { $flatten\soc_inst.\eclass.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:270$4496_Y [1] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\soc_inst.\eclass.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:298$4504:
      Old ports: A=3'110, B=3'001, Y=$flatten\soc_inst.\eclass.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:298$4504_Y
      New ports: A=2'10, B=2'01, Y=$flatten\soc_inst.\eclass.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:298$4504_Y [1:0]
      New connections: $flatten\soc_inst.\eclass.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:298$4504_Y [2] = $flatten\soc_inst.\eclass.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:298$4504_Y [1]
    Consolidated identical input bits for $mux cell $flatten\soc_inst.\eclass.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:301$4505:
      Old ports: A=3'110, B=3'000, Y=$flatten\soc_inst.\eclass.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:301$4505_Y
      New ports: A=1'1, B=1'0, Y=$flatten\soc_inst.\eclass.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:301$4505_Y [1]
      New connections: { $flatten\soc_inst.\eclass.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:301$4505_Y [2] $flatten\soc_inst.\eclass.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:301$4505_Y [0] } = { $flatten\soc_inst.\eclass.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:301$4505_Y [1] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\soc_inst.\eclass.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:314$4510:
      Old ports: A=3'110, B=3'010, Y=$flatten\soc_inst.\eclass.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:314$4510_Y
      New ports: A=1'1, B=1'0, Y=$flatten\soc_inst.\eclass.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:314$4510_Y [2]
      New connections: $flatten\soc_inst.\eclass.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:314$4510_Y [1:0] = 2'10
    Consolidated identical input bits for $mux cell $flatten\soc_inst.\eclass.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:320$4512:
      Old ports: A=2'10, B=2'00, Y=$auto$wreduce.cc:461:run$9908 [1:0]
      New ports: A=1'1, B=1'0, Y=$auto$wreduce.cc:461:run$9908 [1]
      New connections: $auto$wreduce.cc:461:run$9908 [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\soc_inst.\eclass.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:405$4520:
      Old ports: A=4'0000, B=4'1010, Y=$flatten\soc_inst.\eclass.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:405$4520_Y
      New ports: A=1'0, B=1'1, Y=$flatten\soc_inst.\eclass.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:405$4520_Y [1]
      New connections: { $flatten\soc_inst.\eclass.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:405$4520_Y [3:2] $flatten\soc_inst.\eclass.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:405$4520_Y [0] } = { $flatten\soc_inst.\eclass.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:405$4520_Y [1] 2'00 }
    Consolidated identical input bits for $mux cell $flatten\soc_inst.\eclass.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:426$4522:
      Old ports: A={ 3'001 \soc_inst.eclass.riscv.stage1.final_instruction__h3569 [12] }, B={ 2'11 \soc_inst.eclass.riscv.stage1.final_instruction__h3569 [13:12] }, Y=$flatten\soc_inst.\eclass.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:426$4522_Y
      New ports: A=2'01, B={ 1'1 \soc_inst.eclass.riscv.stage1.final_instruction__h3569 [13] }, Y=$flatten\soc_inst.\eclass.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:426$4522_Y [2:1]
      New connections: { $flatten\soc_inst.\eclass.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:426$4522_Y [3] $flatten\soc_inst.\eclass.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:426$4522_Y [0] } = { $flatten\soc_inst.\eclass.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:426$4522_Y [2] \soc_inst.eclass.riscv.stage1.final_instruction__h3569 [12] }
    Consolidated identical input bits for $mux cell $flatten\soc_inst.\eclass.\riscv.\stage3.$ternary$mkstage3.v:1023$4180:
      Old ports: A={ \soc_inst.eclass.riscv.stage3.csr_take_trap [31:2] 3'001 }, B={ \soc_inst.eclass.riscv.stage3.csr_system_instruction [63:32] 1'1 }, Y=\soc_inst.eclass.riscv.stage3._dfoo14
      New ports: A={ \soc_inst.eclass.riscv.stage3.csr_take_trap [31:2] 2'00 }, B=\soc_inst.eclass.riscv.stage3.csr_system_instruction [63:32], Y=\soc_inst.eclass.riscv.stage3._dfoo14 [32:1]
      New connections: \soc_inst.eclass.riscv.stage3._dfoo14 [0] = 1'1
    Consolidated identical input bits for $mux cell $flatten\soc_inst.\eclass.\riscv.\stage3.$ternary$mkstage3.v:1118$4261:
      Old ports: A=2'11, B=2'01, Y=\soc_inst.eclass.riscv.stage3.type_cause__h4912 [1:0]
      New ports: A=1'1, B=1'0, Y=\soc_inst.eclass.riscv.stage3.type_cause__h4912 [1]
      New connections: \soc_inst.eclass.riscv.stage3.type_cause__h4912 [0] = 1'1
    Consolidated identical input bits for $mux cell $flatten\soc_inst.\eclass.\riscv.\stage3.$ternary$mkstage3.v:908$4132:
      Old ports: A={ \soc_inst.eclass.riscv.stage3._theResult____h4842 1'1 }, B={ \soc_inst.eclass.riscv.stage3._theResult____h3889 1'1 }, Y=\soc_inst.eclass.riscv.stage3.wr_operand_fwding_wget [32:0]
      New ports: A=\soc_inst.eclass.riscv.stage3._theResult____h4842, B=\soc_inst.eclass.riscv.stage3._theResult____h3889, Y=\soc_inst.eclass.riscv.stage3.wr_operand_fwding_wget [32:1]
      New connections: \soc_inst.eclass.riscv.stage3.wr_operand_fwding_wget [0] = 1'1
    Consolidated identical input bits for $mux cell $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.$procmux$6807:
      Old ports: A=0, B={ \soc_inst.eclass.riscv.stage3.csr.csrfile_upd_on_ret [31:2] 2'00 }, Y=\soc_inst.eclass.riscv.stage3.csr.y_avValue_snd_fst__h958
      New ports: A=30'000000000000000000000000000000, B=\soc_inst.eclass.riscv.stage3.csr.csrfile_upd_on_ret [31:2], Y=\soc_inst.eclass.riscv.stage3.csr.y_avValue_snd_fst__h958 [31:2]
      New connections: \soc_inst.eclass.riscv.stage3.csr.y_avValue_snd_fst__h958 [1:0] = 2'00
    Consolidated identical input bits for $mux cell $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$ternary$mkcsrfile.v:1108$3209:
      Old ports: A=2'11, B=2'00, Y=\soc_inst.eclass.riscv.stage3.csr.csrfile.MUX_rg_prv_write_1__VAL_2
      New ports: A=1'1, B=1'0, Y=\soc_inst.eclass.riscv.stage3.csr.csrfile.MUX_rg_prv_write_1__VAL_2 [0]
      New connections: \soc_inst.eclass.riscv.stage3.csr.csrfile.MUX_rg_prv_write_1__VAL_2 [1] = \soc_inst.eclass.riscv.stage3.csr.csrfile.MUX_rg_prv_write_1__VAL_2 [0]
    Consolidated identical input bits for $mux cell $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$ternary$mkcsrfile.v:1652$3534:
      Old ports: A=31'0000000000000000000000000000000, B={ 3'101 \soc_inst.eclass.riscv.stage3.csr.csrfile.CASE_trigger_index_0_v_trig_tdata1_0_BIT_0_1_v_ETC__q21 17'00000000000000000 \soc_inst.eclass.riscv.stage3.csr.csrfile.CASE_trigger_index_0_v_trig_tdata1_0_BIT_1_1_v_ETC__q16 2'00 \soc_inst.eclass.riscv.stage3.csr.csrfile.CASE_trigger_index_0_v_trig_tdata1_0_BIT_2_1_v_ETC__q18 \soc_inst.eclass.riscv.stage3.csr.csrfile.CASE_trigger_index_0_v_trig_tdata1_0_BITS_8_TO_ETC__q19 }, Y=\soc_inst.eclass.riscv.stage3.csr.csrfile.IF_SEL_ARR_v_trig_tdata1_0_2_BITS_19_TO_18_3_E_ETC___d183 [30:0]
      New ports: A=10'0000000000, B={ 1'1 \soc_inst.eclass.riscv.stage3.csr.csrfile.CASE_trigger_index_0_v_trig_tdata1_0_BIT_0_1_v_ETC__q21 \soc_inst.eclass.riscv.stage3.csr.csrfile.CASE_trigger_index_0_v_trig_tdata1_0_BIT_1_1_v_ETC__q16 \soc_inst.eclass.riscv.stage3.csr.csrfile.CASE_trigger_index_0_v_trig_tdata1_0_BIT_2_1_v_ETC__q18 \soc_inst.eclass.riscv.stage3.csr.csrfile.CASE_trigger_index_0_v_trig_tdata1_0_BITS_8_TO_ETC__q19 }, Y={ \soc_inst.eclass.riscv.stage3.csr.csrfile.IF_SEL_ARR_v_trig_tdata1_0_2_BITS_19_TO_18_3_E_ETC___d183 [28:27] \soc_inst.eclass.riscv.stage3.csr.csrfile.IF_SEL_ARR_v_trig_tdata1_0_2_BITS_19_TO_18_3_E_ETC___d183 [9] \soc_inst.eclass.riscv.stage3.csr.csrfile.IF_SEL_ARR_v_trig_tdata1_0_2_BITS_19_TO_18_3_E_ETC___d183 [6:0] }
      New connections: { \soc_inst.eclass.riscv.stage3.csr.csrfile.IF_SEL_ARR_v_trig_tdata1_0_2_BITS_19_TO_18_3_E_ETC___d183 [30:29] \soc_inst.eclass.riscv.stage3.csr.csrfile.IF_SEL_ARR_v_trig_tdata1_0_2_BITS_19_TO_18_3_E_ETC___d183 [26:10] \soc_inst.eclass.riscv.stage3.csr.csrfile.IF_SEL_ARR_v_trig_tdata1_0_2_BITS_19_TO_18_3_E_ETC___d183 [8:7] } = { \soc_inst.eclass.riscv.stage3.csr.csrfile.IF_SEL_ARR_v_trig_tdata1_0_2_BITS_19_TO_18_3_E_ETC___d183 [28] 20'00000000000000000000 }
    Consolidated identical input bits for $mux cell $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$ternary$mkcsrfile.v:1658$3535:
      Old ports: A={ 1'0 \soc_inst.eclass.riscv.stage3.csr.csrfile.IF_SEL_ARR_v_trig_tdata1_0_2_BITS_19_TO_18_3_E_ETC___d183 [30:0] }, B={ 4'0100 \soc_inst.eclass.riscv.stage3.csr.csrfile.CASE_trigger_index_0_v_trig_tdata1_0_BIT_0_1_v_ETC__q21 17'00000000000000000 \soc_inst.eclass.riscv.stage3.csr.csrfile.CASE_trigger_index_0_v_trig_tdata1_0_BIT_1_1_v_ETC__q16 2'00 \soc_inst.eclass.riscv.stage3.csr.csrfile.CASE_trigger_index_0_v_trig_tdata1_0_BIT_2_1_v_ETC__q18 \soc_inst.eclass.riscv.stage3.csr.csrfile.CASE_trigger_index_0_v_trig_tdata1_0_BITS_8_TO_ETC__q19 }, Y=\soc_inst.eclass.riscv.stage3.csr.csrfile.IF_SEL_ARR_v_trig_tdata1_0_2_BITS_19_TO_18_3_E_ETC___d184
      New ports: A=\soc_inst.eclass.riscv.stage3.csr.csrfile.IF_SEL_ARR_v_trig_tdata1_0_2_BITS_19_TO_18_3_E_ETC___d183 [30:0], B={ 3'100 \soc_inst.eclass.riscv.stage3.csr.csrfile.CASE_trigger_index_0_v_trig_tdata1_0_BIT_0_1_v_ETC__q21 17'00000000000000000 \soc_inst.eclass.riscv.stage3.csr.csrfile.CASE_trigger_index_0_v_trig_tdata1_0_BIT_1_1_v_ETC__q16 2'00 \soc_inst.eclass.riscv.stage3.csr.csrfile.CASE_trigger_index_0_v_trig_tdata1_0_BIT_2_1_v_ETC__q18 \soc_inst.eclass.riscv.stage3.csr.csrfile.CASE_trigger_index_0_v_trig_tdata1_0_BITS_8_TO_ETC__q19 }, Y=\soc_inst.eclass.riscv.stage3.csr.csrfile.IF_SEL_ARR_v_trig_tdata1_0_2_BITS_19_TO_18_3_E_ETC___d184 [30:0]
      New connections: \soc_inst.eclass.riscv.stage3.csr.csrfile.IF_SEL_ARR_v_trig_tdata1_0_2_BITS_19_TO_18_3_E_ETC___d184 [31] = 1'0
    Consolidated identical input bits for $mux cell $flatten\soc_inst.\signature.$procmux$7102:
      Old ports: A=2'10, B=2'00, Y=\soc_inst.signature.CASE_s_xactor_f_wr_addrD_OUT_BITS_23_TO_20_0x_ETC__q2
      New ports: A=1'1, B=1'0, Y=\soc_inst.signature.CASE_s_xactor_f_wr_addrD_OUT_BITS_23_TO_20_0x_ETC__q2 [1]
      New connections: \soc_inst.signature.CASE_s_xactor_f_wr_addrD_OUT_BITS_23_TO_20_0x_ETC__q2 [0] = 1'0
  Optimizing cells in module \mkeclass_axi4.
    Consolidated identical input bits for $pmux cell $flatten\soc_inst.$procmux$6294:
      Old ports: A={ \soc_inst.uart_user_ifc_baud_value \soc_inst.uart_user_ifc_baud_value }, B={ \soc_inst.a__h71702 4'0000 \soc_inst.uart_user_ifc_uart_fifoRecv.hasodata \soc_inst.uart_user_ifc_uart_fifoRecv.not_ring_full \soc_inst.uart_user_ifc_uart_fifoXmit.not_ring_full \soc_inst.a__h71696 [24] 4'0000 \soc_inst.uart_user_ifc_uart_fifoRecv.hasodata \soc_inst.uart_user_ifc_uart_fifoRecv.not_ring_full \soc_inst.uart_user_ifc_uart_fifoXmit.not_ring_full \soc_inst.a__h71696 [24] 4'0000 \soc_inst.uart_user_ifc_uart_fifoRecv.hasodata \soc_inst.uart_user_ifc_uart_fifoRecv.not_ring_full \soc_inst.uart_user_ifc_uart_fifoXmit.not_ring_full \soc_inst.a__h71696 [24] 4'0000 \soc_inst.uart_user_ifc_uart_fifoRecv.hasodata \soc_inst.uart_user_ifc_uart_fifoRecv.not_ring_full \soc_inst.uart_user_ifc_uart_fifoXmit.not_ring_full \soc_inst.a__h71696 [24] }, Y=\soc_inst.rdata__h71720
      New ports: A=\soc_inst.uart_user_ifc_baud_value, B={ \soc_inst.a__h71702 [7:0] \soc_inst.a__h71702 [7:0] 4'0000 \soc_inst.uart_user_ifc_uart_fifoRecv.hasodata \soc_inst.uart_user_ifc_uart_fifoRecv.not_ring_full \soc_inst.uart_user_ifc_uart_fifoXmit.not_ring_full \soc_inst.a__h71696 [24] 4'0000 \soc_inst.uart_user_ifc_uart_fifoRecv.hasodata \soc_inst.uart_user_ifc_uart_fifoRecv.not_ring_full \soc_inst.uart_user_ifc_uart_fifoXmit.not_ring_full \soc_inst.a__h71696 [24] }, Y=\soc_inst.rdata__h71720 [15:0]
      New connections: \soc_inst.rdata__h71720 [31:16] = \soc_inst.rdata__h71720 [15:0]
    Consolidated identical input bits for $pmux cell $flatten\soc_inst.$procmux$6298:
      Old ports: A={ \soc_inst.uart_user_ifc_baud_value \soc_inst.uart_user_ifc_baud_value }, B={ \soc_inst.a__h71702 4'0000 \soc_inst.uart_user_ifc_uart_fifoRecv.hasodata \soc_inst.uart_user_ifc_uart_fifoRecv.not_ring_full \soc_inst.uart_user_ifc_uart_fifoXmit.not_ring_full \soc_inst.a__h71696 [24] 4'0000 \soc_inst.uart_user_ifc_uart_fifoRecv.hasodata \soc_inst.uart_user_ifc_uart_fifoRecv.not_ring_full \soc_inst.uart_user_ifc_uart_fifoXmit.not_ring_full \soc_inst.a__h71696 [24] 4'0000 \soc_inst.uart_user_ifc_uart_fifoRecv.hasodata \soc_inst.uart_user_ifc_uart_fifoRecv.not_ring_full \soc_inst.uart_user_ifc_uart_fifoXmit.not_ring_full \soc_inst.a__h71696 [24] 4'0000 \soc_inst.uart_user_ifc_uart_fifoRecv.hasodata \soc_inst.uart_user_ifc_uart_fifoRecv.not_ring_full \soc_inst.uart_user_ifc_uart_fifoXmit.not_ring_full \soc_inst.a__h71696 [24] }, Y=\soc_inst.rdata__h73449
      New ports: A=\soc_inst.uart_user_ifc_baud_value, B={ \soc_inst.a__h71702 [7:0] \soc_inst.a__h71702 [7:0] 4'0000 \soc_inst.uart_user_ifc_uart_fifoRecv.hasodata \soc_inst.uart_user_ifc_uart_fifoRecv.not_ring_full \soc_inst.uart_user_ifc_uart_fifoXmit.not_ring_full \soc_inst.a__h71696 [24] 4'0000 \soc_inst.uart_user_ifc_uart_fifoRecv.hasodata \soc_inst.uart_user_ifc_uart_fifoRecv.not_ring_full \soc_inst.uart_user_ifc_uart_fifoXmit.not_ring_full \soc_inst.a__h71696 [24] }, Y=\soc_inst.rdata__h73449 [15:0]
      New connections: \soc_inst.rdata__h73449 [31:16] = \soc_inst.rdata__h73449 [15:0]
    Consolidated identical input bits for $mux cell $flatten\soc_inst.$ternary$mkSoc.v:7168$1711:
      Old ports: A={ 2'10 \soc_inst.x__h87353 [31:0] \soc_inst.MUX_clint_s_xactor_f_rd_data_enq_1__VAL_2 [4] \soc_inst.clint_rg_rdpacket [3:0] }, B={ \soc_inst.MUX_clint_s_xactor_f_rd_data_enq_1__VAL_1 [38:37] \soc_inst.x__h77543 [31:0] \soc_inst.MUX_clint_s_xactor_f_rd_data_enq_1__VAL_1 [4] \soc_inst.clint_s_xactor_f_rd_addr.data0_reg [3:0] }, Y=\soc_inst.clint_s_xactor_f_rd_data.D_IN
      New ports: A={ 1'1 \soc_inst.x__h87353 [31:8] \soc_inst.MUX_clint_s_xactor_f_rd_data_enq_1__VAL_2 [4] \soc_inst.clint_rg_rdpacket [3:0] }, B={ \soc_inst.MUX_clint_s_xactor_f_rd_data_enq_1__VAL_1 [38] \soc_inst.x__h77543 [31:8] \soc_inst.MUX_clint_s_xactor_f_rd_data_enq_1__VAL_1 [4] \soc_inst.clint_s_xactor_f_rd_addr.data0_reg [3:0] }, Y={ \soc_inst.clint_s_xactor_f_rd_data.D_IN [38] \soc_inst.clint_s_xactor_f_rd_data.D_IN [36:13] \soc_inst.clint_s_xactor_f_rd_data.D_IN [4:0] }
      New connections: { \soc_inst.clint_s_xactor_f_rd_data.D_IN [37] \soc_inst.clint_s_xactor_f_rd_data.D_IN [12:5] } = { 1'0 \soc_inst._theResult_____2__h77231 [7:0] }
    Consolidated identical input bits for $mux cell $flatten\soc_inst.$ternary$mkSoc.v:7202$1717:
      Old ports: A={ 2'00 \soc_inst.clint_rg_wrpacket [3:0] }, B={ \soc_inst.MUX_clint_s_xactor_f_wr_resp_enq_1__VAL_1 [5:4] \soc_inst.clint_s_xactor_f_wr_addr.data0_reg [3:0] }, Y=\soc_inst.clint_s_xactor_f_wr_resp.D_IN
      New ports: A={ 1'0 \soc_inst.clint_rg_wrpacket [3:0] }, B={ \soc_inst.MUX_clint_s_xactor_f_wr_resp_enq_1__VAL_1 [5] \soc_inst.clint_s_xactor_f_wr_addr.data0_reg [3:0] }, Y={ \soc_inst.clint_s_xactor_f_wr_resp.D_IN [5] \soc_inst.clint_s_xactor_f_wr_resp.D_IN [3:0] }
      New connections: \soc_inst.clint_s_xactor_f_wr_resp.D_IN [4] = 1'0
    Consolidated identical input bits for $mux cell $flatten\soc_inst.$ternary$mkSoc.v:9493$2252:
      Old ports: A={ \soc_inst.MUX_uart_s_xactor_f_rd_data_enq_1__VAL_2 [38:37] \soc_inst.rdata__h73449 \soc_inst.MUX_uart_s_xactor_f_rd_data_enq_1__VAL_2 [4] \soc_inst.uart_rg_rdpacket [3:0] }, B={ \soc_inst.CASE_uart_s_xactor_f_rd_addrD_OUT_BITS_23_TO__ETC__q2 \soc_inst.rdata__h71720 \soc_inst.MUX_uart_s_xactor_f_rd_data_enq_1__VAL_1 [4] \soc_inst.uart_s_xactor_f_rd_addr.data0_reg [3:0] }, Y=\soc_inst.uart_s_xactor_f_rd_data.D_IN
      New ports: A={ \soc_inst.MUX_uart_s_xactor_f_rd_data_enq_1__VAL_2 [38] \soc_inst.rdata__h73449 \soc_inst.MUX_uart_s_xactor_f_rd_data_enq_1__VAL_2 [4] \soc_inst.uart_rg_rdpacket [3:0] }, B={ \soc_inst.CASE_uart_s_xactor_f_rd_addrD_OUT_BITS_23_TO__ETC__q2 [1] \soc_inst.rdata__h71720 \soc_inst.MUX_uart_s_xactor_f_rd_data_enq_1__VAL_1 [4] \soc_inst.uart_s_xactor_f_rd_addr.data0_reg [3:0] }, Y={ \soc_inst.uart_s_xactor_f_rd_data.D_IN [38] \soc_inst.uart_s_xactor_f_rd_data.D_IN [36:0] }
      New connections: \soc_inst.uart_s_xactor_f_rd_data.D_IN [37] = 1'0
    Consolidated identical input bits for $mux cell $flatten\soc_inst.$ternary$mkSoc.v:9527$2258:
      Old ports: A=\soc_inst.MUX_uart_s_xactor_f_wr_resp_enq_1__VAL_2 [5:4], B=\soc_inst.CASE_uart_s_xactor_f_wr_addrD_OUT_BITS_23_TO__ETC__q3, Y=\soc_inst.uart_s_xactor_f_wr_resp.D_IN [5:4]
      New ports: A=\soc_inst.MUX_uart_s_xactor_f_wr_resp_enq_1__VAL_2 [5], B=\soc_inst.CASE_uart_s_xactor_f_wr_addrD_OUT_BITS_23_TO__ETC__q3 [1], Y=\soc_inst.uart_s_xactor_f_wr_resp.D_IN [5]
      New connections: \soc_inst.uart_s_xactor_f_wr_resp.D_IN [4] = 1'0
    Consolidated identical input bits for $pmux cell $flatten\soc_inst.\eclass.$procmux$7096:
      Old ports: A=\soc_inst.eclass.memory_xactor_f_rd_data_first__77_BITS_36_TO_5_ETC___d186, B={ $flatten\soc_inst.\eclass.$ternary$mkeclass.v:1528$3728_Y $flatten\soc_inst.\eclass.$ternary$mkeclass.v:1535$3729_Y }, Y=\soc_inst.eclass.CASE_ff_mem_requestD_OUT_BITS_2_TO_1_0_IF_ff__ETC__q3
      New ports: A=\soc_inst.eclass.memory_xactor_f_rd_data_first__77_BITS_36_TO_5_ETC___d186 [31:8], B={ $flatten\soc_inst.\eclass.$ternary$mkeclass.v:1528$3728_Y [8] $flatten\soc_inst.\eclass.$ternary$mkeclass.v:1528$3728_Y [8] $flatten\soc_inst.\eclass.$ternary$mkeclass.v:1528$3728_Y [8] $flatten\soc_inst.\eclass.$ternary$mkeclass.v:1528$3728_Y [8] $flatten\soc_inst.\eclass.$ternary$mkeclass.v:1528$3728_Y [8] $flatten\soc_inst.\eclass.$ternary$mkeclass.v:1528$3728_Y [8] $flatten\soc_inst.\eclass.$ternary$mkeclass.v:1528$3728_Y [8] $flatten\soc_inst.\eclass.$ternary$mkeclass.v:1528$3728_Y [8] $flatten\soc_inst.\eclass.$ternary$mkeclass.v:1528$3728_Y [8] $flatten\soc_inst.\eclass.$ternary$mkeclass.v:1528$3728_Y [8] $flatten\soc_inst.\eclass.$ternary$mkeclass.v:1528$3728_Y [8] $flatten\soc_inst.\eclass.$ternary$mkeclass.v:1528$3728_Y [8] $flatten\soc_inst.\eclass.$ternary$mkeclass.v:1528$3728_Y [8] $flatten\soc_inst.\eclass.$ternary$mkeclass.v:1528$3728_Y [8] $flatten\soc_inst.\eclass.$ternary$mkeclass.v:1528$3728_Y [8] $flatten\soc_inst.\eclass.$ternary$mkeclass.v:1528$3728_Y [8] $flatten\soc_inst.\eclass.$ternary$mkeclass.v:1528$3728_Y [8] $flatten\soc_inst.\eclass.$ternary$mkeclass.v:1528$3728_Y [8] $flatten\soc_inst.\eclass.$ternary$mkeclass.v:1528$3728_Y [8] $flatten\soc_inst.\eclass.$ternary$mkeclass.v:1528$3728_Y [8] $flatten\soc_inst.\eclass.$ternary$mkeclass.v:1528$3728_Y [8] $flatten\soc_inst.\eclass.$ternary$mkeclass.v:1528$3728_Y [8] $flatten\soc_inst.\eclass.$ternary$mkeclass.v:1528$3728_Y [8] $flatten\soc_inst.\eclass.$ternary$mkeclass.v:1528$3728_Y [8] $flatten\soc_inst.\eclass.$ternary$mkeclass.v:1535$3729_Y [16] $flatten\soc_inst.\eclass.$ternary$mkeclass.v:1535$3729_Y [16] $flatten\soc_inst.\eclass.$ternary$mkeclass.v:1535$3729_Y [16] $flatten\soc_inst.\eclass.$ternary$mkeclass.v:1535$3729_Y [16] $flatten\soc_inst.\eclass.$ternary$mkeclass.v:1535$3729_Y [16] $flatten\soc_inst.\eclass.$ternary$mkeclass.v:1535$3729_Y [16] $flatten\soc_inst.\eclass.$ternary$mkeclass.v:1535$3729_Y [16] $flatten\soc_inst.\eclass.$ternary$mkeclass.v:1535$3729_Y [16] $flatten\soc_inst.\eclass.$ternary$mkeclass.v:1535$3729_Y [16] $flatten\soc_inst.\eclass.$ternary$mkeclass.v:1535$3729_Y [16] $flatten\soc_inst.\eclass.$ternary$mkeclass.v:1535$3729_Y [16] $flatten\soc_inst.\eclass.$ternary$mkeclass.v:1535$3729_Y [16] $flatten\soc_inst.\eclass.$ternary$mkeclass.v:1535$3729_Y [16] $flatten\soc_inst.\eclass.$ternary$mkeclass.v:1535$3729_Y [16] $flatten\soc_inst.\eclass.$ternary$mkeclass.v:1535$3729_Y [16] $flatten\soc_inst.\eclass.$ternary$mkeclass.v:1535$3729_Y [16] \soc_inst.eclass.memory_xactor_f_rd_data_first__77_BITS_36_TO_5_ETC___d186 [15:8] }, Y=\soc_inst.eclass.CASE_ff_mem_requestD_OUT_BITS_2_TO_1_0_IF_ff__ETC__q3 [31:8]
      New connections: \soc_inst.eclass.CASE_ff_mem_requestD_OUT_BITS_2_TO_1_0_IF_ff__ETC__q3 [7:0] = \soc_inst.eclass.memory_xactor_f_rd_data_first__77_BITS_36_TO_5_ETC___d186 [7:0]
    Consolidated identical input bits for $mux cell $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:266$4830:
      Old ports: A=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:268$4829_Y, B=5'11011, Y=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:266$4830_Y
      New ports: A={ 1'1 $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:268$4829_Y [1:0] }, B=3'011, Y=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:266$4830_Y [2:0]
      New connections: $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:266$4830_Y [4:3] = 2'11
    Consolidated identical input bits for $mux cell $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:328$4860:
      Old ports: A=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:330$4859_Y, B=5'11011, Y=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:328$4860_Y
      New ports: A={ 1'1 $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:330$4859_Y [1:0] }, B=3'011, Y=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:328$4860_Y [2:0]
      New connections: $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:328$4860_Y [4:3] = 2'11
    Consolidated identical input bits for $mux cell $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:392$4891:
      Old ports: A=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:394$4890_Y, B=5'11011, Y=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:392$4891_Y
      New ports: A={ 1'1 $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:394$4890_Y [1:0] }, B=3'011, Y=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:392$4891_Y [2:0]
      New connections: $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:392$4891_Y [4:3] = 2'11
    Consolidated identical input bits for $mux cell $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:455$4924:
      Old ports: A=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:457$4923_Y, B=5'11010, Y=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:455$4924_Y
      New ports: A=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:457$4923_Y [2:0], B=3'010, Y=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:455$4924_Y [2:0]
      New connections: $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:455$4924_Y [4:3] = 2'11
    Consolidated identical input bits for $mux cell $flatten\soc_inst.\eclass.\riscv.\stage1.$ternary$mkstage1.v:763$3924:
      Old ports: A={ \soc_inst.eclass.instance_fn_pmp_lookup_0.reqtop__h30 [31:2] 2'x }, B=\soc_inst.eclass.riscv.stage1.rg_fabric_request_port1__write_1, Y=\soc_inst.eclass.riscv.stage1.rg_fabric_request_D_IN
      New ports: A={ \soc_inst.eclass.instance_fn_pmp_lookup_0.reqtop__h30 [31:2] 1'x }, B={ \soc_inst.eclass.riscv.stage1.rg_fabric_request_port1__write_1 [31:2] 1'0 }, Y={ \soc_inst.eclass.riscv.stage1.rg_fabric_request_D_IN [31:2] \soc_inst.eclass.riscv.stage1.rg_fabric_request_D_IN [0] }
      New connections: \soc_inst.eclass.riscv.stage1.rg_fabric_request_D_IN [1] = \soc_inst.eclass.riscv.stage1.rg_fabric_request_D_IN [0]
    Consolidated identical input bits for $mux cell $flatten\soc_inst.\eclass.\riscv.\stage1.\instance_chk_interrupt_0.$ternary$module_chk_interrupt.v:103$4361:
      Old ports: A=$flatten\soc_inst.\eclass.\riscv.\stage1.\instance_chk_interrupt_0.$ternary$module_chk_interrupt.v:105$4360_Y, B=5'00000, Y=$flatten\soc_inst.\eclass.\riscv.\stage1.\instance_chk_interrupt_0.$ternary$module_chk_interrupt.v:103$4361_Y
      New ports: A={ 1'1 $flatten\soc_inst.\eclass.\riscv.\stage1.\instance_chk_interrupt_0.$ternary$module_chk_interrupt.v:105$4360_Y [0] }, B=2'00, Y={ $flatten\soc_inst.\eclass.\riscv.\stage1.\instance_chk_interrupt_0.$ternary$module_chk_interrupt.v:103$4361_Y [2] $flatten\soc_inst.\eclass.\riscv.\stage1.\instance_chk_interrupt_0.$ternary$module_chk_interrupt.v:103$4361_Y [0] }
      New connections: { $flatten\soc_inst.\eclass.\riscv.\stage1.\instance_chk_interrupt_0.$ternary$module_chk_interrupt.v:103$4361_Y [4:3] $flatten\soc_inst.\eclass.\riscv.\stage1.\instance_chk_interrupt_0.$ternary$module_chk_interrupt.v:103$4361_Y [1] } = { $flatten\soc_inst.\eclass.\riscv.\stage1.\instance_chk_interrupt_0.$ternary$module_chk_interrupt.v:103$4361_Y [0] $flatten\soc_inst.\eclass.\riscv.\stage1.\instance_chk_interrupt_0.$ternary$module_chk_interrupt.v:103$4361_Y [0] $flatten\soc_inst.\eclass.\riscv.\stage1.\instance_chk_interrupt_0.$ternary$module_chk_interrupt.v:103$4361_Y [0] }
    Consolidated identical input bits for $mux cell $flatten\soc_inst.\eclass.\riscv.\stage1.\instance_decoder_func_32_1.$procmux$7226:
      Old ports: A=$flatten\soc_inst.\eclass.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:230$4481_Y, B=3'110, Y=\soc_inst.eclass.riscv.stage1.instance_decoder_func_32_1.CASE_decoder_func_32_inst_BITS_31_TO_7_0_6_0x2_ETC__q1
      New ports: A=$flatten\soc_inst.\eclass.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:230$4481_Y [1:0], B=2'10, Y=\soc_inst.eclass.riscv.stage1.instance_decoder_func_32_1.CASE_decoder_func_32_inst_BITS_31_TO_7_0_6_0x2_ETC__q1 [1:0]
      New connections: \soc_inst.eclass.riscv.stage1.instance_decoder_func_32_1.CASE_decoder_func_32_inst_BITS_31_TO_7_0_6_0x2_ETC__q1 [2] = 1'1
    Consolidated identical input bits for $pmux cell $flatten\soc_inst.\eclass.\riscv.\stage1.\instance_decoder_func_32_1.$procmux$7232:
      Old ports: A=3'110, B={ $flatten\soc_inst.\eclass.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:261$4487_Y \soc_inst.eclass.riscv.stage1.instance_decoder_func_32_1.CASE_decoder_func_32_inst_BITS_14_TO_12_0_1_1_1_6__q2 $flatten\soc_inst.\eclass.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:270$4496_Y 3'000 }, Y=\soc_inst.eclass.riscv.stage1.instance_decoder_func_32_1.CASE_decoder_func_32_inst_BITS_4_TO_2_0b0_IF_N_ETC__q3
      New ports: A=2'10, B={ $flatten\soc_inst.\eclass.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:261$4487_Y [1:0] \soc_inst.eclass.riscv.stage1.instance_decoder_func_32_1.CASE_decoder_func_32_inst_BITS_14_TO_12_0_1_1_1_6__q2 [1:0] $flatten\soc_inst.\eclass.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:270$4496_Y [1] 3'000 }, Y=\soc_inst.eclass.riscv.stage1.instance_decoder_func_32_1.CASE_decoder_func_32_inst_BITS_4_TO_2_0b0_IF_N_ETC__q3 [1:0]
      New connections: \soc_inst.eclass.riscv.stage1.instance_decoder_func_32_1.CASE_decoder_func_32_inst_BITS_4_TO_2_0b0_IF_N_ETC__q3 [2] = \soc_inst.eclass.riscv.stage1.instance_decoder_func_32_1.CASE_decoder_func_32_inst_BITS_4_TO_2_0b0_IF_N_ETC__q3 [1]
    Consolidated identical input bits for $pmux cell $flatten\soc_inst.\eclass.\riscv.\stage1.\instance_decoder_func_32_1.$procmux$7241:
      Old ports: A=3'110, B={ $flatten\soc_inst.\eclass.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:298$4504_Y $flatten\soc_inst.\eclass.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:301$4505_Y 3'000 }, Y=\soc_inst.eclass.riscv.stage1.instance_decoder_func_32_1.CASE_decoder_func_32_inst_BITS_4_TO_2_0b0_IF_d_ETC__q5
      New ports: A=2'10, B={ $flatten\soc_inst.\eclass.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:298$4504_Y [1:0] $flatten\soc_inst.\eclass.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:301$4505_Y [1] 3'000 }, Y=\soc_inst.eclass.riscv.stage1.instance_decoder_func_32_1.CASE_decoder_func_32_inst_BITS_4_TO_2_0b0_IF_d_ETC__q5 [1:0]
      New connections: \soc_inst.eclass.riscv.stage1.instance_decoder_func_32_1.CASE_decoder_func_32_inst_BITS_4_TO_2_0b0_IF_d_ETC__q5 [2] = \soc_inst.eclass.riscv.stage1.instance_decoder_func_32_1.CASE_decoder_func_32_inst_BITS_4_TO_2_0b0_IF_d_ETC__q5 [1]
    Consolidated identical input bits for $mux cell $flatten\soc_inst.\eclass.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:134$4414:
      Old ports: A=6'000010, B=\soc_inst.eclass.riscv.stage1.instance_decoder_func_32_1._theResult_____5_snd__h948, Y=\soc_inst.eclass.riscv.stage1.instance_decoder_func_32_1._theResult_____5_snd__h921
      New ports: A=3'010, B={ \soc_inst.eclass.riscv.stage1.instance_decoder_func_32_1._theResult_____5_snd__h948 [3] \soc_inst.eclass.riscv.stage1.instance_decoder_func_32_1._theResult_____5_snd__h948 [1:0] }, Y={ \soc_inst.eclass.riscv.stage1.instance_decoder_func_32_1._theResult_____5_snd__h921 [3] \soc_inst.eclass.riscv.stage1.instance_decoder_func_32_1._theResult_____5_snd__h921 [1:0] }
      New connections: { \soc_inst.eclass.riscv.stage1.instance_decoder_func_32_1._theResult_____5_snd__h921 [5:4] \soc_inst.eclass.riscv.stage1.instance_decoder_func_32_1._theResult_____5_snd__h921 [2] } = 3'000
    Consolidated identical input bits for $mux cell $flatten\soc_inst.\eclass.\riscv.\stage3.$ternary$mkstage3.v:918$4137:
      Old ports: A=\soc_inst.eclass.riscv.stage3._dfoo14, B={ $flatten\soc_inst.\eclass.\riscv.\stage3.$ternary$mkstage3.v:919$4136_Y 1'1 }, Y=\soc_inst.eclass.riscv.stage3.wr_flush_wget
      New ports: A=\soc_inst.eclass.riscv.stage3._dfoo14 [32:1], B=$flatten\soc_inst.\eclass.\riscv.\stage3.$ternary$mkstage3.v:919$4136_Y, Y=\soc_inst.eclass.riscv.stage3.wr_flush_wget [32:1]
      New connections: \soc_inst.eclass.riscv.stage3.wr_flush_wget [0] = 1'1
    Consolidated identical input bits for $mux cell $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.$ternary$mkcsr.v:364$3122:
      Old ports: A={ 32'00000000000000000000000000000000 \soc_inst.eclass.riscv.stage3.csr.csrfile_read_csr }, B={ \soc_inst.eclass.riscv.stage3.csr.y_avValue_snd_fst__h958 32'00000000000000000000000000000000 }, Y=\soc_inst.eclass.riscv.stage3.csr_system_instruction [63:0]
      New ports: A={ 30'000000000000000000000000000000 \soc_inst.eclass.riscv.stage3.csr.csrfile_read_csr }, B={ \soc_inst.eclass.riscv.stage3.csr.y_avValue_snd_fst__h958 [31:2] 32'00000000000000000000000000000000 }, Y={ \soc_inst.eclass.riscv.stage3.csr_system_instruction [63:34] \soc_inst.eclass.riscv.stage3.csr_system_instruction [31:0] }
      New connections: \soc_inst.eclass.riscv.stage3.csr_system_instruction [33:32] = 2'00
    Consolidated identical input bits for $mux cell $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$ternary$mkcsrfile.v:1658$3535:
      Old ports: A=\soc_inst.eclass.riscv.stage3.csr.csrfile.IF_SEL_ARR_v_trig_tdata1_0_2_BITS_19_TO_18_3_E_ETC___d183 [30:0], B={ 3'100 \soc_inst.eclass.riscv.stage3.csr.csrfile.CASE_trigger_index_0_v_trig_tdata1_0_BIT_0_1_v_ETC__q21 17'00000000000000000 \soc_inst.eclass.riscv.stage3.csr.csrfile.CASE_trigger_index_0_v_trig_tdata1_0_BIT_1_1_v_ETC__q16 2'00 \soc_inst.eclass.riscv.stage3.csr.csrfile.CASE_trigger_index_0_v_trig_tdata1_0_BIT_2_1_v_ETC__q18 \soc_inst.eclass.riscv.stage3.csr.csrfile.CASE_trigger_index_0_v_trig_tdata1_0_BITS_8_TO_ETC__q19 }, Y=\soc_inst.eclass.riscv.stage3.csr.csrfile.IF_SEL_ARR_v_trig_tdata1_0_2_BITS_19_TO_18_3_E_ETC___d184 [30:0]
      New ports: A={ \soc_inst.eclass.riscv.stage3.csr.csrfile.IF_SEL_ARR_v_trig_tdata1_0_2_BITS_19_TO_18_3_E_ETC___d183 [28] \soc_inst.eclass.riscv.stage3.csr.csrfile.IF_SEL_ARR_v_trig_tdata1_0_2_BITS_19_TO_18_3_E_ETC___d183 [28:27] \soc_inst.eclass.riscv.stage3.csr.csrfile.IF_SEL_ARR_v_trig_tdata1_0_2_BITS_19_TO_18_3_E_ETC___d183 [9] \soc_inst.eclass.riscv.stage3.csr.csrfile.IF_SEL_ARR_v_trig_tdata1_0_2_BITS_19_TO_18_3_E_ETC___d183 [6:0] }, B={ 2'10 \soc_inst.eclass.riscv.stage3.csr.csrfile.CASE_trigger_index_0_v_trig_tdata1_0_BIT_0_1_v_ETC__q21 \soc_inst.eclass.riscv.stage3.csr.csrfile.CASE_trigger_index_0_v_trig_tdata1_0_BIT_1_1_v_ETC__q16 \soc_inst.eclass.riscv.stage3.csr.csrfile.CASE_trigger_index_0_v_trig_tdata1_0_BIT_2_1_v_ETC__q18 \soc_inst.eclass.riscv.stage3.csr.csrfile.CASE_trigger_index_0_v_trig_tdata1_0_BITS_8_TO_ETC__q19 }, Y={ \soc_inst.eclass.riscv.stage3.csr.csrfile.IF_SEL_ARR_v_trig_tdata1_0_2_BITS_19_TO_18_3_E_ETC___d184 [30] \soc_inst.eclass.riscv.stage3.csr.csrfile.IF_SEL_ARR_v_trig_tdata1_0_2_BITS_19_TO_18_3_E_ETC___d184 [28:27] \soc_inst.eclass.riscv.stage3.csr.csrfile.IF_SEL_ARR_v_trig_tdata1_0_2_BITS_19_TO_18_3_E_ETC___d184 [9] \soc_inst.eclass.riscv.stage3.csr.csrfile.IF_SEL_ARR_v_trig_tdata1_0_2_BITS_19_TO_18_3_E_ETC___d184 [6:0] }
      New connections: { \soc_inst.eclass.riscv.stage3.csr.csrfile.IF_SEL_ARR_v_trig_tdata1_0_2_BITS_19_TO_18_3_E_ETC___d184 [29] \soc_inst.eclass.riscv.stage3.csr.csrfile.IF_SEL_ARR_v_trig_tdata1_0_2_BITS_19_TO_18_3_E_ETC___d184 [26:10] \soc_inst.eclass.riscv.stage3.csr.csrfile.IF_SEL_ARR_v_trig_tdata1_0_2_BITS_19_TO_18_3_E_ETC___d184 [8:7] } = 20'00000000000000000000
    Consolidated identical input bits for $mux cell $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$ternary$mkcsrfile.v:1715$3554:
      Old ports: A=\soc_inst.eclass.riscv.stage3.csr.csrfile.IF_SEL_ARR_v_trig_tdata1_0_2_BITS_19_TO_18_3_E_ETC___d184, B={ 4'0010 \soc_inst.eclass.riscv.stage3.csr.csrfile.CASE_trigger_index_0_v_trig_tdata1_0_BIT_0_1_v_ETC__q21 7'0000000 \soc_inst.eclass.riscv.stage3.csr.csrfile.CASE_trigger_index_0_v_trig_tdata1_0_BIT_1_1_v_ETC__q16 1'0 \soc_inst.eclass.riscv.stage3.csr.csrfile.CASE_trigger_index_0_v_trig_tdata1_0_BITS_3_TO_ETC__q17 \soc_inst.eclass.riscv.stage3.csr.csrfile.CASE_trigger_index_0_v_trig_tdata1_0_BITS_7_TO_ETC__q14 \soc_inst.eclass.riscv.stage3.csr.csrfile.CASE_trigger_index_0_v_trig_tdata1_0_BIT_8_1_v_ETC__q15 \soc_inst.eclass.riscv.stage3.csr.csrfile.CASE_trigger_index_0_v_trig_tdata1_0_BITS_12_T_ETC__q11 \soc_inst.eclass.riscv.stage3.csr.csrfile.CASE_trigger_index_0_v_trig_tdata1_0_BIT_13_1__ETC__q12 2'00 \soc_inst.eclass.riscv.stage3.csr.csrfile.CASE_trigger_index_0_v_trig_tdata1_0_BIT_14_1__ETC__q13 \soc_inst.eclass.riscv.stage3.csr.csrfile.CASE_trigger_index_0_v_trig_tdata1_0_BIT_15_1__ETC__q8 \soc_inst.eclass.riscv.stage3.csr.csrfile.CASE_trigger_index_0_v_trig_tdata1_0_BIT_16_1__ETC__q9 \soc_inst.eclass.riscv.stage3.csr.csrfile.CASE_trigger_index_0_v_trig_tdata1_0_BIT_17_1__ETC__q10 }, Y=\soc_inst.eclass.riscv.stage3.csr.csrfile.data___1__h4411
      New ports: A=\soc_inst.eclass.riscv.stage3.csr.csrfile.IF_SEL_ARR_v_trig_tdata1_0_2_BITS_19_TO_18_3_E_ETC___d184 [30:0], B={ 3'010 \soc_inst.eclass.riscv.stage3.csr.csrfile.CASE_trigger_index_0_v_trig_tdata1_0_BIT_0_1_v_ETC__q21 7'0000000 \soc_inst.eclass.riscv.stage3.csr.csrfile.CASE_trigger_index_0_v_trig_tdata1_0_BIT_1_1_v_ETC__q16 1'0 \soc_inst.eclass.riscv.stage3.csr.csrfile.CASE_trigger_index_0_v_trig_tdata1_0_BITS_3_TO_ETC__q17 \soc_inst.eclass.riscv.stage3.csr.csrfile.CASE_trigger_index_0_v_trig_tdata1_0_BITS_7_TO_ETC__q14 \soc_inst.eclass.riscv.stage3.csr.csrfile.CASE_trigger_index_0_v_trig_tdata1_0_BIT_8_1_v_ETC__q15 \soc_inst.eclass.riscv.stage3.csr.csrfile.CASE_trigger_index_0_v_trig_tdata1_0_BITS_12_T_ETC__q11 \soc_inst.eclass.riscv.stage3.csr.csrfile.CASE_trigger_index_0_v_trig_tdata1_0_BIT_13_1__ETC__q12 2'00 \soc_inst.eclass.riscv.stage3.csr.csrfile.CASE_trigger_index_0_v_trig_tdata1_0_BIT_14_1__ETC__q13 \soc_inst.eclass.riscv.stage3.csr.csrfile.CASE_trigger_index_0_v_trig_tdata1_0_BIT_15_1__ETC__q8 \soc_inst.eclass.riscv.stage3.csr.csrfile.CASE_trigger_index_0_v_trig_tdata1_0_BIT_16_1__ETC__q9 \soc_inst.eclass.riscv.stage3.csr.csrfile.CASE_trigger_index_0_v_trig_tdata1_0_BIT_17_1__ETC__q10 }, Y=\soc_inst.eclass.riscv.stage3.csr.csrfile.data___1__h4411 [30:0]
      New connections: \soc_inst.eclass.riscv.stage3.csr.csrfile.data___1__h4411 [31] = 1'0
  Optimizing cells in module \mkeclass_axi4.
    Consolidated identical input bits for $mux cell $flatten\soc_inst.$ternary$mkSoc.v:9493$2252:
      Old ports: A={ \soc_inst.MUX_uart_s_xactor_f_rd_data_enq_1__VAL_2 [38] \soc_inst.rdata__h73449 \soc_inst.MUX_uart_s_xactor_f_rd_data_enq_1__VAL_2 [4] \soc_inst.uart_rg_rdpacket [3:0] }, B={ \soc_inst.CASE_uart_s_xactor_f_rd_addrD_OUT_BITS_23_TO__ETC__q2 [1] \soc_inst.rdata__h71720 \soc_inst.MUX_uart_s_xactor_f_rd_data_enq_1__VAL_1 [4] \soc_inst.uart_s_xactor_f_rd_addr.data0_reg [3:0] }, Y={ \soc_inst.uart_s_xactor_f_rd_data.D_IN [38] \soc_inst.uart_s_xactor_f_rd_data.D_IN [36:0] }
      New ports: A={ \soc_inst.MUX_uart_s_xactor_f_rd_data_enq_1__VAL_2 [38] \soc_inst.rdata__h73449 [15:0] \soc_inst.MUX_uart_s_xactor_f_rd_data_enq_1__VAL_2 [4] \soc_inst.uart_rg_rdpacket [3:0] }, B={ \soc_inst.CASE_uart_s_xactor_f_rd_addrD_OUT_BITS_23_TO__ETC__q2 [1] \soc_inst.rdata__h71720 [15:0] \soc_inst.MUX_uart_s_xactor_f_rd_data_enq_1__VAL_1 [4] \soc_inst.uart_s_xactor_f_rd_addr.data0_reg [3:0] }, Y={ \soc_inst.uart_s_xactor_f_rd_data.D_IN [38] \soc_inst.uart_s_xactor_f_rd_data.D_IN [20:0] }
      New connections: \soc_inst.uart_s_xactor_f_rd_data.D_IN [36:21] = \soc_inst.uart_s_xactor_f_rd_data.D_IN [20:5]
    Consolidated identical input bits for $mux cell $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:264$4831:
      Old ports: A=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:266$4830_Y, B=5'11010, Y=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:264$4831_Y
      New ports: A=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:266$4830_Y [2:0], B=3'010, Y=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:264$4831_Y [2:0]
      New connections: $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:264$4831_Y [4:3] = 2'11
    Consolidated identical input bits for $mux cell $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:326$4861:
      Old ports: A=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:328$4860_Y, B=5'11010, Y=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:326$4861_Y
      New ports: A=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:328$4860_Y [2:0], B=3'010, Y=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:326$4861_Y [2:0]
      New connections: $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:326$4861_Y [4:3] = 2'11
    Consolidated identical input bits for $mux cell $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:390$4892:
      Old ports: A=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:392$4891_Y, B=5'11010, Y=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:390$4892_Y
      New ports: A=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:392$4891_Y [2:0], B=3'010, Y=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:390$4892_Y [2:0]
      New connections: $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:390$4892_Y [4:3] = 2'11
    Consolidated identical input bits for $mux cell $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:453$4925:
      Old ports: A=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:455$4924_Y, B=5'11001, Y=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:453$4925_Y
      New ports: A=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:455$4924_Y [2:0], B=3'001, Y=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:453$4925_Y [2:0]
      New connections: $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:453$4925_Y [4:3] = 2'11
    Consolidated identical input bits for $mux cell $flatten\soc_inst.\eclass.\riscv.\stage1.\instance_chk_interrupt_0.$ternary$module_chk_interrupt.v:101$4362:
      Old ports: A=$flatten\soc_inst.\eclass.\riscv.\stage1.\instance_chk_interrupt_0.$ternary$module_chk_interrupt.v:103$4361_Y, B=5'01000, Y=$flatten\soc_inst.\eclass.\riscv.\stage1.\instance_chk_interrupt_0.$ternary$module_chk_interrupt.v:101$4362_Y
      New ports: A={ $flatten\soc_inst.\eclass.\riscv.\stage1.\instance_chk_interrupt_0.$ternary$module_chk_interrupt.v:103$4361_Y [0] $flatten\soc_inst.\eclass.\riscv.\stage1.\instance_chk_interrupt_0.$ternary$module_chk_interrupt.v:103$4361_Y [2] $flatten\soc_inst.\eclass.\riscv.\stage1.\instance_chk_interrupt_0.$ternary$module_chk_interrupt.v:103$4361_Y [0] }, B=3'100, Y={ $flatten\soc_inst.\eclass.\riscv.\stage1.\instance_chk_interrupt_0.$ternary$module_chk_interrupt.v:101$4362_Y [3:2] $flatten\soc_inst.\eclass.\riscv.\stage1.\instance_chk_interrupt_0.$ternary$module_chk_interrupt.v:101$4362_Y [0] }
      New connections: { $flatten\soc_inst.\eclass.\riscv.\stage1.\instance_chk_interrupt_0.$ternary$module_chk_interrupt.v:101$4362_Y [4] $flatten\soc_inst.\eclass.\riscv.\stage1.\instance_chk_interrupt_0.$ternary$module_chk_interrupt.v:101$4362_Y [1] } = { $flatten\soc_inst.\eclass.\riscv.\stage1.\instance_chk_interrupt_0.$ternary$module_chk_interrupt.v:101$4362_Y [0] $flatten\soc_inst.\eclass.\riscv.\stage1.\instance_chk_interrupt_0.$ternary$module_chk_interrupt.v:101$4362_Y [0] }
    Consolidated identical input bits for $mux cell $flatten\soc_inst.\eclass.\riscv.\stage1.\instance_decoder_func_32_1.$procmux$7223:
      Old ports: A=6'000010, B=\soc_inst.eclass.riscv.stage1.instance_decoder_func_32_1._theResult_____5_snd__h921, Y=\soc_inst.eclass.riscv.stage1.instance_decoder_func_32_1._theResult_____5_snd__h893
      New ports: A=3'010, B={ \soc_inst.eclass.riscv.stage1.instance_decoder_func_32_1._theResult_____5_snd__h921 [3] \soc_inst.eclass.riscv.stage1.instance_decoder_func_32_1._theResult_____5_snd__h921 [1:0] }, Y={ \soc_inst.eclass.riscv.stage1.instance_decoder_func_32_1._theResult_____5_snd__h893 [3] \soc_inst.eclass.riscv.stage1.instance_decoder_func_32_1._theResult_____5_snd__h893 [1:0] }
      New connections: { \soc_inst.eclass.riscv.stage1.instance_decoder_func_32_1._theResult_____5_snd__h893 [5:4] \soc_inst.eclass.riscv.stage1.instance_decoder_func_32_1._theResult_____5_snd__h893 [2] } = 3'000
    Consolidated identical input bits for $mux cell $flatten\soc_inst.\eclass.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:103$4393:
      Old ports: A={ 1'1 $auto$wreduce.cc:461:run$9906 [1:0] }, B=\soc_inst.eclass.riscv.stage1.instance_decoder_func_32_1.CASE_decoder_func_32_inst_BITS_31_TO_7_0_6_0x2_ETC__q1, Y=\soc_inst.eclass.riscv.stage1.instance_decoder_func_32_1.IF_decoder_func_32_inst_BITS_14_TO_12_9_EQ_0_7_ETC___d136
      New ports: A=$auto$wreduce.cc:461:run$9906 [1:0], B=\soc_inst.eclass.riscv.stage1.instance_decoder_func_32_1.CASE_decoder_func_32_inst_BITS_31_TO_7_0_6_0x2_ETC__q1 [1:0], Y=\soc_inst.eclass.riscv.stage1.instance_decoder_func_32_1.IF_decoder_func_32_inst_BITS_14_TO_12_9_EQ_0_7_ETC___d136 [1:0]
      New connections: \soc_inst.eclass.riscv.stage1.instance_decoder_func_32_1.IF_decoder_func_32_inst_BITS_14_TO_12_9_EQ_0_7_ETC___d136 [2] = 1'1
    Consolidated identical input bits for $mux cell $flatten\soc_inst.\eclass.\riscv.\stage3.$ternary$mkstage3.v:1023$4180:
      Old ports: A={ \soc_inst.eclass.riscv.stage3.csr_take_trap [31:2] 2'00 }, B=\soc_inst.eclass.riscv.stage3.csr_system_instruction [63:32], Y=\soc_inst.eclass.riscv.stage3._dfoo14 [32:1]
      New ports: A=\soc_inst.eclass.riscv.stage3.csr_take_trap [31:2], B=\soc_inst.eclass.riscv.stage3.csr_system_instruction [63:34], Y=\soc_inst.eclass.riscv.stage3._dfoo14 [32:3]
      New connections: \soc_inst.eclass.riscv.stage3._dfoo14 [2:1] = 2'00
    Consolidated identical input bits for $mux cell $flatten\soc_inst.\eclass.\riscv.\stage3.\csr.\csrfile.$ternary$mkcsrfile.v:1715$3554:
      Old ports: A=\soc_inst.eclass.riscv.stage3.csr.csrfile.IF_SEL_ARR_v_trig_tdata1_0_2_BITS_19_TO_18_3_E_ETC___d184 [30:0], B={ 3'010 \soc_inst.eclass.riscv.stage3.csr.csrfile.CASE_trigger_index_0_v_trig_tdata1_0_BIT_0_1_v_ETC__q21 7'0000000 \soc_inst.eclass.riscv.stage3.csr.csrfile.CASE_trigger_index_0_v_trig_tdata1_0_BIT_1_1_v_ETC__q16 1'0 \soc_inst.eclass.riscv.stage3.csr.csrfile.CASE_trigger_index_0_v_trig_tdata1_0_BITS_3_TO_ETC__q17 \soc_inst.eclass.riscv.stage3.csr.csrfile.CASE_trigger_index_0_v_trig_tdata1_0_BITS_7_TO_ETC__q14 \soc_inst.eclass.riscv.stage3.csr.csrfile.CASE_trigger_index_0_v_trig_tdata1_0_BIT_8_1_v_ETC__q15 \soc_inst.eclass.riscv.stage3.csr.csrfile.CASE_trigger_index_0_v_trig_tdata1_0_BITS_12_T_ETC__q11 \soc_inst.eclass.riscv.stage3.csr.csrfile.CASE_trigger_index_0_v_trig_tdata1_0_BIT_13_1__ETC__q12 2'00 \soc_inst.eclass.riscv.stage3.csr.csrfile.CASE_trigger_index_0_v_trig_tdata1_0_BIT_14_1__ETC__q13 \soc_inst.eclass.riscv.stage3.csr.csrfile.CASE_trigger_index_0_v_trig_tdata1_0_BIT_15_1__ETC__q8 \soc_inst.eclass.riscv.stage3.csr.csrfile.CASE_trigger_index_0_v_trig_tdata1_0_BIT_16_1__ETC__q9 \soc_inst.eclass.riscv.stage3.csr.csrfile.CASE_trigger_index_0_v_trig_tdata1_0_BIT_17_1__ETC__q10 }, Y=\soc_inst.eclass.riscv.stage3.csr.csrfile.data___1__h4411 [30:0]
      New ports: A={ \soc_inst.eclass.riscv.stage3.csr.csrfile.IF_SEL_ARR_v_trig_tdata1_0_2_BITS_19_TO_18_3_E_ETC___d184 [30] 1'0 \soc_inst.eclass.riscv.stage3.csr.csrfile.IF_SEL_ARR_v_trig_tdata1_0_2_BITS_19_TO_18_3_E_ETC___d184 [28:27] 9'000000000 \soc_inst.eclass.riscv.stage3.csr.csrfile.IF_SEL_ARR_v_trig_tdata1_0_2_BITS_19_TO_18_3_E_ETC___d184 [9] 2'00 \soc_inst.eclass.riscv.stage3.csr.csrfile.IF_SEL_ARR_v_trig_tdata1_0_2_BITS_19_TO_18_3_E_ETC___d184 [6:0] }, B={ 3'010 \soc_inst.eclass.riscv.stage3.csr.csrfile.CASE_trigger_index_0_v_trig_tdata1_0_BIT_0_1_v_ETC__q21 \soc_inst.eclass.riscv.stage3.csr.csrfile.CASE_trigger_index_0_v_trig_tdata1_0_BIT_1_1_v_ETC__q16 \soc_inst.eclass.riscv.stage3.csr.csrfile.CASE_trigger_index_0_v_trig_tdata1_0_BITS_3_TO_ETC__q17 \soc_inst.eclass.riscv.stage3.csr.csrfile.CASE_trigger_index_0_v_trig_tdata1_0_BITS_7_TO_ETC__q14 \soc_inst.eclass.riscv.stage3.csr.csrfile.CASE_trigger_index_0_v_trig_tdata1_0_BIT_8_1_v_ETC__q15 \soc_inst.eclass.riscv.stage3.csr.csrfile.CASE_trigger_index_0_v_trig_tdata1_0_BITS_12_T_ETC__q11 \soc_inst.eclass.riscv.stage3.csr.csrfile.CASE_trigger_index_0_v_trig_tdata1_0_BIT_13_1__ETC__q12 2'00 \soc_inst.eclass.riscv.stage3.csr.csrfile.CASE_trigger_index_0_v_trig_tdata1_0_BIT_14_1__ETC__q13 \soc_inst.eclass.riscv.stage3.csr.csrfile.CASE_trigger_index_0_v_trig_tdata1_0_BIT_15_1__ETC__q8 \soc_inst.eclass.riscv.stage3.csr.csrfile.CASE_trigger_index_0_v_trig_tdata1_0_BIT_16_1__ETC__q9 \soc_inst.eclass.riscv.stage3.csr.csrfile.CASE_trigger_index_0_v_trig_tdata1_0_BIT_17_1__ETC__q10 }, Y={ \soc_inst.eclass.riscv.stage3.csr.csrfile.data___1__h4411 [30:27] \soc_inst.eclass.riscv.stage3.csr.csrfile.data___1__h4411 [19] \soc_inst.eclass.riscv.stage3.csr.csrfile.data___1__h4411 [17:0] }
      New connections: { \soc_inst.eclass.riscv.stage3.csr.csrfile.data___1__h4411 [26:20] \soc_inst.eclass.riscv.stage3.csr.csrfile.data___1__h4411 [18] } = 8'00000000
  Optimizing cells in module \mkeclass_axi4.
    Consolidated identical input bits for $mux cell $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:262$4832:
      Old ports: A=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:264$4831_Y, B=5'11001, Y=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:262$4832_Y
      New ports: A=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:264$4831_Y [2:0], B=3'001, Y=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:262$4832_Y [2:0]
      New connections: $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:262$4832_Y [4:3] = 2'11
    Consolidated identical input bits for $mux cell $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:324$4862:
      Old ports: A=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:326$4861_Y, B=5'11001, Y=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:324$4862_Y
      New ports: A=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:326$4861_Y [2:0], B=3'001, Y=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:324$4862_Y [2:0]
      New connections: $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:324$4862_Y [4:3] = 2'11
    Consolidated identical input bits for $mux cell $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:388$4893:
      Old ports: A=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:390$4892_Y, B=5'11001, Y=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:388$4893_Y
      New ports: A=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:390$4892_Y [2:0], B=3'001, Y=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:388$4893_Y [2:0]
      New connections: $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:388$4893_Y [4:3] = 2'11
    Consolidated identical input bits for $mux cell $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:451$4926:
      Old ports: A=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:453$4925_Y, B=5'11000, Y=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:451$4926_Y
      New ports: A=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:453$4925_Y [2:0], B=3'000, Y=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:451$4926_Y [2:0]
      New connections: $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:451$4926_Y [4:3] = 2'11
    Consolidated identical input bits for $mux cell $flatten\soc_inst.\eclass.\riscv.\stage1.\instance_chk_interrupt_0.$ternary$module_chk_interrupt.v:99$4363:
      Old ports: A=$flatten\soc_inst.\eclass.\riscv.\stage1.\instance_chk_interrupt_0.$ternary$module_chk_interrupt.v:101$4362_Y, B=5'00111, Y=$flatten\soc_inst.\eclass.\riscv.\stage1.\instance_chk_interrupt_0.$ternary$module_chk_interrupt.v:99$4363_Y
      New ports: A={ $flatten\soc_inst.\eclass.\riscv.\stage1.\instance_chk_interrupt_0.$ternary$module_chk_interrupt.v:101$4362_Y [0] $flatten\soc_inst.\eclass.\riscv.\stage1.\instance_chk_interrupt_0.$ternary$module_chk_interrupt.v:101$4362_Y [3:2] $flatten\soc_inst.\eclass.\riscv.\stage1.\instance_chk_interrupt_0.$ternary$module_chk_interrupt.v:101$4362_Y [0] }, B=4'0011, Y={ $flatten\soc_inst.\eclass.\riscv.\stage1.\instance_chk_interrupt_0.$ternary$module_chk_interrupt.v:99$4363_Y [4:2] $flatten\soc_inst.\eclass.\riscv.\stage1.\instance_chk_interrupt_0.$ternary$module_chk_interrupt.v:99$4363_Y [0] }
      New connections: $flatten\soc_inst.\eclass.\riscv.\stage1.\instance_chk_interrupt_0.$ternary$module_chk_interrupt.v:99$4363_Y [1] = $flatten\soc_inst.\eclass.\riscv.\stage1.\instance_chk_interrupt_0.$ternary$module_chk_interrupt.v:99$4363_Y [0]
    Consolidated identical input bits for $mux cell $flatten\soc_inst.\eclass.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:198$4453:
      Old ports: A=6'000010, B=\soc_inst.eclass.riscv.stage1.instance_decoder_func_32_1._theResult_____5_snd__h893, Y=$flatten\soc_inst.\eclass.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:198$4453_Y
      New ports: A=3'010, B={ \soc_inst.eclass.riscv.stage1.instance_decoder_func_32_1._theResult_____5_snd__h893 [3] \soc_inst.eclass.riscv.stage1.instance_decoder_func_32_1._theResult_____5_snd__h893 [1:0] }, Y={ $flatten\soc_inst.\eclass.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:198$4453_Y [3] $flatten\soc_inst.\eclass.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:198$4453_Y [1:0] }
      New connections: { $flatten\soc_inst.\eclass.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:198$4453_Y [5:4] $flatten\soc_inst.\eclass.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:198$4453_Y [2] } = 3'000
  Optimizing cells in module \mkeclass_axi4.
    Consolidated identical input bits for $mux cell $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:260$4833:
      Old ports: A=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:262$4832_Y, B=5'11000, Y=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:260$4833_Y
      New ports: A=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:262$4832_Y [2:0], B=3'000, Y=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:260$4833_Y [2:0]
      New connections: $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:260$4833_Y [4:3] = 2'11
    Consolidated identical input bits for $mux cell $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:322$4863:
      Old ports: A=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:324$4862_Y, B=5'11000, Y=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:322$4863_Y
      New ports: A=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:324$4862_Y [2:0], B=3'000, Y=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:322$4863_Y [2:0]
      New connections: $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:322$4863_Y [4:3] = 2'11
    Consolidated identical input bits for $mux cell $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:386$4894:
      Old ports: A=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:388$4893_Y, B=5'11000, Y=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:386$4894_Y
      New ports: A=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:388$4893_Y [2:0], B=3'000, Y=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:386$4894_Y [2:0]
      New connections: $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:386$4894_Y [4:3] = 2'11
    Consolidated identical input bits for $mux cell $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:449$4927:
      Old ports: A=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:451$4926_Y, B=5'10111, Y=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:449$4927_Y
      New ports: A={ 1'1 $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:451$4926_Y [2:0] }, B=4'0111, Y=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:449$4927_Y [3:0]
      New connections: $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:449$4927_Y [4] = 1'1
    Consolidated identical input bits for $mux cell $flatten\soc_inst.\eclass.\riscv.\stage1.\instance_chk_interrupt_0.$ternary$module_chk_interrupt.v:97$4364:
      Old ports: A=$flatten\soc_inst.\eclass.\riscv.\stage1.\instance_chk_interrupt_0.$ternary$module_chk_interrupt.v:99$4363_Y, B=5'00011, Y=$flatten\soc_inst.\eclass.\riscv.\stage1.\instance_chk_interrupt_0.$ternary$module_chk_interrupt.v:97$4364_Y
      New ports: A={ $flatten\soc_inst.\eclass.\riscv.\stage1.\instance_chk_interrupt_0.$ternary$module_chk_interrupt.v:99$4363_Y [4:2] $flatten\soc_inst.\eclass.\riscv.\stage1.\instance_chk_interrupt_0.$ternary$module_chk_interrupt.v:99$4363_Y [0] }, B=4'0001, Y={ $flatten\soc_inst.\eclass.\riscv.\stage1.\instance_chk_interrupt_0.$ternary$module_chk_interrupt.v:97$4364_Y [4:2] $flatten\soc_inst.\eclass.\riscv.\stage1.\instance_chk_interrupt_0.$ternary$module_chk_interrupt.v:97$4364_Y [0] }
      New connections: $flatten\soc_inst.\eclass.\riscv.\stage1.\instance_chk_interrupt_0.$ternary$module_chk_interrupt.v:97$4364_Y [1] = $flatten\soc_inst.\eclass.\riscv.\stage1.\instance_chk_interrupt_0.$ternary$module_chk_interrupt.v:97$4364_Y [0]
    Consolidated identical input bits for $mux cell $flatten\soc_inst.\eclass.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:192$4454:
      Old ports: A=$flatten\soc_inst.\eclass.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:198$4453_Y, B=6'000010, Y=\soc_inst.eclass.riscv.stage1.instance_decoder_func_32_1.x__h4168
      New ports: A={ $flatten\soc_inst.\eclass.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:198$4453_Y [3] $flatten\soc_inst.\eclass.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:198$4453_Y [1:0] }, B=3'010, Y={ \soc_inst.eclass.riscv.stage1.instance_decoder_func_32_1.x__h4168 [3] \soc_inst.eclass.riscv.stage1.instance_decoder_func_32_1.x__h4168 [1:0] }
      New connections: { \soc_inst.eclass.riscv.stage1.instance_decoder_func_32_1.x__h4168 [5:4] \soc_inst.eclass.riscv.stage1.instance_decoder_func_32_1.x__h4168 [2] } = 3'000
  Optimizing cells in module \mkeclass_axi4.
    Consolidated identical input bits for $mux cell $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:258$4834:
      Old ports: A=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:260$4833_Y, B=5'10111, Y=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:258$4834_Y
      New ports: A={ 1'1 $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:260$4833_Y [2:0] }, B=4'0111, Y=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:258$4834_Y [3:0]
      New connections: $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:258$4834_Y [4] = 1'1
    Consolidated identical input bits for $mux cell $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:320$4864:
      Old ports: A=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:322$4863_Y, B=5'10111, Y=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:320$4864_Y
      New ports: A={ 1'1 $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:322$4863_Y [2:0] }, B=4'0111, Y=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:320$4864_Y [3:0]
      New connections: $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:320$4864_Y [4] = 1'1
    Consolidated identical input bits for $mux cell $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:384$4895:
      Old ports: A=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:386$4894_Y, B=5'10111, Y=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:384$4895_Y
      New ports: A={ 1'1 $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:386$4894_Y [2:0] }, B=4'0111, Y=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:384$4895_Y [3:0]
      New connections: $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:384$4895_Y [4] = 1'1
    Consolidated identical input bits for $mux cell $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:447$4928:
      Old ports: A=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:449$4927_Y, B=5'10110, Y=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:447$4928_Y
      New ports: A=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:449$4927_Y [3:0], B=4'0110, Y=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:447$4928_Y [3:0]
      New connections: $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:447$4928_Y [4] = 1'1
    Consolidated identical input bits for $mux cell $flatten\soc_inst.\eclass.\riscv.\stage1.\instance_chk_interrupt_0.$ternary$module_chk_interrupt.v:95$4365:
      Old ports: A=$flatten\soc_inst.\eclass.\riscv.\stage1.\instance_chk_interrupt_0.$ternary$module_chk_interrupt.v:97$4364_Y, B=5'01011, Y=\soc_inst.eclass.riscv.stage1.func_cause___1__h3699 [4:0]
      New ports: A={ $flatten\soc_inst.\eclass.\riscv.\stage1.\instance_chk_interrupt_0.$ternary$module_chk_interrupt.v:97$4364_Y [4:2] $flatten\soc_inst.\eclass.\riscv.\stage1.\instance_chk_interrupt_0.$ternary$module_chk_interrupt.v:97$4364_Y [0] }, B=4'0101, Y={ \soc_inst.eclass.riscv.stage1.func_cause___1__h3699 [4:2] \soc_inst.eclass.riscv.stage1.func_cause___1__h3699 [0] }
      New connections: \soc_inst.eclass.riscv.stage1.func_cause___1__h3699 [1] = \soc_inst.eclass.riscv.stage1.func_cause___1__h3699 [0]
  Optimizing cells in module \mkeclass_axi4.
    Consolidated identical input bits for $mux cell $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:256$4835:
      Old ports: A=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:258$4834_Y, B=5'10110, Y=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:256$4835_Y
      New ports: A=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:258$4834_Y [3:0], B=4'0110, Y=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:256$4835_Y [3:0]
      New connections: $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:256$4835_Y [4] = 1'1
    Consolidated identical input bits for $mux cell $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:318$4865:
      Old ports: A=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:320$4864_Y, B=5'10110, Y=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:318$4865_Y
      New ports: A=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:320$4864_Y [3:0], B=4'0110, Y=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:318$4865_Y [3:0]
      New connections: $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:318$4865_Y [4] = 1'1
    Consolidated identical input bits for $mux cell $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:382$4896:
      Old ports: A=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:384$4895_Y, B=5'10110, Y=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:382$4896_Y
      New ports: A=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:384$4895_Y [3:0], B=4'0110, Y=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:382$4896_Y [3:0]
      New connections: $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:382$4896_Y [4] = 1'1
    Consolidated identical input bits for $mux cell $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:445$4929:
      Old ports: A=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:447$4928_Y, B=5'10101, Y=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:445$4929_Y
      New ports: A=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:447$4928_Y [3:0], B=4'0101, Y=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:445$4929_Y [3:0]
      New connections: $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:445$4929_Y [4] = 1'1
  Optimizing cells in module \mkeclass_axi4.
    Consolidated identical input bits for $mux cell $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:254$4836:
      Old ports: A=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:256$4835_Y, B=5'10101, Y=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:254$4836_Y
      New ports: A=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:256$4835_Y [3:0], B=4'0101, Y=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:254$4836_Y [3:0]
      New connections: $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:254$4836_Y [4] = 1'1
    Consolidated identical input bits for $mux cell $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:316$4866:
      Old ports: A=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:318$4865_Y, B=5'10101, Y=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:316$4866_Y
      New ports: A=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:318$4865_Y [3:0], B=4'0101, Y=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:316$4866_Y [3:0]
      New connections: $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:316$4866_Y [4] = 1'1
    Consolidated identical input bits for $mux cell $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:380$4897:
      Old ports: A=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:382$4896_Y, B=5'10101, Y=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:380$4897_Y
      New ports: A=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:382$4896_Y [3:0], B=4'0101, Y=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:380$4897_Y [3:0]
      New connections: $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:380$4897_Y [4] = 1'1
    Consolidated identical input bits for $mux cell $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:443$4930:
      Old ports: A=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:445$4929_Y, B=5'10100, Y=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:443$4930_Y
      New ports: A=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:445$4929_Y [3:0], B=4'0100, Y=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:443$4930_Y [3:0]
      New connections: $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:443$4930_Y [4] = 1'1
  Optimizing cells in module \mkeclass_axi4.
    Consolidated identical input bits for $mux cell $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:252$4837:
      Old ports: A=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:254$4836_Y, B=5'10100, Y=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:252$4837_Y
      New ports: A=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:254$4836_Y [3:0], B=4'0100, Y=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:252$4837_Y [3:0]
      New connections: $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:252$4837_Y [4] = 1'1
    Consolidated identical input bits for $mux cell $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:314$4867:
      Old ports: A=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:316$4866_Y, B=5'10100, Y=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:314$4867_Y
      New ports: A=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:316$4866_Y [3:0], B=4'0100, Y=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:314$4867_Y [3:0]
      New connections: $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:314$4867_Y [4] = 1'1
    Consolidated identical input bits for $mux cell $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:378$4898:
      Old ports: A=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:380$4897_Y, B=5'10100, Y=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:378$4898_Y
      New ports: A=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:380$4897_Y [3:0], B=4'0100, Y=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:378$4898_Y [3:0]
      New connections: $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:378$4898_Y [4] = 1'1
    Consolidated identical input bits for $mux cell $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:441$4931:
      Old ports: A=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:443$4930_Y, B=5'10011, Y=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:441$4931_Y
      New ports: A=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:443$4930_Y [3:0], B=4'0011, Y=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:441$4931_Y [3:0]
      New connections: $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:441$4931_Y [4] = 1'1
  Optimizing cells in module \mkeclass_axi4.
    Consolidated identical input bits for $mux cell $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:250$4838:
      Old ports: A=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:252$4837_Y, B=5'10011, Y=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:250$4838_Y
      New ports: A=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:252$4837_Y [3:0], B=4'0011, Y=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:250$4838_Y [3:0]
      New connections: $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:250$4838_Y [4] = 1'1
    Consolidated identical input bits for $mux cell $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:312$4868:
      Old ports: A=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:314$4867_Y, B=5'10011, Y=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:312$4868_Y
      New ports: A=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:314$4867_Y [3:0], B=4'0011, Y=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:312$4868_Y [3:0]
      New connections: $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:312$4868_Y [4] = 1'1
    Consolidated identical input bits for $mux cell $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:376$4899:
      Old ports: A=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:378$4898_Y, B=5'10011, Y=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:376$4899_Y
      New ports: A=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:378$4898_Y [3:0], B=4'0011, Y=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:376$4899_Y [3:0]
      New connections: $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:376$4899_Y [4] = 1'1
    Consolidated identical input bits for $mux cell $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:439$4932:
      Old ports: A=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:441$4931_Y, B=5'10010, Y=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:439$4932_Y
      New ports: A=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:441$4931_Y [3:0], B=4'0010, Y=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:439$4932_Y [3:0]
      New connections: $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:439$4932_Y [4] = 1'1
  Optimizing cells in module \mkeclass_axi4.
    Consolidated identical input bits for $mux cell $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:248$4839:
      Old ports: A=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:250$4838_Y, B=5'10010, Y=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:248$4839_Y
      New ports: A=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:250$4838_Y [3:0], B=4'0010, Y=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:248$4839_Y [3:0]
      New connections: $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:248$4839_Y [4] = 1'1
    Consolidated identical input bits for $mux cell $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:310$4869:
      Old ports: A=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:312$4868_Y, B=5'10010, Y=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:310$4869_Y
      New ports: A=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:312$4868_Y [3:0], B=4'0010, Y=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:310$4869_Y [3:0]
      New connections: $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:310$4869_Y [4] = 1'1
    Consolidated identical input bits for $mux cell $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:374$4900:
      Old ports: A=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:376$4899_Y, B=5'10010, Y=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:374$4900_Y
      New ports: A=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:376$4899_Y [3:0], B=4'0010, Y=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:374$4900_Y [3:0]
      New connections: $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:374$4900_Y [4] = 1'1
    Consolidated identical input bits for $mux cell $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:437$4933:
      Old ports: A=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:439$4932_Y, B=5'10001, Y=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:437$4933_Y
      New ports: A=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:439$4932_Y [3:0], B=4'0001, Y=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:437$4933_Y [3:0]
      New connections: $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:437$4933_Y [4] = 1'1
  Optimizing cells in module \mkeclass_axi4.
    Consolidated identical input bits for $mux cell $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:246$4840:
      Old ports: A=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:248$4839_Y, B=5'10001, Y=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:246$4840_Y
      New ports: A=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:248$4839_Y [3:0], B=4'0001, Y=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:246$4840_Y [3:0]
      New connections: $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:246$4840_Y [4] = 1'1
    Consolidated identical input bits for $mux cell $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:308$4870:
      Old ports: A=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:310$4869_Y, B=5'10001, Y=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:308$4870_Y
      New ports: A=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:310$4869_Y [3:0], B=4'0001, Y=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:308$4870_Y [3:0]
      New connections: $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:308$4870_Y [4] = 1'1
    Consolidated identical input bits for $mux cell $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:372$4901:
      Old ports: A=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:374$4900_Y, B=5'10001, Y=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:372$4901_Y
      New ports: A=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:374$4900_Y [3:0], B=4'0001, Y=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:372$4901_Y [3:0]
      New connections: $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:372$4901_Y [4] = 1'1
    Consolidated identical input bits for $mux cell $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:435$4934:
      Old ports: A=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:437$4933_Y, B=5'10000, Y=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:435$4934_Y
      New ports: A=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:437$4933_Y [3:0], B=4'0000, Y=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:435$4934_Y [3:0]
      New connections: $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:435$4934_Y [4] = 1'1
  Optimizing cells in module \mkeclass_axi4.
    Consolidated identical input bits for $mux cell $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:244$4841:
      Old ports: A=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:246$4840_Y, B=5'10000, Y=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:244$4841_Y
      New ports: A=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:246$4840_Y [3:0], B=4'0000, Y=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:244$4841_Y [3:0]
      New connections: $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:244$4841_Y [4] = 1'1
    Consolidated identical input bits for $mux cell $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:306$4871:
      Old ports: A=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:308$4870_Y, B=5'10000, Y=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:306$4871_Y
      New ports: A=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:308$4870_Y [3:0], B=4'0000, Y=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:306$4871_Y [3:0]
      New connections: $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:306$4871_Y [4] = 1'1
    Consolidated identical input bits for $mux cell $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:370$4902:
      Old ports: A=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:372$4901_Y, B=5'10000, Y=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:370$4902_Y
      New ports: A=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:372$4901_Y [3:0], B=4'0000, Y=$flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:370$4902_Y [3:0]
      New connections: $flatten\soc_inst.\eclass.\instance_fn_pmp_lookup_0.$ternary$module_fn_pmp_lookup.v:370$4902_Y [4] = 1'1
  Optimizing cells in module \mkeclass_axi4.
Performed a total of 124 changes.

52.29.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mkeclass_axi4'.
Removed a total of 0 cells.

52.29.6. Executing OPT_DFF pass (perform DFF optimizations).

52.29.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mkeclass_axi4..
Removed 0 unused cells and 101 unused wires.
<suppressed ~1 debug messages>

52.29.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module mkeclass_axi4.
<suppressed ~78 debug messages>

52.29.9. Rerunning OPT passes. (Maybe there is more to do..)

52.29.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mkeclass_axi4..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~359 debug messages>

52.29.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mkeclass_axi4.
Performed a total of 0 changes.

52.29.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mkeclass_axi4'.
Removed a total of 0 cells.

52.29.13. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $memory\soc_inst.eclass.riscv.stage1.integer_rf_rf.arr[9]$12258 ($dff) from module mkeclass_axi4 (D = \soc_inst.eclass.riscv.stage1.integer_rf_rf.D_IN, Q = \soc_inst.eclass.riscv.stage1.integer_rf_rf.arr[9]).
Adding EN signal on $memory\soc_inst.eclass.riscv.stage1.integer_rf_rf.arr[8]$12256 ($dff) from module mkeclass_axi4 (D = \soc_inst.eclass.riscv.stage1.integer_rf_rf.D_IN, Q = \soc_inst.eclass.riscv.stage1.integer_rf_rf.arr[8]).
Adding EN signal on $memory\soc_inst.eclass.riscv.stage1.integer_rf_rf.arr[7]$12254 ($dff) from module mkeclass_axi4 (D = \soc_inst.eclass.riscv.stage1.integer_rf_rf.D_IN, Q = \soc_inst.eclass.riscv.stage1.integer_rf_rf.arr[7]).
Adding EN signal on $memory\soc_inst.eclass.riscv.stage1.integer_rf_rf.arr[6]$12252 ($dff) from module mkeclass_axi4 (D = \soc_inst.eclass.riscv.stage1.integer_rf_rf.D_IN, Q = \soc_inst.eclass.riscv.stage1.integer_rf_rf.arr[6]).
Adding EN signal on $memory\soc_inst.eclass.riscv.stage1.integer_rf_rf.arr[5]$12250 ($dff) from module mkeclass_axi4 (D = \soc_inst.eclass.riscv.stage1.integer_rf_rf.D_IN, Q = \soc_inst.eclass.riscv.stage1.integer_rf_rf.arr[5]).
Adding EN signal on $memory\soc_inst.eclass.riscv.stage1.integer_rf_rf.arr[4]$12248 ($dff) from module mkeclass_axi4 (D = \soc_inst.eclass.riscv.stage1.integer_rf_rf.D_IN, Q = \soc_inst.eclass.riscv.stage1.integer_rf_rf.arr[4]).
Adding EN signal on $memory\soc_inst.eclass.riscv.stage1.integer_rf_rf.arr[3]$12246 ($dff) from module mkeclass_axi4 (D = \soc_inst.eclass.riscv.stage1.integer_rf_rf.D_IN, Q = \soc_inst.eclass.riscv.stage1.integer_rf_rf.arr[3]).
Adding EN signal on $memory\soc_inst.eclass.riscv.stage1.integer_rf_rf.arr[31]$12302 ($dff) from module mkeclass_axi4 (D = \soc_inst.eclass.riscv.stage1.integer_rf_rf.D_IN, Q = \soc_inst.eclass.riscv.stage1.integer_rf_rf.arr[31]).
Adding EN signal on $memory\soc_inst.eclass.riscv.stage1.integer_rf_rf.arr[30]$12300 ($dff) from module mkeclass_axi4 (D = \soc_inst.eclass.riscv.stage1.integer_rf_rf.D_IN, Q = \soc_inst.eclass.riscv.stage1.integer_rf_rf.arr[30]).
Adding EN signal on $memory\soc_inst.eclass.riscv.stage1.integer_rf_rf.arr[2]$12244 ($dff) from module mkeclass_axi4 (D = \soc_inst.eclass.riscv.stage1.integer_rf_rf.D_IN, Q = \soc_inst.eclass.riscv.stage1.integer_rf_rf.arr[2]).
Adding EN signal on $memory\soc_inst.eclass.riscv.stage1.integer_rf_rf.arr[29]$12298 ($dff) from module mkeclass_axi4 (D = \soc_inst.eclass.riscv.stage1.integer_rf_rf.D_IN, Q = \soc_inst.eclass.riscv.stage1.integer_rf_rf.arr[29]).
Adding EN signal on $memory\soc_inst.eclass.riscv.stage1.integer_rf_rf.arr[28]$12296 ($dff) from module mkeclass_axi4 (D = \soc_inst.eclass.riscv.stage1.integer_rf_rf.D_IN, Q = \soc_inst.eclass.riscv.stage1.integer_rf_rf.arr[28]).
Adding EN signal on $memory\soc_inst.eclass.riscv.stage1.integer_rf_rf.arr[27]$12294 ($dff) from module mkeclass_axi4 (D = \soc_inst.eclass.riscv.stage1.integer_rf_rf.D_IN, Q = \soc_inst.eclass.riscv.stage1.integer_rf_rf.arr[27]).
Adding EN signal on $memory\soc_inst.eclass.riscv.stage1.integer_rf_rf.arr[26]$12292 ($dff) from module mkeclass_axi4 (D = \soc_inst.eclass.riscv.stage1.integer_rf_rf.D_IN, Q = \soc_inst.eclass.riscv.stage1.integer_rf_rf.arr[26]).
Adding EN signal on $memory\soc_inst.eclass.riscv.stage1.integer_rf_rf.arr[25]$12290 ($dff) from module mkeclass_axi4 (D = \soc_inst.eclass.riscv.stage1.integer_rf_rf.D_IN, Q = \soc_inst.eclass.riscv.stage1.integer_rf_rf.arr[25]).
Adding EN signal on $memory\soc_inst.eclass.riscv.stage1.integer_rf_rf.arr[24]$12288 ($dff) from module mkeclass_axi4 (D = \soc_inst.eclass.riscv.stage1.integer_rf_rf.D_IN, Q = \soc_inst.eclass.riscv.stage1.integer_rf_rf.arr[24]).
Adding EN signal on $memory\soc_inst.eclass.riscv.stage1.integer_rf_rf.arr[23]$12286 ($dff) from module mkeclass_axi4 (D = \soc_inst.eclass.riscv.stage1.integer_rf_rf.D_IN, Q = \soc_inst.eclass.riscv.stage1.integer_rf_rf.arr[23]).
Adding EN signal on $memory\soc_inst.eclass.riscv.stage1.integer_rf_rf.arr[22]$12284 ($dff) from module mkeclass_axi4 (D = \soc_inst.eclass.riscv.stage1.integer_rf_rf.D_IN, Q = \soc_inst.eclass.riscv.stage1.integer_rf_rf.arr[22]).
Adding EN signal on $memory\soc_inst.eclass.riscv.stage1.integer_rf_rf.arr[21]$12282 ($dff) from module mkeclass_axi4 (D = \soc_inst.eclass.riscv.stage1.integer_rf_rf.D_IN, Q = \soc_inst.eclass.riscv.stage1.integer_rf_rf.arr[21]).
Adding EN signal on $memory\soc_inst.eclass.riscv.stage1.integer_rf_rf.arr[20]$12280 ($dff) from module mkeclass_axi4 (D = \soc_inst.eclass.riscv.stage1.integer_rf_rf.D_IN, Q = \soc_inst.eclass.riscv.stage1.integer_rf_rf.arr[20]).
Adding EN signal on $memory\soc_inst.eclass.riscv.stage1.integer_rf_rf.arr[1]$12242 ($dff) from module mkeclass_axi4 (D = \soc_inst.eclass.riscv.stage1.integer_rf_rf.D_IN, Q = \soc_inst.eclass.riscv.stage1.integer_rf_rf.arr[1]).
Adding EN signal on $memory\soc_inst.eclass.riscv.stage1.integer_rf_rf.arr[19]$12278 ($dff) from module mkeclass_axi4 (D = \soc_inst.eclass.riscv.stage1.integer_rf_rf.D_IN, Q = \soc_inst.eclass.riscv.stage1.integer_rf_rf.arr[19]).
Adding EN signal on $memory\soc_inst.eclass.riscv.stage1.integer_rf_rf.arr[18]$12276 ($dff) from module mkeclass_axi4 (D = \soc_inst.eclass.riscv.stage1.integer_rf_rf.D_IN, Q = \soc_inst.eclass.riscv.stage1.integer_rf_rf.arr[18]).
Adding EN signal on $memory\soc_inst.eclass.riscv.stage1.integer_rf_rf.arr[17]$12274 ($dff) from module mkeclass_axi4 (D = \soc_inst.eclass.riscv.stage1.integer_rf_rf.D_IN, Q = \soc_inst.eclass.riscv.stage1.integer_rf_rf.arr[17]).
Adding EN signal on $memory\soc_inst.eclass.riscv.stage1.integer_rf_rf.arr[16]$12272 ($dff) from module mkeclass_axi4 (D = \soc_inst.eclass.riscv.stage1.integer_rf_rf.D_IN, Q = \soc_inst.eclass.riscv.stage1.integer_rf_rf.arr[16]).
Adding EN signal on $memory\soc_inst.eclass.riscv.stage1.integer_rf_rf.arr[15]$12270 ($dff) from module mkeclass_axi4 (D = \soc_inst.eclass.riscv.stage1.integer_rf_rf.D_IN, Q = \soc_inst.eclass.riscv.stage1.integer_rf_rf.arr[15]).
Adding EN signal on $memory\soc_inst.eclass.riscv.stage1.integer_rf_rf.arr[14]$12268 ($dff) from module mkeclass_axi4 (D = \soc_inst.eclass.riscv.stage1.integer_rf_rf.D_IN, Q = \soc_inst.eclass.riscv.stage1.integer_rf_rf.arr[14]).
Adding EN signal on $memory\soc_inst.eclass.riscv.stage1.integer_rf_rf.arr[13]$12266 ($dff) from module mkeclass_axi4 (D = \soc_inst.eclass.riscv.stage1.integer_rf_rf.D_IN, Q = \soc_inst.eclass.riscv.stage1.integer_rf_rf.arr[13]).
Adding EN signal on $memory\soc_inst.eclass.riscv.stage1.integer_rf_rf.arr[12]$12264 ($dff) from module mkeclass_axi4 (D = \soc_inst.eclass.riscv.stage1.integer_rf_rf.D_IN, Q = \soc_inst.eclass.riscv.stage1.integer_rf_rf.arr[12]).
Adding EN signal on $memory\soc_inst.eclass.riscv.stage1.integer_rf_rf.arr[11]$12262 ($dff) from module mkeclass_axi4 (D = \soc_inst.eclass.riscv.stage1.integer_rf_rf.D_IN, Q = \soc_inst.eclass.riscv.stage1.integer_rf_rf.arr[11]).
Adding EN signal on $memory\soc_inst.eclass.riscv.stage1.integer_rf_rf.arr[10]$12260 ($dff) from module mkeclass_axi4 (D = \soc_inst.eclass.riscv.stage1.integer_rf_rf.D_IN, Q = \soc_inst.eclass.riscv.stage1.integer_rf_rf.arr[10]).
Adding EN signal on $memory\soc_inst.eclass.riscv.stage1.integer_rf_rf.arr[0]$12240 ($dff) from module mkeclass_axi4 (D = \soc_inst.eclass.riscv.stage1.integer_rf_rf.D_IN, Q = \soc_inst.eclass.riscv.stage1.integer_rf_rf.arr[0]).
Adding SRST signal on $auto$ff.cc:266:slice$9669 ($dffe) from module mkeclass_axi4 (D = \soc_inst.eclass.riscv.stage1.final_instruction__h3569 [30:25], Q = \soc_inst.eclass.riscv.fifof_2.D_OUT [17:12], rval = 6'000000).
Setting constant 0-bit at position 4 on $auto$ff.cc:266:slice$8861 ($dffe) from module mkeclass_axi4.
Setting constant 0-bit at position 37 on $auto$ff.cc:266:slice$8888 ($dffe) from module mkeclass_axi4.
Setting constant 0-bit at position 4 on $auto$ff.cc:266:slice$8906 ($dffe) from module mkeclass_axi4.
Setting constant 0-bit at position 4 on $auto$ff.cc:266:slice$9794 ($dffe) from module mkeclass_axi4.
Setting constant 0-bit at position 37 on $auto$ff.cc:266:slice$9821 ($dffe) from module mkeclass_axi4.

52.29.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mkeclass_axi4..
Removed 33 unused cells and 51 unused wires.
<suppressed ~34 debug messages>

52.29.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module mkeclass_axi4.
<suppressed ~71 debug messages>

52.29.16. Rerunning OPT passes. (Maybe there is more to do..)

52.29.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mkeclass_axi4..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~326 debug messages>

52.29.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mkeclass_axi4.
Performed a total of 0 changes.

52.29.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mkeclass_axi4'.
Removed a total of 0 cells.

52.29.20. Executing OPT_DFF pass (perform DFF optimizations).

52.29.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mkeclass_axi4..
Removed 0 unused cells and 20 unused wires.
<suppressed ~1 debug messages>

52.29.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module mkeclass_axi4.

52.29.23. Rerunning OPT passes. (Maybe there is more to do..)

52.29.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mkeclass_axi4..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~326 debug messages>

52.29.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mkeclass_axi4.
Performed a total of 0 changes.

52.29.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mkeclass_axi4'.
Removed a total of 0 cells.

52.29.27. Executing OPT_DFF pass (perform DFF optimizations).

52.29.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mkeclass_axi4..

52.29.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module mkeclass_axi4.

52.29.30. Finished OPT passes. (There is nothing left to do.)

52.30. Executing ICE40_WRAPCARRY pass (wrap carries).

52.31. Executing TECHMAP pass (map to technology primitives).

52.31.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/techmap.v
Parsing Verilog input from `/usr/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

52.31.2. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/ice40/arith_map.v
Parsing Verilog input from `/usr/bin/../share/yosys/ice40/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_ice40_alu'.
Successfully finished Verilog frontend.

52.31.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $dffe.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $reduce_bool.
Using template $paramod$constmap:50beb7f8a0f590681236d4b2bc115cbfc3e69317$paramod$68f168e58a83a45422011879ee1f7206dbcf7552\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
Using extmapper simplemap for cells of type $ne.
Using extmapper simplemap for cells of type $sdffce.
Using extmapper simplemap for cells of type $lut.
Using extmapper simplemap for cells of type $logic_or.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $logic_and.
Using extmapper simplemap for cells of type $adffe.
Using extmapper simplemap for cells of type $sdffe.
Using template $paramod$constmap:02ee4fad4c1ffc2bbdc3e6fbc37bedbf9185352a$paramod$feecc7a0dbd012970970f2858f15e786e251f677\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
Using template $paramod$521ce43182eecb9f60c72393a788160d2c356bf5\_90_pmux for cells of type $pmux.
Using template $paramod$constmap:6e3026a439ed4a6e7983ca0e910890cc59b2f7b2$paramod$7b0bb309dce042ecaf2e0bfa495da988fc49fdf1\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod$cc1e387d9d5ac1d3f6e6bed180038d9c0ac48d0c\_90_pmux for cells of type $pmux.
Using extmapper simplemap for cells of type $adff.
Using template $paramod$fbc7873bff55778c0b3173955b7e4bce1d9d6834\_80_ice40_alu for cells of type $alu.
Using template $paramod$9fe62a4b81638d72bc060d25c78265035b9c879a\_80_ice40_alu for cells of type $alu.
Using template $paramod$403d07c18de10cda2ac652a859c56aea81aaf9b5\_80_ice40_alu for cells of type $alu.
Using template $paramod$672a140277c71df8314410f22acc08d55222c3c7\_80_ice40_alu for cells of type $alu.
Using template $paramod$d629d85c8826a74239b9178d1930215a43b0ceb0\_90_pmux for cells of type $pmux.
Using template $paramod$c5c783b17ab1d780abfad8cfe6563a0a7b47a3b0\_90_pmux for cells of type $pmux.
Using template $paramod$20d3ee62d72123142eb855d7ddafd835e31ba009\_90_pmux for cells of type $pmux.
Using template $paramod$c2e415ef15bc3ccd2723772353a6b450d3d76206\_90_pmux for cells of type $pmux.
Using template $paramod$bf2533632d512eac76dd186c0da49367e29b8e98\_90_pmux for cells of type $pmux.
Using template $paramod$d31bf4d7d72e59528d18fbd4f322e9d608532043\_90_pmux for cells of type $pmux.
Using template $paramod$97565c3687be688407d1272a293bd9d0ae6852dc\_90_pmux for cells of type $pmux.
Using template $paramod$068ad458e7761d78e5eed8238508872e7b0aef95\_90_pmux for cells of type $pmux.
Using template $paramod$85df5dc01c7df96a7d8e5f1fdf76ce9ac452af63\_90_pmux for cells of type $pmux.
Using template $paramod$32e7c4d6f92ff4337599ece53082d2e88a82a9f2\_90_pmux for cells of type $pmux.
Using extmapper simplemap for cells of type $xor.
Using template $paramod$54d740639e1393b22262823179ff783ea9f17a35\_90_pmux for cells of type $pmux.
Using template $paramod$cc6a978c1b57cdb49efcec348c88d8e28bf1a01f\_80_ice40_alu for cells of type $alu.
Using template $paramod$c96def1cdcef2eee3c62e5dfb7ba2dd09c9f74dd\_90_pmux for cells of type $pmux.
Using template $paramod$bcc5e0729ef7ddc4f2c588a0dfea749c27d6eb1b\_90_pmux for cells of type $pmux.
Using template $paramod$constmap:9ba9f4309239522085496b2c371c432a0b9ca5e6$paramod$88220afe974a8e62848f58c97beb698051e348b7\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
Analyzing pattern of constant bits for this cell:
Creating constmapped module `$paramod$constmap:87f69c0bea22f84de4bcd0314b57cb19e61b5eb7$paramod$88220afe974a8e62848f58c97beb698051e348b7\_90_shift_ops_shr_shl_sshl_sshr'.

52.31.64. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$constmap:87f69c0bea22f84de4bcd0314b57cb19e61b5eb7$paramod$88220afe974a8e62848f58c97beb698051e348b7\_90_shift_ops_shr_shl_sshl_sshr..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.
<suppressed ~4027 debug messages>

52.31.65. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$constmap:87f69c0bea22f84de4bcd0314b57cb19e61b5eb7$paramod$88220afe974a8e62848f58c97beb698051e348b7\_90_shift_ops_shr_shl_sshl_sshr.
<suppressed ~330 debug messages>
Removed 1 unused cells and 14 unused wires.
Using template $paramod$constmap:87f69c0bea22f84de4bcd0314b57cb19e61b5eb7$paramod$88220afe974a8e62848f58c97beb698051e348b7\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
Using template $paramod$7e708ae28ab761f11d0fb59d3ffc72f6a4baf5d9\_90_alu for cells of type $alu.
Using template $paramod$constmap:2fa89c042fe388f5864c81d3cff010b45bf5519d$paramod$18febe69ec243c98cb63c578554336cbbf043798\_90_shift_shiftx for cells of type $shiftx.
Using template $paramod$cc80a4e89b0341cb117f5d28b0e7244620640141\_80_ice40_alu for cells of type $alu.
Using template $paramod$constmap:59d930a2422782b39b85cd49134a384b3d87fce0$paramod$8d68390c0398b9972fb6a9484524073285288f67\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
Using template $paramod$constmap:6b9777bb5df0e66ccbc1f4daffef7a239cd884ad$paramod$b5d8364c73f9330c8e8737de781a45992fc5e8b2\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
Using template $paramod$44a13d10af618e7fbe7b9aad2f6151ffcee1e2fa\_80_ice40_alu for cells of type $alu.
Using template $paramod$3636e5d13d08d3cf711b7983cc61849c8abc3f53\_80_ice40_alu for cells of type $alu.
Using template $paramod$8fabc56b80a569262acfc42757a02ca0b8e91278\_90_pmux for cells of type $pmux.
Using template $paramod$7c0956d121d98a910feb1dd34cda17bc51c907b5\_90_pmux for cells of type $pmux.
Using template $paramod$c85f7f36eaf20b9dfdd10e675753f6620fd8e4e5\_80_ice40_alu for cells of type $alu.
Using template $paramod$constmap:17cafde4e8bd17cee1aaf590211d797327f3ddf6$paramod$335cfd09f1afa8139c4aafcbbe5f361887b79c5e\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod$3ef7d3dd227da7627a99c5e5a6a4deb817573e39\_80_ice40_alu for cells of type $alu.
Using template $paramod$c04af8dbf0e5d1d69bbccb2c7bd8a93fc9ef54dc\_80_ice40_alu for cells of type $alu.
Using template $paramod$f85408ed1aa3d09e465edae8a7bf590332ae9f7b\_80_ice40_alu for cells of type $alu.
Using template $paramod$2af30114e9bd4ccb04dad757b3f0a8f6bf0615b0\_80_ice40_alu for cells of type $alu.
Using template $paramod$32a7b7b86c07519b7537abc18e96f0331f97914d\_80_ice40_alu for cells of type $alu.
Using extmapper simplemap for cells of type $sdff.
Using template $paramod$f3115659d5e2977ebd2cb01ff3557fc5f6187689\_90_pmux for cells of type $pmux.
Using template $paramod$7ac9efd35edb6c2978c203f01c00a202ec61111b\_90_pmux for cells of type $pmux.
Using template $paramod$46a02b1c1dc33fbe579e0ec98419823d3d4fe4be\_90_pmux for cells of type $pmux.
Using template $paramod$0d149ffe75563ef6fcc1a3dddc59d00af28651a7\_90_pmux for cells of type $pmux.
Using template $paramod$c3cd1564c35d873179656addd6052d7ea8b6d991\_80_ice40_alu for cells of type $alu.
Using template $paramod$039520c137afc9cd69dd56c3fb11a4e1fbe5f664\_80_ice40_alu for cells of type $alu.
Using template $paramod$c8f9642fe0e0f4527ea400b1bd678c474f53d556\_80_ice40_alu for cells of type $alu.
Using template $paramod$2780480d52179e2db572a6e5133edf36e733d32e\_80_ice40_alu for cells of type $alu.
Using template $paramod$420fbc8134b4c458452de534da94701c18f4eecd\_80_ice40_alu for cells of type $alu.
Using template $paramod$dd7e7d5c03aea134912316b6b5bb7a107010ead9\_80_ice40_alu for cells of type $alu.
Using template $paramod$33acca59acb78d0be1d2963f30b104550f2b2c75\_80_ice40_alu for cells of type $alu.
Using template $paramod$d066be84df89d36f73a08cc506728c5d3fb9157b\_80_ice40_alu for cells of type $alu.
Using template $paramod$6df0329addda9228fcc2546de2aaf14ad26c98e1\_80_ice40_alu for cells of type $alu.
Using template $paramod$fc972a7a46956c1788f3cb5257b53c8f1df2d0cc\_90_alu for cells of type $alu.
Using template $paramod$3111a1a8e90c88cc8c163ba5aed0203d96ddc46d\_80_ice40_alu for cells of type $alu.
Using template $paramod$a54505a20ae3d90601910914642f49e8f9eb7e29\_80_ice40_alu for cells of type $alu.
Using template $paramod$constmap:30bc56e9f9bd3358cf27a309d7afa937caaea487$paramod$da1b9d25017ab9fffdd54bedbb1540b15f92e8df\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000010 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000001 for cells of type $lcu.
No more expansions possible.
<suppressed ~8081 debug messages>

52.32. Executing OPT pass (performing simple optimizations).

52.32.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module mkeclass_axi4.
<suppressed ~9674 debug messages>

52.32.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mkeclass_axi4'.
<suppressed ~13548 debug messages>
Removed a total of 4516 cells.

52.32.3. Executing OPT_DFF pass (perform DFF optimizations).

52.32.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mkeclass_axi4..
Removed 7096 unused cells and 7229 unused wires.
<suppressed ~7121 debug messages>

52.32.5. Finished fast OPT passes.

52.33. Executing ICE40_OPT pass (performing simple optimizations).

52.33.1. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) mkeclass_axi4.$auto$alumacc.cc:485:replace_alu$10040.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$10040.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) mkeclass_axi4.$auto$alumacc.cc:485:replace_alu$10257.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$10257.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) mkeclass_axi4.$auto$alumacc.cc:485:replace_alu$10268.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$10257.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) mkeclass_axi4.$auto$alumacc.cc:485:replace_alu$10279.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$10257.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) mkeclass_axi4.$auto$alumacc.cc:485:replace_alu$10290.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$10257.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) mkeclass_axi4.$auto$alumacc.cc:485:replace_alu$10306.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$10306.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) mkeclass_axi4.$auto$alumacc.cc:485:replace_alu$10317.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$10306.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) mkeclass_axi4.$auto$alumacc.cc:485:replace_alu$10328.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$10306.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) mkeclass_axi4.$auto$alumacc.cc:485:replace_alu$10339.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$10306.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) mkeclass_axi4.$auto$alumacc.cc:485:replace_alu$10409.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$10409.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) mkeclass_axi4.$auto$alumacc.cc:485:replace_alu$10420.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$10409.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) mkeclass_axi4.$auto$alumacc.cc:485:replace_alu$10431.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$10409.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) mkeclass_axi4.$auto$alumacc.cc:485:replace_alu$10442.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$10409.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) mkeclass_axi4.$auto$alumacc.cc:485:replace_alu$10513.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$10513.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) mkeclass_axi4.$auto$alumacc.cc:485:replace_alu$10524.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$10513.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) mkeclass_axi4.$auto$alumacc.cc:485:replace_alu$10535.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$10513.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) mkeclass_axi4.$auto$alumacc.cc:485:replace_alu$10546.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$10513.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) mkeclass_axi4.$auto$alumacc.cc:485:replace_alu$10562.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$10257.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) mkeclass_axi4.$auto$alumacc.cc:485:replace_alu$10575.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$10257.BB [18]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) mkeclass_axi4.$auto$alumacc.cc:485:replace_alu$10588.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$10257.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) mkeclass_axi4.$auto$alumacc.cc:485:replace_alu$10601.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$10257.BB [12]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) mkeclass_axi4.$auto$alumacc.cc:485:replace_alu$10614.slice[0].carry: CO=\soc_inst.fabric_xactors_from_masters_1_f_wr_addr.data0_reg [20]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) mkeclass_axi4.$auto$alumacc.cc:485:replace_alu$10623.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$10306.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) mkeclass_axi4.$auto$alumacc.cc:485:replace_alu$10636.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$10306.BB [18]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) mkeclass_axi4.$auto$alumacc.cc:485:replace_alu$10649.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$10306.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) mkeclass_axi4.$auto$alumacc.cc:485:replace_alu$10662.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$10306.BB [12]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) mkeclass_axi4.$auto$alumacc.cc:485:replace_alu$10675.slice[0].carry: CO=\soc_inst.fabric_xactors_from_masters_1_f_rd_addr.data0_reg [20]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) mkeclass_axi4.$auto$alumacc.cc:485:replace_alu$10745.slice[0].carry: CO=\soc_inst.fabric_xactors_from_masters_0_f_rd_addr.data0_reg [20]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) mkeclass_axi4.$auto$alumacc.cc:485:replace_alu$10754.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$10409.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) mkeclass_axi4.$auto$alumacc.cc:485:replace_alu$10767.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$10409.BB [18]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) mkeclass_axi4.$auto$alumacc.cc:485:replace_alu$10780.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$10409.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) mkeclass_axi4.$auto$alumacc.cc:485:replace_alu$10793.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$10409.BB [12]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) mkeclass_axi4.$auto$alumacc.cc:485:replace_alu$10806.slice[0].carry: CO=\soc_inst.clint_rg_rdpacket [20]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) mkeclass_axi4.$auto$alumacc.cc:485:replace_alu$10815.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$10815.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) mkeclass_axi4.$auto$alumacc.cc:485:replace_alu$10828.slice[0].carry: CO=\soc_inst.clint_s_xactor_f_rd_addr.data0_reg [20]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) mkeclass_axi4.$auto$alumacc.cc:485:replace_alu$10837.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$10837.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) mkeclass_axi4.$auto$alumacc.cc:485:replace_alu$10850.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$10850.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) mkeclass_axi4.$auto$alumacc.cc:485:replace_alu$10924.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$10513.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) mkeclass_axi4.$auto$alumacc.cc:485:replace_alu$10937.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$10513.BB [18]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) mkeclass_axi4.$auto$alumacc.cc:485:replace_alu$10950.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$10513.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) mkeclass_axi4.$auto$alumacc.cc:485:replace_alu$10963.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$10513.BB [12]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) mkeclass_axi4.$auto$alumacc.cc:485:replace_alu$10976.slice[0].carry: CO=\soc_inst.fabric_xactors_from_masters_2_f_rd_addr.data0_reg [20]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) mkeclass_axi4.$auto$alumacc.cc:485:replace_alu$10985.slice[0].carry: CO=\soc_inst.clint_rg_rdpacket [23]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) mkeclass_axi4.$auto$alumacc.cc:485:replace_alu$10998.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$10998.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) mkeclass_axi4.$auto$alumacc.cc:485:replace_alu$11007.slice[0].carry: CO=\soc_inst.clint_s_xactor_f_rd_addr.data0_reg [23]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) mkeclass_axi4.$auto$alumacc.cc:485:replace_alu$11020.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$11020.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) mkeclass_axi4.$auto$alumacc.cc:485:replace_alu$11029.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$11029.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) mkeclass_axi4.$auto$alumacc.cc:485:replace_alu$11047.slice[0].carry: CO=\soc_inst.uart_user_ifc_uart_baudGen_rBaudCounter.q_state [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) mkeclass_axi4.$auto$alumacc.cc:485:replace_alu$11050.slice[0].carry: CO=\soc_inst.uart_user_ifc_uart_rRecvCellCount [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) mkeclass_axi4.$auto$alumacc.cc:485:replace_alu$11053.slice[0].carry: CO=\soc_inst.uart_user_ifc_uart_rRecvBitCount [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) mkeclass_axi4.$auto$alumacc.cc:485:replace_alu$11056.slice[0].carry: CO=\soc_inst.uart_user_ifc_uart_rXmitCellCount [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) mkeclass_axi4.$auto$alumacc.cc:485:replace_alu$11059.slice[0].carry: CO=\soc_inst.uart_user_ifc_uart_rXmitBitCount [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) mkeclass_axi4.$auto$alumacc.cc:485:replace_alu$11062.slice[0].carry: CO=\soc_inst.uart_rg_rdburst_count [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) mkeclass_axi4.$auto$alumacc.cc:485:replace_alu$11065.slice[0].carry: CO=\soc_inst.uart_rg_wrburst_count [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) mkeclass_axi4.$auto$alumacc.cc:485:replace_alu$11068.slice[0].carry: CO=\soc_inst.clint_rg_rdburst_count [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) mkeclass_axi4.$auto$alumacc.cc:485:replace_alu$11071.slice[0].carry: CO=\soc_inst.err_slave_rg_readburst_counter [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) mkeclass_axi4.$auto$alumacc.cc:485:replace_alu$11074.slice[0].carry: CO=\soc_inst.clint_clint_rg_tick [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) mkeclass_axi4.$auto$alumacc.cc:485:replace_alu$11077.slice[0].carry: CO=\soc_inst.clint_clint_rgmtime [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) mkeclass_axi4.$auto$alumacc.cc:485:replace_alu$11080.slice[0].carry: CO=\soc_inst.eclass.riscv.stage1.rg_fabric_request [2]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) mkeclass_axi4.$auto$alumacc.cc:485:replace_alu$11086.slice[0].carry: CO=\soc_inst.eclass.riscv.stage1.rg_pc [2]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) mkeclass_axi4.$auto$alumacc.cc:485:replace_alu$11089.slice[0].carry: CO=\soc_inst.eclass.riscv.stage1.rg_index [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) mkeclass_axi4.$auto$alumacc.cc:485:replace_alu$11095.slice[0].carry: CO=\soc_inst.eclass.riscv.fifof_2.D_OUT [4]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) mkeclass_axi4.$auto$alumacc.cc:485:replace_alu$11107.slice[0].carry: CO=\soc_inst.eclass.riscv.stage3.csr.csrfile.minstret [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) mkeclass_axi4.$auto$alumacc.cc:485:replace_alu$11110.slice[0].carry: CO=\soc_inst.eclass.riscv.stage3.csr.csrfile.mcycle [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) mkeclass_axi4.$auto$alumacc.cc:485:replace_alu$11113.slice[0].carry: CO=\soc_inst.signature.rg_start_address [2]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) mkeclass_axi4.$auto$alumacc.cc:485:replace_alu$11116.slice[0].carry: CO=\soc_inst.signature.rg_cnt [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) mkeclass_axi4.$auto$alumacc.cc:485:replace_alu$11126.slice[0].carry: CO=\soc_inst.signature.rg_total_count [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) mkeclass_axi4.$auto$alumacc.cc:485:replace_alu$11129.slice[0].carry: CO=\soc_inst.signature.ff_lower_order_bits.tail [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) mkeclass_axi4.$auto$alumacc.cc:485:replace_alu$11132.slice[0].carry: CO=\soc_inst.signature.ff_lower_order_bits.head [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) mkeclass_axi4.$auto$alumacc.cc:485:replace_alu$11138.slice[0].carry: CO=\soc_inst.uart_user_ifc_uart_fifoRecv.tail [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) mkeclass_axi4.$auto$alumacc.cc:485:replace_alu$11141.slice[0].carry: CO=\soc_inst.uart_user_ifc_uart_fifoRecv.head [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) mkeclass_axi4.$auto$alumacc.cc:485:replace_alu$11144.slice[0].carry: CO=\soc_inst.uart_user_ifc_uart_fifoXmit.tail [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) mkeclass_axi4.$auto$alumacc.cc:485:replace_alu$11147.slice[0].carry: CO=\soc_inst.uart_user_ifc_uart_fifoXmit.head [0]

52.33.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module mkeclass_axi4.
<suppressed ~1757 debug messages>

52.33.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mkeclass_axi4'.
<suppressed ~60 debug messages>
Removed a total of 20 cells.

52.33.4. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $auto$ff.cc:266:slice$22206 ($_DFFE_PP_) from module mkeclass_axi4 (D = $flatten\soc_inst.\eclass.\riscv.\stage2.$procmux$7176.Y_B [48], Q = \soc_inst.eclass.riscv.fifof_4.D_OUT [48], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$22205 ($_DFFE_PP_) from module mkeclass_axi4 (D = $flatten\soc_inst.\eclass.\riscv.\stage2.$procmux$7176.Y_B [47], Q = \soc_inst.eclass.riscv.fifof_4.D_OUT [47], rval = 1'1).
Adding SRST signal on $auto$ff.cc:266:slice$22204 ($_DFFE_PP_) from module mkeclass_axi4 (D = $flatten\soc_inst.\eclass.\riscv.\stage2.$procmux$7176.Y_B [46], Q = \soc_inst.eclass.riscv.fifof_4.D_OUT [46], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$22203 ($_DFFE_PP_) from module mkeclass_axi4 (D = $flatten\soc_inst.\eclass.\riscv.\stage2.$procmux$7176.Y_B [45], Q = \soc_inst.eclass.riscv.fifof_4.D_OUT [45], rval = 1'1).
Adding SRST signal on $auto$ff.cc:266:slice$22202 ($_DFFE_PP_) from module mkeclass_axi4 (D = $flatten\soc_inst.\eclass.\riscv.\stage2.$procmux$7176.Y_B [44], Q = \soc_inst.eclass.riscv.fifof_4.D_OUT [44], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$22201 ($_DFFE_PP_) from module mkeclass_axi4 (D = $flatten\soc_inst.\eclass.\riscv.\stage2.$procmux$7176.Y_B [43], Q = \soc_inst.eclass.riscv.fifof_4.D_OUT [43], rval = 1'1).
Adding SRST signal on $auto$ff.cc:266:slice$22200 ($_DFFE_PP_) from module mkeclass_axi4 (D = $flatten\soc_inst.\eclass.\riscv.\stage2.$procmux$7176.Y_B [42], Q = \soc_inst.eclass.riscv.fifof_4.D_OUT [42], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$22199 ($_DFFE_PP_) from module mkeclass_axi4 (D = $flatten\soc_inst.\eclass.\riscv.\stage2.$procmux$7176.Y_B [41], Q = \soc_inst.eclass.riscv.fifof_4.D_OUT [41], rval = 1'1).
Adding SRST signal on $auto$ff.cc:266:slice$22198 ($_DFFE_PP_) from module mkeclass_axi4 (D = $flatten\soc_inst.\eclass.\riscv.\stage2.$procmux$7176.Y_B [40], Q = \soc_inst.eclass.riscv.fifof_4.D_OUT [40], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$22197 ($_DFFE_PP_) from module mkeclass_axi4 (D = $flatten\soc_inst.\eclass.\riscv.\stage2.$procmux$7176.Y_B [39], Q = \soc_inst.eclass.riscv.fifof_4.D_OUT [39], rval = 1'1).
Adding SRST signal on $auto$ff.cc:266:slice$22196 ($_DFFE_PP_) from module mkeclass_axi4 (D = $flatten\soc_inst.\eclass.\riscv.\stage2.$procmux$7176.Y_B [38], Q = \soc_inst.eclass.riscv.fifof_4.D_OUT [38], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$22195 ($_DFFE_PP_) from module mkeclass_axi4 (D = $flatten\soc_inst.\eclass.\riscv.\stage2.$procmux$7176.Y_B [37], Q = \soc_inst.eclass.riscv.fifof_4.D_OUT [37], rval = 1'1).
Adding SRST signal on $auto$ff.cc:266:slice$22194 ($_DFFE_PP_) from module mkeclass_axi4 (D = $flatten\soc_inst.\eclass.\riscv.\stage2.$procmux$7176.Y_B [36], Q = \soc_inst.eclass.riscv.fifof_4.D_OUT [36], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$21251 ($_SDFFCE_PP0P_) from module mkeclass_axi4 (D = $flatten\soc_inst.\eclass.\riscv.\stage1.\instance_decoder_func_32_1.$procmux$7281.Y_B [3], Q = \soc_inst.eclass.riscv.fifof_2.D_OUT [6], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$15201 ($_DFFE_PP_) from module mkeclass_axi4 (D = $flatten\soc_inst.\eclass.\riscv.\stage1.\instance_decoder_func_32_1.$procmux$7286.B_AND_S [1], Q = \soc_inst.eclass.riscv.fifof_2.D_OUT [45], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$15200 ($_DFFE_PP_) from module mkeclass_axi4 (D = $flatten\soc_inst.\eclass.\riscv.\stage1.\instance_decoder_func_32_1.$procmux$7286.B_AND_S [2], Q = \soc_inst.eclass.riscv.fifof_2.D_OUT [44], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$15199 ($_DFFE_PP_) from module mkeclass_axi4 (D = $flatten\soc_inst.\eclass.\riscv.\stage1.\instance_decoder_func_32_1.$procmux$7290.B_AND_S [3], Q = \soc_inst.eclass.riscv.fifof_2.D_OUT [40], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$15198 ($_DFFE_PP_) from module mkeclass_axi4 (D = $flatten\soc_inst.\eclass.\riscv.\stage1.\instance_decoder_func_32_1.$procmux$7290.Y_B [0], Q = \soc_inst.eclass.riscv.fifof_2.D_OUT [39], rval = 1'0).
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$47517 ($_DFFE_PP0P_) from module mkeclass_axi4.

52.33.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mkeclass_axi4..
Removed 47 unused cells and 2 unused wires.
<suppressed ~48 debug messages>

52.33.6. Rerunning OPT passes. (Removed registers in this run.)

52.33.7. Running ICE40 specific optimizations.

52.33.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module mkeclass_axi4.
<suppressed ~32 debug messages>

52.33.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mkeclass_axi4'.
Removed a total of 0 cells.

52.33.10. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$37619 ($_DFFE_PP_) from module mkeclass_axi4.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$51865 ($_DFFE_PP_) from module mkeclass_axi4.

52.33.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mkeclass_axi4..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

52.33.12. Rerunning OPT passes. (Removed registers in this run.)

52.33.13. Running ICE40 specific optimizations.

52.33.14. Executing OPT_EXPR pass (perform const folding).
Optimizing module mkeclass_axi4.
<suppressed ~6 debug messages>

52.33.15. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mkeclass_axi4'.
Removed a total of 0 cells.

52.33.16. Executing OPT_DFF pass (perform DFF optimizations).

52.33.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mkeclass_axi4..

52.33.18. Rerunning OPT passes. (Removed registers in this run.)

52.33.19. Running ICE40 specific optimizations.

52.33.20. Executing OPT_EXPR pass (perform const folding).
Optimizing module mkeclass_axi4.

52.33.21. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mkeclass_axi4'.
Removed a total of 0 cells.

52.33.22. Executing OPT_DFF pass (perform DFF optimizations).

52.33.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mkeclass_axi4..

52.33.24. Finished OPT passes. (There is nothing left to do.)

52.34. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

52.35. Executing TECHMAP pass (map to technology primitives).

52.35.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/ice40/ff_map.v
Parsing Verilog input from `/usr/bin/../share/yosys/ice40/ff_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFFCE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP1P_'.
Successfully finished Verilog frontend.

52.35.2. Continuing TECHMAP pass.
Using template \$_DFFE_PP_ for cells of type $_DFFE_PP_.
Using template \$_DFF_P_ for cells of type $_DFF_P_.
Using template \$_DFFE_PP0P_ for cells of type $_DFFE_PP0P_.
Using template \$_SDFFCE_PP0P_ for cells of type $_SDFFCE_PP0P_.
Using template \$_SDFFCE_PP1P_ for cells of type $_SDFFCE_PP1P_.
Using template \$_DFF_PP0_ for cells of type $_DFF_PP0_.
Using template \$_DFF_PP1_ for cells of type $_DFF_PP1_.
Using template \$_DFFE_PP1P_ for cells of type $_DFFE_PP1P_.
Using template \$_SDFF_PP0_ for cells of type $_SDFF_PP0_.
Using template \$_SDFF_PP1_ for cells of type $_SDFF_PP1_.
No more expansions possible.
<suppressed ~5428 debug messages>

52.36. Executing OPT_EXPR pass (perform const folding).
Optimizing module mkeclass_axi4.

52.37. Executing SIMPLEMAP pass (map simple cells to gate primitives).
Mapping mkeclass_axi4.$auto$alumacc.cc:485:replace_alu$11047.slice[0].carry ($lut).
Mapping mkeclass_axi4.$auto$alumacc.cc:485:replace_alu$11050.slice[0].carry ($lut).
Mapping mkeclass_axi4.$auto$alumacc.cc:485:replace_alu$11053.slice[0].carry ($lut).
Mapping mkeclass_axi4.$auto$alumacc.cc:485:replace_alu$11056.slice[0].carry ($lut).
Mapping mkeclass_axi4.$auto$alumacc.cc:485:replace_alu$11059.slice[0].carry ($lut).
Mapping mkeclass_axi4.$auto$alumacc.cc:485:replace_alu$11062.slice[0].carry ($lut).
Mapping mkeclass_axi4.$auto$alumacc.cc:485:replace_alu$11065.slice[0].carry ($lut).
Mapping mkeclass_axi4.$auto$alumacc.cc:485:replace_alu$11068.slice[0].carry ($lut).
Mapping mkeclass_axi4.$auto$alumacc.cc:485:replace_alu$11071.slice[0].carry ($lut).
Mapping mkeclass_axi4.$auto$alumacc.cc:485:replace_alu$11074.slice[0].carry ($lut).
Mapping mkeclass_axi4.$auto$alumacc.cc:485:replace_alu$11077.slice[0].carry ($lut).
Mapping mkeclass_axi4.$auto$alumacc.cc:485:replace_alu$11080.slice[0].carry ($lut).
Mapping mkeclass_axi4.$auto$alumacc.cc:485:replace_alu$11086.slice[0].carry ($lut).
Mapping mkeclass_axi4.$auto$alumacc.cc:485:replace_alu$11089.slice[0].carry ($lut).
Mapping mkeclass_axi4.$auto$alumacc.cc:485:replace_alu$11107.slice[0].carry ($lut).
Mapping mkeclass_axi4.$auto$alumacc.cc:485:replace_alu$11110.slice[0].carry ($lut).
Mapping mkeclass_axi4.$auto$alumacc.cc:485:replace_alu$11113.slice[0].carry ($lut).
Mapping mkeclass_axi4.$auto$alumacc.cc:485:replace_alu$11116.slice[0].carry ($lut).
Mapping mkeclass_axi4.$auto$alumacc.cc:485:replace_alu$11126.slice[0].carry ($lut).
Mapping mkeclass_axi4.$auto$alumacc.cc:485:replace_alu$11129.slice[0].carry ($lut).
Mapping mkeclass_axi4.$auto$alumacc.cc:485:replace_alu$11132.slice[0].carry ($lut).
Mapping mkeclass_axi4.$auto$alumacc.cc:485:replace_alu$11138.slice[0].carry ($lut).
Mapping mkeclass_axi4.$auto$alumacc.cc:485:replace_alu$11141.slice[0].carry ($lut).
Mapping mkeclass_axi4.$auto$alumacc.cc:485:replace_alu$11144.slice[0].carry ($lut).
Mapping mkeclass_axi4.$auto$alumacc.cc:485:replace_alu$11147.slice[0].carry ($lut).

52.38. Executing ICE40_OPT pass (performing simple optimizations).

52.38.1. Running ICE40 specific optimizations.

52.38.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module mkeclass_axi4.
<suppressed ~1548 debug messages>

52.38.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mkeclass_axi4'.
<suppressed ~1266 debug messages>
Removed a total of 422 cells.

52.38.4. Executing OPT_DFF pass (perform DFF optimizations).

52.38.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mkeclass_axi4..
Removed 1 unused cells and 27741 unused wires.
<suppressed ~2 debug messages>

52.38.6. Rerunning OPT passes. (Removed registers in this run.)

52.38.7. Running ICE40 specific optimizations.

52.38.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module mkeclass_axi4.

52.38.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mkeclass_axi4'.
Removed a total of 0 cells.

52.38.10. Executing OPT_DFF pass (perform DFF optimizations).

52.38.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mkeclass_axi4..

52.38.12. Finished OPT passes. (There is nothing left to do.)

52.39. Executing TECHMAP pass (map to technology primitives).

52.39.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/ice40/latches_map.v
Parsing Verilog input from `/usr/bin/../share/yosys/ice40/latches_map.v' to AST representation.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Successfully finished Verilog frontend.

52.39.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

52.40. Executing ABC pass (technology mapping using ABC).

52.40.1. Extracting gate netlist of module `\mkeclass_axi4' to `<abc-temp-dir>/input.blif'..
Extracted 25597 gates and 31634 wires to a netlist network with 6035 inputs and 3917 outputs.

52.40.1.1. Executing ABC.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lut <abc-temp-dir>/lutdefs.txt 
ABC: + strash 
ABC: + &get -n 
ABC: + &fraig -x 
ABC: + &put 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + dch -f 
ABC: + if 
ABC: + mfs2 
ABC: + lutpack -S 1 
ABC: + dress <abc-temp-dir>/input.blif 
ABC: Total number of equiv classes                =    8263.
ABC: Participating nodes from both networks       =   17411.
ABC: Participating nodes from the first network   =    8313. (  70.97 % of nodes)
ABC: Participating nodes from the second network  =    9098. (  77.67 % of nodes)
ABC: Node pairs (any polarity)                    =    8311. (  70.95 % of names can be moved)
ABC: Node pairs (same polarity)                   =    6034. (  51.51 % of names can be moved)
ABC: Total runtime =     1.04 sec
ABC: + write_blif <abc-temp-dir>/output.blif 

52.40.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:    11712
ABC RESULTS:        internal signals:    21682
ABC RESULTS:           input signals:     6035
ABC RESULTS:          output signals:     3917
Removing temp directory.

52.41. Executing ICE40_WRAPCARRY pass (wrap carries).

52.42. Executing TECHMAP pass (map to technology primitives).

52.42.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/ice40/ff_map.v
Parsing Verilog input from `/usr/bin/../share/yosys/ice40/ff_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFFCE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP1P_'.
Successfully finished Verilog frontend.

52.42.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~22 debug messages>
Removed 1862 unused cells and 14636 unused wires.

52.43. Executing OPT_LUT pass (optimize LUTs).
Discovering LUTs.
Number of LUTs:    12356
  1-LUT              551
  2-LUT             1413
  3-LUT             4702
  4-LUT             5690
  with \SB_CARRY    (#0)  622
  with \SB_CARRY    (#1)  649

Eliminating LUTs.
Number of LUTs:    12356
  1-LUT              551
  2-LUT             1413
  3-LUT             4702
  4-LUT             5690
  with \SB_CARRY    (#0)  622
  with \SB_CARRY    (#1)  649

Combining LUTs.
Number of LUTs:    12234
  1-LUT              549
  2-LUT             1342
  3-LUT             4550
  4-LUT             5793
  with \SB_CARRY    (#0)  622
  with \SB_CARRY    (#1)  649

Eliminated 0 LUTs.
Combined 122 LUTs.
<suppressed ~77359 debug messages>

52.44. Executing TECHMAP pass (map to technology primitives).

52.44.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/ice40/cells_map.v
Parsing Verilog input from `/usr/bin/../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

52.44.2. Continuing TECHMAP pass.
Using template $paramod$fd904e9e35cfd343a9df248824bd3f1408724879\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01000001 for cells of type $lut.
Using template $paramod$2d07c1a6c53c7b878509360922c4fa5ebedc3011\$lut for cells of type $lut.
Using template $paramod$571404c0889eaf57f492cb5e37f8acb5df5852f9\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10000000 for cells of type $lut.
Using template $paramod$e5759512db67494ff77fbdfc66dff4006376568f\$lut for cells of type $lut.
Using template $paramod$bba54c1ef87367812b4c15f4aed5ac70773df775\$lut for cells of type $lut.
Using template $paramod$b4410865e8124402796f9dfbf73ef8d279fdbd08\$lut for cells of type $lut.
Using template $paramod$b4f85a6321a00b090afc4e21d68e7b99eb94d149\$lut for cells of type $lut.
Using template $paramod$59c595af41d4a5cce2d588c3a5f1342749ce7a77\$lut for cells of type $lut.
Using template $paramod$4b2297966ddb718657b80566604f97685ffc0120\$lut for cells of type $lut.
Using template $paramod$12879138d1e376f344e47ea40be66b776233be75\$lut for cells of type $lut.
Using template $paramod$a8b2b0f3a3fd7b01c99e8d61bb72f602bd41af54\$lut for cells of type $lut.
Using template $paramod$6b0849254d6c87461fb93e37cc18f089f61eb912\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0001 for cells of type $lut.
Using template $paramod$5a621b016c894274d07edef48c49b401a15fd796\$lut for cells of type $lut.
Using template $paramod$c227f721a44fefdada39f6c9acbbd79680d6e12a\$lut for cells of type $lut.
Using template $paramod$81d8a60fd95b1a9f9ef71c12a774ae6988cb9fd5\$lut for cells of type $lut.
Using template $paramod$b4d0f4738a5ce50c7f36c2aa2ecc09cfb874f2b6\$lut for cells of type $lut.
Using template $paramod$b1f01d1a6442cce30a958d756be8bbcf976f6dba\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00000111 for cells of type $lut.
Using template $paramod$6e238df02989b317f10820a22773676e71120644\$lut for cells of type $lut.
Using template $paramod$82b4a585d1edcb5c6e755dc9bd3392228a1c1304\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0100 for cells of type $lut.
Using template $paramod$b297295e19b03521716155b85537bbe86d6a9ae6\$lut for cells of type $lut.
Using template $paramod$575b200168b9e109c2ed99df4359056f2c6696ac\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00010000 for cells of type $lut.
Using template $paramod$179512a187da069f3b79ef6612a41e494e7d54b6\$lut for cells of type $lut.
Using template $paramod$e9c77024ca501b890c641f9c0b10e27242db8730\$lut for cells of type $lut.
Using template $paramod$cd6c4b4da6d8737b72fd2dc8f5d83d8967445809\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11111000 for cells of type $lut.
Using template $paramod$c471af5667a682bd131a5b479e58e470d1b2b7cd\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10110000 for cells of type $lut.
Using template $paramod$58cdfd909af93eae999fb983a59991c983f4bc49\$lut for cells of type $lut.
Using template $paramod$6e3b22478ca21c5590744f2e30b92938c4d90996\$lut for cells of type $lut.
Using template $paramod$1ebfaa7f2923aa101d70126898d6cfbccf1cfa9d\$lut for cells of type $lut.
Using template $paramod$c79a3a9a61261493391403be52dc19fe8708c7fc\$lut for cells of type $lut.
Using template $paramod$74875a342721503cdbc0acb472b0fd09458df213\$lut for cells of type $lut.
Using template $paramod$272652f6c6fbe9a75eff76e45cc7e2788835518b\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11100000 for cells of type $lut.
Using template $paramod$eb198fdd2a364fc5fc99493bddad777e7186425f\$lut for cells of type $lut.
Using template $paramod$6d6beead1425af15cf78b27fd9b11b41b5d4bce8\$lut for cells of type $lut.
Using template $paramod$b431bfd938e35871dd0b7668e1503c7e8b9d491c\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00001011 for cells of type $lut.
Using template $paramod$1bf62ab10e48d71d6497bccacf5c70420c470fe9\$lut for cells of type $lut.
Using template $paramod$332a399730bfc61adea04021a76b1c4e4030f37d\$lut for cells of type $lut.
Using template $paramod$658b9ed803f0d3d335616d3858b53e0a2522f1e8\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00000001 for cells of type $lut.
Using template $paramod$11ec7271d8e6e5aeaace08c13e4c601f10e31038\$lut for cells of type $lut.
Using template $paramod$07b2f20652759ac1d82dcebcaf2b858bc9fc6f9f\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00001110 for cells of type $lut.
Using template $paramod$2d73cf21e7a3b53006ebbae47ecc48e73975ec46\$lut for cells of type $lut.
Using template $paramod$c1199f8981eafbdb249b1b209ba0903e3842f9dd\$lut for cells of type $lut.
Using template $paramod$a15fd389a2f54cb7b94707b25934d226e68d9e2e\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01110000 for cells of type $lut.
Using template $paramod$8379cb6cc067198df3735466802bba2672d8d35f\$lut for cells of type $lut.
Using template $paramod$0ad5300ed37f2fc9e5d70bd7c11dc082ff3e4fb3\$lut for cells of type $lut.
Using template $paramod$a3cdc1eb771a2c6a16f64da161e11100ac409d2b\$lut for cells of type $lut.
Using template $paramod$d35161d1d7976dcc02e7c7d51172431be85143b4\$lut for cells of type $lut.
Using template $paramod$608f40069c27841a5b3bdf03643a34bdc8974072\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1110 for cells of type $lut.
Using template $paramod$b637cf4714c2e93484bb499728e176a6ab69c910\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11111110 for cells of type $lut.
Using template $paramod$d2e6d37235ab843778c678747f5760d5e87de899\$lut for cells of type $lut.
Using template $paramod$43779580bfffd5d5a9f321249a174febf1dac288\$lut for cells of type $lut.
Using template $paramod$6d23198eb2b8f79a41c7626605a61009695893b1\$lut for cells of type $lut.
Using template $paramod$0a94662b0161fc067fc2a1123fd5ac94da2ec1db\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10010000 for cells of type $lut.
Using template $paramod$10cbe2c80384dc691259558410c90387381d311f\$lut for cells of type $lut.
Using template $paramod$62b9cc19760df4f05d0c7360b790a1fb852ac400\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10000111 for cells of type $lut.
Using template $paramod$e2e4d79bec18c28fa313e8bd8f4df6f8a38115b2\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01011100 for cells of type $lut.
Using template $paramod$e49f6e3576ef1a6d2f58c54414dbb786af8cc869\$lut for cells of type $lut.
Using template $paramod$d4fae2c0d9ad2966369cd4e39b81c71bcd1327c9\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11101011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10100011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00110101 for cells of type $lut.
Using template $paramod$6a34cd5b50e324824168b4186d0b04ba5e83b039\$lut for cells of type $lut.
Using template $paramod$8a688b470fbdc357e4a14f08dc23c872c147c340\$lut for cells of type $lut.
Using template $paramod$4cf5305612d86489c1a6171729557670bf08582e\$lut for cells of type $lut.
Using template $paramod$973818279bc95792902f3c09371fd2407d04a2a5\$lut for cells of type $lut.
Using template $paramod$8b24407096beec47292ddeb1567a058197a320b9\$lut for cells of type $lut.
Using template $paramod$97e449d15b607612c49291044eca4e2c8b59088e\$lut for cells of type $lut.
Using template $paramod$fc318a7df7fe07fd6e06d67fcbc358e9823ea389\$lut for cells of type $lut.
Using template $paramod$9c6e6a10ea00e5b0682f6243b802d7839a398197\$lut for cells of type $lut.
Using template $paramod$1a64f21ea15b05b7fc930804a66f6689ebbd6394\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01100000 for cells of type $lut.
Using template $paramod$4bd0e644fd52ebb3b742e9f12861aec7d7c3e8e0\$lut for cells of type $lut.
Using template $paramod$a54d8b8d2c90a828ee71c2d82e7e1612992a7ab8\$lut for cells of type $lut.
Using template $paramod$5c32c59025c0b98f20e63f249d83e7ebb4b085e3\$lut for cells of type $lut.
Using template $paramod$62982cca7069de3707116b74c6df774a649aefd3\$lut for cells of type $lut.
Using template $paramod$441de597d9318495d3225f370c9f7379b3b0fd0d\$lut for cells of type $lut.
Using template $paramod$b4d59a169df3392cc49f75ff3f36786eb368b5e7\$lut for cells of type $lut.
Using template $paramod$0e8abf9e8fc89e9c64c72095f61a92d1eea4e072\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11000101 for cells of type $lut.
Using template $paramod$3e27c7f584657c61690dac9538f4900ce23f9010\$lut for cells of type $lut.
Using template $paramod$2ea69c779d6c1b79ac5a87b0d1523c67d5628dba\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11101111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000001\LUT=2'01 for cells of type $lut.
Using template $paramod$8461cf8f35b1a92a9818e6c8caba55bd0f031348\$lut for cells of type $lut.
Using template $paramod$bc0c58c467d714257661a1d7ac1bb5f9ac39b898\$lut for cells of type $lut.
Using template $paramod$d81e419182194220fe1d6dd96690c56b1648ff58\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10101100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00001101 for cells of type $lut.
Using template $paramod$de3d8c0ac9a85f776878d56395b6e0bf04ae72e7\$lut for cells of type $lut.
Using template $paramod$bdb7f9ed72fd4f5c7ad81c376f2d8a5c72a0098d\$lut for cells of type $lut.
Using template $paramod$e5e9da8fed769f971686eed8c5eea50e61f73aaa\$lut for cells of type $lut.
Using template $paramod$d6cf0a4b6f6ccd87588da28c41b5b6c258da2509\$lut for cells of type $lut.
Using template $paramod$703a13a751e631ef123f38f7d2125aeabec0f94c\$lut for cells of type $lut.
Using template $paramod$f54c0ffd7b041ca43eac7710ab19c0666d826c22\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11100011 for cells of type $lut.
Using template $paramod$e0bde73e598487237493c8a43ca52c95a3727354\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11010000 for cells of type $lut.
Using template $paramod$5037893c2f0202cbda412b45a61ab57b51500aee\$lut for cells of type $lut.
Using template $paramod$41326ad8644342a66dfb051d050f2b6fbf15015b\$lut for cells of type $lut.
Using template $paramod$19ec49f31a8d230a567aa44ce3ea81a03c101e2b\$lut for cells of type $lut.
Using template $paramod$71d951b20e73043168c1656217d126e617052faa\$lut for cells of type $lut.
Using template $paramod$64669a7e87c28e39425dffff48145545533b4971\$lut for cells of type $lut.
Using template $paramod$a50be0e6fa3a01511bb234559cb74fb8bd3e2061\$lut for cells of type $lut.
Using template $paramod$38f9bf4dd2329347b8471f0a98443dd323386889\$lut for cells of type $lut.
Using template $paramod$4282def8dbd6df3d1248ad282c629bee684502c2\$lut for cells of type $lut.
Using template $paramod$a670b08a47dd8a34f954c50cd06e9996d77e8467\$lut for cells of type $lut.
Using template $paramod$7ea938ba138d4861840be1d72fba17b321428629\$lut for cells of type $lut.
Using template $paramod$957b307d342e8a0c7580bd80c8faae8ae2613fea\$lut for cells of type $lut.
Using template $paramod$bbf1d7d84b4c5c749e4ec101ecad1a929cbd815d\$lut for cells of type $lut.
Using template $paramod$85757733bcdbe5b9d118b207eb91ab8c52e482fc\$lut for cells of type $lut.
Using template $paramod$e4f0672b1b304c5f823c392f5c998838e860eb67\$lut for cells of type $lut.
Using template $paramod$45d617c2ce0041e27b541f62b0fc3c3ce441a616\$lut for cells of type $lut.
Using template $paramod$a20b0c093af372402eecf32644de5f0208303079\$lut for cells of type $lut.
Using template $paramod$c5b694ec89d7629b942ccf6a9be1d39e24f8edec\$lut for cells of type $lut.
Using template $paramod$1843b3c15f2447d117e2d5de9b00f791ef5f9fa3\$lut for cells of type $lut.
Using template $paramod$ab8bb87959c5d7cfa27886cee1355b38e054a61a\$lut for cells of type $lut.
Using template $paramod$ed10455c824c2a3761aabdeb1e31dad905f66e6e\$lut for cells of type $lut.
Using template $paramod$94ac66a11090dca84889e55fcf03297912a5b7ec\$lut for cells of type $lut.
Using template $paramod$6e46ec5a196ba1a24b8e69ab094cadc07c13ac1f\$lut for cells of type $lut.
Using template $paramod$c1a19a87ccbbb03d43a72335db63f692ddf82cc1\$lut for cells of type $lut.
Using template $paramod$63d2a060f1cbd816f1a27cce8bea91c1b46dfd6d\$lut for cells of type $lut.
Using template $paramod$deb4f121bbf3d55ed9a98f692fd112e0918f51b5\$lut for cells of type $lut.
Using template $paramod$f6dd01673f8f9c9ecbbfa50d05e704565b0d6345\$lut for cells of type $lut.
Using template $paramod$40882341c54dcd36f630f00dd7e46a35652abd36\$lut for cells of type $lut.
Using template $paramod$6a3eb93fd9661461fcc4400313ec58f204fd785a\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11110100 for cells of type $lut.
Using template $paramod$f3e1547c4b47e64c590e75cf09078b2507c8cc75\$lut for cells of type $lut.
Using template $paramod$71309a2bd1495753926706a75a30f2830ecec385\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01111110 for cells of type $lut.
Using template $paramod$b22c683f120cb753243eba26d1270a6ecf401c3b\$lut for cells of type $lut.
Using template $paramod$303e10007aa2452bdb64567037c926ead530af83\$lut for cells of type $lut.
Using template $paramod$3d4f386a402395482bb3a56159e7ad913d874bd8\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00010100 for cells of type $lut.
Using template $paramod$baa939b0bd5b3e0c8760492528669bd58f640542\$lut for cells of type $lut.
Using template $paramod$b93d1ea7a612a32c185108f67a153d44ffb9aac2\$lut for cells of type $lut.
Using template $paramod$e053a22d78e6bd5ea33183ea69976f0db741be0e\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0111 for cells of type $lut.
Using template $paramod$4da2782c2e024b3eded45331a6607870b9d0254f\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10111111 for cells of type $lut.
Using template $paramod$50666a8f9d622ca1f027a4587dfd5f2a7d8810c9\$lut for cells of type $lut.
Using template $paramod$a0110ffcad984c8a190b4246c453a50168ed201c\$lut for cells of type $lut.
Using template $paramod$9140e8778d70c73267d16a31702cb8bf43684a0c\$lut for cells of type $lut.
Using template $paramod$4f17d6e772720dfdf252a5079f99eefb3faab873\$lut for cells of type $lut.
Using template $paramod$6382f7860648fdb6f8a8dc690c25a62882cc501b\$lut for cells of type $lut.
Using template $paramod$9d5b68c8da3340b77f1f858b0659185c5f0c4481\$lut for cells of type $lut.
Using template $paramod$a16b48a3acafc2896543c5a195de598faec53703\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11100111 for cells of type $lut.
Using template $paramod$ef55f89c74d994c27b4ec4bac79af43e8b1d7e25\$lut for cells of type $lut.
Using template $paramod$a9334a4926470ce1833f9252e5e465c7b1118e6b\$lut for cells of type $lut.
Using template $paramod$b4f15f202f50520dbc381cd0880ac94f830f05a8\$lut for cells of type $lut.
Using template $paramod$048d4aa2263b685fba6c6b0d38f6224df0dc3042\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00011111 for cells of type $lut.
Using template $paramod$12e9049d8709286a770fe60b59ec4d94c39ce3c9\$lut for cells of type $lut.
Using template $paramod$25ce03f90631e67c5e443b0900c3d90fee95a96b\$lut for cells of type $lut.
Using template $paramod$0d1e730d1c6b3bda74eeaf129f0e5d77f72f3ca6\$lut for cells of type $lut.
Using template $paramod$bb4fff1cc3b827238aa40993cafede1c5beecbe3\$lut for cells of type $lut.
Using template $paramod$c99b837b8618b43c63acd6ef6d4a6b609b30b8f6\$lut for cells of type $lut.
Using template $paramod$0e46a2ab855e03261592cd5a435710385594d739\$lut for cells of type $lut.
Using template $paramod$3204210736873ef5d53b95f3dbe4714b354f9351\$lut for cells of type $lut.
Using template $paramod$21258e4f137fd0b5b0eaf41c5b0d170364c0ec37\$lut for cells of type $lut.
Using template $paramod$cde3aa23c1efa60a470cf0f0281347d6ba585afa\$lut for cells of type $lut.
Using template $paramod$89add7395f09a7f1d31ba23a20843f5b8e155407\$lut for cells of type $lut.
Using template $paramod$5d69f1c9be01253d8f5e60b8d73bbef60681935d\$lut for cells of type $lut.
Using template $paramod$59de045429641615f9fe556a2af28d0739e5972e\$lut for cells of type $lut.
Using template $paramod$7c0fa5d918a8d4c0225ab4aa53f9d539c6d5bbda\$lut for cells of type $lut.
Using template $paramod$d119410bab96963da0139669592048db2c09198b\$lut for cells of type $lut.
Using template $paramod$3bd90dfefd2a93c12855dbf6fa4153076794a6ca\$lut for cells of type $lut.
Using template $paramod$9d707d218adbd63b6f9a0c79d7ee037306fb6296\$lut for cells of type $lut.
Using template $paramod$086ff4b21b0d05cb8560d9fe7ecea75a1d995b17\$lut for cells of type $lut.
Using template $paramod$933f4f3e373a784da64d137def3625bdd36d1695\$lut for cells of type $lut.
Using template $paramod$279a8d961e6b2ded8450bee8ed637cb9efa31f02\$lut for cells of type $lut.
Using template $paramod$cbfd30b70b4f0ac8dd1d3ed758215fbf49783a3b\$lut for cells of type $lut.
Using template $paramod$adac5163f2ca606e303e4fcb6e4ac1a8cfe9825d\$lut for cells of type $lut.
Using template $paramod$d53578aacfd93124244778d88be0e90eb09c1b1b\$lut for cells of type $lut.
Using template $paramod$722bfd9af0ae56ca9d1d12a221cb5ede16461f26\$lut for cells of type $lut.
Using template $paramod$780a55c7a31ff1ad7fef98e1d89fb974fe6d20f0\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01010011 for cells of type $lut.
Using template $paramod$f63fe32f78d5f3c5de711945c592c8c5ec2303ae\$lut for cells of type $lut.
Using template $paramod$6047691d8bbb6cff4c2e5680ed3445ca5625ef2f\$lut for cells of type $lut.
Using template $paramod$c24ed72ebb67e9ead6029e42e909ef7fc0abbb11\$lut for cells of type $lut.
Using template $paramod$7a9d9396461df152f697894fa3b294ad1b285e08\$lut for cells of type $lut.
Using template $paramod$d6d3aaeac1b9aa2c4b652c48e0deb565040dda72\$lut for cells of type $lut.
Using template $paramod$2c4c7dfdf674b9c90d6c2cae622d527a6d7d0c22\$lut for cells of type $lut.
Using template $paramod$2d6fae636640ca92cde9fb82060ffcee093de506\$lut for cells of type $lut.
Using template $paramod$a4df2b5be2b644499880e088a11556935f22b401\$lut for cells of type $lut.
Using template $paramod$71cb81cd7ec213b39129c5f3867d1aa22dffde1b\$lut for cells of type $lut.
Using template $paramod$1360f2ce6b943fa5302057e0adcadcb97e8fa937\$lut for cells of type $lut.
Using template $paramod$df196ed0a1da5c4a58c5e08a1dac304fd3fccaab\$lut for cells of type $lut.
Using template $paramod$052ca015f1400ebf950f85d5f181f7a5865c336c\$lut for cells of type $lut.
Using template $paramod$f6718da5409ec8636fab31113c774a3123f56b0b\$lut for cells of type $lut.
Using template $paramod$a9ee9524606d47769a02efd4f1f39eb2ccd6def7\$lut for cells of type $lut.
Using template $paramod$76897d59d3684a8bad1f7017ba569cfbb6834f22\$lut for cells of type $lut.
Using template $paramod$bd30e88998eb3f40bd5b483dd9ac73c42f6b8ec7\$lut for cells of type $lut.
Using template $paramod$44322768708ea1617c4f8f4845eb883e6765da22\$lut for cells of type $lut.
Using template $paramod$d2cb3fa3211a237a33b845a7f5896365de15b614\$lut for cells of type $lut.
Using template $paramod$4fca3b92a07e69b87d718c5500dfd8ffb1121619\$lut for cells of type $lut.
Using template $paramod$c35ad3063d5038410210ddc72c1fd5fed46413b4\$lut for cells of type $lut.
Using template $paramod$480713ae83d1aa78a807dc0c440de40081b48ed2\$lut for cells of type $lut.
Using template $paramod$a642d9cfd5ba13532c60b90e27156eef10bdd135\$lut for cells of type $lut.
Using template $paramod$7175be614d14889125b95ab0c63846496536dfa8\$lut for cells of type $lut.
Using template $paramod$3c90351ab53dc81386feef7a3560ce18ed07dec2\$lut for cells of type $lut.
Using template $paramod$7fcc2f13195f27c397064377984d87a90c06749d\$lut for cells of type $lut.
Using template $paramod$0e73331437297a60a9af522eef8b197c0aa7f352\$lut for cells of type $lut.
Using template $paramod$c14b34f16c7002b88d20e40ed8901e64fbdbc0cd\$lut for cells of type $lut.
Using template $paramod$391f41f25d1fefdc245c798e53651a23e79db55a\$lut for cells of type $lut.
Using template $paramod$aabc38448f9289a9f09f7f433eb20ae11e3f6ed9\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10011111 for cells of type $lut.
Using template $paramod$ad3a97108c9f4d10f8acfa309b668b9455d3d733\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01001111 for cells of type $lut.
Using template $paramod$314fe9458b07176c4d2c8c59533027c4c55155b5\$lut for cells of type $lut.
Using template $paramod$a59507d273cd827eb6c46c37820d50a1b717efdf\$lut for cells of type $lut.
Using template $paramod$9f135fba3de3ba24cef5852dbc0be35267668f2e\$lut for cells of type $lut.
Using template $paramod$ba05b8a1a425003df083aea0e69541f5cbdc68f2\$lut for cells of type $lut.
Using template $paramod$c4c148354f86d2131dbfed31e2e01cbbb5aefda7\$lut for cells of type $lut.
Using template $paramod$b2a4860cd839ff40d9dca4c3f237b2b534267028\$lut for cells of type $lut.
Using template $paramod$1674868d909954f1798905b10bc8fc182227e6d9\$lut for cells of type $lut.
Using template $paramod$965f8f2fa1a796a6c51222eabb50fbd26e97d98b\$lut for cells of type $lut.
Using template $paramod$ad823946862e656cf7f96d606b18b8f972dc6d6c\$lut for cells of type $lut.
Using template $paramod$4789582d00084c3344b7a6dacf516efd46244876\$lut for cells of type $lut.
Using template $paramod$cd05f04889088c47a0a5abae8c2d644fd314805e\$lut for cells of type $lut.
Using template $paramod$2e7a95e82db1d690ae9ba5d10f68b175fa2cb467\$lut for cells of type $lut.
Using template $paramod$7f88ae8b0ca78f7b736f446522956805c49fb79f\$lut for cells of type $lut.
Using template $paramod$9fed01b8a0c5f6113b8ac08943943d10264f3bee\$lut for cells of type $lut.
Using template $paramod$8c5b7259c9d9cd17395950154a06a8b3c48fdd5f\$lut for cells of type $lut.
Using template $paramod$b5f45db524a9189e41f75d5d69a4d025017029b3\$lut for cells of type $lut.
Using template $paramod$ef26adabe6060e01077b576cfe34e95e55a26aef\$lut for cells of type $lut.
Using template $paramod$368887f60ccee882960866ce81cb4250106048b1\$lut for cells of type $lut.
Using template $paramod$5ab8703b1aa62946296547e85dc0a19366704a74\$lut for cells of type $lut.
Using template $paramod$07bc5f949e23a2765cc7770b34b9713358274944\$lut for cells of type $lut.
Using template $paramod$cc7f44fc33da239871f9f4dc567e954c3c872113\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00111010 for cells of type $lut.
Using template $paramod$70ebb6cf5bc7d63c5c1a98ccefefa2af79e8f2a9\$lut for cells of type $lut.
Using template $paramod$cc08dba3aac8677e797984bdf18a09dd37547dd3\$lut for cells of type $lut.
Using template $paramod$fceb3a526de44b8f6b38e567360f59f7cf5878fb\$lut for cells of type $lut.
Using template $paramod$e02d61ad9a3ad4925334337a4a48bbc76de57755\$lut for cells of type $lut.
Using template $paramod$4e1cecab63d8e9cc19cb0241724b1211fb7856cb\$lut for cells of type $lut.
Using template $paramod$b0aafa1ed7962f74d0dc4f92cc7d277a26f8f1a2\$lut for cells of type $lut.
Using template $paramod$bf60f6ec407ee294958b6566514fc3125ec42258\$lut for cells of type $lut.
Using template $paramod$243c00f5eb9faa1d5ce3478fdc389a56070781f8\$lut for cells of type $lut.
Using template $paramod$53ce561f80f32d4298a3beadc88b6c5c78293221\$lut for cells of type $lut.
Using template $paramod$7bb7cea918b21216db8b0d251f654e71dd172577\$lut for cells of type $lut.
Using template $paramod$04b674496422df8889c01c3744b94097628ccfbc\$lut for cells of type $lut.
Using template $paramod$054ed57e5dcca76e2c3a3834b394c52525d949ec\$lut for cells of type $lut.
Using template $paramod$fb5ee0bdef1c4e74aaf1fd8efae98b46a2f5e564\$lut for cells of type $lut.
Using template $paramod$1f41f10d888dcde4948be21aeaa185dc114ed7d0\$lut for cells of type $lut.
Using template $paramod$d7f4570f04f68175b1fa25c1bac92938027a2c96\$lut for cells of type $lut.
Using template $paramod$0d2be417e00bb621114e2dd0dde47369e23b9e47\$lut for cells of type $lut.
Using template $paramod$2d8ecce5c907513cebcd38ab5efe0fc26fc03464\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10111110 for cells of type $lut.
Using template $paramod$4972722c284f07fee673f7cb99e6a36ce4a244f0\$lut for cells of type $lut.
Using template $paramod$fb0818dbe5a679e474c262875582f056badfeade\$lut for cells of type $lut.
Using template $paramod$c5f3c57a6d466a2f42208bafb8985b96ce884440\$lut for cells of type $lut.
Using template $paramod$987693cbecb4a281b23724d472f575ceae2391bd\$lut for cells of type $lut.
Using template $paramod$24db8a275c3287b26e3f71801dd72f7dfd646944\$lut for cells of type $lut.
Using template $paramod$48e742702f055b463ab223112799b559534d85b4\$lut for cells of type $lut.
Using template $paramod$510a7340b4f60ca9990f7505cadf24dcdeae0f32\$lut for cells of type $lut.
Using template $paramod$ea0faad69a26c91786a25961ea149d0e0961eb1f\$lut for cells of type $lut.
Using template $paramod$a44bfc089ebe40b83c2c06bb965c500df992ecfb\$lut for cells of type $lut.
Using template $paramod$5d7857fabe21469173922fe0aefba6deec4589c0\$lut for cells of type $lut.
Using template $paramod$e9f85a707ad8076d7e1b6616c949f1643c599839\$lut for cells of type $lut.
Using template $paramod$ef44c32253c23b340cbb5c633c1e57939cc69148\$lut for cells of type $lut.
Using template $paramod$eeb94fcd8e5392649fe04244642520b1ad9644c4\$lut for cells of type $lut.
Using template $paramod$680fd8d179aaa2b94b3b7c0dab400ac18bb55c38\$lut for cells of type $lut.
Using template $paramod$df0b68f8e63b2deb6710e23abd8b8ff0796d4897\$lut for cells of type $lut.
Using template $paramod$9943b8516a19dd850c4d1115d49099a85875ce31\$lut for cells of type $lut.
Using template $paramod$ca6175bd411af0e59cf06b9782b804e1adbbeda4\$lut for cells of type $lut.
Using template $paramod$044e8b1893c94f717651c5cd428e71c892566f52\$lut for cells of type $lut.
Using template $paramod$2399ec3599c626a9109ac209830762e214ae8fd7\$lut for cells of type $lut.
Using template $paramod$3525bc88021caeb0b6fb10b051fd947bd104e42a\$lut for cells of type $lut.
Using template $paramod$f9b715fbf1040e81e900b2461c2390d17ed5e988\$lut for cells of type $lut.
Using template $paramod$4da6fe9957da309dc16b8f31a6b80b19c05c808d\$lut for cells of type $lut.
Using template $paramod$108693244b026a3f36033e651dccfec6867972f5\$lut for cells of type $lut.
Using template $paramod$58b5afd04ded5d87898705ca9d813931fde7fe27\$lut for cells of type $lut.
Using template $paramod$5898ae4e52b22eca363a418fa94151158a507d30\$lut for cells of type $lut.
Using template $paramod$11a55679fc02c24af5d899575dcfd975170064fe\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10111100 for cells of type $lut.
Using template $paramod$a5fa16f6792f721e525cbdcedb4e5d3e91843765\$lut for cells of type $lut.
Using template $paramod$64983db93b60e57e89574e91fe67a6652aaee35a\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11110001 for cells of type $lut.
Using template $paramod$8b5cfd51a136f15086c81819c3ac4e80128b684d\$lut for cells of type $lut.
Using template $paramod$7e0277340d3f34d16bb7c3938d5c21ff955fcc9d\$lut for cells of type $lut.
Using template $paramod$30c7bb594369ca20ff4ff844ba6ed3179f45572d\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01111111 for cells of type $lut.
Using template $paramod$5766b753e513aa2393ffc25ef94ebc79dc098484\$lut for cells of type $lut.
Using template $paramod$ab2e45f7a350a5d7d54d88d8019d5256ae32568f\$lut for cells of type $lut.
Using template $paramod$6465025eeef90d209b95b9f70f04b40271b5811d\$lut for cells of type $lut.
Using template $paramod$3046fec3567c005d74ebd6a1ff3ac5cd15f46fcd\$lut for cells of type $lut.
Using template $paramod$83ee59f46eb162e73a2d3ee6c047e91158527ba8\$lut for cells of type $lut.
No more expansions possible.
<suppressed ~16306 debug messages>
Removed 0 unused cells and 27460 unused wires.

52.45. Executing AUTONAME pass.
Renamed 1141322 objects in module mkeclass_axi4 (308 iterations).
<suppressed ~26782 debug messages>

52.46. Executing HIERARCHY pass (managing design hierarchy).

52.46.1. Analyzing design hierarchy..
Top module:  \mkeclass_axi4

52.46.2. Analyzing design hierarchy..
Top module:  \mkeclass_axi4
Removed 0 unused modules.

52.47. Printing statistics.

=== mkeclass_axi4 ===

   Number of wires:              10615
   Number of wire bits:          65667
   Number of public wires:       10615
   Number of public wire bits:   65667
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              20093
     SB_CARRY                     2451
     SB_DFF                       1306
     SB_DFFE                      2467
     SB_DFFER                      973
     SB_DFFES                       29
     SB_DFFESR                     382
     SB_DFFESS                     113
     SB_DFFR                        96
     SB_DFFS                        19
     SB_DFFSR                       20
     SB_DFFSS                        1
     SB_LUT4                     12234
     SB_RAM40_4K                     2

52.48. Executing CHECK pass (checking for obvious problems).
Checking module mkeclass_axi4...
Found and reported 0 problems.

52.49. Executing JSON backend.

53. Printing statistics.

=== mkeclass_axi4 ===

   Number of wires:              10615
   Number of wire bits:          65667
   Number of public wires:       10615
   Number of public wire bits:   65667
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              20093
     SB_CARRY                     2451
     SB_DFF                       1306
     SB_DFFE                      2467
     SB_DFFER                      973
     SB_DFFES                       29
     SB_DFFESR                     382
     SB_DFFESS                     113
     SB_DFFR                        96
     SB_DFFS                        19
     SB_DFFSR                       20
     SB_DFFSS                        1
     SB_LUT4                     12234
     SB_RAM40_4K                     2

Warnings: 146 unique messages, 251 total
End of script. Logfile hash: 69b6c85bb9, CPU: user 52.37s system 0.22s, MEM: 332.71 MB peak
Yosys 0.33 (git sha1 2584903a060)
Time spent: 43% 1x abc (39 sec), 15% 62x opt_expr (14 sec), ...
