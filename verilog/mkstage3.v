//
// Generated by Bluespec Compiler, version 2021.07 (build 4cac6eba)
//
// On Sun Mar 16 14:52:04 IST 2025
//
//
// Ports:
// Name                         I/O  size props
// rx_stage3_common_deq_ena       O     1
// rx_stage3_type_deq_ena         O     1
// rx_stage3_dump_deq_ena         O     1
// RDY_memory_response_put        O     1 const
// commit_rd_get                  O    69
// RDY_commit_rd_get              O     1
// operand_fwding_get             O    70
// RDY_operand_fwding_get         O     1 const
// flush_fst                      O    64
// RDY_flush_fst                  O     1 const
// flush_snd                      O     1
// RDY_flush_snd                  O     1 const
// mv_csr_decode                  O   152
// RDY_mv_csr_decode              O     1 const
// mv_csr_misa_c                  O     1 reg
// RDY_mv_csr_misa_c              O     1 const
// RDY_clint_msip                 O     1 const
// RDY_clint_mtip                 O     1 const
// RDY_clint_mtime                O     1 const
// RDY_ext_interrupt              O     1 const
// csr_updated                    O     1 const
// RDY_csr_updated                O     1 const
// mv_interrupt                   O     1
// dump_get                       O   167 reg
// RDY_dump_get                   O     1 reg
// mv_trigger_data1               O    44 reg
// RDY_mv_trigger_data1           O     1 const
// mv_trigger_data2               O   128 reg
// RDY_mv_trigger_data2           O     1 const
// mv_trigger_enable              O     2
// RDY_mv_trigger_enable          O     1 const
// mv_curr_priv                   O     2 reg
// RDY_mv_curr_priv               O     1 const
// RDY_ma_delayed_output          O     1 const
// mv_pmp_cfg                     O    32 reg
// RDY_mv_pmp_cfg                 O     1 const
// mv_pmp_addr                    O   120 reg
// RDY_mv_pmp_addr                O     1 const
// CLK                            I     1 clock
// RST_N                          I     1 reset
// rx_stage3_common_notEmpty_b    I     1 unused
// rx_stage3_common_first_deq_rdy_b  I     1
// rx_stage3_common_first_x       I    70
// rx_stage3_type_notEmpty_b      I     1 unused
// rx_stage3_type_first_deq_rdy_b  I     1
// rx_stage3_type_first_x         I    83
// rx_stage3_dump_notEmpty_b      I     1 unused
// rx_stage3_dump_first_deq_rdy_b  I     1
// rx_stage3_dump_first_x         I    96
// memory_response_put            I    66
// clint_msip_intrpt              I     1 reg
// clint_mtip_intrpt              I     1 reg
// clint_mtime_c_mtime            I    64 reg
// ext_interrupt_i                I     1 reg
// ma_delayed_output_r            I    65
// EN_memory_response_put         I     1
// EN_clint_msip                  I     1
// EN_clint_mtip                  I     1
// EN_clint_mtime                 I     1
// EN_ext_interrupt               I     1
// EN_ma_delayed_output           I     1
// EN_commit_rd_get               I     1 unused
// EN_operand_fwding_get          I     1 unused
// EN_dump_get                    I     1
//
// Combinational paths from inputs to outputs:
//   (rx_stage3_common_first_deq_rdy_b,
//    rx_stage3_common_first_x,
//    rx_stage3_type_first_deq_rdy_b,
//    rx_stage3_type_first_x,
//    rx_stage3_dump_first_deq_rdy_b,
//    ma_delayed_output_r,
//    EN_ma_delayed_output,
//    EN_dump_get) -> rx_stage3_common_deq_ena
//   (rx_stage3_common_first_deq_rdy_b,
//    rx_stage3_common_first_x,
//    rx_stage3_type_first_deq_rdy_b,
//    rx_stage3_type_first_x,
//    rx_stage3_dump_first_deq_rdy_b,
//    ma_delayed_output_r,
//    EN_ma_delayed_output,
//    EN_dump_get) -> rx_stage3_type_deq_ena
//   (rx_stage3_common_first_deq_rdy_b,
//    rx_stage3_common_first_x,
//    rx_stage3_type_first_deq_rdy_b,
//    rx_stage3_type_first_x,
//    rx_stage3_dump_first_deq_rdy_b,
//    ma_delayed_output_r,
//    EN_ma_delayed_output,
//    EN_dump_get) -> rx_stage3_dump_deq_ena
//   (rx_stage3_common_first_deq_rdy_b,
//    rx_stage3_common_first_x,
//    rx_stage3_type_first_deq_rdy_b,
//    rx_stage3_type_first_x,
//    rx_stage3_dump_first_deq_rdy_b,
//    ma_delayed_output_r,
//    EN_ma_delayed_output,
//    EN_dump_get) -> RDY_commit_rd_get
//   (rx_stage3_common_first_deq_rdy_b,
//    rx_stage3_common_first_x,
//    rx_stage3_type_first_deq_rdy_b,
//    rx_stage3_type_first_x,
//    rx_stage3_dump_first_deq_rdy_b,
//    EN_ma_delayed_output,
//    EN_dump_get) -> flush_fst
//   (rx_stage3_common_first_deq_rdy_b,
//    rx_stage3_common_first_x,
//    rx_stage3_type_first_deq_rdy_b,
//    rx_stage3_type_first_x,
//    rx_stage3_dump_first_deq_rdy_b,
//    EN_ma_delayed_output,
//    EN_dump_get) -> flush_snd
//   (rx_stage3_common_first_deq_rdy_b,
//    rx_stage3_common_first_x,
//    rx_stage3_type_first_deq_rdy_b,
//    rx_stage3_type_first_x,
//    rx_stage3_dump_first_deq_rdy_b,
//    ma_delayed_output_r,
//    EN_ma_delayed_output,
//    EN_dump_get) -> commit_rd_get
//   (rx_stage3_common_first_deq_rdy_b,
//    rx_stage3_common_first_x,
//    rx_stage3_type_first_deq_rdy_b,
//    rx_stage3_type_first_x,
//    rx_stage3_dump_first_deq_rdy_b,
//    ma_delayed_output_r,
//    EN_ma_delayed_output,
//    EN_dump_get) -> operand_fwding_get
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mkstage3(CLK,
		RST_N,

		rx_stage3_common_notEmpty_b,

		rx_stage3_common_first_deq_rdy_b,

		rx_stage3_common_first_x,

		rx_stage3_common_deq_ena,

		rx_stage3_type_notEmpty_b,

		rx_stage3_type_first_deq_rdy_b,

		rx_stage3_type_first_x,

		rx_stage3_type_deq_ena,

		rx_stage3_dump_notEmpty_b,

		rx_stage3_dump_first_deq_rdy_b,

		rx_stage3_dump_first_x,

		rx_stage3_dump_deq_ena,

		memory_response_put,
		EN_memory_response_put,
		RDY_memory_response_put,

		EN_commit_rd_get,
		commit_rd_get,
		RDY_commit_rd_get,

		EN_operand_fwding_get,
		operand_fwding_get,
		RDY_operand_fwding_get,

		flush_fst,
		RDY_flush_fst,

		flush_snd,
		RDY_flush_snd,

		mv_csr_decode,
		RDY_mv_csr_decode,

		mv_csr_misa_c,
		RDY_mv_csr_misa_c,

		clint_msip_intrpt,
		EN_clint_msip,
		RDY_clint_msip,

		clint_mtip_intrpt,
		EN_clint_mtip,
		RDY_clint_mtip,

		clint_mtime_c_mtime,
		EN_clint_mtime,
		RDY_clint_mtime,

		ext_interrupt_i,
		EN_ext_interrupt,
		RDY_ext_interrupt,

		csr_updated,
		RDY_csr_updated,

		mv_interrupt,

		EN_dump_get,
		dump_get,
		RDY_dump_get,

		mv_trigger_data1,
		RDY_mv_trigger_data1,

		mv_trigger_data2,
		RDY_mv_trigger_data2,

		mv_trigger_enable,
		RDY_mv_trigger_enable,

		mv_curr_priv,
		RDY_mv_curr_priv,

		ma_delayed_output_r,
		EN_ma_delayed_output,
		RDY_ma_delayed_output,

		mv_pmp_cfg,
		RDY_mv_pmp_cfg,

		mv_pmp_addr,
		RDY_mv_pmp_addr);
  input  CLK;
  input  RST_N;

  // action method rx_stage3_common_notEmpty
  input  rx_stage3_common_notEmpty_b;

  // action method rx_stage3_common_first_deq_rdy
  input  rx_stage3_common_first_deq_rdy_b;

  // action method rx_stage3_common_first
  input  [69 : 0] rx_stage3_common_first_x;

  // value method rx_stage3_common_deq_ena
  output rx_stage3_common_deq_ena;

  // action method rx_stage3_type_notEmpty
  input  rx_stage3_type_notEmpty_b;

  // action method rx_stage3_type_first_deq_rdy
  input  rx_stage3_type_first_deq_rdy_b;

  // action method rx_stage3_type_first
  input  [82 : 0] rx_stage3_type_first_x;

  // value method rx_stage3_type_deq_ena
  output rx_stage3_type_deq_ena;

  // action method rx_stage3_dump_notEmpty
  input  rx_stage3_dump_notEmpty_b;

  // action method rx_stage3_dump_first_deq_rdy
  input  rx_stage3_dump_first_deq_rdy_b;

  // action method rx_stage3_dump_first
  input  [95 : 0] rx_stage3_dump_first_x;

  // value method rx_stage3_dump_deq_ena
  output rx_stage3_dump_deq_ena;

  // action method memory_response_put
  input  [65 : 0] memory_response_put;
  input  EN_memory_response_put;
  output RDY_memory_response_put;

  // actionvalue method commit_rd_get
  input  EN_commit_rd_get;
  output [68 : 0] commit_rd_get;
  output RDY_commit_rd_get;

  // actionvalue method operand_fwding_get
  input  EN_operand_fwding_get;
  output [69 : 0] operand_fwding_get;
  output RDY_operand_fwding_get;

  // value method flush_fst
  output [63 : 0] flush_fst;
  output RDY_flush_fst;

  // value method flush_snd
  output flush_snd;
  output RDY_flush_snd;

  // value method mv_csr_decode
  output [151 : 0] mv_csr_decode;
  output RDY_mv_csr_decode;

  // value method mv_csr_misa_c
  output mv_csr_misa_c;
  output RDY_mv_csr_misa_c;

  // action method clint_msip
  input  clint_msip_intrpt;
  input  EN_clint_msip;
  output RDY_clint_msip;

  // action method clint_mtip
  input  clint_mtip_intrpt;
  input  EN_clint_mtip;
  output RDY_clint_mtip;

  // action method clint_mtime
  input  [63 : 0] clint_mtime_c_mtime;
  input  EN_clint_mtime;
  output RDY_clint_mtime;

  // action method ext_interrupt
  input  ext_interrupt_i;
  input  EN_ext_interrupt;
  output RDY_ext_interrupt;

  // value method csr_updated
  output csr_updated;
  output RDY_csr_updated;

  // value method mv_interrupt
  output mv_interrupt;

  // actionvalue method dump_get
  input  EN_dump_get;
  output [166 : 0] dump_get;
  output RDY_dump_get;

  // value method mv_trigger_data1
  output [43 : 0] mv_trigger_data1;
  output RDY_mv_trigger_data1;

  // value method mv_trigger_data2
  output [127 : 0] mv_trigger_data2;
  output RDY_mv_trigger_data2;

  // value method mv_trigger_enable
  output [1 : 0] mv_trigger_enable;
  output RDY_mv_trigger_enable;

  // value method mv_curr_priv
  output [1 : 0] mv_curr_priv;
  output RDY_mv_curr_priv;

  // action method ma_delayed_output
  input  [64 : 0] ma_delayed_output_r;
  input  EN_ma_delayed_output;
  output RDY_ma_delayed_output;

  // value method mv_pmp_cfg
  output [31 : 0] mv_pmp_cfg;
  output RDY_mv_pmp_cfg;

  // value method mv_pmp_addr
  output [119 : 0] mv_pmp_addr;
  output RDY_mv_pmp_addr;

  // signals for module outputs
  wire [166 : 0] dump_get;
  wire [151 : 0] mv_csr_decode;
  wire [127 : 0] mv_trigger_data2;
  wire [119 : 0] mv_pmp_addr;
  wire [69 : 0] operand_fwding_get;
  wire [68 : 0] commit_rd_get;
  wire [63 : 0] flush_fst;
  wire [43 : 0] mv_trigger_data1;
  wire [31 : 0] mv_pmp_cfg;
  wire [1 : 0] mv_curr_priv, mv_trigger_enable;
  wire RDY_clint_msip,
       RDY_clint_mtime,
       RDY_clint_mtip,
       RDY_commit_rd_get,
       RDY_csr_updated,
       RDY_dump_get,
       RDY_ext_interrupt,
       RDY_flush_fst,
       RDY_flush_snd,
       RDY_ma_delayed_output,
       RDY_memory_response_put,
       RDY_mv_csr_decode,
       RDY_mv_csr_misa_c,
       RDY_mv_curr_priv,
       RDY_mv_pmp_addr,
       RDY_mv_pmp_cfg,
       RDY_mv_trigger_data1,
       RDY_mv_trigger_data2,
       RDY_mv_trigger_enable,
       RDY_operand_fwding_get,
       csr_updated,
       flush_snd,
       mv_csr_misa_c,
       mv_interrupt,
       rx_stage3_common_deq_ena,
       rx_stage3_dump_deq_ena,
       rx_stage3_type_deq_ena;

  // inlined wires
  wire [69 : 0] wr_commit_wget, wr_operand_fwding_wget;
  wire [66 : 0] wr_memory_response_1_wget;
  wire [64 : 0] wr_flush_wget;
  wire ff_stage3_common_w_ena_whas,
       ff_stage3_dump_w_ena_whas,
       ff_stage3_type_w_ena_whas,
       wr_commit_whas,
       wr_flush_whas,
       wr_operand_fwding_whas;

  // register rg_epoch
  reg rg_epoch;
  wire rg_epoch_D_IN, rg_epoch_EN;

  // register rg_rerun
  reg rg_rerun;
  wire rg_rerun_D_IN, rg_rerun_EN;

  // register wr_memory_response
  reg [66 : 0] wr_memory_response;
  wire [66 : 0] wr_memory_response_D_IN;
  wire wr_memory_response_EN;

  // ports of submodule csr
  wire [151 : 0] csr_mv_csr_decode;
  wire [128 : 0] csr_system_instruction;
  wire [127 : 0] csr_mv_trigger_data2;
  wire [119 : 0] csr_mv_pmp_addr;
  wire [63 : 0] csr_clint_mtime_c_mtime,
		csr_system_instruction_op1,
		csr_take_trap,
		csr_take_trap_badaddr,
		csr_take_trap_pc;
  wire [43 : 0] csr_mv_trigger_data1;
  wire [31 : 0] csr_mv_pmp_cfg;
  wire [11 : 0] csr_system_instruction_csr_address;
  wire [5 : 0] csr_take_trap_type_cause;
  wire [2 : 0] csr_system_instruction_funct3;
  wire [1 : 0] csr_mv_curr_priv,
	       csr_mv_trigger_enable,
	       csr_system_instruction_lpc;
  wire csr_EN_clint_msip,
       csr_EN_clint_mtime,
       csr_EN_clint_mtip,
       csr_EN_ext_interrupt,
       csr_EN_incr_minstret,
       csr_EN_system_instruction,
       csr_EN_take_trap,
       csr_clint_msip_intrpt,
       csr_clint_mtip_intrpt,
       csr_ext_interrupt_ex_i,
       csr_mv_csr_misa_c,
       csr_mv_interrupt;

  // ports of submodule dump_ff
  wire [166 : 0] dump_ff_D_IN, dump_ff_D_OUT;
  wire dump_ff_CLR, dump_ff_DEQ, dump_ff_EMPTY_N, dump_ff_ENQ, dump_ff_FULL_N;

  // rule scheduling signals
  wire CAN_FIRE_RL_increment_instruction_counter,
       CAN_FIRE_RL_instruction_commit,
       CAN_FIRE_RL_wr_memory_response__dreg_update,
       CAN_FIRE_clint_msip,
       CAN_FIRE_clint_mtime,
       CAN_FIRE_clint_mtip,
       CAN_FIRE_commit_rd_get,
       CAN_FIRE_dump_get,
       CAN_FIRE_ext_interrupt,
       CAN_FIRE_ma_delayed_output,
       CAN_FIRE_memory_response_put,
       CAN_FIRE_operand_fwding_get,
       CAN_FIRE_rx_stage3_common_first,
       CAN_FIRE_rx_stage3_common_first_deq_rdy,
       CAN_FIRE_rx_stage3_common_notEmpty,
       CAN_FIRE_rx_stage3_dump_first,
       CAN_FIRE_rx_stage3_dump_first_deq_rdy,
       CAN_FIRE_rx_stage3_dump_notEmpty,
       CAN_FIRE_rx_stage3_type_first,
       CAN_FIRE_rx_stage3_type_first_deq_rdy,
       CAN_FIRE_rx_stage3_type_notEmpty,
       WILL_FIRE_RL_increment_instruction_counter,
       WILL_FIRE_RL_instruction_commit,
       WILL_FIRE_RL_wr_memory_response__dreg_update,
       WILL_FIRE_clint_msip,
       WILL_FIRE_clint_mtime,
       WILL_FIRE_clint_mtip,
       WILL_FIRE_commit_rd_get,
       WILL_FIRE_dump_get,
       WILL_FIRE_ext_interrupt,
       WILL_FIRE_ma_delayed_output,
       WILL_FIRE_memory_response_put,
       WILL_FIRE_operand_fwding_get,
       WILL_FIRE_rx_stage3_common_first,
       WILL_FIRE_rx_stage3_common_first_deq_rdy,
       WILL_FIRE_rx_stage3_common_notEmpty,
       WILL_FIRE_rx_stage3_dump_first,
       WILL_FIRE_rx_stage3_dump_first_deq_rdy,
       WILL_FIRE_rx_stage3_dump_notEmpty,
       WILL_FIRE_rx_stage3_type_first,
       WILL_FIRE_rx_stage3_type_first_deq_rdy,
       WILL_FIRE_rx_stage3_type_notEmpty;

  // declarations used by system tasks
  // synopsys translate_off
  reg TASK_testplusargs___d14;
  reg TASK_testplusargs___d15;
  reg TASK_testplusargs___d16;
  reg [63 : 0] v__h1933;
  reg TASK_testplusargs___d26;
  reg TASK_testplusargs___d27;
  reg TASK_testplusargs___d28;
  reg [63 : 0] v__h2141;
  reg TASK_testplusargs___d40;
  reg TASK_testplusargs___d41;
  reg TASK_testplusargs___d42;
  reg [63 : 0] v__h2371;
  reg TASK_testplusargs___d138;
  reg TASK_testplusargs___d139;
  reg TASK_testplusargs___d140;
  reg [63 : 0] v__h3741;
  reg TASK_testplusargs___d148;
  reg TASK_testplusargs___d149;
  reg TASK_testplusargs___d150;
  reg [63 : 0] v__h3449;
  reg TASK_testplusargs___d183;
  reg TASK_testplusargs___d184;
  reg TASK_testplusargs___d185;
  reg [63 : 0] v__h4229;
  reg TASK_testplusargs___d243;
  reg TASK_testplusargs___d244;
  reg TASK_testplusargs___d245;
  reg [63 : 0] v__h5473;
  reg TASK_testplusargs___d267;
  reg TASK_testplusargs___d268;
  reg TASK_testplusargs___d269;
  reg [63 : 0] v__h5547;
  reg TASK_testplusargs___d278;
  reg TASK_testplusargs___d279;
  reg TASK_testplusargs___d280;
  reg [63 : 0] v__h5642;
  reg rg_rerun_18_AND_TASK_testplusargs_38_OR_TASK_t_ETC___d143;
  reg ff_stage3_type_w_data_whas__6_AND_ff_stage3_ty_ETC___d153;
  reg ff_stage3_type_w_data_wget__7_BIT_0_4_AND_NOT__ETC___d188;
  reg NOT_rg_rerun_18_36_AND_ff_stage3_type_w_data_w_ETC___d190;
  reg wr_memory_response_08_BIT_1_13_AND_TASK_testpl_ETC___d248;
  reg NOT_rg_rerun_18_36_AND_ff_stage3_type_w_data_w_ETC___d252;
  reg NOT_wr_memory_response_08_BIT_66_09_60_OR_NOT__ETC___d272;
  reg NOT_rg_rerun_18_36_AND_ff_stage3_type_w_data_w_ETC___d275;
  reg TASK_testplusargs_0_OR_TASK_testplusargs_1_AND_ETC___d51;
  reg TASK_testplusargs_0_OR_TASK_testplusargs_1_AND_ETC___d54;
  reg TASK_testplusargs_0_OR_TASK_testplusargs_1_AND_ETC___d57;
  reg TASK_testplusargs_0_OR_TASK_testplusargs_1_AND_ETC___d67;
  reg TASK_testplusargs_0_OR_TASK_testplusargs_1_AND_ETC___d86;
  reg TASK_testplusargs_0_OR_TASK_testplusargs_1_AND_ETC___d89;
  reg TASK_testplusargs_0_OR_TASK_testplusargs_1_AND_ETC___d91;
  reg TASK_testplusargs_0_OR_TASK_testplusargs_1_AND_ETC___d98;
  reg TASK_testplusargs_0_OR_TASK_testplusargs_1_AND_ETC___d102;
  reg TASK_testplusargs_0_OR_TASK_testplusargs_1_AND_ETC___d105;
  reg TASK_testplusargs_0_OR_TASK_testplusargs_1_AND_ETC___d108;
  reg TASK_testplusargs_0_OR_TASK_testplusargs_1_AND_ETC___d115;
  reg NOT_rg_epoch_20_EQ_IF_ff_stage3_common_w_data__ETC___d283;
  // synopsys translate_on

  // remaining internal signals
  wire [166 : 0] _dfoo2,
		 csr_mv_curr_priv__77_CONCAT_ff_stage3_dump_w_d_ETC___d230;
  wire [69 : 0] _dfoo10;
  wire [64 : 0] _dfoo14;
  wire [63 : 0] _theResult_____1_fst__h3924,
		_theResult____h3801,
		_theResult____h4686,
		_theResult____h4999,
		data__h3804,
		x__read_rdvalue__h6437;
  wire [5 : 0] type_cause__h5069;
  wire [4 : 0] x__read_rdaddr__h6436;
  wire NOT_rg_rerun_18_36_AND_ff_stage3_type_w_data_w_ETC___d173,
       NOT_rg_rerun_18_36_AND_ff_stage3_type_w_data_w_ETC___d181,
       NOT_rg_rerun_18_36_AND_ff_stage3_type_w_data_w_ETC___d196,
       _dfoo13,
       _dfoo15,
       _dfoo17,
       _dfoo25,
       ff_stage3_type_w_data_whas__6_AND_ff_stage3_ty_ETC___d237,
       ff_stage3_type_w_data_whas__6_AND_ff_stage3_ty_ETC___d264,
       rg_epoch_20_EQ_IF_ff_stage3_common_w_data_whas_ETC___d121,
       rg_epoch_20_EQ_IF_ff_stage3_common_w_data_whas_ETC___d124,
       rg_epoch_20_EQ_IF_ff_stage3_common_w_data_whas_ETC___d147,
       rg_epoch_20_EQ_IF_ff_stage3_common_w_data_whas_ETC___d158,
       rg_epoch_20_EQ_IF_ff_stage3_common_w_data_whas_ETC___d194,
       rg_rerun_18_OR_ff_stage3_type_w_data_whas__6_A_ETC___d123,
       rg_rerun_18_OR_ff_stage3_type_w_data_whas__6_A_ETC___d134,
       wr_memory_response_08_BIT_0_10_EQ_rg_epoch_20___d211,
       x__h5350;

  // action method rx_stage3_common_notEmpty
  assign CAN_FIRE_rx_stage3_common_notEmpty = 1'd1 ;
  assign WILL_FIRE_rx_stage3_common_notEmpty = 1'd1 ;

  // action method rx_stage3_common_first_deq_rdy
  assign CAN_FIRE_rx_stage3_common_first_deq_rdy = 1'd1 ;
  assign WILL_FIRE_rx_stage3_common_first_deq_rdy = 1'd1 ;

  // action method rx_stage3_common_first
  assign CAN_FIRE_rx_stage3_common_first = 1'd1 ;
  assign WILL_FIRE_rx_stage3_common_first = 1'd1 ;

  // value method rx_stage3_common_deq_ena
  assign rx_stage3_common_deq_ena = ff_stage3_common_w_ena_whas ;

  // action method rx_stage3_type_notEmpty
  assign CAN_FIRE_rx_stage3_type_notEmpty = 1'd1 ;
  assign WILL_FIRE_rx_stage3_type_notEmpty = 1'd1 ;

  // action method rx_stage3_type_first_deq_rdy
  assign CAN_FIRE_rx_stage3_type_first_deq_rdy = 1'd1 ;
  assign WILL_FIRE_rx_stage3_type_first_deq_rdy = 1'd1 ;

  // action method rx_stage3_type_first
  assign CAN_FIRE_rx_stage3_type_first = 1'd1 ;
  assign WILL_FIRE_rx_stage3_type_first = 1'd1 ;

  // value method rx_stage3_type_deq_ena
  assign rx_stage3_type_deq_ena = ff_stage3_type_w_ena_whas ;

  // action method rx_stage3_dump_notEmpty
  assign CAN_FIRE_rx_stage3_dump_notEmpty = 1'd1 ;
  assign WILL_FIRE_rx_stage3_dump_notEmpty = 1'd1 ;

  // action method rx_stage3_dump_first_deq_rdy
  assign CAN_FIRE_rx_stage3_dump_first_deq_rdy = 1'd1 ;
  assign WILL_FIRE_rx_stage3_dump_first_deq_rdy = 1'd1 ;

  // action method rx_stage3_dump_first
  assign CAN_FIRE_rx_stage3_dump_first = 1'd1 ;
  assign WILL_FIRE_rx_stage3_dump_first = 1'd1 ;

  // value method rx_stage3_dump_deq_ena
  assign rx_stage3_dump_deq_ena = ff_stage3_dump_w_ena_whas ;

  // action method memory_response_put
  assign RDY_memory_response_put = 1'd1 ;
  assign CAN_FIRE_memory_response_put = 1'd1 ;
  assign WILL_FIRE_memory_response_put = EN_memory_response_put ;

  // actionvalue method commit_rd_get
  assign commit_rd_get = wr_commit_wget[68:0] ;
  assign RDY_commit_rd_get = wr_commit_whas && wr_commit_wget[69] ;
  assign CAN_FIRE_commit_rd_get = RDY_commit_rd_get ;
  assign WILL_FIRE_commit_rd_get = EN_commit_rd_get ;

  // actionvalue method operand_fwding_get
  assign operand_fwding_get =
	     { x__read_rdaddr__h6436,
	       x__read_rdvalue__h6437,
	       wr_operand_fwding_whas && wr_operand_fwding_wget[0] } ;
  assign RDY_operand_fwding_get = 1'd1 ;
  assign CAN_FIRE_operand_fwding_get = 1'd1 ;
  assign WILL_FIRE_operand_fwding_get = EN_operand_fwding_get ;

  // value method flush_fst
  assign flush_fst = wr_flush_wget[64:1] ;
  assign RDY_flush_fst = 1'd1 ;

  // value method flush_snd
  assign flush_snd = wr_flush_whas && wr_flush_wget[0] ;
  assign RDY_flush_snd = 1'd1 ;

  // value method mv_csr_decode
  assign mv_csr_decode = csr_mv_csr_decode ;
  assign RDY_mv_csr_decode = 1'd1 ;

  // value method mv_csr_misa_c
  assign mv_csr_misa_c = csr_mv_csr_misa_c ;
  assign RDY_mv_csr_misa_c = 1'd1 ;

  // action method clint_msip
  assign RDY_clint_msip = 1'd1 ;
  assign CAN_FIRE_clint_msip = 1'd1 ;
  assign WILL_FIRE_clint_msip = EN_clint_msip ;

  // action method clint_mtip
  assign RDY_clint_mtip = 1'd1 ;
  assign CAN_FIRE_clint_mtip = 1'd1 ;
  assign WILL_FIRE_clint_mtip = EN_clint_mtip ;

  // action method clint_mtime
  assign RDY_clint_mtime = 1'd1 ;
  assign CAN_FIRE_clint_mtime = 1'd1 ;
  assign WILL_FIRE_clint_mtime = EN_clint_mtime ;

  // action method ext_interrupt
  assign RDY_ext_interrupt = 1'd1 ;
  assign CAN_FIRE_ext_interrupt = 1'd1 ;
  assign WILL_FIRE_ext_interrupt = EN_ext_interrupt ;

  // value method csr_updated
  assign csr_updated = 1'b0 ;
  assign RDY_csr_updated = 1'd1 ;

  // value method mv_interrupt
  assign mv_interrupt = csr_mv_interrupt ;

  // actionvalue method dump_get
  assign dump_get = dump_ff_D_OUT ;
  assign RDY_dump_get = dump_ff_EMPTY_N ;
  assign CAN_FIRE_dump_get = dump_ff_EMPTY_N ;
  assign WILL_FIRE_dump_get = EN_dump_get ;

  // value method mv_trigger_data1
  assign mv_trigger_data1 = csr_mv_trigger_data1 ;
  assign RDY_mv_trigger_data1 = 1'd1 ;

  // value method mv_trigger_data2
  assign mv_trigger_data2 = csr_mv_trigger_data2 ;
  assign RDY_mv_trigger_data2 = 1'd1 ;

  // value method mv_trigger_enable
  assign mv_trigger_enable = csr_mv_trigger_enable ;
  assign RDY_mv_trigger_enable = 1'd1 ;

  // value method mv_curr_priv
  assign mv_curr_priv = csr_mv_curr_priv ;
  assign RDY_mv_curr_priv = 1'd1 ;

  // action method ma_delayed_output
  assign RDY_ma_delayed_output = 1'd1 ;
  assign CAN_FIRE_ma_delayed_output = 1'd1 ;
  assign WILL_FIRE_ma_delayed_output = EN_ma_delayed_output ;

  // value method mv_pmp_cfg
  assign mv_pmp_cfg = csr_mv_pmp_cfg ;
  assign RDY_mv_pmp_cfg = 1'd1 ;

  // value method mv_pmp_addr
  assign mv_pmp_addr = csr_mv_pmp_addr ;
  assign RDY_mv_pmp_addr = 1'd1 ;

  // submodule csr
  mkcsr csr(.CLK(CLK),
	    .RST_N(RST_N),
	    .clint_msip_intrpt(csr_clint_msip_intrpt),
	    .clint_mtime_c_mtime(csr_clint_mtime_c_mtime),
	    .clint_mtip_intrpt(csr_clint_mtip_intrpt),
	    .ext_interrupt_ex_i(csr_ext_interrupt_ex_i),
	    .system_instruction_csr_address(csr_system_instruction_csr_address),
	    .system_instruction_funct3(csr_system_instruction_funct3),
	    .system_instruction_lpc(csr_system_instruction_lpc),
	    .system_instruction_op1(csr_system_instruction_op1),
	    .take_trap_badaddr(csr_take_trap_badaddr),
	    .take_trap_pc(csr_take_trap_pc),
	    .take_trap_type_cause(csr_take_trap_type_cause),
	    .EN_system_instruction(csr_EN_system_instruction),
	    .EN_take_trap(csr_EN_take_trap),
	    .EN_clint_msip(csr_EN_clint_msip),
	    .EN_clint_mtip(csr_EN_clint_mtip),
	    .EN_clint_mtime(csr_EN_clint_mtime),
	    .EN_incr_minstret(csr_EN_incr_minstret),
	    .EN_ext_interrupt(csr_EN_ext_interrupt),
	    .system_instruction(csr_system_instruction),
	    .RDY_system_instruction(),
	    .mv_csr_decode(csr_mv_csr_decode),
	    .RDY_mv_csr_decode(),
	    .take_trap(csr_take_trap),
	    .RDY_take_trap(),
	    .RDY_clint_msip(),
	    .RDY_clint_mtip(),
	    .RDY_clint_mtime(),
	    .RDY_incr_minstret(),
	    .RDY_ext_interrupt(),
	    .mv_csr_misa_c(csr_mv_csr_misa_c),
	    .RDY_mv_csr_misa_c(),
	    .mv_interrupt(csr_mv_interrupt),
	    .mv_curr_priv(csr_mv_curr_priv),
	    .RDY_mv_curr_priv(),
	    .csr_mstatus(),
	    .RDY_csr_mstatus(),
	    .mv_pmp_cfg(csr_mv_pmp_cfg),
	    .RDY_mv_pmp_cfg(),
	    .mv_pmp_addr(csr_mv_pmp_addr),
	    .RDY_mv_pmp_addr(),
	    .mv_trigger_data1(csr_mv_trigger_data1),
	    .RDY_mv_trigger_data1(),
	    .mv_trigger_data2(csr_mv_trigger_data2),
	    .RDY_mv_trigger_data2(),
	    .mv_trigger_enable(csr_mv_trigger_enable),
	    .RDY_mv_trigger_enable());

  // submodule dump_ff
  FIFOL1 #(.width(32'd167)) dump_ff(.RST(RST_N),
				    .CLK(CLK),
				    .D_IN(dump_ff_D_IN),
				    .ENQ(dump_ff_ENQ),
				    .DEQ(dump_ff_DEQ),
				    .CLR(dump_ff_CLR),
				    .D_OUT(dump_ff_D_OUT),
				    .FULL_N(dump_ff_FULL_N),
				    .EMPTY_N(dump_ff_EMPTY_N));

  // rule RL_instruction_commit
  assign CAN_FIRE_RL_instruction_commit =
	     rx_stage3_common_first_deq_rdy_b &&
	     rx_stage3_type_first_deq_rdy_b &&
	     rx_stage3_dump_first_deq_rdy_b &&
	     EN_ma_delayed_output &&
	     dump_ff_FULL_N ;
  assign WILL_FIRE_RL_instruction_commit = CAN_FIRE_RL_instruction_commit ;

  // rule RL_increment_instruction_counter
  assign CAN_FIRE_RL_increment_instruction_counter = RDY_commit_rd_get ;
  assign WILL_FIRE_RL_increment_instruction_counter =
	     CAN_FIRE_RL_increment_instruction_counter &&
	     !WILL_FIRE_RL_instruction_commit ;

  // rule RL_wr_memory_response__dreg_update
  assign CAN_FIRE_RL_wr_memory_response__dreg_update = 1'd1 ;
  assign WILL_FIRE_RL_wr_memory_response__dreg_update = 1'd1 ;

  // inlined wires
  assign ff_stage3_common_w_ena_whas =
	     WILL_FIRE_RL_instruction_commit &&
	     (rg_rerun_18_OR_ff_stage3_type_w_data_whas__6_A_ETC___d123 ||
	      _dfoo17) ;
  assign ff_stage3_type_w_ena_whas =
	     WILL_FIRE_RL_instruction_commit &&
	     (rg_rerun_18_OR_ff_stage3_type_w_data_whas__6_A_ETC___d123 ||
	      _dfoo17) ;
  assign ff_stage3_dump_w_ena_whas =
	     WILL_FIRE_RL_instruction_commit &&
	     (rg_rerun_18_OR_ff_stage3_type_w_data_whas__6_A_ETC___d123 ||
	      _dfoo17) ;
  assign wr_memory_response_1_wget = { 1'd1, memory_response_put } ;
  assign wr_operand_fwding_wget =
	     rg_epoch_20_EQ_IF_ff_stage3_common_w_data_whas_ETC___d158 ?
	       { rx_stage3_common_first_x[5:1],
		 data__h3804,
		 !rx_stage3_type_first_x[0] || ma_delayed_output_r[0] } :
	       { rx_stage3_common_first_x[5:1], _theResult____h4999, 1'd1 } ;
  assign wr_operand_fwding_whas = WILL_FIRE_RL_instruction_commit && _dfoo25 ;
  assign wr_commit_wget =
	     (rg_epoch_20_EQ_IF_ff_stage3_common_w_data_whas_ETC___d121 &&
	      NOT_rg_rerun_18_36_AND_ff_stage3_type_w_data_w_ETC___d173) ?
	       { 1'd1, rx_stage3_common_first_x[5:1], data__h3804 } :
	       _dfoo10 ;
  assign wr_commit_whas = WILL_FIRE_RL_instruction_commit && _dfoo15 ;
  assign wr_flush_wget =
	     rg_epoch_20_EQ_IF_ff_stage3_common_w_data_whas_ETC___d124 ?
	       { rg_rerun ? rx_stage3_common_first_x[69:6] : csr_take_trap,
		 1'd1 } :
	       _dfoo14 ;
  assign wr_flush_whas =
	     WILL_FIRE_RL_instruction_commit &&
	     (rg_epoch_20_EQ_IF_ff_stage3_common_w_data_whas_ETC___d124 ||
	      _dfoo13) ;

  // register rg_epoch
  assign rg_epoch_D_IN = x__h5350 ;
  assign rg_epoch_EN =
	     WILL_FIRE_RL_instruction_commit &&
	     (rg_epoch_20_EQ_IF_ff_stage3_common_w_data_whas_ETC___d124 ||
	      _dfoo13) ;

  // register rg_rerun
  assign rg_rerun_D_IN =
	     !rg_epoch_20_EQ_IF_ff_stage3_common_w_data_whas_ETC___d121 ||
	     !rg_rerun_18_OR_ff_stage3_type_w_data_whas__6_A_ETC___d134 ||
	     !rg_rerun ;
  assign rg_rerun_EN =
	     WILL_FIRE_RL_instruction_commit &&
	     (rg_epoch_20_EQ_IF_ff_stage3_common_w_data_whas_ETC___d121 &&
	      rg_rerun_18_OR_ff_stage3_type_w_data_whas__6_A_ETC___d134 ||
	      rg_epoch_20_EQ_IF_ff_stage3_common_w_data_whas_ETC___d121 &&
	      !rg_rerun &&
	      rx_stage3_type_first_x[82:81] == 2'd0 &&
	      rx_stage3_type_first_x[67:66] == 2'd3) ;

  // register wr_memory_response
  assign wr_memory_response_D_IN =
	     EN_memory_response_put ?
	       wr_memory_response_1_wget :
	       { 1'd0, 66'h2AAAAAAAAAAAAAAAA /* unspecified value */  } ;
  assign wr_memory_response_EN = 1'd1 ;

  // submodule csr
  assign csr_clint_msip_intrpt = clint_msip_intrpt ;
  assign csr_clint_mtime_c_mtime = clint_mtime_c_mtime ;
  assign csr_clint_mtip_intrpt = clint_mtip_intrpt ;
  assign csr_ext_interrupt_ex_i = ext_interrupt_i ;
  assign csr_system_instruction_csr_address = rx_stage3_type_first_x[14:3] ;
  assign csr_system_instruction_funct3 = rx_stage3_type_first_x[2:0] ;
  assign csr_system_instruction_lpc = rx_stage3_type_first_x[16:15] ;
  assign csr_system_instruction_op1 = rx_stage3_type_first_x[80:17] ;
  assign csr_take_trap_badaddr =
	     rg_epoch_20_EQ_IF_ff_stage3_common_w_data_whas_ETC___d147 ?
	       rx_stage3_type_first_x[63:0] :
	       wr_memory_response[65:2] ;
  assign csr_take_trap_pc = rx_stage3_common_first_x[69:6] ;
  assign csr_take_trap_type_cause =
	     rg_epoch_20_EQ_IF_ff_stage3_common_w_data_whas_ETC___d147 ?
	       rx_stage3_type_first_x[69:64] :
	       type_cause__h5069 ;
  assign csr_EN_system_instruction =
	     WILL_FIRE_RL_instruction_commit &&
	     rg_epoch_20_EQ_IF_ff_stage3_common_w_data_whas_ETC___d194 ;
  assign csr_EN_take_trap =
	     WILL_FIRE_RL_instruction_commit &&
	     (rg_epoch_20_EQ_IF_ff_stage3_common_w_data_whas_ETC___d147 ||
	      rg_epoch_20_EQ_IF_ff_stage3_common_w_data_whas_ETC___d121 &&
	      !rg_rerun &&
	      ff_stage3_type_w_data_whas__6_AND_ff_stage3_ty_ETC___d237) ;
  assign csr_EN_clint_msip = EN_clint_msip ;
  assign csr_EN_clint_mtip = EN_clint_mtip ;
  assign csr_EN_clint_mtime = EN_clint_mtime ;
  assign csr_EN_incr_minstret = WILL_FIRE_RL_increment_instruction_counter ;
  assign csr_EN_ext_interrupt = EN_ext_interrupt ;

  // submodule dump_ff
  assign dump_ff_D_IN =
	     (rg_epoch_20_EQ_IF_ff_stage3_common_w_data_whas_ETC___d121 &&
	      NOT_rg_rerun_18_36_AND_ff_stage3_type_w_data_w_ETC___d173) ?
	       { csr_mv_curr_priv,
		 rx_stage3_dump_first_x,
		 rx_stage3_common_first_x[5:1],
		 data__h3804 } :
	       _dfoo2 ;
  assign dump_ff_ENQ = WILL_FIRE_RL_instruction_commit && _dfoo15 ;
  assign dump_ff_DEQ = EN_dump_get ;
  assign dump_ff_CLR = 1'b0 ;

  // remaining internal signals
  assign NOT_rg_rerun_18_36_AND_ff_stage3_type_w_data_w_ETC___d173 =
	     !rg_rerun && rx_stage3_type_first_x[82:81] == 2'd2 &&
	     (!rx_stage3_type_first_x[0] || ma_delayed_output_r[0]) ;
  assign NOT_rg_rerun_18_36_AND_ff_stage3_type_w_data_w_ETC___d181 =
	     !rg_rerun && rx_stage3_type_first_x[82:81] == 2'd2 &&
	     rx_stage3_type_first_x[0] &&
	     !ma_delayed_output_r[0] ;
  assign NOT_rg_rerun_18_36_AND_ff_stage3_type_w_data_w_ETC___d196 =
	     !rg_rerun && rx_stage3_type_first_x[82:81] == 2'd3 &&
	     csr_system_instruction[128] ;
  assign _dfoo10 =
	     rg_epoch_20_EQ_IF_ff_stage3_common_w_data_whas_ETC___d194 ?
	       { 1'd1, rx_stage3_common_first_x[5:1], _theResult____h4686 } :
	       ((rx_stage3_type_first_x[67:66] == 2'd3) ?
		  70'h200000000000000000 :
		  { 1'd1,
		    rx_stage3_common_first_x[5:1],
		    _theResult____h4999 }) ;
  assign _dfoo13 =
	     rg_epoch_20_EQ_IF_ff_stage3_common_w_data_whas_ETC___d121 &&
	     (NOT_rg_rerun_18_36_AND_ff_stage3_type_w_data_w_ETC___d196 ||
	      !rg_rerun &&
	      ff_stage3_type_w_data_whas__6_AND_ff_stage3_ty_ETC___d237) ;
  assign _dfoo14 =
	     (rg_epoch_20_EQ_IF_ff_stage3_common_w_data_whas_ETC___d121 &&
	      NOT_rg_rerun_18_36_AND_ff_stage3_type_w_data_w_ETC___d196) ?
	       { csr_system_instruction[127:64], 1'd1 } :
	       { csr_take_trap, 1'd1 } ;
  assign _dfoo15 =
	     rg_epoch_20_EQ_IF_ff_stage3_common_w_data_whas_ETC___d121 &&
	     NOT_rg_rerun_18_36_AND_ff_stage3_type_w_data_w_ETC___d173 ||
	     rg_epoch_20_EQ_IF_ff_stage3_common_w_data_whas_ETC___d194 ||
	     rg_epoch_20_EQ_IF_ff_stage3_common_w_data_whas_ETC___d121 &&
	     !rg_rerun &&
	     rx_stage3_type_first_x[82:81] == 2'd0 &&
	     (rx_stage3_type_first_x[67:66] == 2'd3 ||
	      wr_memory_response[66] &&
	      wr_memory_response_08_BIT_0_10_EQ_rg_epoch_20___d211 &&
	      !wr_memory_response[1]) ;
  assign _dfoo17 =
	     rg_epoch_20_EQ_IF_ff_stage3_common_w_data_whas_ETC___d121 &&
	     NOT_rg_rerun_18_36_AND_ff_stage3_type_w_data_w_ETC___d173 ||
	     rg_epoch_20_EQ_IF_ff_stage3_common_w_data_whas_ETC___d194 ||
	     rg_epoch_20_EQ_IF_ff_stage3_common_w_data_whas_ETC___d121 &&
	     !rg_rerun &&
	     rx_stage3_type_first_x[82:81] == 2'd0 &&
	     (rx_stage3_type_first_x[67:66] == 2'd3 ||
	      wr_memory_response[66] &&
	      wr_memory_response_08_BIT_0_10_EQ_rg_epoch_20___d211) ;
  assign _dfoo2 =
	     rg_epoch_20_EQ_IF_ff_stage3_common_w_data_whas_ETC___d194 ?
	       { csr_mv_curr_priv,
		 rx_stage3_dump_first_x,
		 rx_stage3_common_first_x[5:1],
		 _theResult____h4686 } :
	       csr_mv_curr_priv__77_CONCAT_ff_stage3_dump_w_d_ETC___d230 ;
  assign _dfoo25 =
	     rg_epoch_20_EQ_IF_ff_stage3_common_w_data_whas_ETC___d158 ||
	     rg_epoch_20_EQ_IF_ff_stage3_common_w_data_whas_ETC___d121 &&
	     !rg_rerun &&
	     rx_stage3_type_first_x[82:81] == 2'd0 &&
	     rx_stage3_type_first_x[67:66] != 2'd3 &&
	     wr_memory_response[66] &&
	     wr_memory_response_08_BIT_0_10_EQ_rg_epoch_20___d211 &&
	     !wr_memory_response[1] ;
  assign _theResult_____1_fst__h3924 =
	     (!ma_delayed_output_r[0] ||
	      rx_stage3_common_first_x[5:1] == 5'd0) ?
	       _theResult____h3801 :
	       ma_delayed_output_r[64:1] ;
  assign _theResult____h3801 =
	     (rx_stage3_common_first_x[5:1] == 5'd0) ?
	       64'd0 :
	       rx_stage3_type_first_x[64:1] ;
  assign _theResult____h4686 =
	     (rx_stage3_common_first_x[5:1] == 5'd0) ?
	       64'd0 :
	       csr_system_instruction[63:0] ;
  assign _theResult____h4999 =
	     (rx_stage3_common_first_x[5:1] == 5'd0) ?
	       64'd0 :
	       wr_memory_response[65:2] ;
  assign csr_mv_curr_priv__77_CONCAT_ff_stage3_dump_w_d_ETC___d230 =
	     { csr_mv_curr_priv,
	       rx_stage3_dump_first_x,
	       (rx_stage3_type_first_x[67:66] == 2'd3) ?
		 69'd0 :
		 { rx_stage3_common_first_x[5:1], _theResult____h4999 } } ;
  assign data__h3804 =
	     rx_stage3_type_first_x[0] ?
	       _theResult_____1_fst__h3924 :
	       _theResult____h3801 ;
  assign ff_stage3_type_w_data_whas__6_AND_ff_stage3_ty_ETC___d237 =
	     rx_stage3_type_first_x[82:81] == 2'd0 &&
	     rx_stage3_type_first_x[67:66] != 2'd3 &&
	     wr_memory_response[66] &&
	     wr_memory_response_08_BIT_0_10_EQ_rg_epoch_20___d211 &&
	     wr_memory_response[1] ;
  assign ff_stage3_type_w_data_whas__6_AND_ff_stage3_ty_ETC___d264 =
	     rx_stage3_type_first_x[82:81] == 2'd0 &&
	     rx_stage3_type_first_x[67:66] != 2'd3 &&
	     (!wr_memory_response[66] ||
	      !wr_memory_response_08_BIT_0_10_EQ_rg_epoch_20___d211) ;
  assign rg_epoch_20_EQ_IF_ff_stage3_common_w_data_whas_ETC___d121 =
	     rg_epoch == rx_stage3_common_first_x[0] ;
  assign rg_epoch_20_EQ_IF_ff_stage3_common_w_data_whas_ETC___d124 =
	     rg_epoch_20_EQ_IF_ff_stage3_common_w_data_whas_ETC___d121 &&
	     (rg_rerun || rx_stage3_type_first_x[82:81] == 2'd1) ;
  assign rg_epoch_20_EQ_IF_ff_stage3_common_w_data_whas_ETC___d147 =
	     rg_epoch_20_EQ_IF_ff_stage3_common_w_data_whas_ETC___d121 &&
	     !rg_rerun &&
	     rx_stage3_type_first_x[82:81] == 2'd1 ;
  assign rg_epoch_20_EQ_IF_ff_stage3_common_w_data_whas_ETC___d158 =
	     rg_epoch_20_EQ_IF_ff_stage3_common_w_data_whas_ETC___d121 &&
	     !rg_rerun &&
	     rx_stage3_type_first_x[82:81] == 2'd2 ;
  assign rg_epoch_20_EQ_IF_ff_stage3_common_w_data_whas_ETC___d194 =
	     rg_epoch_20_EQ_IF_ff_stage3_common_w_data_whas_ETC___d121 &&
	     !rg_rerun &&
	     rx_stage3_type_first_x[82:81] == 2'd3 ;
  assign rg_rerun_18_OR_ff_stage3_type_w_data_whas__6_A_ETC___d123 =
	     rg_rerun || rx_stage3_type_first_x[82:81] == 2'd1 ||
	     !rg_epoch_20_EQ_IF_ff_stage3_common_w_data_whas_ETC___d121 ;
  assign rg_rerun_18_OR_ff_stage3_type_w_data_whas__6_A_ETC___d134 =
	     rg_rerun ||
	     rx_stage3_type_first_x[82:81] == 2'd3 &&
	     !csr_system_instruction[128] ;
  assign type_cause__h5069 =
	     (rx_stage3_type_first_x[67:66] == 2'd0) ? 6'd5 : 6'd7 ;
  assign wr_memory_response_08_BIT_0_10_EQ_rg_epoch_20___d211 =
	     wr_memory_response[0] == rg_epoch ;
  assign x__h5350 = ~rg_epoch ;
  assign x__read_rdaddr__h6436 =
	     wr_operand_fwding_whas ? wr_operand_fwding_wget[69:65] : 5'd0 ;
  assign x__read_rdvalue__h6437 =
	     wr_operand_fwding_whas ? wr_operand_fwding_wget[64:1] : 64'd0 ;

  // handling of inlined registers

  always@(posedge CLK or `BSV_RESET_EDGE RST_N)
  if (RST_N == `BSV_RESET_VALUE)
    begin
      rg_epoch <= `BSV_ASSIGNMENT_DELAY 1'd0;
      rg_rerun <= `BSV_ASSIGNMENT_DELAY 1'd0;
      wr_memory_response <= `BSV_ASSIGNMENT_DELAY
	  { 1'd0, 66'h2AAAAAAAAAAAAAAAA /* unspecified value */  };
    end
  else
    begin
      if (rg_epoch_EN) rg_epoch <= `BSV_ASSIGNMENT_DELAY rg_epoch_D_IN;
      if (rg_rerun_EN) rg_rerun <= `BSV_ASSIGNMENT_DELAY rg_rerun_D_IN;
      if (wr_memory_response_EN)
	wr_memory_response <= `BSV_ASSIGNMENT_DELAY wr_memory_response_D_IN;
    end

  // synopsys translate_off
  `ifdef BSV_NO_INITIAL_BLOCKS
  `else // not BSV_NO_INITIAL_BLOCKS
  initial
  begin
    rg_epoch = 1'h0;
    rg_rerun = 1'h0;
    wr_memory_response = 67'h2AAAAAAAAAAAAAAAA;
  end
  `endif // BSV_NO_INITIAL_BLOCKS
  // synopsys translate_on

  // handling of system tasks

  // synopsys translate_off
  always@(negedge CLK)
  begin
    #0;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit)
	begin
	  TASK_testplusargs___d14 = $test$plusargs("fullverbose");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit)
	begin
	  TASK_testplusargs___d15 = $test$plusargs("mstage3");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit)
	begin
	  TASK_testplusargs___d16 = $test$plusargs("l0");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit)
	begin
	  v__h1933 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  (TASK_testplusargs___d14 ||
	   TASK_testplusargs___d15 && TASK_testplusargs___d16))
	$write("[%10d", v__h1933, "] ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  (TASK_testplusargs___d14 ||
	   TASK_testplusargs___d15 && TASK_testplusargs___d16))
	$write("STAGE3: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  (TASK_testplusargs___d14 ||
	   TASK_testplusargs___d15 && TASK_testplusargs___d16))
	$write("TraceDump { ", "pc: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  (TASK_testplusargs___d14 ||
	   TASK_testplusargs___d15 && TASK_testplusargs___d16))
	$write("'h%h", rx_stage3_dump_first_x[95:32]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  (TASK_testplusargs___d14 ||
	   TASK_testplusargs___d15 && TASK_testplusargs___d16))
	$write(", ", "instruction: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  (TASK_testplusargs___d14 ||
	   TASK_testplusargs___d15 && TASK_testplusargs___d16))
	$write("'h%h", rx_stage3_dump_first_x[31:0], " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  (TASK_testplusargs___d14 ||
	   TASK_testplusargs___d15 && TASK_testplusargs___d16))
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit)
	begin
	  TASK_testplusargs___d26 = $test$plusargs("fullverbose");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit)
	begin
	  TASK_testplusargs___d27 = $test$plusargs("mstage3");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit)
	begin
	  TASK_testplusargs___d28 = $test$plusargs("l0");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit)
	begin
	  v__h2141 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  (TASK_testplusargs___d26 ||
	   TASK_testplusargs___d27 && TASK_testplusargs___d28))
	$write("[%10d", v__h2141, "] ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  (TASK_testplusargs___d26 ||
	   TASK_testplusargs___d27 && TASK_testplusargs___d28))
	$write("STAGE3: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  (TASK_testplusargs___d26 ||
	   TASK_testplusargs___d27 && TASK_testplusargs___d28))
	$write("Stage3Common { ", "pc: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  (TASK_testplusargs___d26 ||
	   TASK_testplusargs___d27 && TASK_testplusargs___d28))
	$write("'h%h", rx_stage3_common_first_x[69:6]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  (TASK_testplusargs___d26 ||
	   TASK_testplusargs___d27 && TASK_testplusargs___d28))
	$write(", ", "rd: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  (TASK_testplusargs___d26 ||
	   TASK_testplusargs___d27 && TASK_testplusargs___d28))
	$write("'h%h", rx_stage3_common_first_x[5:1]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  (TASK_testplusargs___d26 ||
	   TASK_testplusargs___d27 && TASK_testplusargs___d28))
	$write(", ", "epoch: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  (TASK_testplusargs___d26 ||
	   TASK_testplusargs___d27 && TASK_testplusargs___d28))
	$write("'h%h", rx_stage3_common_first_x[0], " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  (TASK_testplusargs___d26 ||
	   TASK_testplusargs___d27 && TASK_testplusargs___d28))
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit)
	begin
	  TASK_testplusargs___d40 = $test$plusargs("fullverbose");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit)
	begin
	  TASK_testplusargs___d41 = $test$plusargs("mstage3");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit)
	begin
	  TASK_testplusargs___d42 = $test$plusargs("l0");
	  #0;
	end
    TASK_testplusargs_0_OR_TASK_testplusargs_1_AND_ETC___d51 =
	(TASK_testplusargs___d40 ||
	 TASK_testplusargs___d41 && TASK_testplusargs___d42) &&
	rx_stage3_type_first_x[82:81] == 2'd0;
    TASK_testplusargs_0_OR_TASK_testplusargs_1_AND_ETC___d54 =
	(TASK_testplusargs___d40 ||
	 TASK_testplusargs___d41 && TASK_testplusargs___d42) &&
	rx_stage3_type_first_x[82:81] == 2'd1;
    TASK_testplusargs_0_OR_TASK_testplusargs_1_AND_ETC___d57 =
	(TASK_testplusargs___d40 ||
	 TASK_testplusargs___d41 && TASK_testplusargs___d42) &&
	rx_stage3_type_first_x[82:81] == 2'd2;
    TASK_testplusargs_0_OR_TASK_testplusargs_1_AND_ETC___d67 =
	(TASK_testplusargs___d40 ||
	 TASK_testplusargs___d41 && TASK_testplusargs___d42) &&
	rx_stage3_type_first_x[82:81] != 2'd0 &&
	rx_stage3_type_first_x[82:81] != 2'd1 &&
	rx_stage3_type_first_x[82:81] != 2'd2;
    TASK_testplusargs_0_OR_TASK_testplusargs_1_AND_ETC___d86 =
	(TASK_testplusargs___d40 ||
	 TASK_testplusargs___d41 && TASK_testplusargs___d42) &&
	rx_stage3_type_first_x[82:81] == 2'd2 &&
	rx_stage3_type_first_x[0];
    TASK_testplusargs_0_OR_TASK_testplusargs_1_AND_ETC___d89 =
	(TASK_testplusargs___d40 ||
	 TASK_testplusargs___d41 && TASK_testplusargs___d42) &&
	rx_stage3_type_first_x[82:81] == 2'd2 &&
	!rx_stage3_type_first_x[0];
    TASK_testplusargs_0_OR_TASK_testplusargs_1_AND_ETC___d91 =
	(TASK_testplusargs___d40 ||
	 TASK_testplusargs___d41 && TASK_testplusargs___d42) &&
	rx_stage3_type_first_x[82:81] != 2'd0 &&
	rx_stage3_type_first_x[82:81] != 2'd1;
    TASK_testplusargs_0_OR_TASK_testplusargs_1_AND_ETC___d98 =
	(TASK_testplusargs___d40 ||
	 TASK_testplusargs___d41 && TASK_testplusargs___d42) &&
	rx_stage3_type_first_x[82:81] != 2'd0;
    TASK_testplusargs_0_OR_TASK_testplusargs_1_AND_ETC___d102 =
	(TASK_testplusargs___d40 ||
	 TASK_testplusargs___d41 && TASK_testplusargs___d42) &&
	rx_stage3_type_first_x[82:81] == 2'd0 &&
	rx_stage3_type_first_x[67:66] == 2'd0;
    TASK_testplusargs_0_OR_TASK_testplusargs_1_AND_ETC___d105 =
	(TASK_testplusargs___d40 ||
	 TASK_testplusargs___d41 && TASK_testplusargs___d42) &&
	rx_stage3_type_first_x[82:81] == 2'd0 &&
	rx_stage3_type_first_x[67:66] == 2'd1;
    TASK_testplusargs_0_OR_TASK_testplusargs_1_AND_ETC___d108 =
	(TASK_testplusargs___d40 ||
	 TASK_testplusargs___d41 && TASK_testplusargs___d42) &&
	rx_stage3_type_first_x[82:81] == 2'd0 &&
	rx_stage3_type_first_x[67:66] == 2'd3;
    TASK_testplusargs_0_OR_TASK_testplusargs_1_AND_ETC___d115 =
	(TASK_testplusargs___d40 ||
	 TASK_testplusargs___d41 && TASK_testplusargs___d42) &&
	rx_stage3_type_first_x[82:81] == 2'd0 &&
	rx_stage3_type_first_x[67:66] != 2'd0 &&
	rx_stage3_type_first_x[67:66] != 2'd1 &&
	rx_stage3_type_first_x[67:66] != 2'd3;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit)
	begin
	  v__h2371 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  (TASK_testplusargs___d40 ||
	   TASK_testplusargs___d41 && TASK_testplusargs___d42))
	$write("[%10d", v__h2371, "] ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  (TASK_testplusargs___d40 ||
	   TASK_testplusargs___d41 && TASK_testplusargs___d42))
	$write("STAGE3: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_0_OR_TASK_testplusargs_1_AND_ETC___d51)
	$write("tagged Memory ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_0_OR_TASK_testplusargs_1_AND_ETC___d54)
	$write("tagged Trap ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_0_OR_TASK_testplusargs_1_AND_ETC___d57)
	$write("tagged Regular ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_0_OR_TASK_testplusargs_1_AND_ETC___d67)
	$write("tagged System ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_0_OR_TASK_testplusargs_1_AND_ETC___d51)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_0_OR_TASK_testplusargs_1_AND_ETC___d54)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_0_OR_TASK_testplusargs_1_AND_ETC___d57)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_0_OR_TASK_testplusargs_1_AND_ETC___d67)
	$write("Stage3System { ", "rs1_imm: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_0_OR_TASK_testplusargs_1_AND_ETC___d51)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_0_OR_TASK_testplusargs_1_AND_ETC___d54)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_0_OR_TASK_testplusargs_1_AND_ETC___d57)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_0_OR_TASK_testplusargs_1_AND_ETC___d67)
	$write("'h%h", rx_stage3_type_first_x[80:17]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_0_OR_TASK_testplusargs_1_AND_ETC___d51)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_0_OR_TASK_testplusargs_1_AND_ETC___d54)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_0_OR_TASK_testplusargs_1_AND_ETC___d57)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_0_OR_TASK_testplusargs_1_AND_ETC___d67)
	$write(", ", "lpc: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_0_OR_TASK_testplusargs_1_AND_ETC___d51)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_0_OR_TASK_testplusargs_1_AND_ETC___d54)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_0_OR_TASK_testplusargs_1_AND_ETC___d57)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_0_OR_TASK_testplusargs_1_AND_ETC___d67)
	$write("'h%h", rx_stage3_type_first_x[16:15]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_0_OR_TASK_testplusargs_1_AND_ETC___d51)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_0_OR_TASK_testplusargs_1_AND_ETC___d54)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_0_OR_TASK_testplusargs_1_AND_ETC___d57)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_0_OR_TASK_testplusargs_1_AND_ETC___d67)
	$write(", ", "csr_address: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_0_OR_TASK_testplusargs_1_AND_ETC___d51)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_0_OR_TASK_testplusargs_1_AND_ETC___d54)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_0_OR_TASK_testplusargs_1_AND_ETC___d57)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_0_OR_TASK_testplusargs_1_AND_ETC___d67)
	$write("'h%h", rx_stage3_type_first_x[14:3]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_0_OR_TASK_testplusargs_1_AND_ETC___d51)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_0_OR_TASK_testplusargs_1_AND_ETC___d54)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_0_OR_TASK_testplusargs_1_AND_ETC___d57)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_0_OR_TASK_testplusargs_1_AND_ETC___d67)
	$write(", ", "funct3: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_0_OR_TASK_testplusargs_1_AND_ETC___d51)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_0_OR_TASK_testplusargs_1_AND_ETC___d54)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_0_OR_TASK_testplusargs_1_AND_ETC___d57)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_0_OR_TASK_testplusargs_1_AND_ETC___d67)
	$write("'h%h", rx_stage3_type_first_x[2:0], " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_0_OR_TASK_testplusargs_1_AND_ETC___d51)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_0_OR_TASK_testplusargs_1_AND_ETC___d54)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_0_OR_TASK_testplusargs_1_AND_ETC___d57)
	$write("Stage3Regular { ", "rdvalue: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_0_OR_TASK_testplusargs_1_AND_ETC___d67)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_0_OR_TASK_testplusargs_1_AND_ETC___d51)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_0_OR_TASK_testplusargs_1_AND_ETC___d54)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_0_OR_TASK_testplusargs_1_AND_ETC___d57)
	$write("'h%h", rx_stage3_type_first_x[64:1]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_0_OR_TASK_testplusargs_1_AND_ETC___d67)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_0_OR_TASK_testplusargs_1_AND_ETC___d51)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_0_OR_TASK_testplusargs_1_AND_ETC___d54)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_0_OR_TASK_testplusargs_1_AND_ETC___d57)
	$write(", ", "delayed: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_0_OR_TASK_testplusargs_1_AND_ETC___d67)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_0_OR_TASK_testplusargs_1_AND_ETC___d51)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_0_OR_TASK_testplusargs_1_AND_ETC___d54)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_0_OR_TASK_testplusargs_1_AND_ETC___d86)
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_0_OR_TASK_testplusargs_1_AND_ETC___d89)
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_0_OR_TASK_testplusargs_1_AND_ETC___d67)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_0_OR_TASK_testplusargs_1_AND_ETC___d51)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_0_OR_TASK_testplusargs_1_AND_ETC___d54)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_0_OR_TASK_testplusargs_1_AND_ETC___d57)
	$write(" }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_0_OR_TASK_testplusargs_1_AND_ETC___d67)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_0_OR_TASK_testplusargs_1_AND_ETC___d51)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_0_OR_TASK_testplusargs_1_AND_ETC___d54)
	$write("Stage3Trap { ", "cause: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_0_OR_TASK_testplusargs_1_AND_ETC___d91)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_0_OR_TASK_testplusargs_1_AND_ETC___d51)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_0_OR_TASK_testplusargs_1_AND_ETC___d54)
	$write("'h%h", rx_stage3_type_first_x[69:64]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_0_OR_TASK_testplusargs_1_AND_ETC___d91)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_0_OR_TASK_testplusargs_1_AND_ETC___d51)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_0_OR_TASK_testplusargs_1_AND_ETC___d54)
	$write(", ", "badaddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_0_OR_TASK_testplusargs_1_AND_ETC___d91)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_0_OR_TASK_testplusargs_1_AND_ETC___d51)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_0_OR_TASK_testplusargs_1_AND_ETC___d54)
	$write("'h%h", rx_stage3_type_first_x[63:0], " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_0_OR_TASK_testplusargs_1_AND_ETC___d91)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_0_OR_TASK_testplusargs_1_AND_ETC___d51)
	$write("Stage3Memory { ", "memaccess: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_0_OR_TASK_testplusargs_1_AND_ETC___d98)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_0_OR_TASK_testplusargs_1_AND_ETC___d102)
	$write("Load");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_0_OR_TASK_testplusargs_1_AND_ETC___d105)
	$write("Store");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_0_OR_TASK_testplusargs_1_AND_ETC___d108)
	$write("Fence");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_0_OR_TASK_testplusargs_1_AND_ETC___d115)
	$write("Atomic");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_0_OR_TASK_testplusargs_1_AND_ETC___d98)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_0_OR_TASK_testplusargs_1_AND_ETC___d51)
	$write(", ", "address: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_0_OR_TASK_testplusargs_1_AND_ETC___d98)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_0_OR_TASK_testplusargs_1_AND_ETC___d51)
	$write("'h%h", rx_stage3_type_first_x[65:2]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_0_OR_TASK_testplusargs_1_AND_ETC___d98)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_0_OR_TASK_testplusargs_1_AND_ETC___d51)
	$write(", ", "size: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_0_OR_TASK_testplusargs_1_AND_ETC___d98)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_0_OR_TASK_testplusargs_1_AND_ETC___d51)
	$write("'h%h", rx_stage3_type_first_x[1:0], " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_0_OR_TASK_testplusargs_1_AND_ETC___d98)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  (TASK_testplusargs___d40 ||
	   TASK_testplusargs___d41 && TASK_testplusargs___d42))
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  rg_epoch_20_EQ_IF_ff_stage3_common_w_data_whas_ETC___d121 &&
	  rg_rerun)
	begin
	  TASK_testplusargs___d138 = $test$plusargs("fullverbose");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  rg_epoch_20_EQ_IF_ff_stage3_common_w_data_whas_ETC___d121 &&
	  rg_rerun)
	begin
	  TASK_testplusargs___d139 = $test$plusargs("mstage3");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  rg_epoch_20_EQ_IF_ff_stage3_common_w_data_whas_ETC___d121 &&
	  rg_rerun)
	begin
	  TASK_testplusargs___d140 = $test$plusargs("l0");
	  #0;
	end
    rg_rerun_18_AND_TASK_testplusargs_38_OR_TASK_t_ETC___d143 =
	rg_rerun &&
	(TASK_testplusargs___d138 ||
	 TASK_testplusargs___d139 && TASK_testplusargs___d140);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  rg_epoch_20_EQ_IF_ff_stage3_common_w_data_whas_ETC___d121 &&
	  rg_rerun)
	begin
	  v__h3741 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  rg_epoch_20_EQ_IF_ff_stage3_common_w_data_whas_ETC___d121 &&
	  rg_rerun_18_AND_TASK_testplusargs_38_OR_TASK_t_ETC___d143)
	$write("[%10d", v__h3741, "] ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  rg_epoch_20_EQ_IF_ff_stage3_common_w_data_whas_ETC___d121 &&
	  rg_rerun_18_AND_TASK_testplusargs_38_OR_TASK_t_ETC___d143)
	$write("STAGE3: Rerun Instruction");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  rg_epoch_20_EQ_IF_ff_stage3_common_w_data_whas_ETC___d121 &&
	  rg_rerun_18_AND_TASK_testplusargs_38_OR_TASK_t_ETC___d143)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  rg_epoch_20_EQ_IF_ff_stage3_common_w_data_whas_ETC___d147)
	begin
	  TASK_testplusargs___d148 = $test$plusargs("fullverbose");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  rg_epoch_20_EQ_IF_ff_stage3_common_w_data_whas_ETC___d147)
	begin
	  TASK_testplusargs___d149 = $test$plusargs("mstage3");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  rg_epoch_20_EQ_IF_ff_stage3_common_w_data_whas_ETC___d147)
	begin
	  TASK_testplusargs___d150 = $test$plusargs("l0");
	  #0;
	end
    ff_stage3_type_w_data_whas__6_AND_ff_stage3_ty_ETC___d153 =
	rx_stage3_type_first_x[82:81] == 2'd1 &&
	(TASK_testplusargs___d148 ||
	 TASK_testplusargs___d149 && TASK_testplusargs___d150);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  rg_epoch_20_EQ_IF_ff_stage3_common_w_data_whas_ETC___d147)
	begin
	  v__h3449 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  rg_epoch_20_EQ_IF_ff_stage3_common_w_data_whas_ETC___d121 &&
	  !rg_rerun &&
	  ff_stage3_type_w_data_whas__6_AND_ff_stage3_ty_ETC___d153)
	$write("[%10d", v__h3449, "] ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  rg_epoch_20_EQ_IF_ff_stage3_common_w_data_whas_ETC___d121 &&
	  !rg_rerun &&
	  ff_stage3_type_w_data_whas__6_AND_ff_stage3_ty_ETC___d153)
	$write("STAGE3 : Jumping to PC:%h", csr_take_trap);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  rg_epoch_20_EQ_IF_ff_stage3_common_w_data_whas_ETC___d121 &&
	  !rg_rerun &&
	  ff_stage3_type_w_data_whas__6_AND_ff_stage3_ty_ETC___d153)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  rg_epoch_20_EQ_IF_ff_stage3_common_w_data_whas_ETC___d121 &&
	  NOT_rg_rerun_18_36_AND_ff_stage3_type_w_data_w_ETC___d181)
	begin
	  TASK_testplusargs___d183 = $test$plusargs("fullverbose");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  rg_epoch_20_EQ_IF_ff_stage3_common_w_data_whas_ETC___d121 &&
	  NOT_rg_rerun_18_36_AND_ff_stage3_type_w_data_w_ETC___d181)
	begin
	  TASK_testplusargs___d184 = $test$plusargs("mstage3");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  rg_epoch_20_EQ_IF_ff_stage3_common_w_data_whas_ETC___d121 &&
	  NOT_rg_rerun_18_36_AND_ff_stage3_type_w_data_w_ETC___d181)
	begin
	  TASK_testplusargs___d185 = $test$plusargs("l0");
	  #0;
	end
    ff_stage3_type_w_data_wget__7_BIT_0_4_AND_NOT__ETC___d188 =
	rx_stage3_type_first_x[0] && !ma_delayed_output_r[0] &&
	(TASK_testplusargs___d183 ||
	 TASK_testplusargs___d184 && TASK_testplusargs___d185);
    NOT_rg_rerun_18_36_AND_ff_stage3_type_w_data_w_ETC___d190 =
	!rg_rerun && rx_stage3_type_first_x[82:81] == 2'd2 &&
	ff_stage3_type_w_data_wget__7_BIT_0_4_AND_NOT__ETC___d188;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  rg_epoch_20_EQ_IF_ff_stage3_common_w_data_whas_ETC___d121 &&
	  NOT_rg_rerun_18_36_AND_ff_stage3_type_w_data_w_ETC___d181)
	begin
	  v__h4229 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  rg_epoch_20_EQ_IF_ff_stage3_common_w_data_whas_ETC___d121 &&
	  NOT_rg_rerun_18_36_AND_ff_stage3_type_w_data_w_ETC___d190)
	$write("[%10d", v__h4229, "] ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  rg_epoch_20_EQ_IF_ff_stage3_common_w_data_whas_ETC___d121 &&
	  NOT_rg_rerun_18_36_AND_ff_stage3_type_w_data_w_ETC___d190)
	$write("STAGE3: Waiting for Delayed Output");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  rg_epoch_20_EQ_IF_ff_stage3_common_w_data_whas_ETC___d121 &&
	  NOT_rg_rerun_18_36_AND_ff_stage3_type_w_data_w_ETC___d190)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  rg_epoch_20_EQ_IF_ff_stage3_common_w_data_whas_ETC___d121 &&
	  !rg_rerun &&
	  ff_stage3_type_w_data_whas__6_AND_ff_stage3_ty_ETC___d237)
	begin
	  TASK_testplusargs___d243 = $test$plusargs("fullverbose");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  rg_epoch_20_EQ_IF_ff_stage3_common_w_data_whas_ETC___d121 &&
	  !rg_rerun &&
	  ff_stage3_type_w_data_whas__6_AND_ff_stage3_ty_ETC___d237)
	begin
	  TASK_testplusargs___d244 = $test$plusargs("mstage3");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  rg_epoch_20_EQ_IF_ff_stage3_common_w_data_whas_ETC___d121 &&
	  !rg_rerun &&
	  ff_stage3_type_w_data_whas__6_AND_ff_stage3_ty_ETC___d237)
	begin
	  TASK_testplusargs___d245 = $test$plusargs("l0");
	  #0;
	end
    wr_memory_response_08_BIT_1_13_AND_TASK_testpl_ETC___d248 =
	wr_memory_response[1] &&
	(TASK_testplusargs___d243 ||
	 TASK_testplusargs___d244 && TASK_testplusargs___d245);
    NOT_rg_rerun_18_36_AND_ff_stage3_type_w_data_w_ETC___d252 =
	!rg_rerun && rx_stage3_type_first_x[82:81] == 2'd0 &&
	rx_stage3_type_first_x[67:66] != 2'd3 &&
	wr_memory_response[66] &&
	wr_memory_response_08_BIT_0_10_EQ_rg_epoch_20___d211 &&
	wr_memory_response_08_BIT_1_13_AND_TASK_testpl_ETC___d248;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  rg_epoch_20_EQ_IF_ff_stage3_common_w_data_whas_ETC___d121 &&
	  !rg_rerun &&
	  ff_stage3_type_w_data_whas__6_AND_ff_stage3_ty_ETC___d237)
	begin
	  v__h5473 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  rg_epoch_20_EQ_IF_ff_stage3_common_w_data_whas_ETC___d121 &&
	  NOT_rg_rerun_18_36_AND_ff_stage3_type_w_data_w_ETC___d252)
	$write("[%10d", v__h5473, "] ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  rg_epoch_20_EQ_IF_ff_stage3_common_w_data_whas_ETC___d121 &&
	  NOT_rg_rerun_18_36_AND_ff_stage3_type_w_data_w_ETC___d252)
	$write("STAGE3 : Jumping to PC:%h", csr_take_trap);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  rg_epoch_20_EQ_IF_ff_stage3_common_w_data_whas_ETC___d121 &&
	  NOT_rg_rerun_18_36_AND_ff_stage3_type_w_data_w_ETC___d252)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  rg_epoch_20_EQ_IF_ff_stage3_common_w_data_whas_ETC___d121 &&
	  !rg_rerun &&
	  ff_stage3_type_w_data_whas__6_AND_ff_stage3_ty_ETC___d264)
	begin
	  TASK_testplusargs___d267 = $test$plusargs("fullverbose");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  rg_epoch_20_EQ_IF_ff_stage3_common_w_data_whas_ETC___d121 &&
	  !rg_rerun &&
	  ff_stage3_type_w_data_whas__6_AND_ff_stage3_ty_ETC___d264)
	begin
	  TASK_testplusargs___d268 = $test$plusargs("mstage3");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  rg_epoch_20_EQ_IF_ff_stage3_common_w_data_whas_ETC___d121 &&
	  !rg_rerun &&
	  ff_stage3_type_w_data_whas__6_AND_ff_stage3_ty_ETC___d264)
	begin
	  TASK_testplusargs___d269 = $test$plusargs("l1");
	  #0;
	end
    NOT_wr_memory_response_08_BIT_66_09_60_OR_NOT__ETC___d272 =
	(!wr_memory_response[66] ||
	 !wr_memory_response_08_BIT_0_10_EQ_rg_epoch_20___d211) &&
	(TASK_testplusargs___d267 ||
	 TASK_testplusargs___d268 && TASK_testplusargs___d269);
    NOT_rg_rerun_18_36_AND_ff_stage3_type_w_data_w_ETC___d275 =
	!rg_rerun && rx_stage3_type_first_x[82:81] == 2'd0 &&
	rx_stage3_type_first_x[67:66] != 2'd3 &&
	NOT_wr_memory_response_08_BIT_66_09_60_OR_NOT__ETC___d272;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  rg_epoch_20_EQ_IF_ff_stage3_common_w_data_whas_ETC___d121 &&
	  !rg_rerun &&
	  ff_stage3_type_w_data_whas__6_AND_ff_stage3_ty_ETC___d264)
	begin
	  v__h5547 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  rg_epoch_20_EQ_IF_ff_stage3_common_w_data_whas_ETC___d121 &&
	  NOT_rg_rerun_18_36_AND_ff_stage3_type_w_data_w_ETC___d275)
	$write("[%10d", v__h5547, "] ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  rg_epoch_20_EQ_IF_ff_stage3_common_w_data_whas_ETC___d121 &&
	  NOT_rg_rerun_18_36_AND_ff_stage3_type_w_data_w_ETC___d275)
	$write("STAGE3 : Waiting for response from Fabric");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  rg_epoch_20_EQ_IF_ff_stage3_common_w_data_whas_ETC___d121 &&
	  NOT_rg_rerun_18_36_AND_ff_stage3_type_w_data_w_ETC___d275)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  !rg_epoch_20_EQ_IF_ff_stage3_common_w_data_whas_ETC___d121)
	begin
	  TASK_testplusargs___d278 = $test$plusargs("fullverbose");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  !rg_epoch_20_EQ_IF_ff_stage3_common_w_data_whas_ETC___d121)
	begin
	  TASK_testplusargs___d279 = $test$plusargs("mstage3");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  !rg_epoch_20_EQ_IF_ff_stage3_common_w_data_whas_ETC___d121)
	begin
	  TASK_testplusargs___d280 = $test$plusargs("l0");
	  #0;
	end
    NOT_rg_epoch_20_EQ_IF_ff_stage3_common_w_data__ETC___d283 =
	!rg_epoch_20_EQ_IF_ff_stage3_common_w_data_whas_ETC___d121 &&
	(TASK_testplusargs___d278 ||
	 TASK_testplusargs___d279 && TASK_testplusargs___d280);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  !rg_epoch_20_EQ_IF_ff_stage3_common_w_data_whas_ETC___d121)
	begin
	  v__h5642 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  NOT_rg_epoch_20_EQ_IF_ff_stage3_common_w_data__ETC___d283)
	$write("[%10d", v__h5642, "] ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  NOT_rg_epoch_20_EQ_IF_ff_stage3_common_w_data__ETC___d283)
	$write("STAGE3 : Dropping instruction");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  NOT_rg_epoch_20_EQ_IF_ff_stage3_common_w_data__ETC___d283)
	$write("\n");
  end
  // synopsys translate_on
endmodule  // mkstage3

