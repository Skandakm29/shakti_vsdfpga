//
// Generated by Bluespec Compiler, version 2021.07 (build 4cac6eba)
//
// On Sun Mar 16 14:52:05 IST 2025
//
//
// Ports:
// Name                         I/O  size props
// rx_stage1_operands_deq_ena     O     1
// rx_stage1_meta_deq_ena         O     1
// rx_stage1_control_deq_ena      O     1
// tx_stage3_common_enq_ena       O     1
// tx_stage3_common_enq_data      O    70
// tx_stage3_type_enq_ena         O     1
// tx_stage3_type_enq_data        O    83
// rx_stage1_dump_deq_ena         O     1
// tx_stage3_dump_enq_ena         O     1
// tx_stage3_dump_enq_data        O    96
// memory_request_get             O   139 reg
// RDY_memory_request_get         O     1 reg
// RDY_operand_fwding_put         O     1 const
// RDY_ma_update_wEpoch           O     1 const
// RDY_ma_csr_misa_c              O     1 const
// mv_delayed_output              O    65
// RDY_mv_delayed_output          O     1 const
// mv_redirection_fst             O    64
// RDY_mv_redirection_fst         O     1 const
// mv_redirection_snd             O     1
// RDY_mv_redirection_snd         O     1 const
// CLK                            I     1 clock
// RST_N                          I     1 reset
// rx_stage1_operands_notEmpty_b  I     1 unused
// rx_stage1_operands_first_deq_rdy_b  I     1
// rx_stage1_operands_first_x     I   128
// rx_stage1_meta_notEmpty_b      I     1 unused
// rx_stage1_meta_first_deq_rdy_b  I     1
// rx_stage1_meta_first_x         I    65
// rx_stage1_control_notEmpty_b   I     1 unused
// rx_stage1_control_first_deq_rdy_b  I     1
// rx_stage1_control_first_x      I    66
// tx_stage3_common_notFull_b     I     1 unused
// tx_stage3_common_enq_rdy_b     I     1
// tx_stage3_type_notFull_b       I     1 unused
// tx_stage3_type_enq_rdy_b       I     1
// rx_stage1_dump_notEmpty_b      I     1 unused
// rx_stage1_dump_first_deq_rdy_b  I     1
// rx_stage1_dump_first_x         I    96
// tx_stage3_dump_notFull_b       I     1 unused
// tx_stage3_dump_enq_rdy_b       I     1
// operand_fwding_put             I    70
// ma_csr_misa_c_c                I     1
// ma_trigger_data1_t             I    44
// ma_trigger_data2_t             I   128
// ma_trigger_enable_t            I     2
// EN_operand_fwding_put          I     1
// EN_ma_update_wEpoch            I     1
// EN_ma_csr_misa_c               I     1
// EN_memory_request_get          I     1
//
// Combinational paths from inputs to outputs:
//   (rx_stage1_operands_first_deq_rdy_b,
//    rx_stage1_meta_first_deq_rdy_b,
//    rx_stage1_meta_first_x,
//    rx_stage1_control_first_deq_rdy_b,
//    rx_stage1_control_first_x,
//    tx_stage3_common_enq_rdy_b,
//    tx_stage3_type_enq_rdy_b,
//    rx_stage1_dump_first_deq_rdy_b,
//    tx_stage3_dump_enq_rdy_b,
//    operand_fwding_put,
//    EN_operand_fwding_put,
//    EN_ma_csr_misa_c,
//    EN_memory_request_get) -> rx_stage1_operands_deq_ena
//   (rx_stage1_operands_first_deq_rdy_b,
//    rx_stage1_meta_first_deq_rdy_b,
//    rx_stage1_meta_first_x,
//    rx_stage1_control_first_deq_rdy_b,
//    rx_stage1_control_first_x,
//    tx_stage3_common_enq_rdy_b,
//    tx_stage3_type_enq_rdy_b,
//    rx_stage1_dump_first_deq_rdy_b,
//    tx_stage3_dump_enq_rdy_b,
//    operand_fwding_put,
//    EN_operand_fwding_put,
//    EN_ma_csr_misa_c,
//    EN_memory_request_get) -> rx_stage1_meta_deq_ena
//   (rx_stage1_operands_first_deq_rdy_b,
//    rx_stage1_meta_first_deq_rdy_b,
//    rx_stage1_meta_first_x,
//    rx_stage1_control_first_deq_rdy_b,
//    rx_stage1_control_first_x,
//    tx_stage3_common_enq_rdy_b,
//    tx_stage3_type_enq_rdy_b,
//    rx_stage1_dump_first_deq_rdy_b,
//    tx_stage3_dump_enq_rdy_b,
//    operand_fwding_put,
//    EN_operand_fwding_put,
//    EN_ma_csr_misa_c,
//    EN_memory_request_get) -> rx_stage1_control_deq_ena
//   (rx_stage1_operands_first_deq_rdy_b,
//    rx_stage1_meta_first_deq_rdy_b,
//    rx_stage1_meta_first_x,
//    rx_stage1_control_first_deq_rdy_b,
//    rx_stage1_control_first_x,
//    tx_stage3_common_enq_rdy_b,
//    tx_stage3_type_enq_rdy_b,
//    rx_stage1_dump_first_deq_rdy_b,
//    tx_stage3_dump_enq_rdy_b,
//    operand_fwding_put,
//    EN_operand_fwding_put,
//    EN_ma_csr_misa_c,
//    EN_memory_request_get) -> tx_stage3_common_enq_ena
//   (rx_stage1_operands_first_deq_rdy_b,
//    rx_stage1_meta_first_deq_rdy_b,
//    rx_stage1_meta_first_x,
//    rx_stage1_control_first_deq_rdy_b,
//    rx_stage1_control_first_x,
//    tx_stage3_common_enq_rdy_b,
//    tx_stage3_type_enq_rdy_b,
//    rx_stage1_dump_first_deq_rdy_b,
//    tx_stage3_dump_enq_rdy_b,
//    operand_fwding_put,
//    EN_operand_fwding_put,
//    EN_ma_csr_misa_c,
//    EN_memory_request_get) -> tx_stage3_common_enq_data
//   (rx_stage1_operands_first_deq_rdy_b,
//    rx_stage1_meta_first_deq_rdy_b,
//    rx_stage1_meta_first_x,
//    rx_stage1_control_first_deq_rdy_b,
//    rx_stage1_control_first_x,
//    tx_stage3_common_enq_rdy_b,
//    tx_stage3_type_enq_rdy_b,
//    rx_stage1_dump_first_deq_rdy_b,
//    tx_stage3_dump_enq_rdy_b,
//    operand_fwding_put,
//    EN_operand_fwding_put,
//    EN_ma_csr_misa_c,
//    EN_memory_request_get) -> tx_stage3_type_enq_ena
//   (rx_stage1_operands_first_deq_rdy_b,
//    rx_stage1_operands_first_x,
//    rx_stage1_meta_first_deq_rdy_b,
//    rx_stage1_meta_first_x,
//    rx_stage1_control_first_deq_rdy_b,
//    rx_stage1_control_first_x,
//    tx_stage3_common_enq_rdy_b,
//    tx_stage3_type_enq_rdy_b,
//    rx_stage1_dump_first_deq_rdy_b,
//    tx_stage3_dump_enq_rdy_b,
//    operand_fwding_put,
//    ma_csr_misa_c_c,
//    ma_trigger_data1_t,
//    ma_trigger_data2_t,
//    ma_trigger_enable_t,
//    EN_operand_fwding_put,
//    EN_ma_csr_misa_c,
//    EN_memory_request_get) -> tx_stage3_type_enq_data
//   (rx_stage1_operands_first_deq_rdy_b,
//    rx_stage1_meta_first_deq_rdy_b,
//    rx_stage1_meta_first_x,
//    rx_stage1_control_first_deq_rdy_b,
//    rx_stage1_control_first_x,
//    tx_stage3_common_enq_rdy_b,
//    tx_stage3_type_enq_rdy_b,
//    rx_stage1_dump_first_deq_rdy_b,
//    tx_stage3_dump_enq_rdy_b,
//    operand_fwding_put,
//    EN_operand_fwding_put,
//    EN_ma_csr_misa_c,
//    EN_memory_request_get) -> rx_stage1_dump_deq_ena
//   (rx_stage1_operands_first_deq_rdy_b,
//    rx_stage1_meta_first_deq_rdy_b,
//    rx_stage1_meta_first_x,
//    rx_stage1_control_first_deq_rdy_b,
//    rx_stage1_control_first_x,
//    tx_stage3_common_enq_rdy_b,
//    tx_stage3_type_enq_rdy_b,
//    rx_stage1_dump_first_deq_rdy_b,
//    tx_stage3_dump_enq_rdy_b,
//    operand_fwding_put,
//    EN_operand_fwding_put,
//    EN_ma_csr_misa_c,
//    EN_memory_request_get) -> tx_stage3_dump_enq_ena
//   (rx_stage1_operands_first_deq_rdy_b,
//    rx_stage1_meta_first_deq_rdy_b,
//    rx_stage1_meta_first_x,
//    rx_stage1_control_first_deq_rdy_b,
//    rx_stage1_control_first_x,
//    tx_stage3_common_enq_rdy_b,
//    tx_stage3_type_enq_rdy_b,
//    rx_stage1_dump_first_deq_rdy_b,
//    rx_stage1_dump_first_x,
//    tx_stage3_dump_enq_rdy_b,
//    operand_fwding_put,
//    EN_operand_fwding_put,
//    EN_ma_csr_misa_c,
//    EN_memory_request_get) -> tx_stage3_dump_enq_data
//   (rx_stage1_operands_first_deq_rdy_b,
//    rx_stage1_operands_first_x,
//    rx_stage1_meta_first_deq_rdy_b,
//    rx_stage1_meta_first_x,
//    rx_stage1_control_first_deq_rdy_b,
//    rx_stage1_control_first_x,
//    tx_stage3_common_enq_rdy_b,
//    tx_stage3_type_enq_rdy_b,
//    rx_stage1_dump_first_deq_rdy_b,
//    tx_stage3_dump_enq_rdy_b,
//    operand_fwding_put,
//    ma_csr_misa_c_c,
//    ma_trigger_data1_t,
//    ma_trigger_data2_t,
//    ma_trigger_enable_t,
//    EN_operand_fwding_put,
//    EN_ma_csr_misa_c,
//    EN_memory_request_get) -> mv_redirection_fst
//   (rx_stage1_operands_first_deq_rdy_b,
//    rx_stage1_operands_first_x,
//    rx_stage1_meta_first_deq_rdy_b,
//    rx_stage1_meta_first_x,
//    rx_stage1_control_first_deq_rdy_b,
//    rx_stage1_control_first_x,
//    tx_stage3_common_enq_rdy_b,
//    tx_stage3_type_enq_rdy_b,
//    rx_stage1_dump_first_deq_rdy_b,
//    tx_stage3_dump_enq_rdy_b,
//    operand_fwding_put,
//    ma_csr_misa_c_c,
//    ma_trigger_data1_t,
//    ma_trigger_data2_t,
//    ma_trigger_enable_t,
//    EN_operand_fwding_put,
//    EN_ma_csr_misa_c,
//    EN_memory_request_get) -> mv_redirection_snd
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mkstage2(CLK,
		RST_N,

		rx_stage1_operands_notEmpty_b,

		rx_stage1_operands_first_deq_rdy_b,

		rx_stage1_operands_first_x,

		rx_stage1_operands_deq_ena,

		rx_stage1_meta_notEmpty_b,

		rx_stage1_meta_first_deq_rdy_b,

		rx_stage1_meta_first_x,

		rx_stage1_meta_deq_ena,

		rx_stage1_control_notEmpty_b,

		rx_stage1_control_first_deq_rdy_b,

		rx_stage1_control_first_x,

		rx_stage1_control_deq_ena,

		tx_stage3_common_notFull_b,

		tx_stage3_common_enq_rdy_b,

		tx_stage3_common_enq_ena,

		tx_stage3_common_enq_data,

		tx_stage3_type_notFull_b,

		tx_stage3_type_enq_rdy_b,

		tx_stage3_type_enq_ena,

		tx_stage3_type_enq_data,

		rx_stage1_dump_notEmpty_b,

		rx_stage1_dump_first_deq_rdy_b,

		rx_stage1_dump_first_x,

		rx_stage1_dump_deq_ena,

		tx_stage3_dump_notFull_b,

		tx_stage3_dump_enq_rdy_b,

		tx_stage3_dump_enq_ena,

		tx_stage3_dump_enq_data,

		EN_memory_request_get,
		memory_request_get,
		RDY_memory_request_get,

		operand_fwding_put,
		EN_operand_fwding_put,
		RDY_operand_fwding_put,

		EN_ma_update_wEpoch,
		RDY_ma_update_wEpoch,

		ma_csr_misa_c_c,
		EN_ma_csr_misa_c,
		RDY_ma_csr_misa_c,

		mv_delayed_output,
		RDY_mv_delayed_output,

		ma_trigger_data1_t,

		ma_trigger_data2_t,

		ma_trigger_enable_t,

		mv_redirection_fst,
		RDY_mv_redirection_fst,

		mv_redirection_snd,
		RDY_mv_redirection_snd);
  input  CLK;
  input  RST_N;

  // action method rx_stage1_operands_notEmpty
  input  rx_stage1_operands_notEmpty_b;

  // action method rx_stage1_operands_first_deq_rdy
  input  rx_stage1_operands_first_deq_rdy_b;

  // action method rx_stage1_operands_first
  input  [127 : 0] rx_stage1_operands_first_x;

  // value method rx_stage1_operands_deq_ena
  output rx_stage1_operands_deq_ena;

  // action method rx_stage1_meta_notEmpty
  input  rx_stage1_meta_notEmpty_b;

  // action method rx_stage1_meta_first_deq_rdy
  input  rx_stage1_meta_first_deq_rdy_b;

  // action method rx_stage1_meta_first
  input  [64 : 0] rx_stage1_meta_first_x;

  // value method rx_stage1_meta_deq_ena
  output rx_stage1_meta_deq_ena;

  // action method rx_stage1_control_notEmpty
  input  rx_stage1_control_notEmpty_b;

  // action method rx_stage1_control_first_deq_rdy
  input  rx_stage1_control_first_deq_rdy_b;

  // action method rx_stage1_control_first
  input  [65 : 0] rx_stage1_control_first_x;

  // value method rx_stage1_control_deq_ena
  output rx_stage1_control_deq_ena;

  // action method tx_stage3_common_notFull
  input  tx_stage3_common_notFull_b;

  // action method tx_stage3_common_enq_rdy
  input  tx_stage3_common_enq_rdy_b;

  // value method tx_stage3_common_enq_ena
  output tx_stage3_common_enq_ena;

  // value method tx_stage3_common_enq_data
  output [69 : 0] tx_stage3_common_enq_data;

  // action method tx_stage3_type_notFull
  input  tx_stage3_type_notFull_b;

  // action method tx_stage3_type_enq_rdy
  input  tx_stage3_type_enq_rdy_b;

  // value method tx_stage3_type_enq_ena
  output tx_stage3_type_enq_ena;

  // value method tx_stage3_type_enq_data
  output [82 : 0] tx_stage3_type_enq_data;

  // action method rx_stage1_dump_notEmpty
  input  rx_stage1_dump_notEmpty_b;

  // action method rx_stage1_dump_first_deq_rdy
  input  rx_stage1_dump_first_deq_rdy_b;

  // action method rx_stage1_dump_first
  input  [95 : 0] rx_stage1_dump_first_x;

  // value method rx_stage1_dump_deq_ena
  output rx_stage1_dump_deq_ena;

  // action method tx_stage3_dump_notFull
  input  tx_stage3_dump_notFull_b;

  // action method tx_stage3_dump_enq_rdy
  input  tx_stage3_dump_enq_rdy_b;

  // value method tx_stage3_dump_enq_ena
  output tx_stage3_dump_enq_ena;

  // value method tx_stage3_dump_enq_data
  output [95 : 0] tx_stage3_dump_enq_data;

  // actionvalue method memory_request_get
  input  EN_memory_request_get;
  output [138 : 0] memory_request_get;
  output RDY_memory_request_get;

  // action method operand_fwding_put
  input  [69 : 0] operand_fwding_put;
  input  EN_operand_fwding_put;
  output RDY_operand_fwding_put;

  // action method ma_update_wEpoch
  input  EN_ma_update_wEpoch;
  output RDY_ma_update_wEpoch;

  // action method ma_csr_misa_c
  input  ma_csr_misa_c_c;
  input  EN_ma_csr_misa_c;
  output RDY_ma_csr_misa_c;

  // value method mv_delayed_output
  output [64 : 0] mv_delayed_output;
  output RDY_mv_delayed_output;

  // action method ma_trigger_data1
  input  [43 : 0] ma_trigger_data1_t;

  // action method ma_trigger_data2
  input  [127 : 0] ma_trigger_data2_t;

  // action method ma_trigger_enable
  input  [1 : 0] ma_trigger_enable_t;

  // value method mv_redirection_fst
  output [63 : 0] mv_redirection_fst;
  output RDY_mv_redirection_fst;

  // value method mv_redirection_snd
  output mv_redirection_snd;
  output RDY_mv_redirection_snd;

  // signals for module outputs
  wire [138 : 0] memory_request_get;
  wire [95 : 0] tx_stage3_dump_enq_data;
  wire [82 : 0] tx_stage3_type_enq_data;
  wire [69 : 0] tx_stage3_common_enq_data;
  wire [64 : 0] mv_delayed_output;
  wire [63 : 0] mv_redirection_fst;
  wire RDY_ma_csr_misa_c,
       RDY_ma_update_wEpoch,
       RDY_memory_request_get,
       RDY_mv_delayed_output,
       RDY_mv_redirection_fst,
       RDY_mv_redirection_snd,
       RDY_operand_fwding_put,
       mv_redirection_snd,
       rx_stage1_control_deq_ena,
       rx_stage1_dump_deq_ena,
       rx_stage1_meta_deq_ena,
       rx_stage1_operands_deq_ena,
       tx_stage3_common_enq_ena,
       tx_stage3_dump_enq_ena,
       tx_stage3_type_enq_ena;

  // inlined wires
  wire [82 : 0] ff_stage3_type_w_data_wget;
  wire [69 : 0] ff_stage3_common_w_data_wget;
  wire [64 : 0] wr_redirection_wget;
  wire ff_stage1_operands_w_ena_whas, ff_stage3_common_w_ena_whas;

  // register rg_eEpoch
  reg rg_eEpoch;
  wire rg_eEpoch_D_IN, rg_eEpoch_EN;

  // register rg_loadreserved_addr
  reg [32 : 0] rg_loadreserved_addr;
  wire [32 : 0] rg_loadreserved_addr_D_IN;
  wire rg_loadreserved_addr_EN;

  // register rg_wEpoch
  reg rg_wEpoch;
  wire rg_wEpoch_D_IN, rg_wEpoch_EN;

  // ports of submodule alu
  reg [63 : 0] alu_inputs_op3;
  wire [137 : 0] alu_inputs;
  wire [127 : 0] alu_inputs_tdata2;
  wire [64 : 0] alu_mv_delayed_output;
  wire [63 : 0] alu_inputs_imm_value, alu_inputs_op1, alu_inputs_op2;
  wire [43 : 0] alu_inputs_tdata1;
  wire [3 : 0] alu_inputs_fn, alu_inputs_inst_type;
  wire [2 : 0] alu_inputs_funct3;
  wire [1 : 0] alu_inputs_lpc, alu_inputs_memaccess, alu_inputs_tenable;
  wire alu_EN_inputs, alu_inputs_misa_c, alu_inputs_word32;

  // ports of submodule ff_memory_request
  wire [138 : 0] ff_memory_request_D_IN, ff_memory_request_D_OUT;
  wire ff_memory_request_CLR,
       ff_memory_request_DEQ,
       ff_memory_request_EMPTY_N,
       ff_memory_request_ENQ,
       ff_memory_request_FULL_N;

  // rule scheduling signals
  wire CAN_FIRE_RL_fetch_execute_pass,
       CAN_FIRE_ma_csr_misa_c,
       CAN_FIRE_ma_trigger_data1,
       CAN_FIRE_ma_trigger_data2,
       CAN_FIRE_ma_trigger_enable,
       CAN_FIRE_ma_update_wEpoch,
       CAN_FIRE_memory_request_get,
       CAN_FIRE_operand_fwding_put,
       CAN_FIRE_rx_stage1_control_first,
       CAN_FIRE_rx_stage1_control_first_deq_rdy,
       CAN_FIRE_rx_stage1_control_notEmpty,
       CAN_FIRE_rx_stage1_dump_first,
       CAN_FIRE_rx_stage1_dump_first_deq_rdy,
       CAN_FIRE_rx_stage1_dump_notEmpty,
       CAN_FIRE_rx_stage1_meta_first,
       CAN_FIRE_rx_stage1_meta_first_deq_rdy,
       CAN_FIRE_rx_stage1_meta_notEmpty,
       CAN_FIRE_rx_stage1_operands_first,
       CAN_FIRE_rx_stage1_operands_first_deq_rdy,
       CAN_FIRE_rx_stage1_operands_notEmpty,
       CAN_FIRE_tx_stage3_common_enq_rdy,
       CAN_FIRE_tx_stage3_common_notFull,
       CAN_FIRE_tx_stage3_dump_enq_rdy,
       CAN_FIRE_tx_stage3_dump_notFull,
       CAN_FIRE_tx_stage3_type_enq_rdy,
       CAN_FIRE_tx_stage3_type_notFull,
       WILL_FIRE_RL_fetch_execute_pass,
       WILL_FIRE_ma_csr_misa_c,
       WILL_FIRE_ma_trigger_data1,
       WILL_FIRE_ma_trigger_data2,
       WILL_FIRE_ma_trigger_enable,
       WILL_FIRE_ma_update_wEpoch,
       WILL_FIRE_memory_request_get,
       WILL_FIRE_operand_fwding_put,
       WILL_FIRE_rx_stage1_control_first,
       WILL_FIRE_rx_stage1_control_first_deq_rdy,
       WILL_FIRE_rx_stage1_control_notEmpty,
       WILL_FIRE_rx_stage1_dump_first,
       WILL_FIRE_rx_stage1_dump_first_deq_rdy,
       WILL_FIRE_rx_stage1_dump_notEmpty,
       WILL_FIRE_rx_stage1_meta_first,
       WILL_FIRE_rx_stage1_meta_first_deq_rdy,
       WILL_FIRE_rx_stage1_meta_notEmpty,
       WILL_FIRE_rx_stage1_operands_first,
       WILL_FIRE_rx_stage1_operands_first_deq_rdy,
       WILL_FIRE_rx_stage1_operands_notEmpty,
       WILL_FIRE_tx_stage3_common_enq_rdy,
       WILL_FIRE_tx_stage3_common_notFull,
       WILL_FIRE_tx_stage3_dump_enq_rdy,
       WILL_FIRE_tx_stage3_dump_notFull,
       WILL_FIRE_tx_stage3_type_enq_rdy,
       WILL_FIRE_tx_stage3_type_notFull;

  // declarations used by system tasks
  // synopsys translate_off
  reg TASK_testplusargs___d30;
  reg TASK_testplusargs___d31;
  reg TASK_testplusargs___d32;
  reg [63 : 0] v__h3163;
  reg TASK_testplusargs___d42;
  reg TASK_testplusargs___d43;
  reg TASK_testplusargs___d44;
  reg [63 : 0] v__h3371;
  reg TASK_testplusargs___d54;
  reg TASK_testplusargs___d55;
  reg TASK_testplusargs___d56;
  reg [63 : 0] v__h3583;
  reg TASK_testplusargs___d141;
  reg TASK_testplusargs___d142;
  reg TASK_testplusargs___d143;
  reg [63 : 0] v__h4032;
  reg TASK_testplusargs___d153;
  reg TASK_testplusargs___d154;
  reg TASK_testplusargs___d155;
  reg [63 : 0] v__h4236;
  reg TASK_testplusargs___d184;
  reg TASK_testplusargs___d185;
  reg TASK_testplusargs___d186;
  reg [63 : 0] v__h4461;
  reg TASK_testplusargs___d196;
  reg TASK_testplusargs___d197;
  reg TASK_testplusargs___d198;
  reg [63 : 0] v__h4671;
  reg TASK_testplusargs___d251;
  reg TASK_testplusargs___d252;
  reg TASK_testplusargs___d253;
  reg [63 : 0] v__h7070;
  reg TASK_testplusargs___d305;
  reg TASK_testplusargs___d306;
  reg TASK_testplusargs___d307;
  reg [63 : 0] v__h7727;
  reg TASK_testplusargs___d320;
  reg TASK_testplusargs___d321;
  reg TASK_testplusargs___d322;
  reg [63 : 0] v__h7982;
  reg TASK_testplusargs___d395;
  reg TASK_testplusargs___d396;
  reg TASK_testplusargs___d397;
  reg [63 : 0] v__h7369;
  reg TASK_testplusargs___d421;
  reg TASK_testplusargs___d422;
  reg TASK_testplusargs___d423;
  reg [63 : 0] v__h10396;
  reg IF_ff_stage1_meta_w_data_whas__0_THEN_ff_stage_ETC___d310;
  reg IF_ff_stage1_meta_w_data_whas__0_THEN_ff_stage_ETC___d325;
  reg TASK_testplusargs_20_OR_TASK_testplusargs_21_A_ETC___d332;
  reg TASK_testplusargs_20_OR_TASK_testplusargs_21_A_ETC___d340;
  reg TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d65;
  reg TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d68;
  reg TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d71;
  reg TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d74;
  reg TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d77;
  reg TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d80;
  reg TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d83;
  reg TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d86;
  reg TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d111;
  reg TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d115;
  reg TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d118;
  reg TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d121;
  reg TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d130;
  reg TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d138;
  reg TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d140;
  reg TASK_testplusargs_53_OR_TASK_testplusargs_54_A_ETC___d162;
  reg TASK_testplusargs_53_OR_TASK_testplusargs_54_A_ETC___d164;
  reg TASK_testplusargs_53_OR_TASK_testplusargs_54_A_ETC___d168;
  reg TASK_testplusargs_53_OR_TASK_testplusargs_54_A_ETC___d171;
  reg TASK_testplusargs_53_OR_TASK_testplusargs_54_A_ETC___d174;
  reg TASK_testplusargs_53_OR_TASK_testplusargs_54_A_ETC___d183;
  reg TASK_testplusargs_51_OR_TASK_testplusargs_52_A_ETC___d259;
  reg TASK_testplusargs_51_OR_TASK_testplusargs_52_A_ETC___d261;
  reg TASK_testplusargs_51_OR_TASK_testplusargs_52_A_ETC___d264;
  reg TASK_testplusargs_51_OR_TASK_testplusargs_52_A_ETC___d266;
  reg TASK_testplusargs_51_OR_TASK_testplusargs_52_A_ETC___d268;
  reg TASK_testplusargs_51_OR_TASK_testplusargs_52_A_ETC___d274;
  reg TASK_testplusargs_51_OR_TASK_testplusargs_52_A_ETC___d279;
  reg TASK_testplusargs_51_OR_TASK_testplusargs_52_A_ETC___d281;
  reg IF_ff_stage1_control_w_data_whas__90_THEN_ff_s_ETC___d313;
  reg IF_ff_stage1_control_w_data_whas__90_THEN_ff_s_ETC___d328;
  reg NOT_IF_ff_stage1_control_w_data_whas__90_THEN__ETC___d400;
  // synopsys translate_on

  // remaining internal signals
  reg [80 : 0] IF_IF_IF_ff_stage1_meta_w_data_whas__0_THEN_ff_ETC___d392;
  reg [63 : 0] _op2__h3087;
  reg [1 : 0] CASE_IF_IF_ff_stage1_meta_w_data_whas__0_THEN__ETC__q4;
  wire [63 : 0] SEXT_IF_ff_stage1_meta_w_data_whas__0_THEN_ff__ETC___d227,
		_theResult_____1_snd_aluresult__h8201,
		op1__h3084,
		op2__h3085,
		rd__h4738,
		rx_stage1_control_first_x_BITS_63_TO_0__q3,
		s3regular_rdvalue__h8680,
		s3system_rs1_imm__h8742,
		x1_avValue_snd_aluresult__h8207;
  wire [31 : 0] rx_stage1_meta_first_x_BITS_40_TO_9__q2;
  wire [6 : 0] rx_stage1_meta_first_x_BITS_8_TO_2__q1;
  wire [4 : 0] rdaddr__h4737, x__h7563;
  wire [1 : 0] IF_IF_ff_stage1_meta_w_data_whas__0_THEN_ff_st_ETC___d350,
	       IF_IF_ff_stage1_meta_w_data_whas__0_THEN_ff_st_ETC___d351,
	       IF_IF_ff_stage1_meta_w_data_whas__0_THEN_ff_st_ETC___d356,
	       IF_IF_ff_stage1_meta_w_data_whas__0_THEN_ff_st_ETC___d357,
	       IF_rg_loadreserved_addr_30_BIT_32_31_AND_NOT_a_ETC___d349,
	       curr_epoch__h1856;
  wire IF_ff_stage1_control_w_data_whas__90_THEN_ff_s_ETC___d285,
       IF_ff_stage1_control_w_data_whas__90_THEN_ff_s_ETC___d304,
       IF_ff_stage1_control_w_data_whas__90_THEN_ff_s_ETC___d319,
       IF_ff_stage1_meta_w_data_whas__0_THEN_ff_stage_ETC___d206,
       IF_ff_stage1_meta_w_data_whas__0_THEN_ff_stage_ETC___d208,
       NOT_IF_ff_stage1_meta_w_data_whas__0_THEN_ff_s_ETC___d215,
       NOT_alu_inputs_57_BITS_38_TO_7_00_EQ_IF_rg_loa_ETC___d346,
       v_trigger_enable_0_whas_AND_ff_stage1_dump_w_r_ETC___d21;

  // action method rx_stage1_operands_notEmpty
  assign CAN_FIRE_rx_stage1_operands_notEmpty = 1'd1 ;
  assign WILL_FIRE_rx_stage1_operands_notEmpty = 1'd1 ;

  // action method rx_stage1_operands_first_deq_rdy
  assign CAN_FIRE_rx_stage1_operands_first_deq_rdy = 1'd1 ;
  assign WILL_FIRE_rx_stage1_operands_first_deq_rdy = 1'd1 ;

  // action method rx_stage1_operands_first
  assign CAN_FIRE_rx_stage1_operands_first = 1'd1 ;
  assign WILL_FIRE_rx_stage1_operands_first = 1'd1 ;

  // value method rx_stage1_operands_deq_ena
  assign rx_stage1_operands_deq_ena = ff_stage1_operands_w_ena_whas ;

  // action method rx_stage1_meta_notEmpty
  assign CAN_FIRE_rx_stage1_meta_notEmpty = 1'd1 ;
  assign WILL_FIRE_rx_stage1_meta_notEmpty = 1'd1 ;

  // action method rx_stage1_meta_first_deq_rdy
  assign CAN_FIRE_rx_stage1_meta_first_deq_rdy = 1'd1 ;
  assign WILL_FIRE_rx_stage1_meta_first_deq_rdy = 1'd1 ;

  // action method rx_stage1_meta_first
  assign CAN_FIRE_rx_stage1_meta_first = 1'd1 ;
  assign WILL_FIRE_rx_stage1_meta_first = 1'd1 ;

  // value method rx_stage1_meta_deq_ena
  assign rx_stage1_meta_deq_ena = ff_stage1_operands_w_ena_whas ;

  // action method rx_stage1_control_notEmpty
  assign CAN_FIRE_rx_stage1_control_notEmpty = 1'd1 ;
  assign WILL_FIRE_rx_stage1_control_notEmpty = 1'd1 ;

  // action method rx_stage1_control_first_deq_rdy
  assign CAN_FIRE_rx_stage1_control_first_deq_rdy = 1'd1 ;
  assign WILL_FIRE_rx_stage1_control_first_deq_rdy = 1'd1 ;

  // action method rx_stage1_control_first
  assign CAN_FIRE_rx_stage1_control_first = 1'd1 ;
  assign WILL_FIRE_rx_stage1_control_first = 1'd1 ;

  // value method rx_stage1_control_deq_ena
  assign rx_stage1_control_deq_ena = ff_stage1_operands_w_ena_whas ;

  // action method tx_stage3_common_notFull
  assign CAN_FIRE_tx_stage3_common_notFull = 1'd1 ;
  assign WILL_FIRE_tx_stage3_common_notFull = 1'd1 ;

  // action method tx_stage3_common_enq_rdy
  assign CAN_FIRE_tx_stage3_common_enq_rdy = 1'd1 ;
  assign WILL_FIRE_tx_stage3_common_enq_rdy = 1'd1 ;

  // value method tx_stage3_common_enq_ena
  assign tx_stage3_common_enq_ena = ff_stage3_common_w_ena_whas ;

  // value method tx_stage3_common_enq_data
  assign tx_stage3_common_enq_data = ff_stage3_common_w_data_wget ;

  // action method tx_stage3_type_notFull
  assign CAN_FIRE_tx_stage3_type_notFull = 1'd1 ;
  assign WILL_FIRE_tx_stage3_type_notFull = 1'd1 ;

  // action method tx_stage3_type_enq_rdy
  assign CAN_FIRE_tx_stage3_type_enq_rdy = 1'd1 ;
  assign WILL_FIRE_tx_stage3_type_enq_rdy = 1'd1 ;

  // value method tx_stage3_type_enq_ena
  assign tx_stage3_type_enq_ena = ff_stage3_common_w_ena_whas ;

  // value method tx_stage3_type_enq_data
  assign tx_stage3_type_enq_data = ff_stage3_type_w_data_wget ;

  // action method rx_stage1_dump_notEmpty
  assign CAN_FIRE_rx_stage1_dump_notEmpty = 1'd1 ;
  assign WILL_FIRE_rx_stage1_dump_notEmpty = 1'd1 ;

  // action method rx_stage1_dump_first_deq_rdy
  assign CAN_FIRE_rx_stage1_dump_first_deq_rdy = 1'd1 ;
  assign WILL_FIRE_rx_stage1_dump_first_deq_rdy = 1'd1 ;

  // action method rx_stage1_dump_first
  assign CAN_FIRE_rx_stage1_dump_first = 1'd1 ;
  assign WILL_FIRE_rx_stage1_dump_first = 1'd1 ;

  // value method rx_stage1_dump_deq_ena
  assign rx_stage1_dump_deq_ena = ff_stage1_operands_w_ena_whas ;

  // action method tx_stage3_dump_notFull
  assign CAN_FIRE_tx_stage3_dump_notFull = 1'd1 ;
  assign WILL_FIRE_tx_stage3_dump_notFull = 1'd1 ;

  // action method tx_stage3_dump_enq_rdy
  assign CAN_FIRE_tx_stage3_dump_enq_rdy = 1'd1 ;
  assign WILL_FIRE_tx_stage3_dump_enq_rdy = 1'd1 ;

  // value method tx_stage3_dump_enq_ena
  assign tx_stage3_dump_enq_ena = ff_stage3_common_w_ena_whas ;

  // value method tx_stage3_dump_enq_data
  assign tx_stage3_dump_enq_data = rx_stage1_dump_first_x ;

  // actionvalue method memory_request_get
  assign memory_request_get = ff_memory_request_D_OUT ;
  assign RDY_memory_request_get = ff_memory_request_EMPTY_N ;
  assign CAN_FIRE_memory_request_get = ff_memory_request_EMPTY_N ;
  assign WILL_FIRE_memory_request_get = EN_memory_request_get ;

  // action method operand_fwding_put
  assign RDY_operand_fwding_put = 1'd1 ;
  assign CAN_FIRE_operand_fwding_put = 1'd1 ;
  assign WILL_FIRE_operand_fwding_put = EN_operand_fwding_put ;

  // action method ma_update_wEpoch
  assign RDY_ma_update_wEpoch = 1'd1 ;
  assign CAN_FIRE_ma_update_wEpoch = 1'd1 ;
  assign WILL_FIRE_ma_update_wEpoch = EN_ma_update_wEpoch ;

  // action method ma_csr_misa_c
  assign RDY_ma_csr_misa_c = 1'd1 ;
  assign CAN_FIRE_ma_csr_misa_c = 1'd1 ;
  assign WILL_FIRE_ma_csr_misa_c = EN_ma_csr_misa_c ;

  // value method mv_delayed_output
  assign mv_delayed_output = alu_mv_delayed_output ;
  assign RDY_mv_delayed_output = 1'd1 ;

  // action method ma_trigger_data1
  assign CAN_FIRE_ma_trigger_data1 = 1'd1 ;
  assign WILL_FIRE_ma_trigger_data1 = 1'd1 ;

  // action method ma_trigger_data2
  assign CAN_FIRE_ma_trigger_data2 = 1'd1 ;
  assign WILL_FIRE_ma_trigger_data2 = 1'd1 ;

  // action method ma_trigger_enable
  assign CAN_FIRE_ma_trigger_enable = 1'd1 ;
  assign WILL_FIRE_ma_trigger_enable = 1'd1 ;

  // value method mv_redirection_fst
  assign mv_redirection_fst = wr_redirection_wget[64:1] ;
  assign RDY_mv_redirection_fst = 1'd1 ;

  // value method mv_redirection_snd
  assign mv_redirection_snd =
	     ff_stage3_common_w_ena_whas && wr_redirection_wget[0] ;
  assign RDY_mv_redirection_snd = 1'd1 ;

  // submodule alu
  mkalu alu(.CLK(CLK),
	    .RST_N(RST_N),
	    .inputs_fn(alu_inputs_fn),
	    .inputs_funct3(alu_inputs_funct3),
	    .inputs_imm_value(alu_inputs_imm_value),
	    .inputs_inst_type(alu_inputs_inst_type),
	    .inputs_lpc(alu_inputs_lpc),
	    .inputs_memaccess(alu_inputs_memaccess),
	    .inputs_misa_c(alu_inputs_misa_c),
	    .inputs_op1(alu_inputs_op1),
	    .inputs_op2(alu_inputs_op2),
	    .inputs_op3(alu_inputs_op3),
	    .inputs_tdata1(alu_inputs_tdata1),
	    .inputs_tdata2(alu_inputs_tdata2),
	    .inputs_tenable(alu_inputs_tenable),
	    .inputs_word32(alu_inputs_word32),
	    .EN_inputs(alu_EN_inputs),
	    .inputs(alu_inputs),
	    .RDY_inputs(),
	    .mv_delayed_output(alu_mv_delayed_output),
	    .RDY_mv_delayed_output());

  // submodule ff_memory_request
  FIFOL1 #(.width(32'd139)) ff_memory_request(.RST(RST_N),
					      .CLK(CLK),
					      .D_IN(ff_memory_request_D_IN),
					      .ENQ(ff_memory_request_ENQ),
					      .DEQ(ff_memory_request_DEQ),
					      .CLR(ff_memory_request_CLR),
					      .D_OUT(ff_memory_request_D_OUT),
					      .FULL_N(ff_memory_request_FULL_N),
					      .EMPTY_N(ff_memory_request_EMPTY_N));

  // rule RL_fetch_execute_pass
  assign CAN_FIRE_RL_fetch_execute_pass =
	     rx_stage1_meta_first_deq_rdy_b &&
	     rx_stage1_control_first_deq_rdy_b &&
	     EN_ma_csr_misa_c &&
	     v_trigger_enable_0_whas_AND_ff_stage1_dump_w_r_ETC___d21 ;
  assign WILL_FIRE_RL_fetch_execute_pass = CAN_FIRE_RL_fetch_execute_pass ;

  // inlined wires
  assign ff_stage1_operands_w_ena_whas =
	     WILL_FIRE_RL_fetch_execute_pass &&
	     (NOT_IF_ff_stage1_meta_w_data_whas__0_THEN_ff_s_ETC___d215 ||
	      !IF_ff_stage1_control_w_data_whas__90_THEN_ff_s_ETC___d285) ;
  assign ff_stage3_common_w_ena_whas =
	     WILL_FIRE_RL_fetch_execute_pass &&
	     IF_ff_stage1_control_w_data_whas__90_THEN_ff_s_ETC___d285 &&
	     NOT_IF_ff_stage1_meta_w_data_whas__0_THEN_ff_s_ETC___d215 ;
  assign ff_stage3_common_w_data_wget =
	     { rx_stage1_control_first_x[63:0],
	       rx_stage1_meta_first_x[54:50],
	       rg_wEpoch } ;
  assign ff_stage3_type_w_data_wget =
	     { CASE_IF_IF_ff_stage1_meta_w_data_whas__0_THEN__ETC__q4,
	       IF_IF_IF_ff_stage1_meta_w_data_whas__0_THEN_ff_ETC___d392 } ;
  assign wr_redirection_wget = { alu_inputs[70:7], alu_inputs[0] } ;

  // register rg_eEpoch
  assign rg_eEpoch_D_IN = ~rg_eEpoch ;
  assign rg_eEpoch_EN =
	     WILL_FIRE_RL_fetch_execute_pass &&
	     IF_ff_stage1_control_w_data_whas__90_THEN_ff_s_ETC___d285 &&
	     NOT_IF_ff_stage1_meta_w_data_whas__0_THEN_ff_s_ETC___d215 &&
	     alu_inputs[0] ;

  // register rg_loadreserved_addr
  assign rg_loadreserved_addr_D_IN =
	     { x__h7563 == 5'b00101 && rx_stage1_meta_first_x[42:41] == 2'd2,
	       alu_inputs[38:7] } ;
  assign rg_loadreserved_addr_EN =
	     WILL_FIRE_RL_fetch_execute_pass &&
	     IF_ff_stage1_control_w_data_whas__90_THEN_ff_s_ETC___d285 &&
	     NOT_IF_ff_stage1_meta_w_data_whas__0_THEN_ff_s_ETC___d215 &&
	     rx_stage1_meta_first_x[46:43] == 4'd1 ;

  // register rg_wEpoch
  assign rg_wEpoch_D_IN = ~rg_wEpoch ;
  assign rg_wEpoch_EN = EN_ma_update_wEpoch ;

  // submodule alu
  assign alu_inputs_fn = rx_stage1_meta_first_x_BITS_8_TO_2__q1[6:3] ;
  assign alu_inputs_funct3 = rx_stage1_meta_first_x_BITS_8_TO_2__q1[2:0] ;
  assign alu_inputs_imm_value =
	     SEXT_IF_ff_stage1_meta_w_data_whas__0_THEN_ff__ETC___d227 ;
  assign alu_inputs_inst_type = rx_stage1_meta_first_x[46:43] ;
  assign alu_inputs_lpc = rx_stage1_control_first_x_BITS_63_TO_0__q3[1:0] ;
  assign alu_inputs_memaccess = rx_stage1_meta_first_x[42:41] ;
  assign alu_inputs_misa_c = ma_csr_misa_c_c ;
  assign alu_inputs_op1 =
	     rx_stage1_meta_first_x[49] ?
	       rx_stage1_control_first_x[63:0] :
	       op1__h3084 ;
  assign alu_inputs_op2 = _op2__h3087 ;
  always@(rx_stage1_meta_first_x or rx_stage1_control_first_x or op1__h3084)
  begin
    case (rx_stage1_meta_first_x[46:43])
      4'd1, 4'd4: alu_inputs_op3 = op1__h3084;
      default: alu_inputs_op3 = rx_stage1_control_first_x[63:0];
    endcase
  end
  assign alu_inputs_tdata1 = ma_trigger_data1_t ;
  assign alu_inputs_tdata2 = ma_trigger_data2_t ;
  assign alu_inputs_tenable = ma_trigger_enable_t ;
  assign alu_inputs_word32 = rx_stage1_meta_first_x[1] ;
  assign alu_EN_inputs = CAN_FIRE_RL_fetch_execute_pass ;

  // submodule ff_memory_request
  assign ff_memory_request_D_IN =
	     { alu_inputs[70:7],
	       _op2__h3087,
	       IF_IF_ff_stage1_meta_w_data_whas__0_THEN_ff_st_ETC___d357,
	       rx_stage1_meta_first_x_BITS_8_TO_2__q1[2:0],
	       rg_wEpoch,
	       x__h7563 } ;
  assign ff_memory_request_ENQ =
	     WILL_FIRE_RL_fetch_execute_pass &&
	     IF_ff_stage1_control_w_data_whas__90_THEN_ff_s_ETC___d285 &&
	     NOT_IF_ff_stage1_meta_w_data_whas__0_THEN_ff_s_ETC___d215 &&
	     IF_IF_ff_stage1_meta_w_data_whas__0_THEN_ff_st_ETC___d351 ==
	     2'd0 &&
	     IF_IF_ff_stage1_meta_w_data_whas__0_THEN_ff_st_ETC___d357 !=
	     2'd3 ;
  assign ff_memory_request_DEQ = EN_memory_request_get ;
  assign ff_memory_request_CLR = EN_ma_update_wEpoch ;

  // remaining internal signals
  assign IF_IF_ff_stage1_meta_w_data_whas__0_THEN_ff_st_ETC___d350 =
	     (x__h7563 == 5'b00111 && rx_stage1_meta_first_x[42:41] == 2'd2) ?
	       IF_rg_loadreserved_addr_30_BIT_32_31_AND_NOT_a_ETC___d349 :
	       alu_inputs[136:135] ;
  assign IF_IF_ff_stage1_meta_w_data_whas__0_THEN_ff_st_ETC___d351 =
	     (rx_stage1_meta_first_x[46:43] == 4'd1) ?
	       IF_IF_ff_stage1_meta_w_data_whas__0_THEN_ff_st_ETC___d350 :
	       alu_inputs[136:135] ;
  assign IF_IF_ff_stage1_meta_w_data_whas__0_THEN_ff_st_ETC___d356 =
	     (x__h7563 == 5'b00111 && rx_stage1_meta_first_x[42:41] == 2'd2) ?
	       ((NOT_alu_inputs_57_BITS_38_TO_7_00_EQ_IF_rg_loa_ETC___d346 ||
		 !rg_loadreserved_addr[32]) ?
		  rx_stage1_meta_first_x[42:41] :
		  2'd1) :
	       ((x__h7563 == 5'b00101 &&
		 rx_stage1_meta_first_x[42:41] == 2'd2) ?
		  2'd0 :
		  rx_stage1_meta_first_x[42:41]) ;
  assign IF_IF_ff_stage1_meta_w_data_whas__0_THEN_ff_st_ETC___d357 =
	     (rx_stage1_meta_first_x[46:43] == 4'd1) ?
	       IF_IF_ff_stage1_meta_w_data_whas__0_THEN_ff_st_ETC___d356 :
	       rx_stage1_meta_first_x[42:41] ;
  assign IF_ff_stage1_control_w_data_whas__90_THEN_ff_s_ETC___d285 =
	     rx_stage1_control_first_x[65:64] == curr_epoch__h1856 ;
  assign IF_ff_stage1_control_w_data_whas__90_THEN_ff_s_ETC___d304 =
	     IF_ff_stage1_control_w_data_whas__90_THEN_ff_s_ETC___d285 &&
	     NOT_IF_ff_stage1_meta_w_data_whas__0_THEN_ff_s_ETC___d215 &&
	     rx_stage1_meta_first_x[46:43] == 4'd1 &&
	     x__h7563 == 5'b00101 &&
	     rx_stage1_meta_first_x[42:41] == 2'd2 ;
  assign IF_ff_stage1_control_w_data_whas__90_THEN_ff_s_ETC___d319 =
	     IF_ff_stage1_control_w_data_whas__90_THEN_ff_s_ETC___d285 &&
	     NOT_IF_ff_stage1_meta_w_data_whas__0_THEN_ff_s_ETC___d215 &&
	     rx_stage1_meta_first_x[46:43] == 4'd1 &&
	     x__h7563 == 5'b00111 &&
	     rx_stage1_meta_first_x[42:41] == 2'd2 ;
  assign IF_ff_stage1_meta_w_data_whas__0_THEN_ff_stage_ETC___d206 =
	     rx_stage1_meta_first_x[64:60] == rdaddr__h4737 ;
  assign IF_ff_stage1_meta_w_data_whas__0_THEN_ff_stage_ETC___d208 =
	     rx_stage1_meta_first_x[59:55] == rdaddr__h4737 ;
  assign IF_rg_loadreserved_addr_30_BIT_32_31_AND_NOT_a_ETC___d349 =
	     (rg_loadreserved_addr[32] &&
	      NOT_alu_inputs_57_BITS_38_TO_7_00_EQ_IF_rg_loa_ETC___d346) ?
	       2'd2 :
	       (rg_loadreserved_addr[32] ? alu_inputs[136:135] : 2'd2) ;
  assign NOT_IF_ff_stage1_meta_w_data_whas__0_THEN_ff_s_ETC___d215 =
	     !IF_ff_stage1_meta_w_data_whas__0_THEN_ff_stage_ETC___d206 &&
	     !IF_ff_stage1_meta_w_data_whas__0_THEN_ff_stage_ETC___d208 ||
	     EN_operand_fwding_put && operand_fwding_put[0] ||
	     rdaddr__h4737 == 5'd0 ;
  assign NOT_alu_inputs_57_BITS_38_TO_7_00_EQ_IF_rg_loa_ETC___d346 =
	     alu_inputs[38:7] != rg_loadreserved_addr[31:0] ;
  assign SEXT_IF_ff_stage1_meta_w_data_whas__0_THEN_ff__ETC___d227 =
	     { {32{rx_stage1_meta_first_x_BITS_40_TO_9__q2[31]}},
	       rx_stage1_meta_first_x_BITS_40_TO_9__q2 } ;
  assign _theResult_____1_snd_aluresult__h8201 =
	     (NOT_alu_inputs_57_BITS_38_TO_7_00_EQ_IF_rg_loa_ETC___d346 ||
	      !rg_loadreserved_addr[32]) ?
	       64'd1 :
	       alu_inputs[134:71] ;
  assign curr_epoch__h1856 = { rg_eEpoch, rg_wEpoch } ;
  assign op1__h3084 =
	     IF_ff_stage1_meta_w_data_whas__0_THEN_ff_stage_ETC___d206 ?
	       rd__h4738 :
	       rx_stage1_operands_first_x[127:64] ;
  assign op2__h3085 =
	     IF_ff_stage1_meta_w_data_whas__0_THEN_ff_stage_ETC___d208 ?
	       rd__h4738 :
	       rx_stage1_operands_first_x[63:0] ;
  assign rd__h4738 =
	     EN_operand_fwding_put ? operand_fwding_put[64:1] : 64'd0 ;
  assign rdaddr__h4737 =
	     EN_operand_fwding_put ? operand_fwding_put[69:65] : 5'd0 ;
  assign rx_stage1_control_first_x_BITS_63_TO_0__q3 =
	     rx_stage1_control_first_x[63:0] ;
  assign rx_stage1_meta_first_x_BITS_40_TO_9__q2 =
	     rx_stage1_meta_first_x[40:9] ;
  assign rx_stage1_meta_first_x_BITS_8_TO_2__q1 =
	     rx_stage1_meta_first_x[8:2] ;
  assign s3regular_rdvalue__h8680 =
	     (rx_stage1_meta_first_x[46:43] == 4'd1) ?
	       x1_avValue_snd_aluresult__h8207 :
	       alu_inputs[134:71] ;
  assign s3system_rs1_imm__h8742 =
	     rx_stage1_meta_first_x_BITS_8_TO_2__q1[2] ?
	       { 59'd0, rx_stage1_meta_first_x_BITS_40_TO_9__q2[16:12] } :
	       s3regular_rdvalue__h8680 ;
  assign v_trigger_enable_0_whas_AND_ff_stage1_dump_w_r_ETC___d21 =
	     rx_stage1_dump_first_deq_rdy_b &&
	     rx_stage1_operands_first_deq_rdy_b &&
	     tx_stage3_common_enq_rdy_b &&
	     tx_stage3_type_enq_rdy_b &&
	     tx_stage3_dump_enq_rdy_b &&
	     ff_memory_request_FULL_N ;
  assign x1_avValue_snd_aluresult__h8207 =
	     (x__h7563 == 5'b00111 && rx_stage1_meta_first_x[42:41] == 2'd2) ?
	       _theResult_____1_snd_aluresult__h8201 :
	       alu_inputs[134:71] ;
  assign x__h7563 =
	     { rx_stage1_meta_first_x_BITS_8_TO_2__q1[0],
	       rx_stage1_meta_first_x_BITS_8_TO_2__q1[6:3] } ;
  always@(rx_stage1_meta_first_x or
	  op2__h3085 or
	  SEXT_IF_ff_stage1_meta_w_data_whas__0_THEN_ff__ETC___d227)
  begin
    case (rx_stage1_meta_first_x[48:47])
      2'd0: _op2__h3087 = op2__h3085;
      2'd1:
	  _op2__h3087 =
	      SEXT_IF_ff_stage1_meta_w_data_whas__0_THEN_ff__ETC___d227;
      2'd2: _op2__h3087 = 64'd4;
      2'd3: _op2__h3087 = 64'd2;
    endcase
  end
  always@(IF_IF_ff_stage1_meta_w_data_whas__0_THEN_ff_st_ETC___d351 or
	  s3system_rs1_imm__h8742 or
	  rx_stage1_control_first_x_BITS_63_TO_0__q3 or
	  rx_stage1_meta_first_x_BITS_40_TO_9__q2 or
	  rx_stage1_meta_first_x_BITS_8_TO_2__q1 or
	  IF_IF_ff_stage1_meta_w_data_whas__0_THEN_ff_st_ETC___d357 or
	  alu_inputs or s3regular_rdvalue__h8680)
  begin
    case (IF_IF_ff_stage1_meta_w_data_whas__0_THEN_ff_st_ETC___d351)
      2'd0:
	  IF_IF_IF_ff_stage1_meta_w_data_whas__0_THEN_ff_ETC___d392 =
	      { 13'b0101010101010 /* unspecified value */ ,
		IF_IF_ff_stage1_meta_w_data_whas__0_THEN_ff_st_ETC___d357,
		alu_inputs[70:7],
		rx_stage1_meta_first_x_BITS_8_TO_2__q1[1:0] };
      2'd1:
	  IF_IF_IF_ff_stage1_meta_w_data_whas__0_THEN_ff_ETC___d392 =
	      { s3system_rs1_imm__h8742,
		rx_stage1_control_first_x_BITS_63_TO_0__q3[1:0],
		rx_stage1_meta_first_x_BITS_40_TO_9__q2[11:0],
		rx_stage1_meta_first_x_BITS_8_TO_2__q1[2:0] };
      2'd2:
	  IF_IF_IF_ff_stage1_meta_w_data_whas__0_THEN_ff_ETC___d392 =
	      { 16'b1010101010101010 /* unspecified value */ ,
		s3regular_rdvalue__h8680,
		!alu_inputs[137] };
      2'd3:
	  IF_IF_IF_ff_stage1_meta_w_data_whas__0_THEN_ff_ETC___d392 =
	      { 11'b01010101010 /* unspecified value */ ,
		alu_inputs[6:1],
		alu_inputs[70:7] };
    endcase
  end
  always@(IF_IF_ff_stage1_meta_w_data_whas__0_THEN_ff_st_ETC___d351)
  begin
    case (IF_IF_ff_stage1_meta_w_data_whas__0_THEN_ff_st_ETC___d351)
      2'd0, 2'd2:
	  CASE_IF_IF_ff_stage1_meta_w_data_whas__0_THEN__ETC__q4 =
	      IF_IF_ff_stage1_meta_w_data_whas__0_THEN_ff_st_ETC___d351;
      2'd1: CASE_IF_IF_ff_stage1_meta_w_data_whas__0_THEN__ETC__q4 = 2'd3;
      2'd3: CASE_IF_IF_ff_stage1_meta_w_data_whas__0_THEN__ETC__q4 = 2'd1;
    endcase
  end

  // handling of inlined registers

  always@(posedge CLK or `BSV_RESET_EDGE RST_N)
  if (RST_N == `BSV_RESET_VALUE)
    begin
      rg_eEpoch <= `BSV_ASSIGNMENT_DELAY 1'd0;
      rg_loadreserved_addr <= `BSV_ASSIGNMENT_DELAY
	  { 1'd0, 32'hAAAAAAAA /* unspecified value */  };
      rg_wEpoch <= `BSV_ASSIGNMENT_DELAY 1'd0;
    end
  else
    begin
      if (rg_eEpoch_EN) rg_eEpoch <= `BSV_ASSIGNMENT_DELAY rg_eEpoch_D_IN;
      if (rg_loadreserved_addr_EN)
	rg_loadreserved_addr <= `BSV_ASSIGNMENT_DELAY
	    rg_loadreserved_addr_D_IN;
      if (rg_wEpoch_EN) rg_wEpoch <= `BSV_ASSIGNMENT_DELAY rg_wEpoch_D_IN;
    end

  // synopsys translate_off
  `ifdef BSV_NO_INITIAL_BLOCKS
  `else // not BSV_NO_INITIAL_BLOCKS
  initial
  begin
    rg_eEpoch = 1'h0;
    rg_loadreserved_addr = 33'h0AAAAAAAA;
    rg_wEpoch = 1'h0;
  end
  `endif // BSV_NO_INITIAL_BLOCKS
  // synopsys translate_on

  // handling of system tasks

  // synopsys translate_off
  always@(negedge CLK)
  begin
    #0;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass)
	begin
	  TASK_testplusargs___d30 = $test$plusargs("fullverbose");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass)
	begin
	  TASK_testplusargs___d31 = $test$plusargs("mstage2");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass)
	begin
	  TASK_testplusargs___d32 = $test$plusargs("l0");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass)
	begin
	  v__h3163 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass &&
	  (TASK_testplusargs___d30 ||
	   TASK_testplusargs___d31 && TASK_testplusargs___d32))
	$write("[%10d", v__h3163, "] ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass &&
	  (TASK_testplusargs___d30 ||
	   TASK_testplusargs___d31 && TASK_testplusargs___d32))
	$write("STAGE2 : ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass &&
	  (TASK_testplusargs___d30 ||
	   TASK_testplusargs___d31 && TASK_testplusargs___d32))
	$write("TraceDump { ", "pc: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass &&
	  (TASK_testplusargs___d30 ||
	   TASK_testplusargs___d31 && TASK_testplusargs___d32))
	$write("'h%h", rx_stage1_dump_first_x[95:32]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass &&
	  (TASK_testplusargs___d30 ||
	   TASK_testplusargs___d31 && TASK_testplusargs___d32))
	$write(", ", "instruction: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass &&
	  (TASK_testplusargs___d30 ||
	   TASK_testplusargs___d31 && TASK_testplusargs___d32))
	$write("'h%h", rx_stage1_dump_first_x[31:0], " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass &&
	  (TASK_testplusargs___d30 ||
	   TASK_testplusargs___d31 && TASK_testplusargs___d32))
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass)
	begin
	  TASK_testplusargs___d42 = $test$plusargs("fullverbose");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass)
	begin
	  TASK_testplusargs___d43 = $test$plusargs("mstage2");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass)
	begin
	  TASK_testplusargs___d44 = $test$plusargs("l1");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass)
	begin
	  v__h3371 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass &&
	  (TASK_testplusargs___d42 ||
	   TASK_testplusargs___d43 && TASK_testplusargs___d44))
	$write("[%10d", v__h3371, "] ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass &&
	  (TASK_testplusargs___d42 ||
	   TASK_testplusargs___d43 && TASK_testplusargs___d44))
	$write("STAGE2 : OPs: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass &&
	  (TASK_testplusargs___d42 ||
	   TASK_testplusargs___d43 && TASK_testplusargs___d44))
	$write("STAGE1_operands { ", "op1: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass &&
	  (TASK_testplusargs___d42 ||
	   TASK_testplusargs___d43 && TASK_testplusargs___d44))
	$write("'h%h", rx_stage1_operands_first_x[127:64]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass &&
	  (TASK_testplusargs___d42 ||
	   TASK_testplusargs___d43 && TASK_testplusargs___d44))
	$write(", ", "op2: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass &&
	  (TASK_testplusargs___d42 ||
	   TASK_testplusargs___d43 && TASK_testplusargs___d44))
	$write("'h%h", rx_stage1_operands_first_x[63:0], " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass &&
	  (TASK_testplusargs___d42 ||
	   TASK_testplusargs___d43 && TASK_testplusargs___d44))
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass)
	begin
	  TASK_testplusargs___d54 = $test$plusargs("fullverbose");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass)
	begin
	  TASK_testplusargs___d55 = $test$plusargs("mstage2");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass)
	begin
	  TASK_testplusargs___d56 = $test$plusargs("l1");
	  #0;
	end
    TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d65 =
	(TASK_testplusargs___d54 ||
	 TASK_testplusargs___d55 && TASK_testplusargs___d56) &&
	rx_stage1_meta_first_x[46:43] == 4'd0;
    TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d68 =
	(TASK_testplusargs___d54 ||
	 TASK_testplusargs___d55 && TASK_testplusargs___d56) &&
	rx_stage1_meta_first_x[46:43] == 4'd1;
    TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d71 =
	(TASK_testplusargs___d54 ||
	 TASK_testplusargs___d55 && TASK_testplusargs___d56) &&
	rx_stage1_meta_first_x[46:43] == 4'd2;
    TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d74 =
	(TASK_testplusargs___d54 ||
	 TASK_testplusargs___d55 && TASK_testplusargs___d56) &&
	rx_stage1_meta_first_x[46:43] == 4'd3;
    TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d77 =
	(TASK_testplusargs___d54 ||
	 TASK_testplusargs___d55 && TASK_testplusargs___d56) &&
	rx_stage1_meta_first_x[46:43] == 4'd4;
    TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d80 =
	(TASK_testplusargs___d54 ||
	 TASK_testplusargs___d55 && TASK_testplusargs___d56) &&
	rx_stage1_meta_first_x[46:43] == 4'd5;
    TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d83 =
	(TASK_testplusargs___d54 ||
	 TASK_testplusargs___d55 && TASK_testplusargs___d56) &&
	rx_stage1_meta_first_x[46:43] == 4'd6;
    TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d86 =
	(TASK_testplusargs___d54 ||
	 TASK_testplusargs___d55 && TASK_testplusargs___d56) &&
	rx_stage1_meta_first_x[46:43] == 4'd7;
    TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d118 =
	(TASK_testplusargs___d54 ||
	 TASK_testplusargs___d55 && TASK_testplusargs___d56) &&
	rx_stage1_meta_first_x[42:41] == 2'd1;
    TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d111 =
	(TASK_testplusargs___d54 ||
	 TASK_testplusargs___d55 && TASK_testplusargs___d56) &&
	rx_stage1_meta_first_x[46:43] != 4'd0 &&
	rx_stage1_meta_first_x[46:43] != 4'd1 &&
	rx_stage1_meta_first_x[46:43] != 4'd2 &&
	rx_stage1_meta_first_x[46:43] != 4'd3 &&
	rx_stage1_meta_first_x[46:43] != 4'd4 &&
	rx_stage1_meta_first_x[46:43] != 4'd5 &&
	rx_stage1_meta_first_x[46:43] != 4'd6 &&
	rx_stage1_meta_first_x[46:43] != 4'd7;
    TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d115 =
	(TASK_testplusargs___d54 ||
	 TASK_testplusargs___d55 && TASK_testplusargs___d56) &&
	rx_stage1_meta_first_x[42:41] == 2'd0;
    TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d121 =
	(TASK_testplusargs___d54 ||
	 TASK_testplusargs___d55 && TASK_testplusargs___d56) &&
	rx_stage1_meta_first_x[42:41] == 2'd3;
    TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d130 =
	(TASK_testplusargs___d54 ||
	 TASK_testplusargs___d55 && TASK_testplusargs___d56) &&
	rx_stage1_meta_first_x[42:41] != 2'd0 &&
	rx_stage1_meta_first_x[42:41] != 2'd1 &&
	rx_stage1_meta_first_x[42:41] != 2'd3;
    TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d138 =
	(TASK_testplusargs___d54 ||
	 TASK_testplusargs___d55 && TASK_testplusargs___d56) &&
	!rx_stage1_meta_first_x[1];
    TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d140 =
	(TASK_testplusargs___d54 ||
	 TASK_testplusargs___d55 && TASK_testplusargs___d56) &&
	rx_stage1_meta_first_x[1];
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass)
	begin
	  v__h3583 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass &&
	  (TASK_testplusargs___d54 ||
	   TASK_testplusargs___d55 && TASK_testplusargs___d56))
	$write("[%10d", v__h3583, "] ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass &&
	  (TASK_testplusargs___d54 ||
	   TASK_testplusargs___d55 && TASK_testplusargs___d56))
	$write("STAGE2 : Meta: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass &&
	  (TASK_testplusargs___d54 ||
	   TASK_testplusargs___d55 && TASK_testplusargs___d56))
	$write("InstrMeta { ", "inst_type: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass &&
	  TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d65)
	$write("ALU");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass &&
	  TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d68)
	$write("MEMORY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass &&
	  TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d71)
	$write("BRANCH");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass &&
	  TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d74)
	$write("JAL");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass &&
	  TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d77)
	$write("JALR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass &&
	  TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d80)
	$write("SYSTEM_INSTR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass &&
	  TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d83)
	$write("TRAP");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass &&
	  TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d86)
	$write("WFI");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass &&
	  TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d111)
	$write("MULDIV");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass &&
	  (TASK_testplusargs___d54 ||
	   TASK_testplusargs___d55 && TASK_testplusargs___d56))
	$write(", ", "memaccess: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass &&
	  TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d115)
	$write("Load");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass &&
	  TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d118)
	$write("Store");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass &&
	  TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d121)
	$write("Fence");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass &&
	  TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d130)
	$write("Atomic");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass &&
	  (TASK_testplusargs___d54 ||
	   TASK_testplusargs___d55 && TASK_testplusargs___d56))
	$write(", ", "immediate: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass &&
	  (TASK_testplusargs___d54 ||
	   TASK_testplusargs___d55 && TASK_testplusargs___d56))
	$write("'h%h", rx_stage1_meta_first_x[40:9]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass &&
	  (TASK_testplusargs___d54 ||
	   TASK_testplusargs___d55 && TASK_testplusargs___d56))
	$write(", ", "funct: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass &&
	  (TASK_testplusargs___d54 ||
	   TASK_testplusargs___d55 && TASK_testplusargs___d56))
	$write("'h%h", rx_stage1_meta_first_x[8:2]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass &&
	  (TASK_testplusargs___d54 ||
	   TASK_testplusargs___d55 && TASK_testplusargs___d56))
	$write(", ", "word32: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass &&
	  TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d138)
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass &&
	  TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d140)
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass &&
	  (TASK_testplusargs___d54 ||
	   TASK_testplusargs___d55 && TASK_testplusargs___d56))
	$write(" }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass &&
	  (TASK_testplusargs___d54 ||
	   TASK_testplusargs___d55 && TASK_testplusargs___d56))
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass)
	begin
	  TASK_testplusargs___d141 = $test$plusargs("fullverbose");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass)
	begin
	  TASK_testplusargs___d142 = $test$plusargs("mstage2");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass)
	begin
	  TASK_testplusargs___d143 = $test$plusargs("l1");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass)
	begin
	  v__h4032 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass &&
	  (TASK_testplusargs___d141 ||
	   TASK_testplusargs___d142 && TASK_testplusargs___d143))
	$write("[%10d", v__h4032, "] ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass &&
	  (TASK_testplusargs___d141 ||
	   TASK_testplusargs___d142 && TASK_testplusargs___d143))
	$write("STAGE2 : OpAddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass &&
	  (TASK_testplusargs___d141 ||
	   TASK_testplusargs___d142 && TASK_testplusargs___d143))
	$write("OpAddr { ", "rs1addr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass &&
	  (TASK_testplusargs___d141 ||
	   TASK_testplusargs___d142 && TASK_testplusargs___d143))
	$write("'h%h", rx_stage1_meta_first_x[64:60]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass &&
	  (TASK_testplusargs___d141 ||
	   TASK_testplusargs___d142 && TASK_testplusargs___d143))
	$write(", ", "rs2addr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass &&
	  (TASK_testplusargs___d141 ||
	   TASK_testplusargs___d142 && TASK_testplusargs___d143))
	$write("'h%h", rx_stage1_meta_first_x[59:55]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass &&
	  (TASK_testplusargs___d141 ||
	   TASK_testplusargs___d142 && TASK_testplusargs___d143))
	$write(", ", "rd: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass &&
	  (TASK_testplusargs___d141 ||
	   TASK_testplusargs___d142 && TASK_testplusargs___d143))
	$write("'h%h", rx_stage1_meta_first_x[54:50], " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass &&
	  (TASK_testplusargs___d141 ||
	   TASK_testplusargs___d142 && TASK_testplusargs___d143))
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass)
	begin
	  TASK_testplusargs___d153 = $test$plusargs("fullverbose");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass)
	begin
	  TASK_testplusargs___d154 = $test$plusargs("mstage2");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass)
	begin
	  TASK_testplusargs___d155 = $test$plusargs("l1");
	  #0;
	end
    TASK_testplusargs_53_OR_TASK_testplusargs_54_A_ETC___d162 =
	(TASK_testplusargs___d153 ||
	 TASK_testplusargs___d154 && TASK_testplusargs___d155) &&
	!rx_stage1_meta_first_x[49];
    TASK_testplusargs_53_OR_TASK_testplusargs_54_A_ETC___d164 =
	(TASK_testplusargs___d153 ||
	 TASK_testplusargs___d154 && TASK_testplusargs___d155) &&
	rx_stage1_meta_first_x[49];
    TASK_testplusargs_53_OR_TASK_testplusargs_54_A_ETC___d168 =
	(TASK_testplusargs___d153 ||
	 TASK_testplusargs___d154 && TASK_testplusargs___d155) &&
	rx_stage1_meta_first_x[48:47] == 2'd0;
    TASK_testplusargs_53_OR_TASK_testplusargs_54_A_ETC___d171 =
	(TASK_testplusargs___d153 ||
	 TASK_testplusargs___d154 && TASK_testplusargs___d155) &&
	rx_stage1_meta_first_x[48:47] == 2'd1;
    TASK_testplusargs_53_OR_TASK_testplusargs_54_A_ETC___d174 =
	(TASK_testplusargs___d153 ||
	 TASK_testplusargs___d154 && TASK_testplusargs___d155) &&
	rx_stage1_meta_first_x[48:47] == 2'd2;
    TASK_testplusargs_53_OR_TASK_testplusargs_54_A_ETC___d183 =
	(TASK_testplusargs___d153 ||
	 TASK_testplusargs___d154 && TASK_testplusargs___d155) &&
	rx_stage1_meta_first_x[48:47] != 2'd0 &&
	rx_stage1_meta_first_x[48:47] != 2'd1 &&
	rx_stage1_meta_first_x[48:47] != 2'd2;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass)
	begin
	  v__h4236 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass &&
	  (TASK_testplusargs___d153 ||
	   TASK_testplusargs___d154 && TASK_testplusargs___d155))
	$write("[%10d", v__h4236, "] ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass &&
	  (TASK_testplusargs___d153 ||
	   TASK_testplusargs___d154 && TASK_testplusargs___d155))
	$write("STAGE2 : OpType: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass &&
	  (TASK_testplusargs___d153 ||
	   TASK_testplusargs___d154 && TASK_testplusargs___d155))
	$write("OpType { ", "rs1type: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass &&
	  TASK_testplusargs_53_OR_TASK_testplusargs_54_A_ETC___d162)
	$write("IntegerRF");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass &&
	  TASK_testplusargs_53_OR_TASK_testplusargs_54_A_ETC___d164)
	$write("PC");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass &&
	  (TASK_testplusargs___d153 ||
	   TASK_testplusargs___d154 && TASK_testplusargs___d155))
	$write(", ", "rs2type: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass &&
	  TASK_testplusargs_53_OR_TASK_testplusargs_54_A_ETC___d168)
	$write("IntegerRF");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass &&
	  TASK_testplusargs_53_OR_TASK_testplusargs_54_A_ETC___d171)
	$write("Immediate");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass &&
	  TASK_testplusargs_53_OR_TASK_testplusargs_54_A_ETC___d174)
	$write("Constant4");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass &&
	  TASK_testplusargs_53_OR_TASK_testplusargs_54_A_ETC___d183)
	$write("Constant2");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass &&
	  (TASK_testplusargs___d153 ||
	   TASK_testplusargs___d154 && TASK_testplusargs___d155))
	$write(" }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass &&
	  (TASK_testplusargs___d153 ||
	   TASK_testplusargs___d154 && TASK_testplusargs___d155))
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass)
	begin
	  TASK_testplusargs___d184 = $test$plusargs("fullverbose");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass)
	begin
	  TASK_testplusargs___d185 = $test$plusargs("mstage2");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass)
	begin
	  TASK_testplusargs___d186 = $test$plusargs("l1");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass)
	begin
	  v__h4461 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass &&
	  (TASK_testplusargs___d184 ||
	   TASK_testplusargs___d185 && TASK_testplusargs___d186))
	$write("[%10d", v__h4461, "] ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass &&
	  (TASK_testplusargs___d184 ||
	   TASK_testplusargs___d185 && TASK_testplusargs___d186))
	$write("STAGE2 : Control: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass &&
	  (TASK_testplusargs___d184 ||
	   TASK_testplusargs___d185 && TASK_testplusargs___d186))
	$write("STAGE1_control { ", "epoch: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass &&
	  (TASK_testplusargs___d184 ||
	   TASK_testplusargs___d185 && TASK_testplusargs___d186))
	$write("'h%h", rx_stage1_control_first_x[65:64]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass &&
	  (TASK_testplusargs___d184 ||
	   TASK_testplusargs___d185 && TASK_testplusargs___d186))
	$write(", ", "pc: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass &&
	  (TASK_testplusargs___d184 ||
	   TASK_testplusargs___d185 && TASK_testplusargs___d186))
	$write("'h%h", rx_stage1_control_first_x[63:0], " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass &&
	  (TASK_testplusargs___d184 ||
	   TASK_testplusargs___d185 && TASK_testplusargs___d186))
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass)
	begin
	  TASK_testplusargs___d196 = $test$plusargs("fullverbose");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass)
	begin
	  TASK_testplusargs___d197 = $test$plusargs("mstage2");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass)
	begin
	  TASK_testplusargs___d198 = $test$plusargs("l1");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass)
	begin
	  v__h4671 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass &&
	  (TASK_testplusargs___d196 ||
	   TASK_testplusargs___d197 && TASK_testplusargs___d198))
	$write("[%10d", v__h4671, "] ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass &&
	  (TASK_testplusargs___d196 ||
	   TASK_testplusargs___d197 && TASK_testplusargs___d198))
	$write("STAGE2 : Fwding : Valid:%b Op1:%h Op2:%h",
	       NOT_IF_ff_stage1_meta_w_data_whas__0_THEN_ff_s_ETC___d215,
	       op1__h3084,
	       op2__h3085);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass &&
	  (TASK_testplusargs___d196 ||
	   TASK_testplusargs___d197 && TASK_testplusargs___d198))
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass)
	begin
	  TASK_testplusargs___d251 = $test$plusargs("fullverbose");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass)
	begin
	  TASK_testplusargs___d252 = $test$plusargs("mstage2");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass)
	begin
	  TASK_testplusargs___d253 = $test$plusargs("l1");
	  #0;
	end
    TASK_testplusargs_51_OR_TASK_testplusargs_52_A_ETC___d259 =
	(TASK_testplusargs___d251 ||
	 TASK_testplusargs___d252 && TASK_testplusargs___d253) &&
	alu_inputs[137];
    TASK_testplusargs_51_OR_TASK_testplusargs_52_A_ETC___d261 =
	(TASK_testplusargs___d251 ||
	 TASK_testplusargs___d252 && TASK_testplusargs___d253) &&
	!alu_inputs[137];
    TASK_testplusargs_51_OR_TASK_testplusargs_52_A_ETC___d264 =
	(TASK_testplusargs___d251 ||
	 TASK_testplusargs___d252 && TASK_testplusargs___d253) &&
	alu_inputs[136:135] == 2'd0;
    TASK_testplusargs_51_OR_TASK_testplusargs_52_A_ETC___d266 =
	(TASK_testplusargs___d251 ||
	 TASK_testplusargs___d252 && TASK_testplusargs___d253) &&
	alu_inputs[136:135] == 2'd1;
    TASK_testplusargs_51_OR_TASK_testplusargs_52_A_ETC___d268 =
	(TASK_testplusargs___d251 ||
	 TASK_testplusargs___d252 && TASK_testplusargs___d253) &&
	alu_inputs[136:135] == 2'd2;
    TASK_testplusargs_51_OR_TASK_testplusargs_52_A_ETC___d274 =
	(TASK_testplusargs___d251 ||
	 TASK_testplusargs___d252 && TASK_testplusargs___d253) &&
	alu_inputs[136:135] != 2'd0 &&
	alu_inputs[136:135] != 2'd1 &&
	alu_inputs[136:135] != 2'd2;
    TASK_testplusargs_51_OR_TASK_testplusargs_52_A_ETC___d279 =
	(TASK_testplusargs___d251 ||
	 TASK_testplusargs___d252 && TASK_testplusargs___d253) &&
	alu_inputs[0];
    TASK_testplusargs_51_OR_TASK_testplusargs_52_A_ETC___d281 =
	(TASK_testplusargs___d251 ||
	 TASK_testplusargs___d252 && TASK_testplusargs___d253) &&
	!alu_inputs[0];
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass)
	begin
	  v__h7070 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass &&
	  (TASK_testplusargs___d251 ||
	   TASK_testplusargs___d252 && TASK_testplusargs___d253))
	$write("[%10d", v__h7070, "] ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass &&
	  (TASK_testplusargs___d251 ||
	   TASK_testplusargs___d252 && TASK_testplusargs___d253))
	$write("STAGE2 : AluOut: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass &&
	  (TASK_testplusargs___d251 ||
	   TASK_testplusargs___d252 && TASK_testplusargs___d253))
	$write("ALU_OUT { ", "done: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass &&
	  TASK_testplusargs_51_OR_TASK_testplusargs_52_A_ETC___d259)
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass &&
	  TASK_testplusargs_51_OR_TASK_testplusargs_52_A_ETC___d261)
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass &&
	  (TASK_testplusargs___d251 ||
	   TASK_testplusargs___d252 && TASK_testplusargs___d253))
	$write(", ", "cmtype: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass &&
	  TASK_testplusargs_51_OR_TASK_testplusargs_52_A_ETC___d264)
	$write("MEMORY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass &&
	  TASK_testplusargs_51_OR_TASK_testplusargs_52_A_ETC___d266)
	$write("SYSTEM_INSTR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass &&
	  TASK_testplusargs_51_OR_TASK_testplusargs_52_A_ETC___d268)
	$write("REGULAR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass &&
	  TASK_testplusargs_51_OR_TASK_testplusargs_52_A_ETC___d274)
	$write("TRAP");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass &&
	  (TASK_testplusargs___d251 ||
	   TASK_testplusargs___d252 && TASK_testplusargs___d253))
	$write(", ", "aluresult: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass &&
	  (TASK_testplusargs___d251 ||
	   TASK_testplusargs___d252 && TASK_testplusargs___d253))
	$write("'h%h", alu_inputs[134:71]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass &&
	  (TASK_testplusargs___d251 ||
	   TASK_testplusargs___d252 && TASK_testplusargs___d253))
	$write(", ", "effective_addr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass &&
	  (TASK_testplusargs___d251 ||
	   TASK_testplusargs___d252 && TASK_testplusargs___d253))
	$write("'h%h", alu_inputs[70:7]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass &&
	  (TASK_testplusargs___d251 ||
	   TASK_testplusargs___d252 && TASK_testplusargs___d253))
	$write(", ", "cause: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass &&
	  (TASK_testplusargs___d251 ||
	   TASK_testplusargs___d252 && TASK_testplusargs___d253))
	$write("'h%h", alu_inputs[6:1]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass &&
	  (TASK_testplusargs___d251 ||
	   TASK_testplusargs___d252 && TASK_testplusargs___d253))
	$write(", ", "redirect: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass &&
	  TASK_testplusargs_51_OR_TASK_testplusargs_52_A_ETC___d279)
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass &&
	  TASK_testplusargs_51_OR_TASK_testplusargs_52_A_ETC___d281)
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass &&
	  (TASK_testplusargs___d251 ||
	   TASK_testplusargs___d252 && TASK_testplusargs___d253))
	$write(" }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass &&
	  (TASK_testplusargs___d251 ||
	   TASK_testplusargs___d252 && TASK_testplusargs___d253))
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass &&
	  IF_ff_stage1_control_w_data_whas__90_THEN_ff_s_ETC___d304)
	begin
	  TASK_testplusargs___d305 = $test$plusargs("fullverbose");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass &&
	  IF_ff_stage1_control_w_data_whas__90_THEN_ff_s_ETC___d304)
	begin
	  TASK_testplusargs___d306 = $test$plusargs("mstage2");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass &&
	  IF_ff_stage1_control_w_data_whas__90_THEN_ff_s_ETC___d304)
	begin
	  TASK_testplusargs___d307 = $test$plusargs("l1");
	  #0;
	end
    IF_ff_stage1_meta_w_data_whas__0_THEN_ff_stage_ETC___d310 =
	x__h7563 == 5'b00101 && rx_stage1_meta_first_x[42:41] == 2'd2 &&
	(TASK_testplusargs___d305 ||
	 TASK_testplusargs___d306 && TASK_testplusargs___d307);
    IF_ff_stage1_control_w_data_whas__90_THEN_ff_s_ETC___d313 =
	IF_ff_stage1_control_w_data_whas__90_THEN_ff_s_ETC___d285 &&
	NOT_IF_ff_stage1_meta_w_data_whas__0_THEN_ff_s_ETC___d215 &&
	rx_stage1_meta_first_x[46:43] == 4'd1 &&
	IF_ff_stage1_meta_w_data_whas__0_THEN_ff_stage_ETC___d310;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass &&
	  IF_ff_stage1_control_w_data_whas__90_THEN_ff_s_ETC___d304)
	begin
	  v__h7727 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass &&
	  IF_ff_stage1_control_w_data_whas__90_THEN_ff_s_ETC___d313)
	$write("[%10d", v__h7727, "] ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass &&
	  IF_ff_stage1_control_w_data_whas__90_THEN_ff_s_ETC___d313)
	$write("STAGE2: Reserving Addr: %h", alu_inputs[70:7]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass &&
	  IF_ff_stage1_control_w_data_whas__90_THEN_ff_s_ETC___d313)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass &&
	  IF_ff_stage1_control_w_data_whas__90_THEN_ff_s_ETC___d319)
	begin
	  TASK_testplusargs___d320 = $test$plusargs("fullverbose");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass &&
	  IF_ff_stage1_control_w_data_whas__90_THEN_ff_s_ETC___d319)
	begin
	  TASK_testplusargs___d321 = $test$plusargs("mstage2");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass &&
	  IF_ff_stage1_control_w_data_whas__90_THEN_ff_s_ETC___d319)
	begin
	  TASK_testplusargs___d322 = $test$plusargs("l1");
	  #0;
	end
    IF_ff_stage1_meta_w_data_whas__0_THEN_ff_stage_ETC___d325 =
	x__h7563 == 5'b00111 && rx_stage1_meta_first_x[42:41] == 2'd2 &&
	(TASK_testplusargs___d320 ||
	 TASK_testplusargs___d321 && TASK_testplusargs___d322);
    TASK_testplusargs_20_OR_TASK_testplusargs_21_A_ETC___d332 =
	(TASK_testplusargs___d320 ||
	 TASK_testplusargs___d321 && TASK_testplusargs___d322) &&
	rg_loadreserved_addr[32];
    TASK_testplusargs_20_OR_TASK_testplusargs_21_A_ETC___d340 =
	(TASK_testplusargs___d320 ||
	 TASK_testplusargs___d321 && TASK_testplusargs___d322) &&
	!rg_loadreserved_addr[32];
    IF_ff_stage1_control_w_data_whas__90_THEN_ff_s_ETC___d328 =
	IF_ff_stage1_control_w_data_whas__90_THEN_ff_s_ETC___d285 &&
	NOT_IF_ff_stage1_meta_w_data_whas__0_THEN_ff_s_ETC___d215 &&
	rx_stage1_meta_first_x[46:43] == 4'd1 &&
	IF_ff_stage1_meta_w_data_whas__0_THEN_ff_stage_ETC___d325;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass &&
	  IF_ff_stage1_control_w_data_whas__90_THEN_ff_s_ETC___d319)
	begin
	  v__h7982 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass &&
	  IF_ff_stage1_control_w_data_whas__90_THEN_ff_s_ETC___d328)
	$write("[%10d", v__h7982, "] ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass &&
	  IF_ff_stage1_control_w_data_whas__90_THEN_ff_s_ETC___d328)
	$write("STAGE2: SC-ADDR:%h RES-ADDR: ", alu_inputs[70:7]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass &&
	  IF_ff_stage1_control_w_data_whas__90_THEN_ff_s_ETC___d285 &&
	  NOT_IF_ff_stage1_meta_w_data_whas__0_THEN_ff_s_ETC___d215 &&
	  rx_stage1_meta_first_x[46:43] == 4'd1 &&
	  x__h7563 == 5'b00111 &&
	  rx_stage1_meta_first_x[42:41] == 2'd2 &&
	  TASK_testplusargs_20_OR_TASK_testplusargs_21_A_ETC___d332)
	$write("tagged Valid ", "'h%h", rg_loadreserved_addr[31:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass &&
	  IF_ff_stage1_control_w_data_whas__90_THEN_ff_s_ETC___d285 &&
	  NOT_IF_ff_stage1_meta_w_data_whas__0_THEN_ff_s_ETC___d215 &&
	  rx_stage1_meta_first_x[46:43] == 4'd1 &&
	  x__h7563 == 5'b00111 &&
	  rx_stage1_meta_first_x[42:41] == 2'd2 &&
	  TASK_testplusargs_20_OR_TASK_testplusargs_21_A_ETC___d340)
	$write("tagged Invalid ", "");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass &&
	  IF_ff_stage1_control_w_data_whas__90_THEN_ff_s_ETC___d328)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass &&
	  !IF_ff_stage1_control_w_data_whas__90_THEN_ff_s_ETC___d285)
	begin
	  TASK_testplusargs___d395 = $test$plusargs("fullverbose");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass &&
	  !IF_ff_stage1_control_w_data_whas__90_THEN_ff_s_ETC___d285)
	begin
	  TASK_testplusargs___d396 = $test$plusargs("mstage2");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass &&
	  !IF_ff_stage1_control_w_data_whas__90_THEN_ff_s_ETC___d285)
	begin
	  TASK_testplusargs___d397 = $test$plusargs("l0");
	  #0;
	end
    NOT_IF_ff_stage1_control_w_data_whas__90_THEN__ETC___d400 =
	!IF_ff_stage1_control_w_data_whas__90_THEN_ff_s_ETC___d285 &&
	(TASK_testplusargs___d395 ||
	 TASK_testplusargs___d396 && TASK_testplusargs___d397);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass &&
	  !IF_ff_stage1_control_w_data_whas__90_THEN_ff_s_ETC___d285)
	begin
	  v__h7369 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass &&
	  NOT_IF_ff_stage1_control_w_data_whas__90_THEN__ETC___d400)
	$write("[%10d", v__h7369, "] ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass &&
	  NOT_IF_ff_stage1_control_w_data_whas__90_THEN__ETC___d400)
	$write("STAGE2 : Dropping instruction due to mis - match");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fetch_execute_pass &&
	  NOT_IF_ff_stage1_control_w_data_whas__90_THEN__ETC___d400)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_ma_update_wEpoch)
	begin
	  TASK_testplusargs___d421 = $test$plusargs("fullverbose");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_ma_update_wEpoch)
	begin
	  TASK_testplusargs___d422 = $test$plusargs("mstage2");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_ma_update_wEpoch)
	begin
	  TASK_testplusargs___d423 = $test$plusargs("l0");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_ma_update_wEpoch)
	begin
	  v__h10396 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_ma_update_wEpoch &&
	  (TASK_testplusargs___d421 ||
	   TASK_testplusargs___d422 && TASK_testplusargs___d423))
	$write("[%10d", v__h10396, "] ");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_ma_update_wEpoch &&
	  (TASK_testplusargs___d421 ||
	   TASK_testplusargs___d422 && TASK_testplusargs___d423))
	$write("STAGE2: Received Flush from WB");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_ma_update_wEpoch &&
	  (TASK_testplusargs___d421 ||
	   TASK_testplusargs___d422 && TASK_testplusargs___d423))
	$write("\n");
  end
  // synopsys translate_on
endmodule  // mkstage2

