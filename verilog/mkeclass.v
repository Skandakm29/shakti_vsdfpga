//
// Generated by Bluespec Compiler, version 2021.07 (build 4cac6eba)
//
// On Sun Mar 16 14:52:09 IST 2025
//
//
// Ports:
// Name                         I/O  size props
// master_d_awvalid               O     1 reg
// master_d_awaddr                O    32 reg
// master_d_awprot                O     3 reg
// master_d_awsize                O     2 reg
// master_d_wvalid                O     1 reg
// master_d_wdata                 O    64 reg
// master_d_wstrb                 O     8 reg
// master_d_bready                O     1 reg
// master_d_arvalid               O     1 reg
// master_d_araddr                O    32 reg
// master_d_arprot                O     3 reg
// master_d_arsize                O     2 reg
// master_d_rready                O     1 reg
// master_i_awvalid               O     1 reg
// master_i_awaddr                O    32 reg
// master_i_awprot                O     3 reg
// master_i_awsize                O     2 reg
// master_i_wvalid                O     1 reg
// master_i_wdata                 O    64 reg
// master_i_wstrb                 O     8 reg
// master_i_bready                O     1 reg
// master_i_arvalid               O     1 reg
// master_i_araddr                O    32 reg
// master_i_arprot                O     3 reg
// master_i_arsize                O     2 reg
// master_i_rready                O     1 reg
// RDY_sb_clint_msip_put          O     1 const
// RDY_sb_clint_mtip_put          O     1 const
// RDY_sb_clint_mtime_put         O     1 const
// RDY_sb_ext_interrupt_put       O     1 const
// io_dump_get                    O   167 reg
// RDY_io_dump_get                O     1 reg
// CLK                            I     1 clock
// RST_N                          I     1 reset
// master_d_m_awready_awready     I     1
// master_d_m_wready_wready       I     1
// master_d_m_bvalid_bvalid       I     1
// master_d_m_bvalid_bresp        I     2 reg
// master_d_m_arready_arready     I     1
// master_d_m_rvalid_rvalid       I     1
// master_d_m_rvalid_rresp        I     2 reg
// master_d_m_rvalid_rdata        I    64 reg
// master_i_m_awready_awready     I     1
// master_i_m_wready_wready       I     1
// master_i_m_bvalid_bvalid       I     1
// master_i_m_bvalid_bresp        I     2 reg
// master_i_m_arready_arready     I     1
// master_i_m_rvalid_rvalid       I     1
// master_i_m_rvalid_rresp        I     2 reg
// master_i_m_rvalid_rdata        I    64 reg
// sb_clint_msip_put              I     1 reg
// sb_clint_mtip_put              I     1 reg
// sb_clint_mtime_put             I    64 reg
// sb_ext_interrupt_put           I     1 reg
// EN_sb_clint_msip_put           I     1
// EN_sb_clint_mtip_put           I     1
// EN_sb_clint_mtime_put          I     1
// EN_sb_ext_interrupt_put        I     1
// EN_io_dump_get                 I     1
//
// No combinational paths from inputs to outputs
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mkeclass(CLK,
		RST_N,

		master_d_awvalid,

		master_d_awaddr,

		master_d_awprot,

		master_d_awsize,

		master_d_m_awready_awready,

		master_d_wvalid,

		master_d_wdata,

		master_d_wstrb,

		master_d_m_wready_wready,

		master_d_m_bvalid_bvalid,
		master_d_m_bvalid_bresp,

		master_d_bready,

		master_d_arvalid,

		master_d_araddr,

		master_d_arprot,

		master_d_arsize,

		master_d_m_arready_arready,

		master_d_m_rvalid_rvalid,
		master_d_m_rvalid_rresp,
		master_d_m_rvalid_rdata,

		master_d_rready,

		master_i_awvalid,

		master_i_awaddr,

		master_i_awprot,

		master_i_awsize,

		master_i_m_awready_awready,

		master_i_wvalid,

		master_i_wdata,

		master_i_wstrb,

		master_i_m_wready_wready,

		master_i_m_bvalid_bvalid,
		master_i_m_bvalid_bresp,

		master_i_bready,

		master_i_arvalid,

		master_i_araddr,

		master_i_arprot,

		master_i_arsize,

		master_i_m_arready_arready,

		master_i_m_rvalid_rvalid,
		master_i_m_rvalid_rresp,
		master_i_m_rvalid_rdata,

		master_i_rready,

		sb_clint_msip_put,
		EN_sb_clint_msip_put,
		RDY_sb_clint_msip_put,

		sb_clint_mtip_put,
		EN_sb_clint_mtip_put,
		RDY_sb_clint_mtip_put,

		sb_clint_mtime_put,
		EN_sb_clint_mtime_put,
		RDY_sb_clint_mtime_put,

		sb_ext_interrupt_put,
		EN_sb_ext_interrupt_put,
		RDY_sb_ext_interrupt_put,

		EN_io_dump_get,
		io_dump_get,
		RDY_io_dump_get);
  input  CLK;
  input  RST_N;

  // value method master_d_m_awvalid
  output master_d_awvalid;

  // value method master_d_m_awaddr
  output [31 : 0] master_d_awaddr;

  // value method master_d_m_awuser

  // value method master_d_m_awprot
  output [2 : 0] master_d_awprot;

  // value method master_d_m_awsize
  output [1 : 0] master_d_awsize;

  // action method master_d_m_awready
  input  master_d_m_awready_awready;

  // value method master_d_m_wvalid
  output master_d_wvalid;

  // value method master_d_m_wdata
  output [63 : 0] master_d_wdata;

  // value method master_d_m_wstrb
  output [7 : 0] master_d_wstrb;

  // action method master_d_m_wready
  input  master_d_m_wready_wready;

  // action method master_d_m_bvalid
  input  master_d_m_bvalid_bvalid;
  input  [1 : 0] master_d_m_bvalid_bresp;

  // value method master_d_m_bready
  output master_d_bready;

  // value method master_d_m_arvalid
  output master_d_arvalid;

  // value method master_d_m_araddr
  output [31 : 0] master_d_araddr;

  // value method master_d_m_aruser

  // value method master_d_m_arprot
  output [2 : 0] master_d_arprot;

  // value method master_d_m_arsize
  output [1 : 0] master_d_arsize;

  // action method master_d_m_arready
  input  master_d_m_arready_arready;

  // action method master_d_m_rvalid
  input  master_d_m_rvalid_rvalid;
  input  [1 : 0] master_d_m_rvalid_rresp;
  input  [63 : 0] master_d_m_rvalid_rdata;

  // value method master_d_m_rready
  output master_d_rready;

  // value method master_i_m_awvalid
  output master_i_awvalid;

  // value method master_i_m_awaddr
  output [31 : 0] master_i_awaddr;

  // value method master_i_m_awuser

  // value method master_i_m_awprot
  output [2 : 0] master_i_awprot;

  // value method master_i_m_awsize
  output [1 : 0] master_i_awsize;

  // action method master_i_m_awready
  input  master_i_m_awready_awready;

  // value method master_i_m_wvalid
  output master_i_wvalid;

  // value method master_i_m_wdata
  output [63 : 0] master_i_wdata;

  // value method master_i_m_wstrb
  output [7 : 0] master_i_wstrb;

  // action method master_i_m_wready
  input  master_i_m_wready_wready;

  // action method master_i_m_bvalid
  input  master_i_m_bvalid_bvalid;
  input  [1 : 0] master_i_m_bvalid_bresp;

  // value method master_i_m_bready
  output master_i_bready;

  // value method master_i_m_arvalid
  output master_i_arvalid;

  // value method master_i_m_araddr
  output [31 : 0] master_i_araddr;

  // value method master_i_m_aruser

  // value method master_i_m_arprot
  output [2 : 0] master_i_arprot;

  // value method master_i_m_arsize
  output [1 : 0] master_i_arsize;

  // action method master_i_m_arready
  input  master_i_m_arready_arready;

  // action method master_i_m_rvalid
  input  master_i_m_rvalid_rvalid;
  input  [1 : 0] master_i_m_rvalid_rresp;
  input  [63 : 0] master_i_m_rvalid_rdata;

  // value method master_i_m_rready
  output master_i_rready;

  // action method sb_clint_msip_put
  input  sb_clint_msip_put;
  input  EN_sb_clint_msip_put;
  output RDY_sb_clint_msip_put;

  // action method sb_clint_mtip_put
  input  sb_clint_mtip_put;
  input  EN_sb_clint_mtip_put;
  output RDY_sb_clint_mtip_put;

  // action method sb_clint_mtime_put
  input  [63 : 0] sb_clint_mtime_put;
  input  EN_sb_clint_mtime_put;
  output RDY_sb_clint_mtime_put;

  // action method sb_ext_interrupt_put
  input  sb_ext_interrupt_put;
  input  EN_sb_ext_interrupt_put;
  output RDY_sb_ext_interrupt_put;

  // actionvalue method io_dump_get
  input  EN_io_dump_get;
  output [166 : 0] io_dump_get;
  output RDY_io_dump_get;

  // signals for module outputs
  wire [166 : 0] io_dump_get;
  wire [63 : 0] master_d_wdata, master_i_wdata;
  wire [31 : 0] master_d_araddr,
		master_d_awaddr,
		master_i_araddr,
		master_i_awaddr;
  wire [7 : 0] master_d_wstrb, master_i_wstrb;
  wire [2 : 0] master_d_arprot,
	       master_d_awprot,
	       master_i_arprot,
	       master_i_awprot;
  wire [1 : 0] master_d_arsize,
	       master_d_awsize,
	       master_i_arsize,
	       master_i_awsize;
  wire RDY_io_dump_get,
       RDY_sb_clint_msip_put,
       RDY_sb_clint_mtime_put,
       RDY_sb_clint_mtip_put,
       RDY_sb_ext_interrupt_put,
       master_d_arvalid,
       master_d_awvalid,
       master_d_bready,
       master_d_rready,
       master_d_wvalid,
       master_i_arvalid,
       master_i_awvalid,
       master_i_bready,
       master_i_rready,
       master_i_wvalid;

  // ports of submodule _unnamed_
  wire [166 : 0] _unnamed__io_dump_get;
  wire [63 : 0] _unnamed__master_d_m_rvalid_rdata,
		_unnamed__master_d_wdata,
		_unnamed__master_i_m_rvalid_rdata,
		_unnamed__master_i_wdata,
		_unnamed__sb_clint_mtime_put;
  wire [31 : 0] _unnamed__master_d_araddr,
		_unnamed__master_d_awaddr,
		_unnamed__master_i_araddr,
		_unnamed__master_i_awaddr;
  wire [7 : 0] _unnamed__master_d_wstrb, _unnamed__master_i_wstrb;
  wire [2 : 0] _unnamed__master_d_arprot,
	       _unnamed__master_d_awprot,
	       _unnamed__master_i_arprot,
	       _unnamed__master_i_awprot;
  wire [1 : 0] _unnamed__master_d_arsize,
	       _unnamed__master_d_awsize,
	       _unnamed__master_d_m_bvalid_bresp,
	       _unnamed__master_d_m_rvalid_rresp,
	       _unnamed__master_i_arsize,
	       _unnamed__master_i_awsize,
	       _unnamed__master_i_m_bvalid_bresp,
	       _unnamed__master_i_m_rvalid_rresp;
  wire _unnamed__EN_io_dump_get,
       _unnamed__EN_sb_clint_msip_put,
       _unnamed__EN_sb_clint_mtime_put,
       _unnamed__EN_sb_clint_mtip_put,
       _unnamed__EN_sb_ext_interrupt_put,
       _unnamed__RDY_io_dump_get,
       _unnamed__master_d_arvalid,
       _unnamed__master_d_awvalid,
       _unnamed__master_d_bready,
       _unnamed__master_d_m_arready_arready,
       _unnamed__master_d_m_awready_awready,
       _unnamed__master_d_m_bvalid_bvalid,
       _unnamed__master_d_m_rvalid_rvalid,
       _unnamed__master_d_m_wready_wready,
       _unnamed__master_d_rready,
       _unnamed__master_d_wvalid,
       _unnamed__master_i_arvalid,
       _unnamed__master_i_awvalid,
       _unnamed__master_i_bready,
       _unnamed__master_i_m_arready_arready,
       _unnamed__master_i_m_awready_awready,
       _unnamed__master_i_m_bvalid_bvalid,
       _unnamed__master_i_m_rvalid_rvalid,
       _unnamed__master_i_m_wready_wready,
       _unnamed__master_i_rready,
       _unnamed__master_i_wvalid,
       _unnamed__sb_clint_msip_put,
       _unnamed__sb_clint_mtip_put,
       _unnamed__sb_ext_interrupt_put;

  // rule scheduling signals
  wire CAN_FIRE_io_dump_get,
       CAN_FIRE_master_d_m_arready,
       CAN_FIRE_master_d_m_awready,
       CAN_FIRE_master_d_m_bvalid,
       CAN_FIRE_master_d_m_rvalid,
       CAN_FIRE_master_d_m_wready,
       CAN_FIRE_master_i_m_arready,
       CAN_FIRE_master_i_m_awready,
       CAN_FIRE_master_i_m_bvalid,
       CAN_FIRE_master_i_m_rvalid,
       CAN_FIRE_master_i_m_wready,
       CAN_FIRE_sb_clint_msip_put,
       CAN_FIRE_sb_clint_mtime_put,
       CAN_FIRE_sb_clint_mtip_put,
       CAN_FIRE_sb_ext_interrupt_put,
       WILL_FIRE_io_dump_get,
       WILL_FIRE_master_d_m_arready,
       WILL_FIRE_master_d_m_awready,
       WILL_FIRE_master_d_m_bvalid,
       WILL_FIRE_master_d_m_rvalid,
       WILL_FIRE_master_d_m_wready,
       WILL_FIRE_master_i_m_arready,
       WILL_FIRE_master_i_m_awready,
       WILL_FIRE_master_i_m_bvalid,
       WILL_FIRE_master_i_m_rvalid,
       WILL_FIRE_master_i_m_wready,
       WILL_FIRE_sb_clint_msip_put,
       WILL_FIRE_sb_clint_mtime_put,
       WILL_FIRE_sb_clint_mtip_put,
       WILL_FIRE_sb_ext_interrupt_put;

  // value method master_d_m_awvalid
  assign master_d_awvalid = _unnamed__master_d_awvalid ;

  // value method master_d_m_awaddr
  assign master_d_awaddr = _unnamed__master_d_awaddr ;

  // value method master_d_m_awprot
  assign master_d_awprot = _unnamed__master_d_awprot ;

  // value method master_d_m_awsize
  assign master_d_awsize = _unnamed__master_d_awsize ;

  // action method master_d_m_awready
  assign CAN_FIRE_master_d_m_awready = 1'd1 ;
  assign WILL_FIRE_master_d_m_awready = 1'd1 ;

  // value method master_d_m_wvalid
  assign master_d_wvalid = _unnamed__master_d_wvalid ;

  // value method master_d_m_wdata
  assign master_d_wdata = _unnamed__master_d_wdata ;

  // value method master_d_m_wstrb
  assign master_d_wstrb = _unnamed__master_d_wstrb ;

  // action method master_d_m_wready
  assign CAN_FIRE_master_d_m_wready = 1'd1 ;
  assign WILL_FIRE_master_d_m_wready = 1'd1 ;

  // action method master_d_m_bvalid
  assign CAN_FIRE_master_d_m_bvalid = 1'd1 ;
  assign WILL_FIRE_master_d_m_bvalid = 1'd1 ;

  // value method master_d_m_bready
  assign master_d_bready = _unnamed__master_d_bready ;

  // value method master_d_m_arvalid
  assign master_d_arvalid = _unnamed__master_d_arvalid ;

  // value method master_d_m_araddr
  assign master_d_araddr = _unnamed__master_d_araddr ;

  // value method master_d_m_arprot
  assign master_d_arprot = _unnamed__master_d_arprot ;

  // value method master_d_m_arsize
  assign master_d_arsize = _unnamed__master_d_arsize ;

  // action method master_d_m_arready
  assign CAN_FIRE_master_d_m_arready = 1'd1 ;
  assign WILL_FIRE_master_d_m_arready = 1'd1 ;

  // action method master_d_m_rvalid
  assign CAN_FIRE_master_d_m_rvalid = 1'd1 ;
  assign WILL_FIRE_master_d_m_rvalid = 1'd1 ;

  // value method master_d_m_rready
  assign master_d_rready = _unnamed__master_d_rready ;

  // value method master_i_m_awvalid
  assign master_i_awvalid = _unnamed__master_i_awvalid ;

  // value method master_i_m_awaddr
  assign master_i_awaddr = _unnamed__master_i_awaddr ;

  // value method master_i_m_awprot
  assign master_i_awprot = _unnamed__master_i_awprot ;

  // value method master_i_m_awsize
  assign master_i_awsize = _unnamed__master_i_awsize ;

  // action method master_i_m_awready
  assign CAN_FIRE_master_i_m_awready = 1'd1 ;
  assign WILL_FIRE_master_i_m_awready = 1'd1 ;

  // value method master_i_m_wvalid
  assign master_i_wvalid = _unnamed__master_i_wvalid ;

  // value method master_i_m_wdata
  assign master_i_wdata = _unnamed__master_i_wdata ;

  // value method master_i_m_wstrb
  assign master_i_wstrb = _unnamed__master_i_wstrb ;

  // action method master_i_m_wready
  assign CAN_FIRE_master_i_m_wready = 1'd1 ;
  assign WILL_FIRE_master_i_m_wready = 1'd1 ;

  // action method master_i_m_bvalid
  assign CAN_FIRE_master_i_m_bvalid = 1'd1 ;
  assign WILL_FIRE_master_i_m_bvalid = 1'd1 ;

  // value method master_i_m_bready
  assign master_i_bready = _unnamed__master_i_bready ;

  // value method master_i_m_arvalid
  assign master_i_arvalid = _unnamed__master_i_arvalid ;

  // value method master_i_m_araddr
  assign master_i_araddr = _unnamed__master_i_araddr ;

  // value method master_i_m_arprot
  assign master_i_arprot = _unnamed__master_i_arprot ;

  // value method master_i_m_arsize
  assign master_i_arsize = _unnamed__master_i_arsize ;

  // action method master_i_m_arready
  assign CAN_FIRE_master_i_m_arready = 1'd1 ;
  assign WILL_FIRE_master_i_m_arready = 1'd1 ;

  // action method master_i_m_rvalid
  assign CAN_FIRE_master_i_m_rvalid = 1'd1 ;
  assign WILL_FIRE_master_i_m_rvalid = 1'd1 ;

  // value method master_i_m_rready
  assign master_i_rready = _unnamed__master_i_rready ;

  // action method sb_clint_msip_put
  assign RDY_sb_clint_msip_put = 1'd1 ;
  assign CAN_FIRE_sb_clint_msip_put = 1'd1 ;
  assign WILL_FIRE_sb_clint_msip_put = EN_sb_clint_msip_put ;

  // action method sb_clint_mtip_put
  assign RDY_sb_clint_mtip_put = 1'd1 ;
  assign CAN_FIRE_sb_clint_mtip_put = 1'd1 ;
  assign WILL_FIRE_sb_clint_mtip_put = EN_sb_clint_mtip_put ;

  // action method sb_clint_mtime_put
  assign RDY_sb_clint_mtime_put = 1'd1 ;
  assign CAN_FIRE_sb_clint_mtime_put = 1'd1 ;
  assign WILL_FIRE_sb_clint_mtime_put = EN_sb_clint_mtime_put ;

  // action method sb_ext_interrupt_put
  assign RDY_sb_ext_interrupt_put = 1'd1 ;
  assign CAN_FIRE_sb_ext_interrupt_put = 1'd1 ;
  assign WILL_FIRE_sb_ext_interrupt_put = EN_sb_ext_interrupt_put ;

  // actionvalue method io_dump_get
  assign io_dump_get = _unnamed__io_dump_get ;
  assign RDY_io_dump_get = _unnamed__RDY_io_dump_get ;
  assign CAN_FIRE_io_dump_get = _unnamed__RDY_io_dump_get ;
  assign WILL_FIRE_io_dump_get = EN_io_dump_get ;

  // submodule _unnamed_
  mkeclass_axi4lite _unnamed_(.resetpc(64'd4096),
			      .CLK(CLK),
			      .RST_N(RST_N),
			      .master_d_m_arready_arready(_unnamed__master_d_m_arready_arready),
			      .master_d_m_awready_awready(_unnamed__master_d_m_awready_awready),
			      .master_d_m_bvalid_bresp(_unnamed__master_d_m_bvalid_bresp),
			      .master_d_m_bvalid_bvalid(_unnamed__master_d_m_bvalid_bvalid),
			      .master_d_m_rvalid_rdata(_unnamed__master_d_m_rvalid_rdata),
			      .master_d_m_rvalid_rresp(_unnamed__master_d_m_rvalid_rresp),
			      .master_d_m_rvalid_rvalid(_unnamed__master_d_m_rvalid_rvalid),
			      .master_d_m_wready_wready(_unnamed__master_d_m_wready_wready),
			      .master_i_m_arready_arready(_unnamed__master_i_m_arready_arready),
			      .master_i_m_awready_awready(_unnamed__master_i_m_awready_awready),
			      .master_i_m_bvalid_bresp(_unnamed__master_i_m_bvalid_bresp),
			      .master_i_m_bvalid_bvalid(_unnamed__master_i_m_bvalid_bvalid),
			      .master_i_m_rvalid_rdata(_unnamed__master_i_m_rvalid_rdata),
			      .master_i_m_rvalid_rresp(_unnamed__master_i_m_rvalid_rresp),
			      .master_i_m_rvalid_rvalid(_unnamed__master_i_m_rvalid_rvalid),
			      .master_i_m_wready_wready(_unnamed__master_i_m_wready_wready),
			      .sb_clint_msip_put(_unnamed__sb_clint_msip_put),
			      .sb_clint_mtime_put(_unnamed__sb_clint_mtime_put),
			      .sb_clint_mtip_put(_unnamed__sb_clint_mtip_put),
			      .sb_ext_interrupt_put(_unnamed__sb_ext_interrupt_put),
			      .EN_sb_clint_msip_put(_unnamed__EN_sb_clint_msip_put),
			      .EN_sb_clint_mtip_put(_unnamed__EN_sb_clint_mtip_put),
			      .EN_sb_clint_mtime_put(_unnamed__EN_sb_clint_mtime_put),
			      .EN_sb_ext_interrupt_put(_unnamed__EN_sb_ext_interrupt_put),
			      .EN_io_dump_get(_unnamed__EN_io_dump_get),
			      .master_d_awvalid(_unnamed__master_d_awvalid),
			      .master_d_awaddr(_unnamed__master_d_awaddr),
			      .master_d_awprot(_unnamed__master_d_awprot),
			      .master_d_awsize(_unnamed__master_d_awsize),
			      .master_d_wvalid(_unnamed__master_d_wvalid),
			      .master_d_wdata(_unnamed__master_d_wdata),
			      .master_d_wstrb(_unnamed__master_d_wstrb),
			      .master_d_bready(_unnamed__master_d_bready),
			      .master_d_arvalid(_unnamed__master_d_arvalid),
			      .master_d_araddr(_unnamed__master_d_araddr),
			      .master_d_arprot(_unnamed__master_d_arprot),
			      .master_d_arsize(_unnamed__master_d_arsize),
			      .master_d_rready(_unnamed__master_d_rready),
			      .master_i_awvalid(_unnamed__master_i_awvalid),
			      .master_i_awaddr(_unnamed__master_i_awaddr),
			      .master_i_awprot(_unnamed__master_i_awprot),
			      .master_i_awsize(_unnamed__master_i_awsize),
			      .master_i_wvalid(_unnamed__master_i_wvalid),
			      .master_i_wdata(_unnamed__master_i_wdata),
			      .master_i_wstrb(_unnamed__master_i_wstrb),
			      .master_i_bready(_unnamed__master_i_bready),
			      .master_i_arvalid(_unnamed__master_i_arvalid),
			      .master_i_araddr(_unnamed__master_i_araddr),
			      .master_i_arprot(_unnamed__master_i_arprot),
			      .master_i_arsize(_unnamed__master_i_arsize),
			      .master_i_rready(_unnamed__master_i_rready),
			      .RDY_sb_clint_msip_put(),
			      .RDY_sb_clint_mtip_put(),
			      .RDY_sb_clint_mtime_put(),
			      .RDY_sb_ext_interrupt_put(),
			      .io_dump_get(_unnamed__io_dump_get),
			      .RDY_io_dump_get(_unnamed__RDY_io_dump_get));

  // submodule _unnamed_
  assign _unnamed__master_d_m_arready_arready = master_d_m_arready_arready ;
  assign _unnamed__master_d_m_awready_awready = master_d_m_awready_awready ;
  assign _unnamed__master_d_m_bvalid_bresp = master_d_m_bvalid_bresp ;
  assign _unnamed__master_d_m_bvalid_bvalid = master_d_m_bvalid_bvalid ;
  assign _unnamed__master_d_m_rvalid_rdata = master_d_m_rvalid_rdata ;
  assign _unnamed__master_d_m_rvalid_rresp = master_d_m_rvalid_rresp ;
  assign _unnamed__master_d_m_rvalid_rvalid = master_d_m_rvalid_rvalid ;
  assign _unnamed__master_d_m_wready_wready = master_d_m_wready_wready ;
  assign _unnamed__master_i_m_arready_arready = master_i_m_arready_arready ;
  assign _unnamed__master_i_m_awready_awready = master_i_m_awready_awready ;
  assign _unnamed__master_i_m_bvalid_bresp = master_i_m_bvalid_bresp ;
  assign _unnamed__master_i_m_bvalid_bvalid = master_i_m_bvalid_bvalid ;
  assign _unnamed__master_i_m_rvalid_rdata = master_i_m_rvalid_rdata ;
  assign _unnamed__master_i_m_rvalid_rresp = master_i_m_rvalid_rresp ;
  assign _unnamed__master_i_m_rvalid_rvalid = master_i_m_rvalid_rvalid ;
  assign _unnamed__master_i_m_wready_wready = master_i_m_wready_wready ;
  assign _unnamed__sb_clint_msip_put = sb_clint_msip_put ;
  assign _unnamed__sb_clint_mtime_put = sb_clint_mtime_put ;
  assign _unnamed__sb_clint_mtip_put = sb_clint_mtip_put ;
  assign _unnamed__sb_ext_interrupt_put = sb_ext_interrupt_put ;
  assign _unnamed__EN_sb_clint_msip_put = EN_sb_clint_msip_put ;
  assign _unnamed__EN_sb_clint_mtip_put = EN_sb_clint_mtip_put ;
  assign _unnamed__EN_sb_clint_mtime_put = EN_sb_clint_mtime_put ;
  assign _unnamed__EN_sb_ext_interrupt_put = EN_sb_ext_interrupt_put ;
  assign _unnamed__EN_io_dump_get = EN_io_dump_get ;
endmodule  // mkeclass

