//
// Generated by Bluespec Compiler, version 2021.07 (build 4cac6eba)
//
// On Fri Mar  7 14:49:28 IST 2025
//
//
// Ports:
// Name                         I/O  size props
// RDY_get_inputs                 O     1 const
// quo_rem                        O    64
// RDY_quo_rem                    O     1 const
// CLK                            I     1 clock
// RST_N                          I     1 reset
// get_inputs_op1                 I    64
// get_inputs_op2                 I    64 reg
// get_inputs_qr                  I     1 reg
// EN_get_inputs                  I     1
//
// No combinational paths from inputs to outputs
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mkrestoring_div(CLK,
		       RST_N,

		       get_inputs_op1,
		       get_inputs_op2,
		       get_inputs_qr,
		       EN_get_inputs,
		       RDY_get_inputs,

		       quo_rem,
		       RDY_quo_rem);
  input  CLK;
  input  RST_N;

  // action method get_inputs
  input  [63 : 0] get_inputs_op1;
  input  [63 : 0] get_inputs_op2;
  input  get_inputs_qr;
  input  EN_get_inputs;
  output RDY_get_inputs;

  // value method quo_rem
  output [63 : 0] quo_rem;
  output RDY_quo_rem;

  // signals for module outputs
  wire [63 : 0] quo_rem;
  wire RDY_get_inputs, RDY_quo_rem;

  // register partial
  reg [128 : 0] partial;
  wire [128 : 0] partial_D_IN;
  wire partial_EN;

  // register quotient_remainder
  reg quotient_remainder;
  wire quotient_remainder_D_IN, quotient_remainder_EN;

  // register rg_op2
  reg [63 : 0] rg_op2;
  wire [63 : 0] rg_op2_D_IN;
  wire rg_op2_EN;

  // rule scheduling signals
  wire CAN_FIRE_RL_single_step_div,
       CAN_FIRE_get_inputs,
       WILL_FIRE_RL_single_step_div,
       WILL_FIRE_get_inputs;

  // inputs to muxes for submodule ports
  wire [128 : 0] MUX_partial_write_1__VAL_1, MUX_partial_write_1__VAL_2;

  // remaining internal signals
  wire [128 : 0] x__h326;
  wire [63 : 0] x_BITS_63_TO_0___h327;

  // action method get_inputs
  assign RDY_get_inputs = 1'd1 ;
  assign CAN_FIRE_get_inputs = 1'd1 ;
  assign WILL_FIRE_get_inputs = EN_get_inputs ;

  // value method quo_rem
  assign quo_rem = quotient_remainder ? partial[127:64] : partial[63:0] ;
  assign RDY_quo_rem = 1'd1 ;

  // rule RL_single_step_div
  assign CAN_FIRE_RL_single_step_div = 1'd1 ;
  assign WILL_FIRE_RL_single_step_div = 1'd1 ;

  // inputs to muxes for submodule ports
  assign MUX_partial_write_1__VAL_1 = { 65'd0, get_inputs_op1 } ;
  module_singlestep instance_singlestep_0(.singlestep_remainder(x__h326[128:64]),
					  .singlestep_quotient(x_BITS_63_TO_0___h327),
					  .singlestep_divisor(rg_op2),
					  .singlestep(MUX_partial_write_1__VAL_2));

  // register partial
  assign partial_D_IN =
	     EN_get_inputs ?
	       MUX_partial_write_1__VAL_1 :
	       MUX_partial_write_1__VAL_2 ;
  assign partial_EN = 1'b1 ;

  // register quotient_remainder
  assign quotient_remainder_D_IN = get_inputs_qr ;
  assign quotient_remainder_EN = EN_get_inputs ;

  // register rg_op2
  assign rg_op2_D_IN = get_inputs_op2 ;
  assign rg_op2_EN = EN_get_inputs ;

  // remaining internal signals
  assign x_BITS_63_TO_0___h327 = partial[63:0] ;
  assign x__h326 = partial ;

  // handling of inlined registers

  always@(posedge CLK or `BSV_RESET_EDGE RST_N)
  if (RST_N == `BSV_RESET_VALUE)
    begin
      partial <= `BSV_ASSIGNMENT_DELAY 129'd0;
      quotient_remainder <= `BSV_ASSIGNMENT_DELAY 1'd0;
      rg_op2 <= `BSV_ASSIGNMENT_DELAY 64'd0;
    end
  else
    begin
      if (partial_EN) partial <= `BSV_ASSIGNMENT_DELAY partial_D_IN;
      if (quotient_remainder_EN)
	quotient_remainder <= `BSV_ASSIGNMENT_DELAY quotient_remainder_D_IN;
      if (rg_op2_EN) rg_op2 <= `BSV_ASSIGNMENT_DELAY rg_op2_D_IN;
    end

  // synopsys translate_off
  `ifdef BSV_NO_INITIAL_BLOCKS
  `else // not BSV_NO_INITIAL_BLOCKS
  initial
  begin
    partial = 129'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    quotient_remainder = 1'h0;
    rg_op2 = 64'hAAAAAAAAAAAAAAAA;
  end
  `endif // BSV_NO_INITIAL_BLOCKS
  // synopsys translate_on
endmodule  // mkrestoring_div

