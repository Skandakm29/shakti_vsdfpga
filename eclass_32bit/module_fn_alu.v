//
// Generated by Bluespec Compiler, version 2024.01 (build ae2a2fc6)
//
// On Mon Mar 31 00:26:13 IST 2025
//
//
// Ports:
// Name                         I/O  size props
// fn_alu                         O    74
// fn_alu_fn                      I     4
// fn_alu_op1                     I    32
// fn_alu_op2                     I    32
// fn_alu_op3                     I    32
// fn_alu_imm_value               I    32
// fn_alu_inst_type               I     4
// fn_alu_funct3                  I     3
// fn_alu_memaccess               I     2
// fn_alu_misa_c                  I     1
// fn_alu_lpc                     I     2 unused
// fn_alu_tdata1                  I    40
// fn_alu_tdata2                  I    64
// fn_alu_tenable                 I     2
//
// Combinational paths from inputs to outputs:
//   (fn_alu_fn,
//    fn_alu_op1,
//    fn_alu_op2,
//    fn_alu_op3,
//    fn_alu_imm_value,
//    fn_alu_inst_type,
//    fn_alu_funct3,
//    fn_alu_memaccess,
//    fn_alu_misa_c,
//    fn_alu_tdata1,
//    fn_alu_tdata2,
//    fn_alu_tenable) -> fn_alu
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module module_fn_alu(fn_alu_fn,
		     fn_alu_op1,
		     fn_alu_op2,
		     fn_alu_op3,
		     fn_alu_imm_value,
		     fn_alu_inst_type,
		     fn_alu_funct3,
		     fn_alu_memaccess,
		     fn_alu_misa_c,
		     fn_alu_lpc,
		     fn_alu_tdata1,
		     fn_alu_tdata2,
		     fn_alu_tenable,
		     fn_alu);
  // value method fn_alu
  input  [3 : 0] fn_alu_fn;
  input  [31 : 0] fn_alu_op1;
  input  [31 : 0] fn_alu_op2;
  input  [31 : 0] fn_alu_op3;
  input  [31 : 0] fn_alu_imm_value;
  input  [3 : 0] fn_alu_inst_type;
  input  [2 : 0] fn_alu_funct3;
  input  [1 : 0] fn_alu_memaccess;
  input  fn_alu_misa_c;
  input  [1 : 0] fn_alu_lpc;
  input  [39 : 0] fn_alu_tdata1;
  input  [63 : 0] fn_alu_tdata2;
  input  [1 : 0] fn_alu_tenable;
  output [73 : 0] fn_alu;

  // signals for module outputs
  wire [73 : 0] fn_alu;

  // remaining internal signals
  reg [31 : 0] shin__h50, x__h3384;
  reg [1 : 0] CASE_fn_alu_inst_type_1_0_5_1_2__q4;
  reg CASE_fn_alu_fn_2_adder_z_flag2_3_NOT_op1_xor_o_ETC__q2,
      CASE_fn_alu_tdata1_BITS_12_TO_9_2_IF_IF_fn_alu_ETC__q1,
      IF_IF_fn_alu_tdata1_BITS_19_TO_18_EQ_0_THEN_fn_ETC___d92,
      IF_IF_fn_alu_tdata1_BITS_39_TO_38_5_EQ_0_6_THE_ETC___d139,
      IF_IF_fn_alu_tdata1_BITS_39_TO_38_5_EQ_0_6_THE_ETC___d142;
  wire [32 : 0] fn_alu_fn_BIT_3_28_AND_IF_fn_alu_fn_EQ_5_25_OR_ETC___d281,
		fn_alu_fn_BIT_3_AND_shin0_BIT_31_CONCAT_shin0__q3,
		inv_op2__h39,
		x__h3404;
  wire [31 : 0] _theResult____h1436,
		_theResult____h2831,
		_theResult____h56,
		effective_address__h55,
		op1_xor_op2__h40,
		result__h1606,
		shift_l__h53;
  wire [6 : 0] IF_fn_alu_inst_type_EQ_1_AND_IF_fn_alu_tenable_ETC___d351;
  wire [5 : 0] _theResult_____4_fst__h3174,
	       cause___1__h3176,
	       cause__h57,
	       cause__h63;
  wire IF_IF_fn_alu_tdata1_BITS_19_TO_18_EQ_0_THEN_NO_ETC___d59,
       IF_IF_fn_alu_tdata1_BITS_19_TO_18_EQ_0_THEN_NO_ETC___d91,
       IF_IF_fn_alu_tdata1_BITS_39_TO_38_5_EQ_0_6_THE_ETC___d127,
       INV_fn_alu_fn_BIT_1_68_69_AND_fn_alu_op1_BIT_3_ETC___d176,
       NOT_fn_alu_memaccess_EQ_3_45_46_AND_fn_alu_ins_ETC___d155,
       NOT_fn_alu_tdata1_BIT_17_OR_NOT_fn_alu_memacce_ETC___d44,
       NOT_fn_alu_tenable_BIT_0_OR_NOT_fn_alu_tdata1__ETC___d137,
       NOT_fn_alu_tenable_BIT_0_OR_NOT_fn_alu_tdata1__ETC___d69,
       adder_z_flag__h42,
       fn_alu_inst_type_EQ_1_AND_IF_fn_alu_tenable_BI_ETC___d144,
       fn_alu_inst_type_EQ_2_58_AND_IF_fn_alu_fn_EQ_2_ETC___d181,
       fn_alu_inst_type_EQ_4_2_OR_fn_alu_inst_type_EQ_ETC___d186,
       fn_alu_tdata1_BIT_17_AND_fn_alu_memaccess_EQ_0_ETC___d84,
       fn_alu_tdata1_BIT_37_7_AND_fn_alu_memaccess_EQ_ETC___d117,
       fn_alu_tdata2_BITS_31_TO_0_8_EQ_IF_IF_fn_alu_t_ETC___d64,
       fn_alu_tdata2_BITS_63_TO_32_26_EQ_IF_IF_fn_alu_ETC___d135,
       fn_alu_tenable_BIT_0_AND_fn_alu_tdata1_BITS_19_ETC___d133,
       fn_alu_tenable_BIT_1_AND_NOT_fn_alu_tenable_BI_ETC___d120,
       sign__h43;

  // value method fn_alu
  assign fn_alu =
	     { 1'd1,
	       (fn_alu_inst_type_EQ_1_AND_IF_fn_alu_tenable_BI_ETC___d144 ||
		NOT_fn_alu_memaccess_EQ_3_45_46_AND_fn_alu_ins_ETC___d155 ||
		fn_alu_inst_type_EQ_4_2_OR_fn_alu_inst_type_EQ_ETC___d186 ||
		fn_alu_inst_type == 4'd6) ?
		 2'd3 :
		 CASE_fn_alu_inst_type_1_0_5_1_2__q4,
	       x__h3384,
	       _theResult____h56,
	       IF_fn_alu_inst_type_EQ_1_AND_IF_fn_alu_tenable_ETC___d351 } ;

  // remaining internal signals
  assign IF_IF_fn_alu_tdata1_BITS_19_TO_18_EQ_0_THEN_NO_ETC___d59 =
	     _theResult____h1436 < fn_alu_tdata2[31:0] ;
  assign IF_IF_fn_alu_tdata1_BITS_19_TO_18_EQ_0_THEN_NO_ETC___d91 =
	     IF_IF_fn_alu_tdata1_BITS_19_TO_18_EQ_0_THEN_NO_ETC___d59 ||
	     ((fn_alu_tdata1[12:9] == 4'd2) ?
		!IF_IF_fn_alu_tdata1_BITS_19_TO_18_EQ_0_THEN_NO_ETC___d59 :
		fn_alu_tdata1[12:9] == 4'd0 &&
		fn_alu_tdata2_BITS_31_TO_0_8_EQ_IF_IF_fn_alu_t_ETC___d64) ;
  assign IF_IF_fn_alu_tdata1_BITS_39_TO_38_5_EQ_0_6_THE_ETC___d127 =
	     _theResult____h2831 < fn_alu_tdata2[63:32] ;
  assign IF_fn_alu_inst_type_EQ_1_AND_IF_fn_alu_tenable_ETC___d351 =
	     { fn_alu_inst_type_EQ_1_AND_IF_fn_alu_tenable_BI_ETC___d144 ?
		 6'd3 :
		 _theResult_____4_fst__h3174,
	       fn_alu_inst_type_EQ_2_58_AND_IF_fn_alu_fn_EQ_2_ETC___d181 ||
	       fn_alu_inst_type == 4'd4 ||
	       fn_alu_inst_type == 4'd3 } ;
  assign INV_fn_alu_fn_BIT_1_68_69_AND_fn_alu_op1_BIT_3_ETC___d176 =
	     ({ sign__h43 & fn_alu_op1[31], fn_alu_op1 } ^ 33'h100000000) <
	     ({ sign__h43 & fn_alu_op2[31], fn_alu_op2 } ^ 33'h100000000) ;
  assign NOT_fn_alu_memaccess_EQ_3_45_46_AND_fn_alu_ins_ETC___d155 =
	     fn_alu_memaccess != 2'd3 && fn_alu_inst_type == 4'd1 &&
	     (fn_alu_funct3[1:0] == 2'd1 && effective_address__h55[0] ||
	      fn_alu_funct3[1:0] == 2'd2 && _theResult____h56[1:0] != 2'd0) ;
  assign NOT_fn_alu_tdata1_BIT_17_OR_NOT_fn_alu_memacce_ETC___d44 =
	     (!fn_alu_tdata1[17] || fn_alu_memaccess != 2'd0 ||
	      fn_alu_tdata1[1]) &&
	     (!fn_alu_tdata1[16] || fn_alu_memaccess != 2'd1) ||
	     fn_alu_tdata1[3:2] != 2'd0 &&
	     (fn_alu_tdata1[3:2] != 2'd1 || fn_alu_funct3[1:0] != 2'd0) &&
	     (fn_alu_tdata1[3:2] != 2'd2 || fn_alu_funct3[1:0] != 2'd1) &&
	     (fn_alu_tdata1[3:2] != 2'd3 || fn_alu_funct3[1:0] != 2'd2) ;
  assign NOT_fn_alu_tenable_BIT_0_OR_NOT_fn_alu_tdata1__ETC___d137 =
	     (!fn_alu_tenable[0] || fn_alu_tdata1[19:18] != 2'd0 ||
	      NOT_fn_alu_tdata1_BIT_17_OR_NOT_fn_alu_memacce_ETC___d44 ||
	      !fn_alu_tdata1[8]) &&
	     ((fn_alu_tdata1[32:29] == 4'd0) ?
		fn_alu_tdata2_BITS_63_TO_32_26_EQ_IF_IF_fn_alu_ETC___d135 :
		fn_alu_tenable_BIT_0_AND_fn_alu_tdata1_BITS_19_ETC___d133) ;
  assign NOT_fn_alu_tenable_BIT_0_OR_NOT_fn_alu_tdata1__ETC___d69 =
	     !fn_alu_tenable[0] || fn_alu_tdata1[19:18] != 2'd0 ||
	     NOT_fn_alu_tdata1_BIT_17_OR_NOT_fn_alu_memacce_ETC___d44 ||
	     CASE_fn_alu_tdata1_BITS_12_TO_9_2_IF_IF_fn_alu_ETC__q1 ;
  assign _theResult_____4_fst__h3174 =
	     NOT_fn_alu_memaccess_EQ_3_45_46_AND_fn_alu_ins_ETC___d155 ?
	       cause___1__h3176 :
	       cause__h63 ;
  assign _theResult____h1436 =
	     fn_alu_tdata1[1] ? fn_alu_op2 : _theResult____h56 ;
  assign _theResult____h2831 =
	     fn_alu_tdata1[21] ? fn_alu_op2 : _theResult____h56 ;
  assign _theResult____h56 =
	     (fn_alu_inst_type == 4'd4) ?
	       result__h1606 :
	       effective_address__h55 ;
  assign adder_z_flag__h42 = ~(op1_xor_op2__h40 != 32'd0) ;
  assign cause___1__h3176 = (fn_alu_memaccess == 2'd0) ? cause__h63 : 6'd6 ;
  assign cause__h57 =
	     (fn_alu_inst_type == 4'd6) ?
	       { fn_alu_fn[2:0], fn_alu_funct3 } :
	       6'd4 ;
  assign cause__h63 =
	     fn_alu_inst_type_EQ_4_2_OR_fn_alu_inst_type_EQ_ETC___d186 ?
	       6'd0 :
	       cause__h57 ;
  assign effective_address__h55 = fn_alu_op3 + fn_alu_imm_value ;
  assign fn_alu_fn_BIT_3_28_AND_IF_fn_alu_fn_EQ_5_25_OR_ETC___d281 =
	     { fn_alu_fn[3] & shin__h50[31], shin__h50 } >> fn_alu_op2[4:0] |
	     ~(33'h1FFFFFFFF >> fn_alu_op2[4:0]) &
	     {33{fn_alu_fn_BIT_3_AND_shin0_BIT_31_CONCAT_shin0__q3[32]}} ;
  assign fn_alu_fn_BIT_3_AND_shin0_BIT_31_CONCAT_shin0__q3 =
	     { fn_alu_fn[3] & shin__h50[31], shin__h50 } ;
  assign fn_alu_inst_type_EQ_1_AND_IF_fn_alu_tenable_BI_ETC___d144 =
	     fn_alu_inst_type == 4'd1 &&
	     (fn_alu_tenable_BIT_1_AND_NOT_fn_alu_tenable_BI_ETC___d120 ?
		IF_IF_fn_alu_tdata1_BITS_39_TO_38_5_EQ_0_6_THE_ETC___d142 :
		fn_alu_tenable_BIT_0_AND_fn_alu_tdata1_BITS_19_ETC___d133) ;
  assign fn_alu_inst_type_EQ_2_58_AND_IF_fn_alu_fn_EQ_2_ETC___d181 =
	     fn_alu_inst_type == 4'd2 &&
	     CASE_fn_alu_fn_2_adder_z_flag2_3_NOT_op1_xor_o_ETC__q2 ;
  assign fn_alu_inst_type_EQ_4_2_OR_fn_alu_inst_type_EQ_ETC___d186 =
	     (fn_alu_inst_type == 4'd4 || fn_alu_inst_type == 4'd3 ||
	      fn_alu_inst_type_EQ_2_58_AND_IF_fn_alu_fn_EQ_2_ETC___d181) &&
	     _theResult____h56[1] &&
	     !fn_alu_misa_c ;
  assign fn_alu_tdata1_BIT_17_AND_fn_alu_memaccess_EQ_0_ETC___d84 =
	     (fn_alu_tdata1[17] && fn_alu_memaccess == 2'd0 &&
	      !fn_alu_tdata1[1] ||
	      fn_alu_tdata1[16] && fn_alu_memaccess == 2'd1) &&
	     (fn_alu_tdata1[3:2] == 2'd0 ||
	      fn_alu_tdata1[3:2] == 2'd1 && fn_alu_funct3[1:0] == 2'd0 ||
	      fn_alu_tdata1[3:2] == 2'd2 && fn_alu_funct3[1:0] == 2'd1 ||
	      fn_alu_tdata1[3:2] == 2'd3 && fn_alu_funct3[1:0] == 2'd2) ;
  assign fn_alu_tdata1_BIT_37_7_AND_fn_alu_memaccess_EQ_ETC___d117 =
	     (fn_alu_tdata1[37] && fn_alu_memaccess == 2'd0 &&
	      !fn_alu_tdata1[21] ||
	      fn_alu_tdata1[36] && fn_alu_memaccess == 2'd1) &&
	     (fn_alu_tdata1[23:22] == 2'd0 ||
	      fn_alu_tdata1[23:22] == 2'd1 && fn_alu_funct3[1:0] == 2'd0 ||
	      fn_alu_tdata1[23:22] == 2'd2 && fn_alu_funct3[1:0] == 2'd1 ||
	      fn_alu_tdata1[23:22] == 2'd3 && fn_alu_funct3[1:0] == 2'd2) ;
  assign fn_alu_tdata2_BITS_31_TO_0_8_EQ_IF_IF_fn_alu_t_ETC___d64 =
	     fn_alu_tdata2[31:0] == _theResult____h1436 ;
  assign fn_alu_tdata2_BITS_63_TO_32_26_EQ_IF_IF_fn_alu_ETC___d135 =
	     fn_alu_tdata2[63:32] == _theResult____h2831 ||
	     !fn_alu_tdata1[8] &&
	     fn_alu_tenable_BIT_0_AND_fn_alu_tdata1_BITS_19_ETC___d133 ;
  assign fn_alu_tenable_BIT_0_AND_fn_alu_tdata1_BITS_19_ETC___d133 =
	     fn_alu_tenable[0] && fn_alu_tdata1[19:18] == 2'd0 &&
	     fn_alu_tdata1_BIT_17_AND_fn_alu_memaccess_EQ_0_ETC___d84 &&
	     IF_IF_fn_alu_tdata1_BITS_19_TO_18_EQ_0_THEN_fn_ETC___d92 ;
  assign fn_alu_tenable_BIT_1_AND_NOT_fn_alu_tenable_BI_ETC___d120 =
	     fn_alu_tenable[1] &&
	     (NOT_fn_alu_tenable_BIT_0_OR_NOT_fn_alu_tdata1__ETC___d69 &&
	      (!fn_alu_tenable[0] || fn_alu_tdata1[19:18] != 2'd0 ||
	       NOT_fn_alu_tdata1_BIT_17_OR_NOT_fn_alu_memacce_ETC___d44 ||
	       !fn_alu_tdata1[8]) ||
	      fn_alu_tenable[0] && fn_alu_tdata1[19:18] == 2'd0 &&
	      fn_alu_tdata1_BIT_17_AND_fn_alu_memaccess_EQ_0_ETC___d84 &&
	      fn_alu_tdata1[8] &&
	      IF_IF_fn_alu_tdata1_BITS_19_TO_18_EQ_0_THEN_fn_ETC___d92) &&
	     fn_alu_tdata1[39:38] == 2'd0 &&
	     fn_alu_tdata1_BIT_37_7_AND_fn_alu_memaccess_EQ_ETC___d117 ;
  assign inv_op2__h39 = { fn_alu_op2 ^ {32{fn_alu_fn[1]}}, fn_alu_fn[1] } ;
  assign op1_xor_op2__h40 = fn_alu_op1 ^ fn_alu_op2 ;
  assign result__h1606 = { effective_address__h55[31:1], 1'd0 } ;
  assign shift_l__h53 =
	     { fn_alu_fn_BIT_3_28_AND_IF_fn_alu_fn_EQ_5_25_OR_ETC___d281[0],
	       fn_alu_fn_BIT_3_28_AND_IF_fn_alu_fn_EQ_5_25_OR_ETC___d281[1],
	       fn_alu_fn_BIT_3_28_AND_IF_fn_alu_fn_EQ_5_25_OR_ETC___d281[2],
	       fn_alu_fn_BIT_3_28_AND_IF_fn_alu_fn_EQ_5_25_OR_ETC___d281[3],
	       fn_alu_fn_BIT_3_28_AND_IF_fn_alu_fn_EQ_5_25_OR_ETC___d281[4],
	       fn_alu_fn_BIT_3_28_AND_IF_fn_alu_fn_EQ_5_25_OR_ETC___d281[5],
	       fn_alu_fn_BIT_3_28_AND_IF_fn_alu_fn_EQ_5_25_OR_ETC___d281[6],
	       fn_alu_fn_BIT_3_28_AND_IF_fn_alu_fn_EQ_5_25_OR_ETC___d281[7],
	       fn_alu_fn_BIT_3_28_AND_IF_fn_alu_fn_EQ_5_25_OR_ETC___d281[8],
	       fn_alu_fn_BIT_3_28_AND_IF_fn_alu_fn_EQ_5_25_OR_ETC___d281[9],
	       fn_alu_fn_BIT_3_28_AND_IF_fn_alu_fn_EQ_5_25_OR_ETC___d281[10],
	       fn_alu_fn_BIT_3_28_AND_IF_fn_alu_fn_EQ_5_25_OR_ETC___d281[11],
	       fn_alu_fn_BIT_3_28_AND_IF_fn_alu_fn_EQ_5_25_OR_ETC___d281[12],
	       fn_alu_fn_BIT_3_28_AND_IF_fn_alu_fn_EQ_5_25_OR_ETC___d281[13],
	       fn_alu_fn_BIT_3_28_AND_IF_fn_alu_fn_EQ_5_25_OR_ETC___d281[14],
	       fn_alu_fn_BIT_3_28_AND_IF_fn_alu_fn_EQ_5_25_OR_ETC___d281[15],
	       fn_alu_fn_BIT_3_28_AND_IF_fn_alu_fn_EQ_5_25_OR_ETC___d281[16],
	       fn_alu_fn_BIT_3_28_AND_IF_fn_alu_fn_EQ_5_25_OR_ETC___d281[17],
	       fn_alu_fn_BIT_3_28_AND_IF_fn_alu_fn_EQ_5_25_OR_ETC___d281[18],
	       fn_alu_fn_BIT_3_28_AND_IF_fn_alu_fn_EQ_5_25_OR_ETC___d281[19],
	       fn_alu_fn_BIT_3_28_AND_IF_fn_alu_fn_EQ_5_25_OR_ETC___d281[20],
	       fn_alu_fn_BIT_3_28_AND_IF_fn_alu_fn_EQ_5_25_OR_ETC___d281[21],
	       fn_alu_fn_BIT_3_28_AND_IF_fn_alu_fn_EQ_5_25_OR_ETC___d281[22],
	       fn_alu_fn_BIT_3_28_AND_IF_fn_alu_fn_EQ_5_25_OR_ETC___d281[23],
	       fn_alu_fn_BIT_3_28_AND_IF_fn_alu_fn_EQ_5_25_OR_ETC___d281[24],
	       fn_alu_fn_BIT_3_28_AND_IF_fn_alu_fn_EQ_5_25_OR_ETC___d281[25],
	       fn_alu_fn_BIT_3_28_AND_IF_fn_alu_fn_EQ_5_25_OR_ETC___d281[26],
	       fn_alu_fn_BIT_3_28_AND_IF_fn_alu_fn_EQ_5_25_OR_ETC___d281[27],
	       fn_alu_fn_BIT_3_28_AND_IF_fn_alu_fn_EQ_5_25_OR_ETC___d281[28],
	       fn_alu_fn_BIT_3_28_AND_IF_fn_alu_fn_EQ_5_25_OR_ETC___d281[29],
	       fn_alu_fn_BIT_3_28_AND_IF_fn_alu_fn_EQ_5_25_OR_ETC___d281[30],
	       fn_alu_fn_BIT_3_28_AND_IF_fn_alu_fn_EQ_5_25_OR_ETC___d281[31] } ;
  assign sign__h43 = ~fn_alu_fn[1] ;
  assign x__h3404 = { fn_alu_op1, 1'b1 } + inv_op2__h39 ;
  always@(fn_alu_fn or fn_alu_op1)
  begin
    case (fn_alu_fn)
      4'd5, 4'd11: shin__h50 = fn_alu_op1;
      default: shin__h50 =
		   { fn_alu_op1[0],
		     fn_alu_op1[1],
		     fn_alu_op1[2],
		     fn_alu_op1[3],
		     fn_alu_op1[4],
		     fn_alu_op1[5],
		     fn_alu_op1[6],
		     fn_alu_op1[7],
		     fn_alu_op1[8],
		     fn_alu_op1[9],
		     fn_alu_op1[10],
		     fn_alu_op1[11],
		     fn_alu_op1[12],
		     fn_alu_op1[13],
		     fn_alu_op1[14],
		     fn_alu_op1[15],
		     fn_alu_op1[16],
		     fn_alu_op1[17],
		     fn_alu_op1[18],
		     fn_alu_op1[19],
		     fn_alu_op1[20],
		     fn_alu_op1[21],
		     fn_alu_op1[22],
		     fn_alu_op1[23],
		     fn_alu_op1[24],
		     fn_alu_op1[25],
		     fn_alu_op1[26],
		     fn_alu_op1[27],
		     fn_alu_op1[28],
		     fn_alu_op1[29],
		     fn_alu_op1[30],
		     fn_alu_op1[31] };
    endcase
  end
  always@(fn_alu_tdata1 or
	  fn_alu_tdata2_BITS_31_TO_0_8_EQ_IF_IF_fn_alu_t_ETC___d64 or
	  IF_IF_fn_alu_tdata1_BITS_19_TO_18_EQ_0_THEN_NO_ETC___d59)
  begin
    case (fn_alu_tdata1[12:9])
      4'd2:
	  CASE_fn_alu_tdata1_BITS_12_TO_9_2_IF_IF_fn_alu_ETC__q1 =
	      IF_IF_fn_alu_tdata1_BITS_19_TO_18_EQ_0_THEN_NO_ETC___d59;
      4'd3:
	  CASE_fn_alu_tdata1_BITS_12_TO_9_2_IF_IF_fn_alu_ETC__q1 =
	      !IF_IF_fn_alu_tdata1_BITS_19_TO_18_EQ_0_THEN_NO_ETC___d59;
      default: CASE_fn_alu_tdata1_BITS_12_TO_9_2_IF_IF_fn_alu_ETC__q1 =
		   fn_alu_tdata1[12:9] != 4'd0 ||
		   !fn_alu_tdata2_BITS_31_TO_0_8_EQ_IF_IF_fn_alu_t_ETC___d64;
    endcase
  end
  always@(fn_alu_tdata1 or
	  fn_alu_tdata2_BITS_31_TO_0_8_EQ_IF_IF_fn_alu_t_ETC___d64 or
	  IF_IF_fn_alu_tdata1_BITS_19_TO_18_EQ_0_THEN_NO_ETC___d59 or
	  IF_IF_fn_alu_tdata1_BITS_19_TO_18_EQ_0_THEN_NO_ETC___d91)
  begin
    case (fn_alu_tdata1[12:9])
      4'd2:
	  IF_IF_fn_alu_tdata1_BITS_19_TO_18_EQ_0_THEN_fn_ETC___d92 =
	      !IF_IF_fn_alu_tdata1_BITS_19_TO_18_EQ_0_THEN_NO_ETC___d59;
      4'd3:
	  IF_IF_fn_alu_tdata1_BITS_19_TO_18_EQ_0_THEN_fn_ETC___d92 =
	      IF_IF_fn_alu_tdata1_BITS_19_TO_18_EQ_0_THEN_NO_ETC___d91;
      default: IF_IF_fn_alu_tdata1_BITS_19_TO_18_EQ_0_THEN_fn_ETC___d92 =
		   fn_alu_tdata1[12:9] == 4'd0 &&
		   fn_alu_tdata2_BITS_31_TO_0_8_EQ_IF_IF_fn_alu_t_ETC___d64;
    endcase
  end
  always@(fn_alu_tdata1 or
	  fn_alu_tenable_BIT_0_AND_fn_alu_tdata1_BITS_19_ETC___d133 or
	  fn_alu_tdata2_BITS_63_TO_32_26_EQ_IF_IF_fn_alu_ETC___d135 or
	  IF_IF_fn_alu_tdata1_BITS_39_TO_38_5_EQ_0_6_THE_ETC___d127 or
	  NOT_fn_alu_tenable_BIT_0_OR_NOT_fn_alu_tdata1__ETC___d137)
  begin
    case (fn_alu_tdata1[32:29])
      4'd0:
	  IF_IF_fn_alu_tdata1_BITS_39_TO_38_5_EQ_0_6_THE_ETC___d139 =
	      fn_alu_tdata2_BITS_63_TO_32_26_EQ_IF_IF_fn_alu_ETC___d135;
      4'd2:
	  IF_IF_fn_alu_tdata1_BITS_39_TO_38_5_EQ_0_6_THE_ETC___d139 =
	      !IF_IF_fn_alu_tdata1_BITS_39_TO_38_5_EQ_0_6_THE_ETC___d127 ||
	      NOT_fn_alu_tenable_BIT_0_OR_NOT_fn_alu_tdata1__ETC___d137;
      default: IF_IF_fn_alu_tdata1_BITS_39_TO_38_5_EQ_0_6_THE_ETC___d139 =
		   fn_alu_tenable_BIT_0_AND_fn_alu_tdata1_BITS_19_ETC___d133;
    endcase
  end
  always@(fn_alu_fn or
	  INV_fn_alu_fn_BIT_1_68_69_AND_fn_alu_op1_BIT_3_ETC___d176 or
	  adder_z_flag__h42 or op1_xor_op2__h40)
  begin
    case (fn_alu_fn)
      4'd2:
	  CASE_fn_alu_fn_2_adder_z_flag2_3_NOT_op1_xor_o_ETC__q2 =
	      adder_z_flag__h42;
      4'd3:
	  CASE_fn_alu_fn_2_adder_z_flag2_3_NOT_op1_xor_o_ETC__q2 =
	      op1_xor_op2__h40 != 32'd0;
      4'd12, 4'd14:
	  CASE_fn_alu_fn_2_adder_z_flag2_3_NOT_op1_xor_o_ETC__q2 =
	      INV_fn_alu_fn_BIT_1_68_69_AND_fn_alu_op1_BIT_3_ETC___d176;
      default: CASE_fn_alu_fn_2_adder_z_flag2_3_NOT_op1_xor_o_ETC__q2 =
		   !INV_fn_alu_fn_BIT_1_68_69_AND_fn_alu_op1_BIT_3_ETC___d176;
    endcase
  end
  always@(fn_alu_tdata1 or
	  fn_alu_tenable_BIT_0_AND_fn_alu_tdata1_BITS_19_ETC___d133 or
	  fn_alu_tdata2_BITS_63_TO_32_26_EQ_IF_IF_fn_alu_ETC___d135 or
	  IF_IF_fn_alu_tdata1_BITS_39_TO_38_5_EQ_0_6_THE_ETC___d127 or
	  NOT_fn_alu_tenable_BIT_0_OR_NOT_fn_alu_tdata1__ETC___d137 or
	  fn_alu_tenable or
	  NOT_fn_alu_tdata1_BIT_17_OR_NOT_fn_alu_memacce_ETC___d44 or
	  IF_IF_fn_alu_tdata1_BITS_39_TO_38_5_EQ_0_6_THE_ETC___d139)
  begin
    case (fn_alu_tdata1[32:29])
      4'd0:
	  IF_IF_fn_alu_tdata1_BITS_39_TO_38_5_EQ_0_6_THE_ETC___d142 =
	      fn_alu_tdata2_BITS_63_TO_32_26_EQ_IF_IF_fn_alu_ETC___d135;
      4'd2:
	  IF_IF_fn_alu_tdata1_BITS_39_TO_38_5_EQ_0_6_THE_ETC___d142 =
	      !IF_IF_fn_alu_tdata1_BITS_39_TO_38_5_EQ_0_6_THE_ETC___d127 ||
	      NOT_fn_alu_tenable_BIT_0_OR_NOT_fn_alu_tdata1__ETC___d137;
      4'd3:
	  IF_IF_fn_alu_tdata1_BITS_39_TO_38_5_EQ_0_6_THE_ETC___d142 =
	      IF_IF_fn_alu_tdata1_BITS_39_TO_38_5_EQ_0_6_THE_ETC___d127 ||
	      (!fn_alu_tenable[0] || fn_alu_tdata1[19:18] != 2'd0 ||
	       NOT_fn_alu_tdata1_BIT_17_OR_NOT_fn_alu_memacce_ETC___d44 ||
	       !fn_alu_tdata1[8]) &&
	      IF_IF_fn_alu_tdata1_BITS_39_TO_38_5_EQ_0_6_THE_ETC___d139;
      default: IF_IF_fn_alu_tdata1_BITS_39_TO_38_5_EQ_0_6_THE_ETC___d142 =
		   fn_alu_tenable_BIT_0_AND_fn_alu_tdata1_BITS_19_ETC___d133;
    endcase
  end
  always@(fn_alu_fn or
	  op1_xor_op2__h40 or
	  x__h3404 or
	  shift_l__h53 or
	  fn_alu_fn_BIT_3_28_AND_IF_fn_alu_fn_EQ_5_25_OR_ETC___d281 or
	  fn_alu_op1 or
	  fn_alu_op2 or
	  INV_fn_alu_fn_BIT_1_68_69_AND_fn_alu_op1_BIT_3_ETC___d176)
  begin
    case (fn_alu_fn)
      4'd0, 4'd10: x__h3384 = x__h3404[32:1];
      4'd1: x__h3384 = shift_l__h53;
      4'd5, 4'd11:
	  x__h3384 =
	      fn_alu_fn_BIT_3_28_AND_IF_fn_alu_fn_EQ_5_25_OR_ETC___d281[31:0];
      4'd6: x__h3384 = fn_alu_op1 | fn_alu_op2;
      4'd7: x__h3384 = fn_alu_op1 & fn_alu_op2;
      4'd12, 4'd13, 4'd14, 4'd15:
	  x__h3384 =
	      { 31'd0,
		INV_fn_alu_fn_BIT_1_68_69_AND_fn_alu_op1_BIT_3_ETC___d176 };
      default: x__h3384 = op1_xor_op2__h40;
    endcase
  end
  always@(fn_alu_inst_type)
  begin
    case (fn_alu_inst_type)
      4'd1: CASE_fn_alu_inst_type_1_0_5_1_2__q4 = 2'd0;
      4'd5: CASE_fn_alu_inst_type_1_0_5_1_2__q4 = 2'd1;
      default: CASE_fn_alu_inst_type_1_0_5_1_2__q4 = 2'd2;
    endcase
  end
endmodule  // module_fn_alu

